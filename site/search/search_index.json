{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u9a8c\u6307\u5bfc\u4e66 - 2022\u79cb\u5b63 | \u54c8\u5de5\u5927\uff08\u6df1\u5733\uff09 \u00b6 \u58f0\u660e \u672c\u8bfe\u7a0b\u8d44\u6599\u4ec5\u9650\u4e8e\u54c8\u5c14\u6ee8\u5de5\u4e1a\u5927\u5b66\uff08\u6df1\u5733\uff09\u300a\u64cd\u4f5c\u7cfb\u7edf\u300b2022\u5e74\u8bfe\u7a0b\u5b9e\u9a8c\u4f7f\u7528\uff0c\u5982\u6709\u5176\u4ed6\u7528\u9014\uff0c\u8bf7\u8054\u7cfb\u590f\u6587\u8001\u5e08\uff1a xiawen@hit.edu.cn \u3002 \u6ce8\u610f\u4e8b\u9879 \u8bf7\u540c\u5b66\u4eec\u9075\u5b88\u5b66\u672f\u8bda\u4fe1\uff08 What is Academic Integrity )\u3002 \u4f60\u53ef\u80fd\u4f1a\u5728\u540c\u4e00\u4e2a\u65f6\u95f4\u6bb5\u5185\u9700\u8981\u5b8c\u6210\u591a\u9879\u8bfe\u7a0b\u4efb\u52a1\uff0c\u6216\u8005\u51c6\u5907\u8003\u8bd5\uff0c\u6216\u8005\u5176\u4ed6\u2026\u2026\u4f46\u662f\uff0c\u65e0\u8bba\u4f60\u5904\u4e8e\u4f55\u79cd\u7a0b\u5ea6\u7684\u538b\u529b\u4e4b\u4e0b\uff0c\u6211\u4eec\u90fd\u5e0c\u671b\u4f60\u80fd\u505a\u5230\u7ba1\u7406\u597d\u65f6\u95f4\uff0c\u4ee5\u8bda\u5b9e\u6b63\u76f4\u7684\u6001\u5ea6\u6765\u5b8c\u6210\u8bfe\u7a0b\u5b9e\u9a8c\u3002 0. \u5bfc\u8bfb \u00b6 \u672c\u5b9e\u9a8c\u6587\u6863\u4e3a\u54c8\u5c14\u6ee8\u5de5\u4e1a\u5927\u5b66\uff08\u6df1\u5733\uff09\u300a\u64cd\u4f5c\u7cfb\u7edf\u300b\u8bfe\u7a0b\u5b9e\u9a8c\u6307\u5bfc\u6750\u6599\u3002\u9875\u9762\u5de6\u4fa7\u4e3a\u6307\u5bfc\u4e66\u7684\u5404\u4e2a\u5c0f\u8282\u76ee\u5f55\uff0c\u9875\u9762\u5de6\u4e0a\u89d2\u53ef\u8be6\u7ec6\u641c\u7d22\uff0c\u9875\u9762\u4e0b\u65b9\u53ef\u5207\u6362\u4e0a\u4e0b\u5c0f\u8282\u3002 \u672c\u5b66\u671f\u7684\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u7a0b\u5b9e\u9a8c\u67096\u6b21\u5b9e\u9a8c\u8bfe\uff0c5\u4e2a\u5b9e\u9a8c\u9879\u76ee\uff0c\u524d4\u4e2a\u5b9e\u9a8c\u9879\u76ee\u5206\u522b\u5404\u53604\u4e2a\u5b66\u65f6\uff0c\u6700\u540e\u4e00\u4e2a\u5b9e\u9a8c\u9879\u76ee8\u4e2a\u5b66\u65f6\uff0c\u603b\u517124\u4e2a\u5b66\u65f6\u3002\u5176\u4e2d\uff0c\u524d4\u4e2a\u5b9e\u9a8c\u662f\u4ece\u5f00\u6e90\u64cd\u4f5c\u7cfb\u7edf xv6-labs-2020 \u7684\u5b9e\u9a8c\u8bfe\u7a0b\u4e2d\u9009\u53d64\u4e2a\u5b9e\u9a8c\uff0c\u5e76\u6839\u636e\u6211\u4eec\u5b66\u6821\u7684\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u7a0b\u8981\u6c42\u8fdb\u884c\u4fee\u6539\u3002\u6700\u540e\u4e00\u4e2a\u6765\u81ea\u6211\u6821\u5b66\u751f\u81ea\u4e3b\u8bbe\u8ba1\u7684\u6587\u4ef6\u7cfb\u7edf\u5b9e\u9a8c\u6848\u4f8b\uff08\u8be5\u5b9e\u9a8c\u6848\u4f8b\u83b7\u5f972022\u5e74\u5168\u56fd\u5927\u5b66\u751f\u8ba1\u7b97\u673a\u7cfb\u7edf\u80fd\u529b\u5927\u8d5b\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u5927\u8d5bOS\u529f\u80fd\u6311\u6218\u8d5b\u9053\u4e8c\u7b49\u5956\uff09\u3002 \u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u5bf9XV6\u7684\u5b9e\u9a8c\u5185\u5bb9\u53ca\u8981\u6c42\u8fdb\u884c\u4e86\u4fee\u6539\uff0c \u8bf7\u5927\u5bb6\u52a1\u5fc5\u4ece\u4e0b\u9762\u7684 \u201c3. \u83b7\u53d6XV6\u5b9e\u9a8c\u6846\u67b6\u4ee3\u7801\u201d \u5c0f\u8282\u4e2d\u4e0b\u8f7d\u4ee3\u7801\uff0c\u5728\u8fd9\u5957\u4ee3\u7801\u4e0a\u5b8c\u6210\u5b9e\u9a8c \u3002\u5728\u5b9e\u9a8c\u5f00\u59cb\u4e4b\u524d\uff0c\u8bf7\u540c\u5b66\u4eec\u52a1\u5fc5\u5148\u6309\u987a\u5e8f\u9605\u8bfb\u6307\u5bfc\u4e66\uff0c\u638c\u63e1\u5b9e\u9a8c\u5e73\u53f0\u7684\u642d\u5efa/\u4f7f\u7528\u65b9\u6cd5\uff0c\u638c\u63e1Linux\u7cfb\u7edf\u4e0b\u7684\u4e00\u4e9b\u57fa\u672c\u547d\u4ee4/\u64cd\u4f5c\uff0c\u719f\u7ec3\u4f7f\u7528GDB\u8c03\u8bd5\u5de5\u5177\u3002\u5bf9\u4e8e\u6709\u5174\u8da3\u6709\u4f59\u529b\u7684\u540c\u5b66\uff0c\u5efa\u8bae\u5b8c\u6210XV6\u7684\u6240\u6709\u5b9e\u9a8c\uff0c\u82e5\u80fd\u5b8c\u6210\u4f1a\u6709\u610f\u60f3\u4e0d\u5230\u7684\u60ca\u559c\uff01 \u5982\u679c\u540c\u5b66\u4eec\u5bf9\u672c\u8bfe\u7a0b\u5b9e\u9a8c\u5185\u5bb9\u3001\u5b9e\u9a8c\u5b89\u6392\u3001\u5b9e\u9a8c\u6307\u5bfc\u4e66\u6216\u8005\u4ee3\u7801\u6846\u67b6\u7b49\u5404\u65b9\u9762\u6709\u5b9d\u8d35\u7684\u610f\u89c1\u6216\u5efa\u8bae\uff0c\u8bf7\u5728 piazza\u5728\u7ebf\u4ea4\u6d41\u5e73\u53f0 \uff08access code\uff1acomp3001\uff09\u63d0\u51fa\u6765\u6216\u79c1\u4fe1\u8001\u5e08\u6216\u52a9\u6559\u3002 1. \u8bfe\u7a0b\u4fe1\u606f \u00b6 \u8bfe\u7a0b\u540d\u79f0\uff1a\u64cd\u4f5c\u7cfb\u7edf\uff08\u5b9e\u9a8c\uff09 \u5b66\u671f\uff1a2022\u79cb\u5b63 \u7406\u8bba\u8bfe\u6559\u5e08\uff1a\u5218\u5ddd\u610f\u3001\u9648\u4fca\u6770\u3001\u9648\u82b3\u6797\u3001\u9648\u658c\u3001\u590f\u6587\uff08\u6309\u4efb\u8bfe\u73ed\u7ea71-16\u73ed\u987a\u5e8f\uff09 \u5b9e\u9a8c\u8bfe\u6559\u5e08\uff1a\u4ec7\u6d01\u5a77\u3001\u82cf\u5a77 2. \u5b9e\u9a8c\u76f8\u5173\u94fe\u63a5 \u00b6 \u5b9e\u9a8c\u4ee3\u7801 \u4e0b\u8f7d\u5730\u5740\uff1a https://gitee.com/hitsz-lab/xv6-labs-2020.git \u5b9e\u9a8c\u5de5\u5177 \u4e0b\u8f7d\u5730\u5740\uff08\u6821\u5185\u7f51\uff09\uff1a http://10.249.14.14:8000/index.php/s/7vlEVZPKaMTIpi0 \u5b9e\u9a8c\u63d0\u4ea4 \u5730\u5740\uff08\u6821\u5185\u7f51\uff09\uff1a http://10.249.12.98:8000/#/login \u8fdc\u7a0b\u5b9e\u9a8c\u73af\u5883 \uff08\u6821\u5185\u7f51\uff09\uff0c\u8be6\u89c1 \u8fdc\u7a0b\u5b9e\u9a8c\u73af\u5883\u4f7f\u7528\u6307\u5357 piazza\u5728\u7ebf\u4ea4\u6d41\u5e73\u53f0\uff08access code\uff1acomp3001\uff09 \u6b22\u8fce\u540c\u5b66\u4eec\u5728piazza\u4e0a\u63d0\u95ee\uff0c\u63d0\u95ee\u7684\u5185\u5bb9\u7b2c\u4e00\u65f6\u95f4\u4f1a\u7531\u52a9\u6559\u6216\u8001\u5e08\u56de\u7b54\uff0c\u5f53\u7136\u4e5f\u6b22\u8fce\u540c\u5b66\u4eec\u6765\u56de\u7b54\uff1a https://piazza.com/harbin_institute_of_technology_shenzhen/fall2022/comp3001 3. \u83b7\u53d6XV6\u5b9e\u9a8c\u6846\u67b6\u4ee3\u7801 \u00b6 \u5728\u4e0b\u8f7d\u5b9e\u9a8c\u4ee3\u7801\u524d\uff0c\u8bf7\u5148\u642d\u5efa\u597dxv6\u5b9e\u9a8c\u5e73\u53f0\uff0c\u642d\u5efa\u65b9\u6cd5\u53c2\u8003 \u5b9e\u9a8c\u5e73\u53f0\u642d\u5efa\u4ee5\u53ca\u73af\u5883\u914d\u7f6e \u3002 \u5982\u679c\u4f60\u5df2\u7ecf\u8fdb\u5165\u5b9e\u9a8c\u5e73\u53f0\uff0c\u8bf7\u5728\u547d\u4ee4\u884c\u7ec8\u7aef\u4e2d\u6267\u884c\uff1a \u6ce8\u610f\u4e8b\u9879 \u7b2c\u4e00\u4e2a\u5b57\u7b26 $ \u4e0d\u9700\u8981\u8f93\u5165\uff0c\u53ea\u9700\u8981\u8f93\u5165 $ \u540e\u7684\u5b57\u7b26\u4e32\u3002 $ git clone https://gitee.com/hitsz-lab/xv6-labs-2020.git \u83b7\u53d6\u6846\u67b6\u4ee3\u7801\uff0c\u5c06\u514b\u9686xv6-labs-2020\u5230\u5f53\u524d\u76ee\u5f55\u3002\u5982\u9047\u95ee\u9898\u8bf7\u8054\u7cfb\u8001\u5e08\u6216\u52a9\u6559\u3002 \u81f4\u8c22 \u00b6 \u5728\u5b9e\u9a8c\u6559\u5b66\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u6709\u5e78\u9080\u8bf7\u5230\u4e86\u4e00\u4e9b\u672c\u79d1\u751f\u52a9\u6559\u548c\u7814\u7a76\u751f\u52a9\u6559\uff0c\u8fd9\u4e9b\u540c\u5b66\u5171\u540c\u5b8c\u6210\u4e86\u5b9e\u9a8c\u6307\u5bfc\u4e66\u7684\u7f16\u5199\u3001\u5b9e\u9a8c\u4ee3\u7801\u7684\u4fee\u6539\u3001\u8c03\u8bd5\u548c\u5b9e\u9a8c\u73af\u5883\u7684\u642d\u5efa\u3002\u611f\u8c22\u8fd9\u4e9b\u540c\u5b66\u5bf9\u5b9e\u9a8c\u505a\u51fa\u7684\u8d21\u732e\u3002 \u7279\u522b\u611f\u8c22\u5bf9\u672c\u8bfe\u7a0b\u5b9e\u9a8c\u8d21\u732e\u7684\u52a9\u6559\u540c\u5b66\uff1a 17\u7ea7\uff1a\u80e1\u535a\u6db5\u3001\u65bd\u6768 18\u7ea7\uff1a\u674e\u7a0b\u6d69\u3001\u5bab\u6d69\u8fb0\u3001\u6f58\u5ef6\u9e92\u3001\u9ece\u5e9a\u7949\u3001\u5218\u5b9a\u90a6 19\u7ea7\uff1a\u8d75\u9e4f\u5b87\u3001\u9648\u4e00\u90b9\u3001\u53f6\u81ea\u7acb\u3001\u5f20\u827a\u67ab \u672a\u6765\u66f4\u591a\u7684\u53ef\u80fd\uff0c\u671f\u5f85\u7531\u73b0\u5728\u7684\u4f60\u4eec\u6765\u4e66\u5199\uff01","title":"\u5b9e\u9a8c\u987b\u77e5"},{"location":"#-2022","text":"\u58f0\u660e \u672c\u8bfe\u7a0b\u8d44\u6599\u4ec5\u9650\u4e8e\u54c8\u5c14\u6ee8\u5de5\u4e1a\u5927\u5b66\uff08\u6df1\u5733\uff09\u300a\u64cd\u4f5c\u7cfb\u7edf\u300b2022\u5e74\u8bfe\u7a0b\u5b9e\u9a8c\u4f7f\u7528\uff0c\u5982\u6709\u5176\u4ed6\u7528\u9014\uff0c\u8bf7\u8054\u7cfb\u590f\u6587\u8001\u5e08\uff1a xiawen@hit.edu.cn \u3002 \u6ce8\u610f\u4e8b\u9879 \u8bf7\u540c\u5b66\u4eec\u9075\u5b88\u5b66\u672f\u8bda\u4fe1\uff08 What is Academic Integrity )\u3002 \u4f60\u53ef\u80fd\u4f1a\u5728\u540c\u4e00\u4e2a\u65f6\u95f4\u6bb5\u5185\u9700\u8981\u5b8c\u6210\u591a\u9879\u8bfe\u7a0b\u4efb\u52a1\uff0c\u6216\u8005\u51c6\u5907\u8003\u8bd5\uff0c\u6216\u8005\u5176\u4ed6\u2026\u2026\u4f46\u662f\uff0c\u65e0\u8bba\u4f60\u5904\u4e8e\u4f55\u79cd\u7a0b\u5ea6\u7684\u538b\u529b\u4e4b\u4e0b\uff0c\u6211\u4eec\u90fd\u5e0c\u671b\u4f60\u80fd\u505a\u5230\u7ba1\u7406\u597d\u65f6\u95f4\uff0c\u4ee5\u8bda\u5b9e\u6b63\u76f4\u7684\u6001\u5ea6\u6765\u5b8c\u6210\u8bfe\u7a0b\u5b9e\u9a8c\u3002","title":"\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u9a8c\u6307\u5bfc\u4e66 - 2022\u79cb\u5b63 | \u54c8\u5de5\u5927\uff08\u6df1\u5733\uff09"},{"location":"#0","text":"\u672c\u5b9e\u9a8c\u6587\u6863\u4e3a\u54c8\u5c14\u6ee8\u5de5\u4e1a\u5927\u5b66\uff08\u6df1\u5733\uff09\u300a\u64cd\u4f5c\u7cfb\u7edf\u300b\u8bfe\u7a0b\u5b9e\u9a8c\u6307\u5bfc\u6750\u6599\u3002\u9875\u9762\u5de6\u4fa7\u4e3a\u6307\u5bfc\u4e66\u7684\u5404\u4e2a\u5c0f\u8282\u76ee\u5f55\uff0c\u9875\u9762\u5de6\u4e0a\u89d2\u53ef\u8be6\u7ec6\u641c\u7d22\uff0c\u9875\u9762\u4e0b\u65b9\u53ef\u5207\u6362\u4e0a\u4e0b\u5c0f\u8282\u3002 \u672c\u5b66\u671f\u7684\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u7a0b\u5b9e\u9a8c\u67096\u6b21\u5b9e\u9a8c\u8bfe\uff0c5\u4e2a\u5b9e\u9a8c\u9879\u76ee\uff0c\u524d4\u4e2a\u5b9e\u9a8c\u9879\u76ee\u5206\u522b\u5404\u53604\u4e2a\u5b66\u65f6\uff0c\u6700\u540e\u4e00\u4e2a\u5b9e\u9a8c\u9879\u76ee8\u4e2a\u5b66\u65f6\uff0c\u603b\u517124\u4e2a\u5b66\u65f6\u3002\u5176\u4e2d\uff0c\u524d4\u4e2a\u5b9e\u9a8c\u662f\u4ece\u5f00\u6e90\u64cd\u4f5c\u7cfb\u7edf xv6-labs-2020 \u7684\u5b9e\u9a8c\u8bfe\u7a0b\u4e2d\u9009\u53d64\u4e2a\u5b9e\u9a8c\uff0c\u5e76\u6839\u636e\u6211\u4eec\u5b66\u6821\u7684\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u7a0b\u8981\u6c42\u8fdb\u884c\u4fee\u6539\u3002\u6700\u540e\u4e00\u4e2a\u6765\u81ea\u6211\u6821\u5b66\u751f\u81ea\u4e3b\u8bbe\u8ba1\u7684\u6587\u4ef6\u7cfb\u7edf\u5b9e\u9a8c\u6848\u4f8b\uff08\u8be5\u5b9e\u9a8c\u6848\u4f8b\u83b7\u5f972022\u5e74\u5168\u56fd\u5927\u5b66\u751f\u8ba1\u7b97\u673a\u7cfb\u7edf\u80fd\u529b\u5927\u8d5b\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u5927\u8d5bOS\u529f\u80fd\u6311\u6218\u8d5b\u9053\u4e8c\u7b49\u5956\uff09\u3002 \u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u5bf9XV6\u7684\u5b9e\u9a8c\u5185\u5bb9\u53ca\u8981\u6c42\u8fdb\u884c\u4e86\u4fee\u6539\uff0c \u8bf7\u5927\u5bb6\u52a1\u5fc5\u4ece\u4e0b\u9762\u7684 \u201c3. \u83b7\u53d6XV6\u5b9e\u9a8c\u6846\u67b6\u4ee3\u7801\u201d \u5c0f\u8282\u4e2d\u4e0b\u8f7d\u4ee3\u7801\uff0c\u5728\u8fd9\u5957\u4ee3\u7801\u4e0a\u5b8c\u6210\u5b9e\u9a8c \u3002\u5728\u5b9e\u9a8c\u5f00\u59cb\u4e4b\u524d\uff0c\u8bf7\u540c\u5b66\u4eec\u52a1\u5fc5\u5148\u6309\u987a\u5e8f\u9605\u8bfb\u6307\u5bfc\u4e66\uff0c\u638c\u63e1\u5b9e\u9a8c\u5e73\u53f0\u7684\u642d\u5efa/\u4f7f\u7528\u65b9\u6cd5\uff0c\u638c\u63e1Linux\u7cfb\u7edf\u4e0b\u7684\u4e00\u4e9b\u57fa\u672c\u547d\u4ee4/\u64cd\u4f5c\uff0c\u719f\u7ec3\u4f7f\u7528GDB\u8c03\u8bd5\u5de5\u5177\u3002\u5bf9\u4e8e\u6709\u5174\u8da3\u6709\u4f59\u529b\u7684\u540c\u5b66\uff0c\u5efa\u8bae\u5b8c\u6210XV6\u7684\u6240\u6709\u5b9e\u9a8c\uff0c\u82e5\u80fd\u5b8c\u6210\u4f1a\u6709\u610f\u60f3\u4e0d\u5230\u7684\u60ca\u559c\uff01 \u5982\u679c\u540c\u5b66\u4eec\u5bf9\u672c\u8bfe\u7a0b\u5b9e\u9a8c\u5185\u5bb9\u3001\u5b9e\u9a8c\u5b89\u6392\u3001\u5b9e\u9a8c\u6307\u5bfc\u4e66\u6216\u8005\u4ee3\u7801\u6846\u67b6\u7b49\u5404\u65b9\u9762\u6709\u5b9d\u8d35\u7684\u610f\u89c1\u6216\u5efa\u8bae\uff0c\u8bf7\u5728 piazza\u5728\u7ebf\u4ea4\u6d41\u5e73\u53f0 \uff08access code\uff1acomp3001\uff09\u63d0\u51fa\u6765\u6216\u79c1\u4fe1\u8001\u5e08\u6216\u52a9\u6559\u3002","title":"0. \u5bfc\u8bfb"},{"location":"#1","text":"\u8bfe\u7a0b\u540d\u79f0\uff1a\u64cd\u4f5c\u7cfb\u7edf\uff08\u5b9e\u9a8c\uff09 \u5b66\u671f\uff1a2022\u79cb\u5b63 \u7406\u8bba\u8bfe\u6559\u5e08\uff1a\u5218\u5ddd\u610f\u3001\u9648\u4fca\u6770\u3001\u9648\u82b3\u6797\u3001\u9648\u658c\u3001\u590f\u6587\uff08\u6309\u4efb\u8bfe\u73ed\u7ea71-16\u73ed\u987a\u5e8f\uff09 \u5b9e\u9a8c\u8bfe\u6559\u5e08\uff1a\u4ec7\u6d01\u5a77\u3001\u82cf\u5a77","title":"1. \u8bfe\u7a0b\u4fe1\u606f"},{"location":"#2","text":"\u5b9e\u9a8c\u4ee3\u7801 \u4e0b\u8f7d\u5730\u5740\uff1a https://gitee.com/hitsz-lab/xv6-labs-2020.git \u5b9e\u9a8c\u5de5\u5177 \u4e0b\u8f7d\u5730\u5740\uff08\u6821\u5185\u7f51\uff09\uff1a http://10.249.14.14:8000/index.php/s/7vlEVZPKaMTIpi0 \u5b9e\u9a8c\u63d0\u4ea4 \u5730\u5740\uff08\u6821\u5185\u7f51\uff09\uff1a http://10.249.12.98:8000/#/login \u8fdc\u7a0b\u5b9e\u9a8c\u73af\u5883 \uff08\u6821\u5185\u7f51\uff09\uff0c\u8be6\u89c1 \u8fdc\u7a0b\u5b9e\u9a8c\u73af\u5883\u4f7f\u7528\u6307\u5357 piazza\u5728\u7ebf\u4ea4\u6d41\u5e73\u53f0\uff08access code\uff1acomp3001\uff09 \u6b22\u8fce\u540c\u5b66\u4eec\u5728piazza\u4e0a\u63d0\u95ee\uff0c\u63d0\u95ee\u7684\u5185\u5bb9\u7b2c\u4e00\u65f6\u95f4\u4f1a\u7531\u52a9\u6559\u6216\u8001\u5e08\u56de\u7b54\uff0c\u5f53\u7136\u4e5f\u6b22\u8fce\u540c\u5b66\u4eec\u6765\u56de\u7b54\uff1a https://piazza.com/harbin_institute_of_technology_shenzhen/fall2022/comp3001","title":"2. \u5b9e\u9a8c\u76f8\u5173\u94fe\u63a5"},{"location":"#3-xv6","text":"\u5728\u4e0b\u8f7d\u5b9e\u9a8c\u4ee3\u7801\u524d\uff0c\u8bf7\u5148\u642d\u5efa\u597dxv6\u5b9e\u9a8c\u5e73\u53f0\uff0c\u642d\u5efa\u65b9\u6cd5\u53c2\u8003 \u5b9e\u9a8c\u5e73\u53f0\u642d\u5efa\u4ee5\u53ca\u73af\u5883\u914d\u7f6e \u3002 \u5982\u679c\u4f60\u5df2\u7ecf\u8fdb\u5165\u5b9e\u9a8c\u5e73\u53f0\uff0c\u8bf7\u5728\u547d\u4ee4\u884c\u7ec8\u7aef\u4e2d\u6267\u884c\uff1a \u6ce8\u610f\u4e8b\u9879 \u7b2c\u4e00\u4e2a\u5b57\u7b26 $ \u4e0d\u9700\u8981\u8f93\u5165\uff0c\u53ea\u9700\u8981\u8f93\u5165 $ \u540e\u7684\u5b57\u7b26\u4e32\u3002 $ git clone https://gitee.com/hitsz-lab/xv6-labs-2020.git \u83b7\u53d6\u6846\u67b6\u4ee3\u7801\uff0c\u5c06\u514b\u9686xv6-labs-2020\u5230\u5f53\u524d\u76ee\u5f55\u3002\u5982\u9047\u95ee\u9898\u8bf7\u8054\u7cfb\u8001\u5e08\u6216\u52a9\u6559\u3002","title":"3. \u83b7\u53d6XV6\u5b9e\u9a8c\u6846\u67b6\u4ee3\u7801"},{"location":"#_1","text":"\u5728\u5b9e\u9a8c\u6559\u5b66\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u6709\u5e78\u9080\u8bf7\u5230\u4e86\u4e00\u4e9b\u672c\u79d1\u751f\u52a9\u6559\u548c\u7814\u7a76\u751f\u52a9\u6559\uff0c\u8fd9\u4e9b\u540c\u5b66\u5171\u540c\u5b8c\u6210\u4e86\u5b9e\u9a8c\u6307\u5bfc\u4e66\u7684\u7f16\u5199\u3001\u5b9e\u9a8c\u4ee3\u7801\u7684\u4fee\u6539\u3001\u8c03\u8bd5\u548c\u5b9e\u9a8c\u73af\u5883\u7684\u642d\u5efa\u3002\u611f\u8c22\u8fd9\u4e9b\u540c\u5b66\u5bf9\u5b9e\u9a8c\u505a\u51fa\u7684\u8d21\u732e\u3002 \u7279\u522b\u611f\u8c22\u5bf9\u672c\u8bfe\u7a0b\u5b9e\u9a8c\u8d21\u732e\u7684\u52a9\u6559\u540c\u5b66\uff1a 17\u7ea7\uff1a\u80e1\u535a\u6db5\u3001\u65bd\u6768 18\u7ea7\uff1a\u674e\u7a0b\u6d69\u3001\u5bab\u6d69\u8fb0\u3001\u6f58\u5ef6\u9e92\u3001\u9ece\u5e9a\u7949\u3001\u5218\u5b9a\u90a6 19\u7ea7\uff1a\u8d75\u9e4f\u5b87\u3001\u9648\u4e00\u90b9\u3001\u53f6\u81ea\u7acb\u3001\u5f20\u827a\u67ab \u672a\u6765\u66f4\u591a\u7684\u53ef\u80fd\uff0c\u671f\u5f85\u7531\u73b0\u5728\u7684\u4f60\u4eec\u6765\u4e66\u5199\uff01","title":"\u81f4\u8c22"},{"location":"Linux/","text":"Linux\u5f00\u53d1\u73af\u5883\u57fa\u7840\u77e5\u8bc6 \u00b6 \u5b66\u4e60\u5efa\u8bae \uff1a\u300a\u9e1f\u54e5\u7684Linux\u79c1\u623f\u83dc\uff08\u57fa\u7840\u5b66\u4e60\u7bc7\uff09\u300b 1. \u5982\u4f55\u767b\u9646Linux \u00b6 Linux\u767b\u5f55\u65b9\u5f0f\u4e3b\u8981\u6709\u4e24\u79cd\uff1a \u672c\u5730\u767b\u5f55\uff1a\u53ea\u8981\u542f\u52a8\u865a\u62df\u673a\u5373\u53ef\uff0c\u7c7b\u4f3c\u4e8e\u6253\u5f00\u81ea\u5df1\u7535\u8111\u76f4\u63a5\u8fde\u63a5\u663e\u793a\u5668\u7684\u65b9\u5f0f\uff1b\u53ef\u4ee5\u901a\u8fc7 Ctrl + Alt + F[1-6] \u57286\u4e2a\u865a\u62df\u63a7\u5236\u53f0\u4e4b\u95f4\u8fdb\u884c\u5207\u6362\u3002\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u4e0d\u80fd\u7528\u672c\u5730\u767b\u5f55\u3002 \u8fdc\u7a0b\u767b\u5f55\uff1a\u53ef\u4ee5\u901a\u8fc7MobaXterm\u3001Windows Terminal\u3001putty\u7b49\u5de5\u5177\u8fdc\u7a0b\u767b\u5f55\u3002 2. shell\u7b80\u4ecb \u00b6 Shell\u610f\u601d\u4e3a\u547d\u4ee4\u884c\u754c\u9762\uff0c\u662f\u8fd0\u884c\u547d\u4ee4\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u672c\u8eab\u662f\u4e00\u4e2a\u7528C\u8bed\u8a00\u7f16\u5199\u7684\u7a0b\u5e8f\u3002shell\u662f\u7528\u6237\u4f7f\u7528Linux\u7684\u6865\u6881\uff0c\u7528\u6237\u901a\u8fc7shell\u6765\u63a7\u5236Linux\u7cfb\u7edf\uff0cLinux\u7cfb\u7edf\u901a\u8fc7shell\u5c55\u793a\u7cfb\u7edf\u4fe1\u606f\u3002 \u5e38\u89c1\u7684shell\u6709\uff1a bash \u3001 sh \u3001 csh \u3001 ksh \u7b49\uff0c\u53ef\u4ee5\u5728\u521b\u5efa\u7528\u6237\u65f6\u6307\u5b9a\u7528\u6237\u7684\u767b\u5f55shell\uff0c\u4e5f\u53ef\u4ee5\u8f93\u5165shell\u540d\u79f0\u6253\u5f00\u4e00\u4e2a\u65b0\u7684shell\u3002 openEuler\u7528\u6237\u7684\u9ed8\u8ba4\u767b\u5f55shell\u662f bash \u3002 \u7cfb\u7edf\u63d0\u793a\u7b26\u9ed8\u8ba4\u8868\u793a\u7684\u662f\uff1a [\u5f53\u524d\u767b\u5f55\u7528\u6237@\u4e3b\u673a\u540d \u5f53\u524d\u6240\u5728\u4f4d\u7f6e]$ \u6ce8\u610f\u4e8b\u9879 root\u7528\u6237\u6700\u540e\u4e00\u4e2a\u63d0\u793a\u7b26\u901a\u5e38\u662f#\uff0c\u666e\u901a\u7528\u6237\u6700\u540e\u4e00\u4e2a\u63d0\u793a\u7b26\u901a\u5e38\u662f$\u3002 \u4e0a\u56fe [cs@localhost \\~]$ \uff0c\u5176\u4e2d \\~ \u7b26\u53f7\u8868\u793a\u662f\u4e2a\u4eba\u76ee\u5f55\u7684\u5730\u5740\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u7528\u6237\u90fd\u6709\u81ea\u5df1\u7684\u4e2a\u4eba\u76ee\u5f55\u5730\u5740\uff0c\u6240\u4ee5\u7528 \\~ \u4f5c\u4e3a\u7edf\u4e00\u66ff\u4ee3\u8fd9\u4e2a\u6839\u636e\u4e0d\u540c\u7528\u6237\u800c\u4e0d\u540c\u4f46\u53c8\u6709\u89c4\u5f8b\u53ef\u5faa\u7684\u5730\u5740\uff0c\u4ee5\u786e\u4fdd\u67d0\u4e9b\u60c5\u51b5\u4e0b\u7684\u517c\u5bb9\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u4ee5root\u7528\u6237\u767b\u5f55\uff0c \\~ \u4ee3\u8868 /root/ \uff0c\u5982\u679c\u4ee5cs\u7528\u6237\u767b\u5f55\uff0c \\~ \u4ee3\u8868 /home/cs/ \u3002 3. Linux\u7528\u6237 \u00b6 root\u662fLinux\u7cfb\u7edf\u4e2d\u7684\u4e00\u4e2a\u7279\u6b8a\u7ba1\u7406\u5458\uff0c\u901a\u5e38\u79f0\u4e3a\u8d85\u7ea7\u7ba1\u7406\u5458\uff0c\u7c7b\u4f3c\u4e8eWindows\u7cfb\u7edf\u4e2d\u7684Administrator\u3002root\u7528\u6237\u62e5\u6709\u6700\u9ad8\u6743\u9650\uff0c\u751a\u81f3\u53ef\u4ee5\u65e0\u9650\u7684\u7834\u574f\u7cfb\u7edf\uff01\u9664\u975e\u5fc5\u8981\uff0c\u8bf7\u52ff\u4f7f\u7528root\u7528\u6237\uff01 \u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u63d0\u793a\u7b26\u6e05\u695a\u4e86\u89e3\u5f53\u524d\u662froot\u7528\u6237\uff08 # \uff09\u8fd8\u662f\u666e\u901a\u7528\u6237\uff08 $ \uff09\u3002 \u5e38\u7528\u7684\u7ba1\u7406\u7528\u6237\u7684\u547d\u4ee4\u5982\u4e0b\uff1a useradd name \uff1a\u589e\u52a0\u7528\u6237\uff0c\u9700\u8981\u5728root\u6743\u9650\u4e0b\uff0c\u901a\u8fc7useradd\u547d\u4ee4\u53ef\u4ee5\u4e3a\u7cfb\u7edf\u6dfb\u52a0\u65b0\u7528\u6237\u4fe1\u606f su - username \uff1a\u5207\u6362\u7528\u6237 sudo \uff1a\u5141\u8bb8\u666e\u901a\u7528\u6237\u6267\u884c\u7ba1\u7406\u5458\u8d26\u53f7\u624d\u80fd\u6267\u884c\u7684\u547d\u4ee4 id \u67e5\u770b\u5f53\u524d\u7528\u6237\u540d \u5982\u679c\u8be5\u7528\u6237\u5728root\u4e0b\u6ca1\u6709\u6743\u9650\uff08\u4e00\u822c\u6765\u8bf4\uff0c\u7cfb\u7edf\u5f53\u7136\u4e0d\u4f1a\u5141\u8bb8\u4efb\u4f55\u7528\u6237\u90fd\u80fd\u591f\u4ee5\u8d85\u7ea7\u7528\u6237\u7684\u8eab\u4efd\u8fd0\u884c\u547d\u4ee4\uff09\uff0c\u9700\u8981\u5728root\u4e0b\u7ed9\u8be5\u7528\u6237\u6dfb\u52a0\u6743\u9650\u3002 \u4e0b\u9762\u4ee5openEuler\u7cfb\u7edf\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u5982\u4f55\u6dfb\u52a0\u7528\u6237\u6743\u9650\u3002\u4f7f\u7528\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u7684\u540c\u5b66\u53ef\u4ee5\u5ffd\u7565\u8fd9\u4e00\u5c0f\u8282\u3002 \u5230openEuler\u865a\u62df\u673a\u91cc\uff0c\u8f93\u5165 # visudo \u8fdb\u5165vi\u7f16\u8f91\u5668\uff0c\u8f93\u5165 /Allow root \uff0c\u5b9a\u4f4d\u5230 ## Allow root to run any commands anywhere \uff0c\u63a5\u7740\u6309\u4e0b i \u952e\uff0c\u8fdb\u884c\u7f16\u8f91\u6a21\u5f0f\uff08\u6700\u4e0b\u9762\u4e00\u884c\u663e\u793a -- INSERT -- \uff09\uff0c\u589e\u52a0\uff1a cs ALL =( ALL ) ALL \u6388\u6743cs\u7528\u6237\u5728\u4efb\u4f55\u4e3b\u673a\u4e0a\u6267\u884c\u4efb\u4f55\u547d\u4ee4\u3002\u7b2c\u4e00\u4e2aALL\u8868\u793a\u6240\u6709\u8ba1\u7b97\u673a\uff1b\u7b2c\u4e8c\u4e2aALL\u8868\u793a\u6240\u6709\u7528\u6237\uff0c\u7b2c\u4e09\u4e2aALL\u8868\u793a\u6240\u6709\u547d\u4ee4\u3002 \u7f16\u8f91\u5b8c\u6210\u540e\uff0c\u6309 Esc \u952e\u9000\u51fa\u7f16\u8f91\u6a21\u5f0f\uff0c\u518d\u8f93\u5165 :wq \uff0c\u56de\u8f66\uff0c\u4fdd\u5b58\u5e76\u9000\u51fa\u3002\uff08\u8f93\u5165 :q! \u662f\u4e0d\u4fdd\u5b58\u5e76\u9000\u51fa\uff09 \u518d\u5230cs\u7528\u6237\u4e0b\uff0c\u6267\u884csudo\u547d\u4ee4\uff0c\u8fd9\u65f6\u5c31\u80fd\u591f\u6267\u884csudo\u547d\u4ee4\u4e86\u3002 4. \u4fee\u6539\u5bc6\u7801 \u00b6 \u53ef\u4ee5\u901a\u8fc7 passwd \u4fee\u6539\u81ea\u5df1\u7684\u5bc6\u7801\u3002 openEuler\u7cfb\u7edf\u4fee\u6539\u7528\u6237\u5bc6\u7801\u65f6\u9700\u8981\u6ee1\u8db3\u5bc6\u7801\u590d\u6742\u5ea6\u8981\u6c42\uff0c\u5bc6\u7801\u7684\u590d\u6742\u5ea6\u8981\u6c42\u5982\u4e0b\uff1a \u53e3\u4ee4\u957f\u5ea6\u81f3\u5c118\u4e2a\u5b57\u7b26\u3002 \u53e3\u4ee4\u81f3\u5c11\u5305\u542b\u5927\u5199\u5b57\u6bcd\u3001\u5c0f\u5199\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u7279\u6b8a\u5b57\u7b26\u7684\u4efb\u610f3\u79cd\u3002 \u53e3\u4ee4\u4e0d\u80fd\u548c\u8d26\u53f7\u4e00\u6837\u3002 \u53e3\u4ee4\u4e0d\u80fd\u4f7f\u7528\u5b57\u5178\u8bcd\u6c47\u3002 5. \u67e5\u770b\u7cfb\u7edf\u4fe1\u606f \u00b6 \u67e5\u770b\u7cfb\u7edf\u4fe1\u606f\uff1a cat /etc/os-release \u67e5\u770b CPU \u4fe1\u606f\uff1a lscpu \u67e5\u770b\u5185\u5b58\u4fe1\u606f\uff1a free \u67e5\u770b\u78c1\u76d8\u4fe1\u606f\uff1a fdisk -l \u67e5\u770b\u7cfb\u7edf\u8d44\u6e90\u5b9e\u65f6\u4fe1\u606f\uff1a top \u663e\u793a\u5f53\u524d\u7684\u65e5\u671f\u548c\u672c\u5730\u65f6\u95f4\uff1a date \u663e\u793a\u5f53\u524d\u7684\u65e5\u671f\u548c UTC \u65f6\u95f4\uff1a date --utc/--u 6. bash shell\u5feb\u6377\u7684\u64cd\u4f5c \u00b6 tab \u53ef\u4ee5\u4f7f\u7528 tab \u952e\u8865\u5168\u529f\u80fd\uff0c\u5feb\u901f\u8f93\u5165\u547d\u4ee4\u6216\u53c2\u6570 history history \u5de5\u5177\u8bb0\u5f55\u4e86\u5386\u53f2\u547d\u4ee4\uff0c\u53ef\u4ee5\u4f7f\u7528history\u67e5\u770b\u5386\u53f2\u547d\u4ee4\u3002 \u4e0a\u4e0b\u952e \u53ef\u4ee5\u6309\u4e0a\u4e0b\u952e\u5feb\u901f\u7ffb\u9605\u5386\u53f2\u547d\u4ee4 home \u4e0e end \u5f53\u60f3\u8981\u5c06\u5149\u6807\u5feb\u901f\u79fb\u52a8\u5230\u5f53\u524d\u884c\u9996\u6216\u884c\u5c3e\u65f6\uff0c\u53ef\u4ee5\u6309home\u6216end\u952e\u3002 clear \u4e0e Ctrl + L \u5f53\u9875\u9762\u88ab\u5b57\u7b26\u5145\u6ee1\uff0c\u60f3\u5feb\u901f\u6e05\u5c4f\u65f6\uff0c\u53ef\u4ee5\u8f93\u5165clear\u6216\u8005\u6309\u4e0bCtrl + L\u7ec4\u5408\u952e\u5feb\u901f\u6e05\u5c4f\u3002 Ctrl + C \u7ec8\u6b62\u5f53\u524d\u7a0b\u5e8f\u7684\u6267\u884c Ctrl + Z \u6302\u8d77\u5f53\u524d\u7a0b\u5e8f Ctrl + D \u7ec8\u6b62\u8f93\u5165\uff08\u82e5\u6b63\u5728\u4f7f\u7528 Shell\uff0c\u5219\u9000\u51fa\u5f53\u524d Shell\uff09 7. \u57fa\u7840\u547d\u4ee4 \u00b6 7.1 ls \u663e\u793a\u5185\u5bb9 \u00b6 Linux ls \uff08\u82f1\u6587\u5168\u62fc\uff1alist files\uff09\u547d\u4ee4\u7528\u4e8e\u663e\u793a\u6307\u5b9a\u5de5\u4f5c\u76ee\u5f55\u4e0b\u4e4b\u5185\u5bb9\uff08\u5217\u51fa\u76ee\u524d\u5de5\u4f5c\u76ee\u5f55\u6240\u542b\u4e4b\u6587\u4ef6\u53ca\u5b50\u76ee\u5f55)\u3002 ls [ -alrtAFR ] [ name... ] -a --all \u7684\u7f29\u5199\uff0c\u663e\u793a\u6240\u6709\u6587\u4ef6\u53ca\u76ee\u5f55\uff0c\u5305\u62ec\u9690\u85cf\u6587\u4ef6(\u4ee5 . \u5f00\u5934\u7684\u6587\u4ef6) -l \u9664\u6587\u4ef6\u540d\u79f0\u5916\uff0c\u4ea6\u5c06\u6587\u4ef6\u578b\u6001\u3001\u6743\u9650\u3001\u62e5\u6709\u8005\u3001\u6587\u4ef6\u5927\u5c0f\u7b49\u8d44\u8baf\u8be6\u7ec6\u5217\u51fa -r \u5c06\u6587\u4ef6\u4ee5\u76f8\u53cd\u6b21\u5e8f\u663e\u793a(\u539f\u5b9a\u4f9d\u82f1\u6587\u5b57\u6bcd\u6b21\u5e8f) -t \u5c06\u6587\u4ef6\u4f9d\u5efa\u7acb\u65f6\u95f4\u4e4b\u5148\u540e\u6b21\u5e8f\u5217\u51fa -A --almost-all \u7684\u7f29\u5199\uff0c\u663e\u793a\u6240\u6709\u7684\u6587\u4ef6\uff0c\u5305\u62ec\u9690\u85cf\u6587\u4ef6\uff0c\u4f46\u4e0d\u5305\u62ec\u8868\u793a\u5f53\u524d\u76ee\u5f55 . \u548c\u4e0a\u7ea7\u76ee\u5f55 .. \u8fd9\u4e24\u4e2a\u6587\u4ef6\u3002 -F \u5728\u5217\u51fa\u7684\u6587\u4ef6\u540d\u79f0\u540e\u52a0\u4e00\u7b26\u53f7\uff1b\u4f8b\u5982\u53ef\u6267\u884c\u6863\u5219\u52a0 * , \u76ee\u5f55\u5219\u52a0 / -R \u82e5\u76ee\u5f55\u4e0b\u6709\u6587\u4ef6\uff0c\u5219\u4ee5\u4e0b\u4e4b\u6587\u4ef6\u4ea6\u7686\u4f9d\u5e8f\u5217\u51fa 7.2 ip addr \u663e\u793a\u6216\u8bbe\u7f6e\u7f51\u7edc\u72b6\u6001 \u00b6 \u53ef\u4ee5\u4f7f\u7528 ip addr \u547d\u4ee4\u67e5\u770bIP\u5730\u5740 # ip addr 1 : lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00 :00:00:00:00:00 brd 00 :00:00:00:00:00 inet 127 .0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever 2 : ens33: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000 link/ether 00 :0c:29:61:40:aa brd ff:ff:ff:ff:ff:ff inet 192 .168.163.134/24 brd 192 .168.163.255 scope global dynamic noprefixroute ens33 valid_lft 1729sec preferred_lft 1729sec inet6 fe80::3b1e:b490:7d7f:ebd0/64 scope link noprefixroute valid_lft forever preferred_lft forever \u4e0a\u8ff0\u547d\u4ee4\u7ed3\u679c\u663e\u793a\u4e24\u90e8\u5206\uff0clo\u548cens33\uff0c\u5982\u679c\u6709\u591a\u5757\u7f51\u5361\uff0c\u6bcf\u5757\u7f51\u5361\u90fd\u4f1a\u663e\u793a\u4e00\u90e8\u5206\u3002 lo \uff1a\u5168\u79f0loopback\uff0c\u662f\u56de\u73af\u5730\u5740\uff0c\u7ecf\u5e38\u88ab\u5206\u914d\u5230 127.0.0.1 \u5730\u5740\u4e0a\uff0c\u7528\u4e8e\u672c\u673a\u901a\u4fe1\uff0c\u7ecf\u8fc7\u5185\u6838\u5904\u7406\u540e\u76f4\u63a5\u8fd4\u56de\uff0c\u4e0d\u4f1a\u5728\u4efb\u4f55\u7f51\u7edc\u4e2d\u51fa\u73b0\u3002 ens33 \uff1a\u7f51\u5361\u540d\uff0c\u5982\u679c\u6709\u591a\u5757\u7f51\u5361\uff0c\u4f1a\u6709\u591a\u4e2aens \u6216\u5176\u5b83\u540d\u79f0\u3002\u4e0a\u8ff0IP\u5730\u5740\u662f 192.168.163.134/24 7.3 mkdir \u5efa\u7acb\u6587\u4ef6\u5939 \u00b6 Linux mkdir \uff08\u82f1\u6587\u5168\u62fc\uff1amake directory\uff09\u547d\u4ee4\u7528\u4e8e\u521b\u5efa\u76ee\u5f55\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528 mkdir \u521b\u5efa\u76ee\u5f55\u9700\u8981\u4e00\u5c42\u4e00\u5c42\u5efa\u7acb\u3002\u5047\u5982\u8981\u521b\u5efa /home/cs/work/test \uff0c\u5fc5\u987b\u8981\u6709 /home/cs/work \u76ee\u5f55\uff0c\u624d\u80fd\u5728work\u76ee\u5f55\u4e0b\u521b\u5efatest\u5b50\u76ee\u5f55\u3002 -p \u9009\u9879\uff1a\u7cfb\u7edf\u4f1a\u81ea\u52a8\u4f9d\u5e8f\u5efa\u7acb/home\u3001/home/cs\u3001/home/cs/work\u3001/home/cs/work/test\uff0c\u5982\u679c\u8be5\u76ee\u5f55\u672c\u6765\u5df2\u5b58\u5728\uff0c\u7cfb\u7edf\u4e5f\u4e0d\u4f1a\u663e\u793a\u9519\u8bef\u4fe1\u606f\u3002\u5efa\u8bae\u5e38\u7528-p\u9009\u9879 \u3002 $ mkdir [ -p ] dirName 7.4 rmdir \u5220\u9664\u6587\u4ef6\u5939 \u00b6 Linux rmdir \uff08\u82f1\u6587\u5168\u62fc\uff1aremove directory\uff09\u547d\u4ee4\u5220\u9664\u7a7a\u7684\u76ee\u5f55\u3002 \u5982\u540c\u4e0a\u8ff0 mkdir \u4e00\u6837\uff0c rmdir \u5220\u9664\u76ee\u5f55\u4e5f\u9700\u8981\u4e00\u5c42\u4e00\u5c42\u5220\u9664\uff0c\u800c\u4e14\u88ab\u5220\u9664\u7684\u76ee\u5f55\u91cc\u9762\u4e0d\u80fd\u5b58\u5728\u5176\u4ed6\u7684\u76ee\u5f55\u6216\u6587\u4ef6\uff0c\u5373\u53ea\u80fd\u5220\u9664\u7a7a\u76ee\u5f55\u3002 -p \u9009\u9879\uff1a\u53ef\u4ee5\u9012\u5f52\u5220\u9664\u6307\u5b9a\u7684\u591a\u7ea7\u76ee\u5f55\uff0c\u4f46\u662f\u8981\u6c42\u6bcf\u4e2a\u76ee\u5f55\u4e5f\u5fc5\u987b\u662f\u7a7a\u76ee\u5f55\u3002 $ rmdir [ -p ] dirName 7.5 rm \u5220\u9664\u547d\u4ee4 \u00b6 \u4e0a\u8ff0rmdir\u547d\u4ee4\u53ea\u80fd\u5220\u9664\u7a7a\u76ee\u5f55\uff0c\u5f53\u8981\u5220\u9664\u975e\u7a7a\u76ee\u5f55\u65f6\uff0c\u5c31\u8981\u4f7f\u7528\u5e26\u6709 -r \u9009\u9879\u7684 rm \u547d\u4ee4\u3002 Linux rm \uff08\u82f1\u6587\u5168\u62fc\uff1aremove\uff09\u547d\u4ee4\u7528\u4e8e\u5220\u9664\u4e00\u4e2a\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u3002 $ rm [ options ] name... - -i \u5220\u9664\u524d\u9010\u4e00\u8be2\u95ee\u786e\u8ba4\u3002 - -f \u5373\u4f7f\u539f\u6863\u6848\u5c5e\u6027\u8bbe\u4e3a\u552f\u8bfb\uff0c\u4ea6\u76f4\u63a5\u5220\u9664\uff0c\u65e0\u9700\u9010\u4e00\u786e\u8ba4\u3002 - -r \u5c06\u76ee\u5f55\u53ca\u4ee5\u4e0b\u4e4b\u6863\u6848\u4ea6\u9010\u4e00\u5220\u9664\u3002 7.6 cd \u5207\u6362\u76ee\u5f55 \u00b6 Linux cd \uff08\u82f1\u6587\u5168\u62fc\uff1achange directory\uff09\u547d\u4ee4\u7528\u4e8e\u5207\u6362\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u3002 \u5176\u4e2d dirName \u8868\u793a\u6cd5\u53ef\u4e3a\u7edd\u5bf9\u8def\u5f84\u6216\u76f8\u5bf9\u8def\u5f84\u3002\u82e5\u76ee\u5f55\u540d\u79f0\u7701\u7565\uff0c\u5219\u53d8\u6362\u81f3\u4f7f\u7528\u8005\u7684 home \u76ee\u5f55 (\u4e5f\u5c31\u662f\u521a login \u65f6\u6240\u5728\u7684\u76ee\u5f55)\u3002 \u53e6\u5916\uff0c ~ \u4e5f\u8868\u793a\u4e3a \u4e2a\u4eba\u76ee\u5f55\u7684\u5730\u5740\uff0c . \u5219\u662f\u8868\u793a\u76ee\u524d\u6240\u5728\u7684\u76ee\u5f55\uff0c .. \u5219\u8868\u793a\u76ee\u524d\u76ee\u5f55\u4f4d\u7f6e\u7684\u4e0a\u4e00\u5c42\u76ee\u5f55\u3002 $ cd [ dirName ] dirName\uff1a\u8981\u5207\u6362\u7684\u76ee\u6807\u76ee\u5f55\u3002 7.7 vi \u6587\u672c\u7f16\u8f91\u6a21\u5f0f \u00b6 $ vi/vim/bash 7.8 echo \u547d\u4ee4 \u00b6 \u663e\u793a\u666e\u901a\u5b57\u7b26\u4e32: $ echo \"It is a test\" \u8f93\u51fa It is a test \u663e\u793a\u8f6c\u4e49\u5b57\u7b26 $ echo \"\\\"It is a test\\\"\" \u8f93\u51fa \"It is a test\" \u663e\u793a\u7ed3\u679c\u5b9a\u5411\u81f3\u6587\u4ef6 $ echo \"It is a test\" > myfile \u663e\u793a\u53d8\u91cf #!/bin/sh read name echo \" $name It is a test\" 7.9 cat \u6253\u5370\u6587\u4ef6 \u00b6 cat \uff08\u82f1\u6587\u5168\u62fc\uff1aconcatenate\uff09\u547d\u4ee4\u7528\u4e8e\u8fde\u63a5\u6587\u4ef6\u5e76\u6253\u5370\u5230\u6807\u51c6\u8f93\u51fa\u8bbe\u5907\u4e0a\u3002 $ cat [ -AbeEnstTuv ] [ --help ] [ --version ] fileName -n \u6216 --number \uff1a\u7531 1 \u5f00\u59cb\u5bf9\u6240\u6709\u8f93\u51fa\u7684\u884c\u6570\u7f16\u53f7\u3002 -b \u6216 --number-nonblank \uff1a\u548c -n \u76f8\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u5bf9\u4e8e\u7a7a\u767d\u884c\u4e0d\u7f16\u53f7\u3002 -s \u6216 --squeeze-blank \uff1a\u5f53\u9047\u5230\u6709\u8fde\u7eed\u4e24\u884c\u4ee5\u4e0a\u7684\u7a7a\u767d\u884c\uff0c\u5c31\u4ee3\u6362\u4e3a\u4e00\u884c\u7684\u7a7a\u767d\u884c\u3002 -v \u6216 --show-nonprinting \uff1a\u4f7f\u7528 ^ \u548c M- \u7b26\u53f7\uff0c\u9664\u4e86 LFD \u548c TAB \u4e4b\u5916\u3002 -E \u6216 --show-ends : \u5728\u6bcf\u884c\u7ed3\u675f\u5904\u663e\u793a $\u3002 -T \u6216 --show-tabs : \u5c06 TAB \u5b57\u7b26\u663e\u793a\u4e3a ^I\u3002 -A , --show-all \uff1a\u7b49\u4ef7\u4e8e -vET\u3002 -e \uff1a\u7b49\u4ef7\u4e8e\"-vE\"\u9009\u9879\uff1b -t \uff1a\u7b49\u4ef7\u4e8e\"-vT\"\u9009\u9879\uff1b 7.10 cp \u590d\u5236\u6587\u4ef6 \u00b6 Linux cp \uff08\u82f1\u6587\u5168\u62fc\uff1acopy file\uff09\u547d\u4ee4\u4e3b\u8981\u7528\u4e8e\u590d\u5236\u6587\u4ef6\u6216\u76ee\u5f55\u3002 $ cp [ options ] source dest \u6216 $ cp [ options ] source... directory -a \uff1a\u6b64\u9009\u9879\u901a\u5e38\u5728\u590d\u5236\u76ee\u5f55\u65f6\u4f7f\u7528\uff0c\u5b83\u4fdd\u7559\u94fe\u63a5\u3001\u6587\u4ef6\u5c5e\u6027\uff0c\u5e76\u590d\u5236\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u5185\u5bb9\u3002\u5176\u4f5c\u7528\u7b49\u4e8edpR\u53c2\u6570\u7ec4\u5408\u3002 -d \uff1a\u590d\u5236\u65f6\u4fdd\u7559\u94fe\u63a5\u3002\u8fd9\u91cc\u6240\u8bf4\u7684\u94fe\u63a5\u76f8\u5f53\u4e8eWindows\u7cfb\u7edf\u4e2d\u7684\u5feb\u6377\u65b9\u5f0f\u3002 -f \uff1a\u8986\u76d6\u5df2\u7ecf\u5b58\u5728\u7684\u76ee\u6807\u6587\u4ef6\u800c\u4e0d\u7ed9\u51fa\u63d0\u793a\u3002 -i \uff1a\u4e0e-f\u9009\u9879\u76f8\u53cd\uff0c\u5728\u8986\u76d6\u76ee\u6807\u6587\u4ef6\u4e4b\u524d\u7ed9\u51fa\u63d0\u793a\uff0c\u8981\u6c42\u7528\u6237\u786e\u8ba4\u662f\u5426\u8986\u76d6\uff0c\u56de\u7b54\"y\"\u65f6\u76ee\u6807\u6587\u4ef6\u5c06\u88ab\u8986\u76d6\u3002 -p \uff1a\u9664\u590d\u5236\u6587\u4ef6\u7684\u5185\u5bb9\u5916\uff0c\u8fd8\u628a\u4fee\u6539\u65f6\u95f4\u548c\u8bbf\u95ee\u6743\u9650\u4e5f\u590d\u5236\u5230\u65b0\u6587\u4ef6\u4e2d\u3002 -r \uff1a\u82e5\u7ed9\u51fa\u7684\u6e90\u6587\u4ef6\u662f\u4e00\u4e2a\u76ee\u5f55\u6587\u4ef6\uff0c\u6b64\u65f6\u5c06\u590d\u5236\u8be5\u76ee\u5f55\u4e0b\u6240\u6709\u7684\u5b50\u76ee\u5f55\u548c\u6587\u4ef6\u3002 -l \uff1a\u4e0d\u590d\u5236\u6587\u4ef6\uff0c\u53ea\u662f\u751f\u6210\u94fe\u63a5\u6587\u4ef6\u3002 7.11 mv \u6539\u540d\u6216\u79fb\u52a8\u6587\u4ef6 \u00b6 Linux mv \uff08\u82f1\u6587\u5168\u62fc\uff1amove file\uff09\u547d\u4ee4\u7528\u6765\u4e3a\u6587\u4ef6\u6216\u76ee\u5f55\u6539\u540d\u3001\u6216\u5c06\u6587\u4ef6\u6216\u76ee\u5f55\u79fb\u5165\u5176\u5b83\u4f4d\u7f6e\u3002 $ mv [ options ] source dest $ mv [ options ] source... directory -b : \u5f53\u76ee\u6807\u6587\u4ef6\u6216\u76ee\u5f55\u5b58\u5728\u65f6\uff0c\u5728\u6267\u884c\u8986\u76d6\u524d\uff0c\u4f1a\u4e3a\u5176\u521b\u5efa\u4e00\u4e2a\u5907\u4efd\u3002 -i : \u5982\u679c\u6307\u5b9a\u79fb\u52a8\u7684\u6e90\u76ee\u5f55\u6216\u6587\u4ef6\u4e0e\u76ee\u6807\u7684\u76ee\u5f55\u6216\u6587\u4ef6\u540c\u540d\uff0c\u5219\u4f1a\u5148\u8be2\u95ee\u662f\u5426\u8986\u76d6\u65e7\u6587\u4ef6\uff0c\u8f93\u5165 y \u8868\u793a\u76f4\u63a5\u8986\u76d6\uff0c\u8f93\u5165 n \u8868\u793a\u53d6\u6d88\u8be5\u64cd\u4f5c\u3002 -f : \u5982\u679c\u6307\u5b9a\u79fb\u52a8\u7684\u6e90\u76ee\u5f55\u6216\u6587\u4ef6\u4e0e\u76ee\u6807\u7684\u76ee\u5f55\u6216\u6587\u4ef6\u540c\u540d\uff0c\u4e0d\u4f1a\u8be2\u95ee\uff0c\u76f4\u63a5\u8986\u76d6\u65e7\u6587\u4ef6\u3002 -n : \u4e0d\u8981\u8986\u76d6\u4efb\u4f55\u5df2\u5b58\u5728\u7684\u6587\u4ef6\u6216\u76ee\u5f55\u3002 -u \uff1a\u5f53\u6e90\u6587\u4ef6\u6bd4\u76ee\u6807\u6587\u4ef6\u65b0\u6216\u8005\u76ee\u6807\u6587\u4ef6\u4e0d\u5b58\u5728\u65f6\uff0c\u624d\u6267\u884c\u79fb\u52a8\u64cd\u4f5c\u3002 7.12 find \u67e5\u627e\u6587\u4ef6 \u00b6 Linux find \u547d\u4ee4\u7528\u6765\u5728\u6307\u5b9a\u76ee\u5f55\u4e0b\u67e5\u627e\u6587\u4ef6\u3002\u4efb\u4f55\u4f4d\u4e8e\u53c2\u6570\u4e4b\u524d\u7684\u5b57\u7b26\u4e32\u90fd\u5c06\u88ab\u89c6\u4e3a\u6b32\u67e5\u627e\u7684\u76ee\u5f55\u540d\u3002\u5982\u679c\u4f7f\u7528\u8be5\u547d\u4ee4\u65f6\uff0c\u4e0d\u8bbe\u7f6e\u4efb\u4f55\u53c2\u6570\uff0c\u5219 find \u547d\u4ee4\u5c06\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u67e5\u627e\u5b50\u76ee\u5f55\u4e0e\u6587\u4ef6\u3002\u5e76\u4e14\u5c06\u67e5\u627e\u5230\u7684\u5b50\u76ee\u5f55\u548c\u6587\u4ef6\u5168\u90e8\u8fdb\u884c\u663e\u793a\u3002 $ find path -option [ -print ] [ -exec -ok command ] {} \\; \u793a\u4f8b: $ find . -name \"*.c\" Linux locate\u547d\u4ee4\u7528\u4e8e\u67e5\u627e\u7b26\u5408\u6761\u4ef6\u7684\u6587\u6863\uff0c\u4ed6\u4f1a\u53bb\u4fdd\u5b58\u6587\u6863\u548c\u76ee\u5f55\u540d\u79f0\u7684\u6570\u636e\u5e93\u5185\uff0c\u67e5\u627e\u5408\u4e4e\u8303\u672c\u6837\u5f0f\u6761\u4ef6\u7684\u6587\u6863\u6216\u76ee\u5f55\u3002 \u4e00\u822c\u60c5\u51b5\u6211\u4eec\u53ea\u9700\u8981\u8f93\u5165 locate your_file_name \u5373\u53ef\u67e5\u627e\u6307\u5b9a\u6587\u4ef6\u3002 locate [ -d ][ --help ][ --version ][ \u8303\u672c\u6837\u5f0f... ] \u793a\u4f8b: \u67e5\u627e passwd \u6587\u4ef6\uff0c\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a locate passwd PS: locate \u4e0e find \u4e0d\u540c: find \u662f\u53bb\u786c\u76d8\u627e\uff0clocate \u53ea\u5728 /var/lib/slocate \u8d44\u6599\u5e93\u4e2d\u627e\u3002 locate \u7684\u901f\u5ea6\u6bd4 find \u5feb\uff0c\u5b83\u5e76\u4e0d\u662f\u771f\u7684\u67e5\u627e\uff0c\u800c\u662f\u67e5\u6570\u636e\u5e93\uff0c\u4e00\u822c\u6587\u4ef6\u6570\u636e\u5e93\u5728 /var/lib/slocate/slocate.db \u4e2d\uff0c\u6240\u4ee5 locate \u7684\u67e5\u627e\u5e76\u4e0d\u662f\u5b9e\u65f6\u7684\uff0c\u800c\u662f\u4ee5\u6570\u636e\u5e93\u7684\u66f4\u65b0\u4e3a\u51c6\uff0c\u4e00\u822c\u662f\u7cfb\u7edf\u81ea\u5df1\u7ef4\u62a4\uff0c\u4e5f\u53ef\u4ee5\u624b\u5de5\u5347\u7ea7\u6570\u636e\u5e93 \uff0c\u547d\u4ee4\u4e3a\uff1a updatedb 7.13 grep \u6b63\u5219\u5339\u914d\u6587\u4ef6\u5185\u5bb9 \u00b6 Linux grep \u547d\u4ee4\u7528\u4e8e\u67e5\u627e\u6587\u4ef6\u91cc\u7b26\u5408\u6761\u4ef6\u7684\u5b57\u7b26\u4e32\u3002 grep \u6307\u4ee4\u7528\u4e8e\u67e5\u627e\u5185\u5bb9\u5305\u542b\u6307\u5b9a\u7684\u8303\u672c\u6837\u5f0f\u7684\u6587\u4ef6\uff0c\u5982\u679c\u53d1\u73b0\u67d0\u6587\u4ef6\u7684\u5185\u5bb9\u7b26\u5408\u6240\u6307\u5b9a\u7684\u8303\u672c\u6837\u5f0f\uff0c\u9884\u8bbe grep \u6307\u4ee4\u4f1a\u628a\u542b\u6709\u8303\u672c\u6837\u5f0f\u7684\u90a3\u4e00\u5217\u663e\u793a\u51fa\u6765\u3002\u82e5\u4e0d\u6307\u5b9a\u4efb\u4f55\u6587\u4ef6\u540d\u79f0\uff0c\u6216\u662f\u6240\u7ed9\u4e88\u7684\u6587\u4ef6\u540d\u4e3a - \uff0c\u5219 grep \u6307\u4ee4\u4f1a\u4ece\u6807\u51c6\u8f93\u5165\u8bbe\u5907\u8bfb\u53d6\u6570\u636e\u3002 grep [ -abcEFGhHilLnqrsvVwxy ][ -A<\u663e\u793a\u5217\u6570> ][ -B<\u663e\u793a\u5217\u6570> ][ -C<\u663e\u793a\u5217\u6570> ][ -d<\u8fdb\u884c\u52a8\u4f5c> ][ -e<\u8303\u672c\u6837\u5f0f> ][ -f<\u8303\u672c\u6587\u4ef6> ][ --help ][ \u8303\u672c\u6837\u5f0f ][ \u6587\u4ef6\u6216\u76ee\u5f55... ] \u793a\u4f8b: grep test *file \u7ed3\u679c\u5982\u4e0b: $ grep test test* #\u67e5\u627e\u524d\u7f00\u6709\u201ctest\u201d\u7684\u6587\u4ef6\u5305\u542b\u201ctest\u201d\u5b57\u7b26\u4e32\u7684\u6587\u4ef6 testfile1:This a Linux testfile! #\u5217\u51fatestfile1 \u6587\u4ef6\u4e2d\u5305\u542btest\u5b57\u7b26\u7684\u884c testfile_2:This is a linux testfile! #\u5217\u51fatestfile_2 \u6587\u4ef6\u4e2d\u5305\u542btest\u5b57\u7b26\u7684\u884c testfile_2:Linux test #\u5217\u51fatestfile_2 \u6587\u4ef6\u4e2d\u5305\u542btest\u5b57\u7b26\u7684\u884c 7.14 man \u5e2e\u52a9\u547d\u4ee4 \u00b6 man \u547d\u4ee4\u662fLinux\u4e0b\u7684\u5e2e\u52a9\u6307\u4ee4\uff0c\u901a\u8fc7 man \u6307\u4ee4\u53ef\u4ee5\u67e5\u770bLinux\u4e2d\u7684\u6307\u4ee4\u5e2e\u52a9\u3001\u914d\u7f6e\u6587\u4ef6\u5e2e\u52a9\u548c\u7f16\u7a0b\u5e2e\u52a9\u7b49\u4fe1\u606f\u3002 man [ options ] [ args ] -a \uff1a\u5728\u6240\u6709\u7684man\u5e2e\u52a9\u624b\u518c\u4e2d\u641c\u7d22\uff1b -f \uff1a\u7b49\u4ef7\u4e8ewhatis\u6307\u4ee4\uff0c\u663e\u793a\u7ed9\u5b9a\u5173\u952e\u5b57\u7684\u7b80\u77ed\u63cf\u8ff0\u4fe1\u606f\uff1b -P \uff1a\u6307\u5b9a\u5185\u5bb9\u65f6\u4f7f\u7528\u5206\u9875\u7a0b\u5e8f\uff1b -M \uff1a\u6307\u5b9aman\u624b\u518c\u641c\u7d22\u7684\u8def\u5f84\u3002 7.15 diff \u6bd4\u8f83\u5dee\u5f02 \u00b6 Linux diff \u547d\u4ee4\u7528\u4e8e\u6bd4\u8f83\u6587\u4ef6\u7684\u5dee\u5f02\u3002 diff \u4ee5\u9010\u884c\u7684\u65b9\u5f0f\uff0c\u6bd4\u8f83\u6587\u672c\u6587\u4ef6\u7684\u5f02\u540c\u5904\u3002\u5982\u679c\u6307\u5b9a\u8981\u6bd4\u8f83\u76ee\u5f55\uff0c\u5219diff\u4f1a\u6bd4\u8f83\u76ee\u5f55\u4e2d\u76f8\u540c\u6587\u4ef6\u540d\u7684\u6587\u4ef6\uff0c\u4f46\u4e0d\u4f1a\u6bd4\u8f83\u5176\u4e2d\u5b50\u76ee\u5f55\u3002 diff [-abBcdefHilnNpPqrstTuvwy][-<\u884c\u6570>][-C <\u884c\u6570>][-D <\u5de8\u96c6\u540d\u79f0>][-I <\u5b57\u7b26\u6216\u5b57\u7b26\u4e32>][-S <\u6587\u4ef6>][-W <\u5bbd\u5ea6>][-x <\u6587\u4ef6\u6216\u76ee\u5f55>][-X <\u6587\u4ef6>][--help][--left-column][--suppress-common-line][\u6587\u4ef6\u6216\u76ee\u5f551][\u6587\u4ef6\u6216\u76ee\u5f552] 7.16 ps \u67e5\u770b\u8fdb\u7a0b\u72b6\u6001 \u00b6 Linux ps \uff08\u82f1\u6587\u5168\u62fc\uff1aprocess status\uff09\u547d\u4ee4\u7528\u4e8e\u663e\u793a\u5f53\u524d\u8fdb\u7a0b\u7684\u72b6\u6001. ps [ options ] [ --help ] -A \u5217\u51fa\u6240\u6709\u7684\u884c\u7a0b -w \u663e\u793a\u52a0\u5bbd\u53ef\u4ee5\u663e\u793a\u8f83\u591a\u7684\u8d44\u8baf -au \u663e\u793a\u8f83\u8be6\u7ec6\u7684\u8d44\u8baf -aux \u663e\u793a\u6240\u6709\u5305\u542b\u5176\u4ed6\u4f7f\u7528\u8005\u7684\u884c\u7a0b 7.17 top \u4efb\u52a1\u7ba1\u7406\u5668 \u00b6 Linux top \u547d\u4ee4\u7528\u4e8e\u5b9e\u65f6\u663e\u793a process \u7684\u52a8\u6001\u3002 top [ - ] [ d delay ] [ q ] [ c ] [ S ] [ s ] [ i ] [ n ] [ b ] 7.18 tar \u6253\u5305\u548c\u89e3\u5305 \u00b6 Linux tar \uff08\u82f1\u6587\u5168\u62fc\uff1atape archive \uff09\u547d\u4ee4\u7528\u4e8e\u5907\u4efd\u6587\u4ef6\u3002 tar \u662f\u7528\u6765\u5efa\u7acb\uff0c\u8fd8\u539f\u5907\u4efd\u6587\u4ef6\u7684\u5de5\u5177\u7a0b\u5e8f\uff0c\u5b83\u53ef\u4ee5\u52a0\u5165\uff0c\u89e3\u5f00\u5907\u4efd\u6587\u4ef6\u5185\u7684\u6587\u4ef6\u3002 \u9996\u5148\u8981\u5f04\u6e05\u4e24\u4e2a\u6982\u5ff5\uff1a\u6253\u5305\u548c\u538b\u7f29\u3002\u6253\u5305\u662f\u6307\u5c06\u4e00\u5927\u5806\u6587\u4ef6\u6216\u76ee\u5f55\u53d8\u6210\u4e00\u4e2a\u603b\u7684\u6587\u4ef6\uff1b\u538b\u7f29\u5219\u662f\u5c06\u4e00\u4e2a\u5927\u7684\u6587\u4ef6\u901a\u8fc7\u4e00\u4e9b\u538b\u7f29\u7b97\u6cd5\u53d8\u6210\u4e00\u4e2a\u5c0f\u6587\u4ef6\u3002 \u4e3a\u4ec0\u4e48\u8981\u533a\u5206\u8fd9\u4e24\u4e2a\u6982\u5ff5\u5462\uff1f\u8fd9\u6e90\u4e8eLinux\u4e2d\u5f88\u591a\u538b\u7f29\u7a0b\u5e8f\u53ea\u80fd\u9488\u5bf9\u4e00\u4e2a\u6587\u4ef6\u8fdb\u884c\u538b\u7f29\uff0c\u8fd9\u6837\u5f53\u4f60\u60f3\u8981\u538b\u7f29\u4e00\u5927\u5806\u6587\u4ef6\u65f6\uff0c\u4f60\u5f97\u5148\u5c06\u8fd9\u4e00\u5927\u5806\u6587\u4ef6\u5148\u6253\u6210\u4e00\u4e2a\u5305\uff08tar\u547d\u4ee4\uff09\uff0c\u7136\u540e\u518d\u7528\u538b\u7f29\u7a0b\u5e8f\u8fdb\u884c\u538b\u7f29\uff08gzip bzip2\u547d\u4ee4\uff09\u3002 linux\u4e0b\u6700\u5e38\u7528\u7684\u6253\u5305\u7a0b\u5e8f\u5c31\u662ftar\u4e86\uff0c\u4f7f\u7528tar\u7a0b\u5e8f\u6253\u51fa\u6765\u7684\u5305\u6211\u4eec\u5e38\u79f0\u4e3atar\u5305\uff0ctar\u5305\u6587\u4ef6\u7684\u547d\u4ee4\u901a\u5e38\u90fd\u662f\u4ee5.tar\u7ed3\u5c3e\u7684\u3002\u751f\u6210tar\u5305\u540e\uff0c\u5c31\u53ef\u4ee5\u7528\u5176\u5b83\u7684\u7a0b\u5e8f\u6765\u8fdb\u884c\u538b\u7f29\u3002 \u6253\u5305\u547d\u4ee4\u793a\u4f8b: tar -cvf log.tar log2012.log tar -zcvf log.tar.gz log2012.log tar -jcvf log.tar.bz2 log2012.log zip FileName.zip DirName tar -cvf log.tar log2012.log \u4ec5\u6253\u5305\uff0c\u4e0d\u538b\u7f29. tar -zcvf log.tar.gz log2012.log \u6253\u5305\u540e\uff0c\u4ee5 gzip \u538b\u7f29 tar -jcvf log.tar.bz2 log2012.log \u6253\u5305\u540e\uff0c\u4ee5 bzip2 \u538b\u7f29 \u89e3\u5305\u793a\u4f8b: tar -zxvf file.tar.gz //\u89e3\u538btar.gz tar -jxvf file.tar.bz2 //\u89e3\u538b tar.bz2 unzip file.zip //\u89e3\u538bzip 8. Linux\u91cd\u5b9a\u5411\u548c\u7ba1\u9053 \u00b6 command < input.txt 1 > output.txt 2 >err.txt command1 | command2 | command3 | ... 8.1 \u91cd\u5b9a\u5411 \u00b6 \u547d\u4ee4 \u8bf4\u660e command > file \u5c06\u8f93\u51fa\u91cd\u5b9a\u5411\u5230 file\u3002 command < file \u5c06\u8f93\u5165\u91cd\u5b9a\u5411\u5230 file\u3002 command >> file \u5c06\u8f93\u51fa\u4ee5\u8ffd\u52a0\u7684\u65b9\u5f0f\u91cd\u5b9a\u5411\u5230 file\u3002 n > file \u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e3a n \u7684\u6587\u4ef6\u91cd\u5b9a\u5411\u5230 file\u3002 n >> file \u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e3a n \u7684\u6587\u4ef6\u4ee5\u8ffd\u52a0\u7684\u65b9\u5f0f\u91cd\u5b9a\u5411\u5230 file\u3002 n >& m \u5c06\u8f93\u51fa\u6587\u4ef6 m \u548c n \u5408\u5e76\u3002 n <& m \u5c06\u8f93\u5165\u6587\u4ef6 m \u548c n \u5408\u5e76\u3002 << tag \u5c06\u5f00\u59cb\u6807\u8bb0 tag \u548c\u7ed3\u675f\u6807\u8bb0 tag \u4e4b\u95f4\u7684\u5185\u5bb9\u4f5c\u4e3a\u8f93\u5165\u3002 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a Unix/Linux \u547d\u4ee4\u8fd0\u884c\u65f6\u90fd\u4f1a\u6253\u5f00\u4e09\u4e2a\u6587\u4ef6\uff1a \u6807\u51c6\u8f93\u5165\u6587\u4ef6(stdin)\uff1astdin\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e3a0\uff0cUnix\u7a0b\u5e8f\u9ed8\u8ba4\u4ecestdin\u8bfb\u53d6\u6570\u636e\u3002 \u6807\u51c6\u8f93\u51fa\u6587\u4ef6(stdout)\uff1astdout \u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e3a1\uff0cUnix\u7a0b\u5e8f\u9ed8\u8ba4\u5411stdout\u8f93\u51fa\u6570\u636e\u3002 \u6807\u51c6\u9519\u8bef\u6587\u4ef6(stderr)\uff1astderr\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e3a2\uff0cUnix\u7a0b\u5e8f\u4f1a\u5411stderr\u6d41\u4e2d\u5199\u5165\u9519\u8bef\u4fe1\u606f\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c command > file \u5c06 stdout \u91cd\u5b9a\u5411\u5230 file\uff0c command < file \u5c06stdin \u91cd\u5b9a\u5411\u5230 file\u3002 \u5982\u679c\u5e0c\u671b stderr \u91cd\u5b9a\u5411\u5230 file\uff0c\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a $ command 2 > file \u5982\u679c\u5e0c\u671b stderr \u8ffd\u52a0\u5230 file \u6587\u4ef6\u672b\u5c3e\uff0c\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a $ command 2 >> file 8.2 \u7ba1\u9053 \u00b6 \u82e5\u60f3\u7edf\u8ba1 /etc\u76ee\u5f55\u4e0b\u6587\u4ef6\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u6b63\u5e38\u7684\u4f7f\u7528\u9700\u8981\u4e24\u4e2a\u6b65\u9aa4\u3002 \u663e\u7136\uff0cetc.txt \u4f5c\u4e3a\u4e2d\u95f4buffer\uff0c\u6ca1\u6709\u4e8c\u6b21\u4f7f\u7528\u7684\u9700\u8981\uff0c\u4e3a\u7701\u7565\u8fd9\u79cd\u9ebb\u70e6\uff0c\u540c\u65f6\u63d0\u9ad8\u4ee3\u7801\u6548\u7387\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7ba1\u9053\u8fd9\u4e2a\u529f\u80fd\u3002 \u5bf9\u6bd4\u4ee5\u4e0a\u4e24\u79cd\u65b9\u6cd5\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u7ba1\u9053\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u524d\u9762\u7684\u8fdb\u7a0b\u4ee5\u5199\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u540e\u9762\u7684\u8fdb\u7a0b\u4ee5\u8bfb\u65b9\u5f0f\u6253\u5f00\u3002\u8fd9\u6837\u524d\u9762\u5199\u5b8c\u540e\u9762\u8bfb\uff0c\u4e8e\u662f\u5c31\u5b9e\u73b0\u4e86\u901a\u4fe1\u3002\u5b9e\u9645\u4e0a\u7ba1\u9053\u7684\u8bbe\u8ba1\u4e5f\u662f\u9075\u5faaUNIX\u7684\u201c\u4e00\u5207\u7686\u6587\u4ef6\u201d\u8bbe\u8ba1\u539f\u5219\u7684\uff0c\u5b83\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u6587\u4ef6\u3002Linux\u7cfb\u7edf\u76f4\u63a5\u628a\u7ba1\u9053\u5b9e\u73b0\u6210\u4e86\u4e00\u79cd\u6587\u4ef6\u7cfb\u7edf\uff0c\u501f\u52a9VFS\u7ed9\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u64cd\u4f5c\u63a5\u53e3\u3002 \u867d\u7136\u5b9e\u73b0\u5f62\u6001\u4e0a\u662f\u6587\u4ef6\uff0c\u4f46\u662f\u7ba1\u9053\u672c\u8eab\u5e76\u4e0d\u5360\u7528\u78c1\u76d8\u6216\u8005\u5176\u4ed6\u5916\u90e8\u5b58\u50a8\u7684\u7a7a\u95f4\u3002\u5728Linux\u7684\u5b9e\u73b0\u4e0a\uff0c\u5b83\u5360\u7528\u7684\u662f\u5185\u5b58\u7a7a\u95f4\u3002\u6240\u4ee5\uff0cLinux\u4e0a\u7684\u7ba1\u9053\u5c31\u662f\u4e00\u4e2a\u64cd\u4f5c\u65b9\u5f0f\u4e3a\u6587\u4ef6\u7684\u5185\u5b58\u7f13\u51b2\u533a\u3002","title":"Linux\u5f00\u53d1\u73af\u5883\u57fa\u7840\u77e5\u8bc6"},{"location":"Linux/#linux","text":"\u5b66\u4e60\u5efa\u8bae \uff1a\u300a\u9e1f\u54e5\u7684Linux\u79c1\u623f\u83dc\uff08\u57fa\u7840\u5b66\u4e60\u7bc7\uff09\u300b","title":"Linux\u5f00\u53d1\u73af\u5883\u57fa\u7840\u77e5\u8bc6"},{"location":"Linux/#1-linux","text":"Linux\u767b\u5f55\u65b9\u5f0f\u4e3b\u8981\u6709\u4e24\u79cd\uff1a \u672c\u5730\u767b\u5f55\uff1a\u53ea\u8981\u542f\u52a8\u865a\u62df\u673a\u5373\u53ef\uff0c\u7c7b\u4f3c\u4e8e\u6253\u5f00\u81ea\u5df1\u7535\u8111\u76f4\u63a5\u8fde\u63a5\u663e\u793a\u5668\u7684\u65b9\u5f0f\uff1b\u53ef\u4ee5\u901a\u8fc7 Ctrl + Alt + F[1-6] \u57286\u4e2a\u865a\u62df\u63a7\u5236\u53f0\u4e4b\u95f4\u8fdb\u884c\u5207\u6362\u3002\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u4e0d\u80fd\u7528\u672c\u5730\u767b\u5f55\u3002 \u8fdc\u7a0b\u767b\u5f55\uff1a\u53ef\u4ee5\u901a\u8fc7MobaXterm\u3001Windows Terminal\u3001putty\u7b49\u5de5\u5177\u8fdc\u7a0b\u767b\u5f55\u3002","title":"1. \u5982\u4f55\u767b\u9646Linux"},{"location":"Linux/#2-shell","text":"Shell\u610f\u601d\u4e3a\u547d\u4ee4\u884c\u754c\u9762\uff0c\u662f\u8fd0\u884c\u547d\u4ee4\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u672c\u8eab\u662f\u4e00\u4e2a\u7528C\u8bed\u8a00\u7f16\u5199\u7684\u7a0b\u5e8f\u3002shell\u662f\u7528\u6237\u4f7f\u7528Linux\u7684\u6865\u6881\uff0c\u7528\u6237\u901a\u8fc7shell\u6765\u63a7\u5236Linux\u7cfb\u7edf\uff0cLinux\u7cfb\u7edf\u901a\u8fc7shell\u5c55\u793a\u7cfb\u7edf\u4fe1\u606f\u3002 \u5e38\u89c1\u7684shell\u6709\uff1a bash \u3001 sh \u3001 csh \u3001 ksh \u7b49\uff0c\u53ef\u4ee5\u5728\u521b\u5efa\u7528\u6237\u65f6\u6307\u5b9a\u7528\u6237\u7684\u767b\u5f55shell\uff0c\u4e5f\u53ef\u4ee5\u8f93\u5165shell\u540d\u79f0\u6253\u5f00\u4e00\u4e2a\u65b0\u7684shell\u3002 openEuler\u7528\u6237\u7684\u9ed8\u8ba4\u767b\u5f55shell\u662f bash \u3002 \u7cfb\u7edf\u63d0\u793a\u7b26\u9ed8\u8ba4\u8868\u793a\u7684\u662f\uff1a [\u5f53\u524d\u767b\u5f55\u7528\u6237@\u4e3b\u673a\u540d \u5f53\u524d\u6240\u5728\u4f4d\u7f6e]$ \u6ce8\u610f\u4e8b\u9879 root\u7528\u6237\u6700\u540e\u4e00\u4e2a\u63d0\u793a\u7b26\u901a\u5e38\u662f#\uff0c\u666e\u901a\u7528\u6237\u6700\u540e\u4e00\u4e2a\u63d0\u793a\u7b26\u901a\u5e38\u662f$\u3002 \u4e0a\u56fe [cs@localhost \\~]$ \uff0c\u5176\u4e2d \\~ \u7b26\u53f7\u8868\u793a\u662f\u4e2a\u4eba\u76ee\u5f55\u7684\u5730\u5740\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u7528\u6237\u90fd\u6709\u81ea\u5df1\u7684\u4e2a\u4eba\u76ee\u5f55\u5730\u5740\uff0c\u6240\u4ee5\u7528 \\~ \u4f5c\u4e3a\u7edf\u4e00\u66ff\u4ee3\u8fd9\u4e2a\u6839\u636e\u4e0d\u540c\u7528\u6237\u800c\u4e0d\u540c\u4f46\u53c8\u6709\u89c4\u5f8b\u53ef\u5faa\u7684\u5730\u5740\uff0c\u4ee5\u786e\u4fdd\u67d0\u4e9b\u60c5\u51b5\u4e0b\u7684\u517c\u5bb9\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u4ee5root\u7528\u6237\u767b\u5f55\uff0c \\~ \u4ee3\u8868 /root/ \uff0c\u5982\u679c\u4ee5cs\u7528\u6237\u767b\u5f55\uff0c \\~ \u4ee3\u8868 /home/cs/ \u3002","title":"2. shell\u7b80\u4ecb"},{"location":"Linux/#3-linux","text":"root\u662fLinux\u7cfb\u7edf\u4e2d\u7684\u4e00\u4e2a\u7279\u6b8a\u7ba1\u7406\u5458\uff0c\u901a\u5e38\u79f0\u4e3a\u8d85\u7ea7\u7ba1\u7406\u5458\uff0c\u7c7b\u4f3c\u4e8eWindows\u7cfb\u7edf\u4e2d\u7684Administrator\u3002root\u7528\u6237\u62e5\u6709\u6700\u9ad8\u6743\u9650\uff0c\u751a\u81f3\u53ef\u4ee5\u65e0\u9650\u7684\u7834\u574f\u7cfb\u7edf\uff01\u9664\u975e\u5fc5\u8981\uff0c\u8bf7\u52ff\u4f7f\u7528root\u7528\u6237\uff01 \u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u63d0\u793a\u7b26\u6e05\u695a\u4e86\u89e3\u5f53\u524d\u662froot\u7528\u6237\uff08 # \uff09\u8fd8\u662f\u666e\u901a\u7528\u6237\uff08 $ \uff09\u3002 \u5e38\u7528\u7684\u7ba1\u7406\u7528\u6237\u7684\u547d\u4ee4\u5982\u4e0b\uff1a useradd name \uff1a\u589e\u52a0\u7528\u6237\uff0c\u9700\u8981\u5728root\u6743\u9650\u4e0b\uff0c\u901a\u8fc7useradd\u547d\u4ee4\u53ef\u4ee5\u4e3a\u7cfb\u7edf\u6dfb\u52a0\u65b0\u7528\u6237\u4fe1\u606f su - username \uff1a\u5207\u6362\u7528\u6237 sudo \uff1a\u5141\u8bb8\u666e\u901a\u7528\u6237\u6267\u884c\u7ba1\u7406\u5458\u8d26\u53f7\u624d\u80fd\u6267\u884c\u7684\u547d\u4ee4 id \u67e5\u770b\u5f53\u524d\u7528\u6237\u540d \u5982\u679c\u8be5\u7528\u6237\u5728root\u4e0b\u6ca1\u6709\u6743\u9650\uff08\u4e00\u822c\u6765\u8bf4\uff0c\u7cfb\u7edf\u5f53\u7136\u4e0d\u4f1a\u5141\u8bb8\u4efb\u4f55\u7528\u6237\u90fd\u80fd\u591f\u4ee5\u8d85\u7ea7\u7528\u6237\u7684\u8eab\u4efd\u8fd0\u884c\u547d\u4ee4\uff09\uff0c\u9700\u8981\u5728root\u4e0b\u7ed9\u8be5\u7528\u6237\u6dfb\u52a0\u6743\u9650\u3002 \u4e0b\u9762\u4ee5openEuler\u7cfb\u7edf\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u5982\u4f55\u6dfb\u52a0\u7528\u6237\u6743\u9650\u3002\u4f7f\u7528\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u7684\u540c\u5b66\u53ef\u4ee5\u5ffd\u7565\u8fd9\u4e00\u5c0f\u8282\u3002 \u5230openEuler\u865a\u62df\u673a\u91cc\uff0c\u8f93\u5165 # visudo \u8fdb\u5165vi\u7f16\u8f91\u5668\uff0c\u8f93\u5165 /Allow root \uff0c\u5b9a\u4f4d\u5230 ## Allow root to run any commands anywhere \uff0c\u63a5\u7740\u6309\u4e0b i \u952e\uff0c\u8fdb\u884c\u7f16\u8f91\u6a21\u5f0f\uff08\u6700\u4e0b\u9762\u4e00\u884c\u663e\u793a -- INSERT -- \uff09\uff0c\u589e\u52a0\uff1a cs ALL =( ALL ) ALL \u6388\u6743cs\u7528\u6237\u5728\u4efb\u4f55\u4e3b\u673a\u4e0a\u6267\u884c\u4efb\u4f55\u547d\u4ee4\u3002\u7b2c\u4e00\u4e2aALL\u8868\u793a\u6240\u6709\u8ba1\u7b97\u673a\uff1b\u7b2c\u4e8c\u4e2aALL\u8868\u793a\u6240\u6709\u7528\u6237\uff0c\u7b2c\u4e09\u4e2aALL\u8868\u793a\u6240\u6709\u547d\u4ee4\u3002 \u7f16\u8f91\u5b8c\u6210\u540e\uff0c\u6309 Esc \u952e\u9000\u51fa\u7f16\u8f91\u6a21\u5f0f\uff0c\u518d\u8f93\u5165 :wq \uff0c\u56de\u8f66\uff0c\u4fdd\u5b58\u5e76\u9000\u51fa\u3002\uff08\u8f93\u5165 :q! \u662f\u4e0d\u4fdd\u5b58\u5e76\u9000\u51fa\uff09 \u518d\u5230cs\u7528\u6237\u4e0b\uff0c\u6267\u884csudo\u547d\u4ee4\uff0c\u8fd9\u65f6\u5c31\u80fd\u591f\u6267\u884csudo\u547d\u4ee4\u4e86\u3002","title":"3. Linux\u7528\u6237"},{"location":"Linux/#4","text":"\u53ef\u4ee5\u901a\u8fc7 passwd \u4fee\u6539\u81ea\u5df1\u7684\u5bc6\u7801\u3002 openEuler\u7cfb\u7edf\u4fee\u6539\u7528\u6237\u5bc6\u7801\u65f6\u9700\u8981\u6ee1\u8db3\u5bc6\u7801\u590d\u6742\u5ea6\u8981\u6c42\uff0c\u5bc6\u7801\u7684\u590d\u6742\u5ea6\u8981\u6c42\u5982\u4e0b\uff1a \u53e3\u4ee4\u957f\u5ea6\u81f3\u5c118\u4e2a\u5b57\u7b26\u3002 \u53e3\u4ee4\u81f3\u5c11\u5305\u542b\u5927\u5199\u5b57\u6bcd\u3001\u5c0f\u5199\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u7279\u6b8a\u5b57\u7b26\u7684\u4efb\u610f3\u79cd\u3002 \u53e3\u4ee4\u4e0d\u80fd\u548c\u8d26\u53f7\u4e00\u6837\u3002 \u53e3\u4ee4\u4e0d\u80fd\u4f7f\u7528\u5b57\u5178\u8bcd\u6c47\u3002","title":"4. \u4fee\u6539\u5bc6\u7801"},{"location":"Linux/#5","text":"\u67e5\u770b\u7cfb\u7edf\u4fe1\u606f\uff1a cat /etc/os-release \u67e5\u770b CPU \u4fe1\u606f\uff1a lscpu \u67e5\u770b\u5185\u5b58\u4fe1\u606f\uff1a free \u67e5\u770b\u78c1\u76d8\u4fe1\u606f\uff1a fdisk -l \u67e5\u770b\u7cfb\u7edf\u8d44\u6e90\u5b9e\u65f6\u4fe1\u606f\uff1a top \u663e\u793a\u5f53\u524d\u7684\u65e5\u671f\u548c\u672c\u5730\u65f6\u95f4\uff1a date \u663e\u793a\u5f53\u524d\u7684\u65e5\u671f\u548c UTC \u65f6\u95f4\uff1a date --utc/--u","title":"5. \u67e5\u770b\u7cfb\u7edf\u4fe1\u606f"},{"location":"Linux/#6-bash-shell","text":"tab \u53ef\u4ee5\u4f7f\u7528 tab \u952e\u8865\u5168\u529f\u80fd\uff0c\u5feb\u901f\u8f93\u5165\u547d\u4ee4\u6216\u53c2\u6570 history history \u5de5\u5177\u8bb0\u5f55\u4e86\u5386\u53f2\u547d\u4ee4\uff0c\u53ef\u4ee5\u4f7f\u7528history\u67e5\u770b\u5386\u53f2\u547d\u4ee4\u3002 \u4e0a\u4e0b\u952e \u53ef\u4ee5\u6309\u4e0a\u4e0b\u952e\u5feb\u901f\u7ffb\u9605\u5386\u53f2\u547d\u4ee4 home \u4e0e end \u5f53\u60f3\u8981\u5c06\u5149\u6807\u5feb\u901f\u79fb\u52a8\u5230\u5f53\u524d\u884c\u9996\u6216\u884c\u5c3e\u65f6\uff0c\u53ef\u4ee5\u6309home\u6216end\u952e\u3002 clear \u4e0e Ctrl + L \u5f53\u9875\u9762\u88ab\u5b57\u7b26\u5145\u6ee1\uff0c\u60f3\u5feb\u901f\u6e05\u5c4f\u65f6\uff0c\u53ef\u4ee5\u8f93\u5165clear\u6216\u8005\u6309\u4e0bCtrl + L\u7ec4\u5408\u952e\u5feb\u901f\u6e05\u5c4f\u3002 Ctrl + C \u7ec8\u6b62\u5f53\u524d\u7a0b\u5e8f\u7684\u6267\u884c Ctrl + Z \u6302\u8d77\u5f53\u524d\u7a0b\u5e8f Ctrl + D \u7ec8\u6b62\u8f93\u5165\uff08\u82e5\u6b63\u5728\u4f7f\u7528 Shell\uff0c\u5219\u9000\u51fa\u5f53\u524d Shell\uff09","title":"6. bash shell\u5feb\u6377\u7684\u64cd\u4f5c"},{"location":"Linux/#7","text":"","title":"7. \u57fa\u7840\u547d\u4ee4"},{"location":"Linux/#71-ls","text":"Linux ls \uff08\u82f1\u6587\u5168\u62fc\uff1alist files\uff09\u547d\u4ee4\u7528\u4e8e\u663e\u793a\u6307\u5b9a\u5de5\u4f5c\u76ee\u5f55\u4e0b\u4e4b\u5185\u5bb9\uff08\u5217\u51fa\u76ee\u524d\u5de5\u4f5c\u76ee\u5f55\u6240\u542b\u4e4b\u6587\u4ef6\u53ca\u5b50\u76ee\u5f55)\u3002 ls [ -alrtAFR ] [ name... ] -a --all \u7684\u7f29\u5199\uff0c\u663e\u793a\u6240\u6709\u6587\u4ef6\u53ca\u76ee\u5f55\uff0c\u5305\u62ec\u9690\u85cf\u6587\u4ef6(\u4ee5 . \u5f00\u5934\u7684\u6587\u4ef6) -l \u9664\u6587\u4ef6\u540d\u79f0\u5916\uff0c\u4ea6\u5c06\u6587\u4ef6\u578b\u6001\u3001\u6743\u9650\u3001\u62e5\u6709\u8005\u3001\u6587\u4ef6\u5927\u5c0f\u7b49\u8d44\u8baf\u8be6\u7ec6\u5217\u51fa -r \u5c06\u6587\u4ef6\u4ee5\u76f8\u53cd\u6b21\u5e8f\u663e\u793a(\u539f\u5b9a\u4f9d\u82f1\u6587\u5b57\u6bcd\u6b21\u5e8f) -t \u5c06\u6587\u4ef6\u4f9d\u5efa\u7acb\u65f6\u95f4\u4e4b\u5148\u540e\u6b21\u5e8f\u5217\u51fa -A --almost-all \u7684\u7f29\u5199\uff0c\u663e\u793a\u6240\u6709\u7684\u6587\u4ef6\uff0c\u5305\u62ec\u9690\u85cf\u6587\u4ef6\uff0c\u4f46\u4e0d\u5305\u62ec\u8868\u793a\u5f53\u524d\u76ee\u5f55 . \u548c\u4e0a\u7ea7\u76ee\u5f55 .. \u8fd9\u4e24\u4e2a\u6587\u4ef6\u3002 -F \u5728\u5217\u51fa\u7684\u6587\u4ef6\u540d\u79f0\u540e\u52a0\u4e00\u7b26\u53f7\uff1b\u4f8b\u5982\u53ef\u6267\u884c\u6863\u5219\u52a0 * , \u76ee\u5f55\u5219\u52a0 / -R \u82e5\u76ee\u5f55\u4e0b\u6709\u6587\u4ef6\uff0c\u5219\u4ee5\u4e0b\u4e4b\u6587\u4ef6\u4ea6\u7686\u4f9d\u5e8f\u5217\u51fa","title":"7.1 ls \u663e\u793a\u5185\u5bb9"},{"location":"Linux/#72-ip-addr","text":"\u53ef\u4ee5\u4f7f\u7528 ip addr \u547d\u4ee4\u67e5\u770bIP\u5730\u5740 # ip addr 1 : lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00 :00:00:00:00:00 brd 00 :00:00:00:00:00 inet 127 .0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever 2 : ens33: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000 link/ether 00 :0c:29:61:40:aa brd ff:ff:ff:ff:ff:ff inet 192 .168.163.134/24 brd 192 .168.163.255 scope global dynamic noprefixroute ens33 valid_lft 1729sec preferred_lft 1729sec inet6 fe80::3b1e:b490:7d7f:ebd0/64 scope link noprefixroute valid_lft forever preferred_lft forever \u4e0a\u8ff0\u547d\u4ee4\u7ed3\u679c\u663e\u793a\u4e24\u90e8\u5206\uff0clo\u548cens33\uff0c\u5982\u679c\u6709\u591a\u5757\u7f51\u5361\uff0c\u6bcf\u5757\u7f51\u5361\u90fd\u4f1a\u663e\u793a\u4e00\u90e8\u5206\u3002 lo \uff1a\u5168\u79f0loopback\uff0c\u662f\u56de\u73af\u5730\u5740\uff0c\u7ecf\u5e38\u88ab\u5206\u914d\u5230 127.0.0.1 \u5730\u5740\u4e0a\uff0c\u7528\u4e8e\u672c\u673a\u901a\u4fe1\uff0c\u7ecf\u8fc7\u5185\u6838\u5904\u7406\u540e\u76f4\u63a5\u8fd4\u56de\uff0c\u4e0d\u4f1a\u5728\u4efb\u4f55\u7f51\u7edc\u4e2d\u51fa\u73b0\u3002 ens33 \uff1a\u7f51\u5361\u540d\uff0c\u5982\u679c\u6709\u591a\u5757\u7f51\u5361\uff0c\u4f1a\u6709\u591a\u4e2aens \u6216\u5176\u5b83\u540d\u79f0\u3002\u4e0a\u8ff0IP\u5730\u5740\u662f 192.168.163.134/24","title":"7.2 ip addr \u663e\u793a\u6216\u8bbe\u7f6e\u7f51\u7edc\u72b6\u6001"},{"location":"Linux/#73-mkdir","text":"Linux mkdir \uff08\u82f1\u6587\u5168\u62fc\uff1amake directory\uff09\u547d\u4ee4\u7528\u4e8e\u521b\u5efa\u76ee\u5f55\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528 mkdir \u521b\u5efa\u76ee\u5f55\u9700\u8981\u4e00\u5c42\u4e00\u5c42\u5efa\u7acb\u3002\u5047\u5982\u8981\u521b\u5efa /home/cs/work/test \uff0c\u5fc5\u987b\u8981\u6709 /home/cs/work \u76ee\u5f55\uff0c\u624d\u80fd\u5728work\u76ee\u5f55\u4e0b\u521b\u5efatest\u5b50\u76ee\u5f55\u3002 -p \u9009\u9879\uff1a\u7cfb\u7edf\u4f1a\u81ea\u52a8\u4f9d\u5e8f\u5efa\u7acb/home\u3001/home/cs\u3001/home/cs/work\u3001/home/cs/work/test\uff0c\u5982\u679c\u8be5\u76ee\u5f55\u672c\u6765\u5df2\u5b58\u5728\uff0c\u7cfb\u7edf\u4e5f\u4e0d\u4f1a\u663e\u793a\u9519\u8bef\u4fe1\u606f\u3002\u5efa\u8bae\u5e38\u7528-p\u9009\u9879 \u3002 $ mkdir [ -p ] dirName","title":"7.3 mkdir \u5efa\u7acb\u6587\u4ef6\u5939"},{"location":"Linux/#74-rmdir","text":"Linux rmdir \uff08\u82f1\u6587\u5168\u62fc\uff1aremove directory\uff09\u547d\u4ee4\u5220\u9664\u7a7a\u7684\u76ee\u5f55\u3002 \u5982\u540c\u4e0a\u8ff0 mkdir \u4e00\u6837\uff0c rmdir \u5220\u9664\u76ee\u5f55\u4e5f\u9700\u8981\u4e00\u5c42\u4e00\u5c42\u5220\u9664\uff0c\u800c\u4e14\u88ab\u5220\u9664\u7684\u76ee\u5f55\u91cc\u9762\u4e0d\u80fd\u5b58\u5728\u5176\u4ed6\u7684\u76ee\u5f55\u6216\u6587\u4ef6\uff0c\u5373\u53ea\u80fd\u5220\u9664\u7a7a\u76ee\u5f55\u3002 -p \u9009\u9879\uff1a\u53ef\u4ee5\u9012\u5f52\u5220\u9664\u6307\u5b9a\u7684\u591a\u7ea7\u76ee\u5f55\uff0c\u4f46\u662f\u8981\u6c42\u6bcf\u4e2a\u76ee\u5f55\u4e5f\u5fc5\u987b\u662f\u7a7a\u76ee\u5f55\u3002 $ rmdir [ -p ] dirName","title":"7.4 rmdir \u5220\u9664\u6587\u4ef6\u5939"},{"location":"Linux/#75-rm","text":"\u4e0a\u8ff0rmdir\u547d\u4ee4\u53ea\u80fd\u5220\u9664\u7a7a\u76ee\u5f55\uff0c\u5f53\u8981\u5220\u9664\u975e\u7a7a\u76ee\u5f55\u65f6\uff0c\u5c31\u8981\u4f7f\u7528\u5e26\u6709 -r \u9009\u9879\u7684 rm \u547d\u4ee4\u3002 Linux rm \uff08\u82f1\u6587\u5168\u62fc\uff1aremove\uff09\u547d\u4ee4\u7528\u4e8e\u5220\u9664\u4e00\u4e2a\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u3002 $ rm [ options ] name... - -i \u5220\u9664\u524d\u9010\u4e00\u8be2\u95ee\u786e\u8ba4\u3002 - -f \u5373\u4f7f\u539f\u6863\u6848\u5c5e\u6027\u8bbe\u4e3a\u552f\u8bfb\uff0c\u4ea6\u76f4\u63a5\u5220\u9664\uff0c\u65e0\u9700\u9010\u4e00\u786e\u8ba4\u3002 - -r \u5c06\u76ee\u5f55\u53ca\u4ee5\u4e0b\u4e4b\u6863\u6848\u4ea6\u9010\u4e00\u5220\u9664\u3002","title":"7.5 rm \u5220\u9664\u547d\u4ee4"},{"location":"Linux/#76-cd","text":"Linux cd \uff08\u82f1\u6587\u5168\u62fc\uff1achange directory\uff09\u547d\u4ee4\u7528\u4e8e\u5207\u6362\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u3002 \u5176\u4e2d dirName \u8868\u793a\u6cd5\u53ef\u4e3a\u7edd\u5bf9\u8def\u5f84\u6216\u76f8\u5bf9\u8def\u5f84\u3002\u82e5\u76ee\u5f55\u540d\u79f0\u7701\u7565\uff0c\u5219\u53d8\u6362\u81f3\u4f7f\u7528\u8005\u7684 home \u76ee\u5f55 (\u4e5f\u5c31\u662f\u521a login \u65f6\u6240\u5728\u7684\u76ee\u5f55)\u3002 \u53e6\u5916\uff0c ~ \u4e5f\u8868\u793a\u4e3a \u4e2a\u4eba\u76ee\u5f55\u7684\u5730\u5740\uff0c . \u5219\u662f\u8868\u793a\u76ee\u524d\u6240\u5728\u7684\u76ee\u5f55\uff0c .. \u5219\u8868\u793a\u76ee\u524d\u76ee\u5f55\u4f4d\u7f6e\u7684\u4e0a\u4e00\u5c42\u76ee\u5f55\u3002 $ cd [ dirName ] dirName\uff1a\u8981\u5207\u6362\u7684\u76ee\u6807\u76ee\u5f55\u3002","title":"7.6 cd \u5207\u6362\u76ee\u5f55"},{"location":"Linux/#77-vi","text":"$ vi/vim/bash","title":"7.7 vi \u6587\u672c\u7f16\u8f91\u6a21\u5f0f"},{"location":"Linux/#78-echo","text":"\u663e\u793a\u666e\u901a\u5b57\u7b26\u4e32: $ echo \"It is a test\" \u8f93\u51fa It is a test \u663e\u793a\u8f6c\u4e49\u5b57\u7b26 $ echo \"\\\"It is a test\\\"\" \u8f93\u51fa \"It is a test\" \u663e\u793a\u7ed3\u679c\u5b9a\u5411\u81f3\u6587\u4ef6 $ echo \"It is a test\" > myfile \u663e\u793a\u53d8\u91cf #!/bin/sh read name echo \" $name It is a test\"","title":"7.8 echo \u547d\u4ee4"},{"location":"Linux/#79-cat","text":"cat \uff08\u82f1\u6587\u5168\u62fc\uff1aconcatenate\uff09\u547d\u4ee4\u7528\u4e8e\u8fde\u63a5\u6587\u4ef6\u5e76\u6253\u5370\u5230\u6807\u51c6\u8f93\u51fa\u8bbe\u5907\u4e0a\u3002 $ cat [ -AbeEnstTuv ] [ --help ] [ --version ] fileName -n \u6216 --number \uff1a\u7531 1 \u5f00\u59cb\u5bf9\u6240\u6709\u8f93\u51fa\u7684\u884c\u6570\u7f16\u53f7\u3002 -b \u6216 --number-nonblank \uff1a\u548c -n \u76f8\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u5bf9\u4e8e\u7a7a\u767d\u884c\u4e0d\u7f16\u53f7\u3002 -s \u6216 --squeeze-blank \uff1a\u5f53\u9047\u5230\u6709\u8fde\u7eed\u4e24\u884c\u4ee5\u4e0a\u7684\u7a7a\u767d\u884c\uff0c\u5c31\u4ee3\u6362\u4e3a\u4e00\u884c\u7684\u7a7a\u767d\u884c\u3002 -v \u6216 --show-nonprinting \uff1a\u4f7f\u7528 ^ \u548c M- \u7b26\u53f7\uff0c\u9664\u4e86 LFD \u548c TAB \u4e4b\u5916\u3002 -E \u6216 --show-ends : \u5728\u6bcf\u884c\u7ed3\u675f\u5904\u663e\u793a $\u3002 -T \u6216 --show-tabs : \u5c06 TAB \u5b57\u7b26\u663e\u793a\u4e3a ^I\u3002 -A , --show-all \uff1a\u7b49\u4ef7\u4e8e -vET\u3002 -e \uff1a\u7b49\u4ef7\u4e8e\"-vE\"\u9009\u9879\uff1b -t \uff1a\u7b49\u4ef7\u4e8e\"-vT\"\u9009\u9879\uff1b","title":"7.9 cat \u6253\u5370\u6587\u4ef6"},{"location":"Linux/#710-cp","text":"Linux cp \uff08\u82f1\u6587\u5168\u62fc\uff1acopy file\uff09\u547d\u4ee4\u4e3b\u8981\u7528\u4e8e\u590d\u5236\u6587\u4ef6\u6216\u76ee\u5f55\u3002 $ cp [ options ] source dest \u6216 $ cp [ options ] source... directory -a \uff1a\u6b64\u9009\u9879\u901a\u5e38\u5728\u590d\u5236\u76ee\u5f55\u65f6\u4f7f\u7528\uff0c\u5b83\u4fdd\u7559\u94fe\u63a5\u3001\u6587\u4ef6\u5c5e\u6027\uff0c\u5e76\u590d\u5236\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u5185\u5bb9\u3002\u5176\u4f5c\u7528\u7b49\u4e8edpR\u53c2\u6570\u7ec4\u5408\u3002 -d \uff1a\u590d\u5236\u65f6\u4fdd\u7559\u94fe\u63a5\u3002\u8fd9\u91cc\u6240\u8bf4\u7684\u94fe\u63a5\u76f8\u5f53\u4e8eWindows\u7cfb\u7edf\u4e2d\u7684\u5feb\u6377\u65b9\u5f0f\u3002 -f \uff1a\u8986\u76d6\u5df2\u7ecf\u5b58\u5728\u7684\u76ee\u6807\u6587\u4ef6\u800c\u4e0d\u7ed9\u51fa\u63d0\u793a\u3002 -i \uff1a\u4e0e-f\u9009\u9879\u76f8\u53cd\uff0c\u5728\u8986\u76d6\u76ee\u6807\u6587\u4ef6\u4e4b\u524d\u7ed9\u51fa\u63d0\u793a\uff0c\u8981\u6c42\u7528\u6237\u786e\u8ba4\u662f\u5426\u8986\u76d6\uff0c\u56de\u7b54\"y\"\u65f6\u76ee\u6807\u6587\u4ef6\u5c06\u88ab\u8986\u76d6\u3002 -p \uff1a\u9664\u590d\u5236\u6587\u4ef6\u7684\u5185\u5bb9\u5916\uff0c\u8fd8\u628a\u4fee\u6539\u65f6\u95f4\u548c\u8bbf\u95ee\u6743\u9650\u4e5f\u590d\u5236\u5230\u65b0\u6587\u4ef6\u4e2d\u3002 -r \uff1a\u82e5\u7ed9\u51fa\u7684\u6e90\u6587\u4ef6\u662f\u4e00\u4e2a\u76ee\u5f55\u6587\u4ef6\uff0c\u6b64\u65f6\u5c06\u590d\u5236\u8be5\u76ee\u5f55\u4e0b\u6240\u6709\u7684\u5b50\u76ee\u5f55\u548c\u6587\u4ef6\u3002 -l \uff1a\u4e0d\u590d\u5236\u6587\u4ef6\uff0c\u53ea\u662f\u751f\u6210\u94fe\u63a5\u6587\u4ef6\u3002","title":"7.10 cp \u590d\u5236\u6587\u4ef6"},{"location":"Linux/#711-mv","text":"Linux mv \uff08\u82f1\u6587\u5168\u62fc\uff1amove file\uff09\u547d\u4ee4\u7528\u6765\u4e3a\u6587\u4ef6\u6216\u76ee\u5f55\u6539\u540d\u3001\u6216\u5c06\u6587\u4ef6\u6216\u76ee\u5f55\u79fb\u5165\u5176\u5b83\u4f4d\u7f6e\u3002 $ mv [ options ] source dest $ mv [ options ] source... directory -b : \u5f53\u76ee\u6807\u6587\u4ef6\u6216\u76ee\u5f55\u5b58\u5728\u65f6\uff0c\u5728\u6267\u884c\u8986\u76d6\u524d\uff0c\u4f1a\u4e3a\u5176\u521b\u5efa\u4e00\u4e2a\u5907\u4efd\u3002 -i : \u5982\u679c\u6307\u5b9a\u79fb\u52a8\u7684\u6e90\u76ee\u5f55\u6216\u6587\u4ef6\u4e0e\u76ee\u6807\u7684\u76ee\u5f55\u6216\u6587\u4ef6\u540c\u540d\uff0c\u5219\u4f1a\u5148\u8be2\u95ee\u662f\u5426\u8986\u76d6\u65e7\u6587\u4ef6\uff0c\u8f93\u5165 y \u8868\u793a\u76f4\u63a5\u8986\u76d6\uff0c\u8f93\u5165 n \u8868\u793a\u53d6\u6d88\u8be5\u64cd\u4f5c\u3002 -f : \u5982\u679c\u6307\u5b9a\u79fb\u52a8\u7684\u6e90\u76ee\u5f55\u6216\u6587\u4ef6\u4e0e\u76ee\u6807\u7684\u76ee\u5f55\u6216\u6587\u4ef6\u540c\u540d\uff0c\u4e0d\u4f1a\u8be2\u95ee\uff0c\u76f4\u63a5\u8986\u76d6\u65e7\u6587\u4ef6\u3002 -n : \u4e0d\u8981\u8986\u76d6\u4efb\u4f55\u5df2\u5b58\u5728\u7684\u6587\u4ef6\u6216\u76ee\u5f55\u3002 -u \uff1a\u5f53\u6e90\u6587\u4ef6\u6bd4\u76ee\u6807\u6587\u4ef6\u65b0\u6216\u8005\u76ee\u6807\u6587\u4ef6\u4e0d\u5b58\u5728\u65f6\uff0c\u624d\u6267\u884c\u79fb\u52a8\u64cd\u4f5c\u3002","title":"7.11 mv \u6539\u540d\u6216\u79fb\u52a8\u6587\u4ef6"},{"location":"Linux/#712-find","text":"Linux find \u547d\u4ee4\u7528\u6765\u5728\u6307\u5b9a\u76ee\u5f55\u4e0b\u67e5\u627e\u6587\u4ef6\u3002\u4efb\u4f55\u4f4d\u4e8e\u53c2\u6570\u4e4b\u524d\u7684\u5b57\u7b26\u4e32\u90fd\u5c06\u88ab\u89c6\u4e3a\u6b32\u67e5\u627e\u7684\u76ee\u5f55\u540d\u3002\u5982\u679c\u4f7f\u7528\u8be5\u547d\u4ee4\u65f6\uff0c\u4e0d\u8bbe\u7f6e\u4efb\u4f55\u53c2\u6570\uff0c\u5219 find \u547d\u4ee4\u5c06\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u67e5\u627e\u5b50\u76ee\u5f55\u4e0e\u6587\u4ef6\u3002\u5e76\u4e14\u5c06\u67e5\u627e\u5230\u7684\u5b50\u76ee\u5f55\u548c\u6587\u4ef6\u5168\u90e8\u8fdb\u884c\u663e\u793a\u3002 $ find path -option [ -print ] [ -exec -ok command ] {} \\; \u793a\u4f8b: $ find . -name \"*.c\" Linux locate\u547d\u4ee4\u7528\u4e8e\u67e5\u627e\u7b26\u5408\u6761\u4ef6\u7684\u6587\u6863\uff0c\u4ed6\u4f1a\u53bb\u4fdd\u5b58\u6587\u6863\u548c\u76ee\u5f55\u540d\u79f0\u7684\u6570\u636e\u5e93\u5185\uff0c\u67e5\u627e\u5408\u4e4e\u8303\u672c\u6837\u5f0f\u6761\u4ef6\u7684\u6587\u6863\u6216\u76ee\u5f55\u3002 \u4e00\u822c\u60c5\u51b5\u6211\u4eec\u53ea\u9700\u8981\u8f93\u5165 locate your_file_name \u5373\u53ef\u67e5\u627e\u6307\u5b9a\u6587\u4ef6\u3002 locate [ -d ][ --help ][ --version ][ \u8303\u672c\u6837\u5f0f... ] \u793a\u4f8b: \u67e5\u627e passwd \u6587\u4ef6\uff0c\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a locate passwd PS: locate \u4e0e find \u4e0d\u540c: find \u662f\u53bb\u786c\u76d8\u627e\uff0clocate \u53ea\u5728 /var/lib/slocate \u8d44\u6599\u5e93\u4e2d\u627e\u3002 locate \u7684\u901f\u5ea6\u6bd4 find \u5feb\uff0c\u5b83\u5e76\u4e0d\u662f\u771f\u7684\u67e5\u627e\uff0c\u800c\u662f\u67e5\u6570\u636e\u5e93\uff0c\u4e00\u822c\u6587\u4ef6\u6570\u636e\u5e93\u5728 /var/lib/slocate/slocate.db \u4e2d\uff0c\u6240\u4ee5 locate \u7684\u67e5\u627e\u5e76\u4e0d\u662f\u5b9e\u65f6\u7684\uff0c\u800c\u662f\u4ee5\u6570\u636e\u5e93\u7684\u66f4\u65b0\u4e3a\u51c6\uff0c\u4e00\u822c\u662f\u7cfb\u7edf\u81ea\u5df1\u7ef4\u62a4\uff0c\u4e5f\u53ef\u4ee5\u624b\u5de5\u5347\u7ea7\u6570\u636e\u5e93 \uff0c\u547d\u4ee4\u4e3a\uff1a updatedb","title":"7.12 find \u67e5\u627e\u6587\u4ef6"},{"location":"Linux/#713-grep","text":"Linux grep \u547d\u4ee4\u7528\u4e8e\u67e5\u627e\u6587\u4ef6\u91cc\u7b26\u5408\u6761\u4ef6\u7684\u5b57\u7b26\u4e32\u3002 grep \u6307\u4ee4\u7528\u4e8e\u67e5\u627e\u5185\u5bb9\u5305\u542b\u6307\u5b9a\u7684\u8303\u672c\u6837\u5f0f\u7684\u6587\u4ef6\uff0c\u5982\u679c\u53d1\u73b0\u67d0\u6587\u4ef6\u7684\u5185\u5bb9\u7b26\u5408\u6240\u6307\u5b9a\u7684\u8303\u672c\u6837\u5f0f\uff0c\u9884\u8bbe grep \u6307\u4ee4\u4f1a\u628a\u542b\u6709\u8303\u672c\u6837\u5f0f\u7684\u90a3\u4e00\u5217\u663e\u793a\u51fa\u6765\u3002\u82e5\u4e0d\u6307\u5b9a\u4efb\u4f55\u6587\u4ef6\u540d\u79f0\uff0c\u6216\u662f\u6240\u7ed9\u4e88\u7684\u6587\u4ef6\u540d\u4e3a - \uff0c\u5219 grep \u6307\u4ee4\u4f1a\u4ece\u6807\u51c6\u8f93\u5165\u8bbe\u5907\u8bfb\u53d6\u6570\u636e\u3002 grep [ -abcEFGhHilLnqrsvVwxy ][ -A<\u663e\u793a\u5217\u6570> ][ -B<\u663e\u793a\u5217\u6570> ][ -C<\u663e\u793a\u5217\u6570> ][ -d<\u8fdb\u884c\u52a8\u4f5c> ][ -e<\u8303\u672c\u6837\u5f0f> ][ -f<\u8303\u672c\u6587\u4ef6> ][ --help ][ \u8303\u672c\u6837\u5f0f ][ \u6587\u4ef6\u6216\u76ee\u5f55... ] \u793a\u4f8b: grep test *file \u7ed3\u679c\u5982\u4e0b: $ grep test test* #\u67e5\u627e\u524d\u7f00\u6709\u201ctest\u201d\u7684\u6587\u4ef6\u5305\u542b\u201ctest\u201d\u5b57\u7b26\u4e32\u7684\u6587\u4ef6 testfile1:This a Linux testfile! #\u5217\u51fatestfile1 \u6587\u4ef6\u4e2d\u5305\u542btest\u5b57\u7b26\u7684\u884c testfile_2:This is a linux testfile! #\u5217\u51fatestfile_2 \u6587\u4ef6\u4e2d\u5305\u542btest\u5b57\u7b26\u7684\u884c testfile_2:Linux test #\u5217\u51fatestfile_2 \u6587\u4ef6\u4e2d\u5305\u542btest\u5b57\u7b26\u7684\u884c","title":"7.13 grep \u6b63\u5219\u5339\u914d\u6587\u4ef6\u5185\u5bb9"},{"location":"Linux/#714-man","text":"man \u547d\u4ee4\u662fLinux\u4e0b\u7684\u5e2e\u52a9\u6307\u4ee4\uff0c\u901a\u8fc7 man \u6307\u4ee4\u53ef\u4ee5\u67e5\u770bLinux\u4e2d\u7684\u6307\u4ee4\u5e2e\u52a9\u3001\u914d\u7f6e\u6587\u4ef6\u5e2e\u52a9\u548c\u7f16\u7a0b\u5e2e\u52a9\u7b49\u4fe1\u606f\u3002 man [ options ] [ args ] -a \uff1a\u5728\u6240\u6709\u7684man\u5e2e\u52a9\u624b\u518c\u4e2d\u641c\u7d22\uff1b -f \uff1a\u7b49\u4ef7\u4e8ewhatis\u6307\u4ee4\uff0c\u663e\u793a\u7ed9\u5b9a\u5173\u952e\u5b57\u7684\u7b80\u77ed\u63cf\u8ff0\u4fe1\u606f\uff1b -P \uff1a\u6307\u5b9a\u5185\u5bb9\u65f6\u4f7f\u7528\u5206\u9875\u7a0b\u5e8f\uff1b -M \uff1a\u6307\u5b9aman\u624b\u518c\u641c\u7d22\u7684\u8def\u5f84\u3002","title":"7.14 man \u5e2e\u52a9\u547d\u4ee4"},{"location":"Linux/#715-diff","text":"Linux diff \u547d\u4ee4\u7528\u4e8e\u6bd4\u8f83\u6587\u4ef6\u7684\u5dee\u5f02\u3002 diff \u4ee5\u9010\u884c\u7684\u65b9\u5f0f\uff0c\u6bd4\u8f83\u6587\u672c\u6587\u4ef6\u7684\u5f02\u540c\u5904\u3002\u5982\u679c\u6307\u5b9a\u8981\u6bd4\u8f83\u76ee\u5f55\uff0c\u5219diff\u4f1a\u6bd4\u8f83\u76ee\u5f55\u4e2d\u76f8\u540c\u6587\u4ef6\u540d\u7684\u6587\u4ef6\uff0c\u4f46\u4e0d\u4f1a\u6bd4\u8f83\u5176\u4e2d\u5b50\u76ee\u5f55\u3002 diff [-abBcdefHilnNpPqrstTuvwy][-<\u884c\u6570>][-C <\u884c\u6570>][-D <\u5de8\u96c6\u540d\u79f0>][-I <\u5b57\u7b26\u6216\u5b57\u7b26\u4e32>][-S <\u6587\u4ef6>][-W <\u5bbd\u5ea6>][-x <\u6587\u4ef6\u6216\u76ee\u5f55>][-X <\u6587\u4ef6>][--help][--left-column][--suppress-common-line][\u6587\u4ef6\u6216\u76ee\u5f551][\u6587\u4ef6\u6216\u76ee\u5f552]","title":"7.15 diff\u6bd4\u8f83\u5dee\u5f02"},{"location":"Linux/#716-ps","text":"Linux ps \uff08\u82f1\u6587\u5168\u62fc\uff1aprocess status\uff09\u547d\u4ee4\u7528\u4e8e\u663e\u793a\u5f53\u524d\u8fdb\u7a0b\u7684\u72b6\u6001. ps [ options ] [ --help ] -A \u5217\u51fa\u6240\u6709\u7684\u884c\u7a0b -w \u663e\u793a\u52a0\u5bbd\u53ef\u4ee5\u663e\u793a\u8f83\u591a\u7684\u8d44\u8baf -au \u663e\u793a\u8f83\u8be6\u7ec6\u7684\u8d44\u8baf -aux \u663e\u793a\u6240\u6709\u5305\u542b\u5176\u4ed6\u4f7f\u7528\u8005\u7684\u884c\u7a0b","title":"7.16 ps\u67e5\u770b\u8fdb\u7a0b\u72b6\u6001"},{"location":"Linux/#717-top","text":"Linux top \u547d\u4ee4\u7528\u4e8e\u5b9e\u65f6\u663e\u793a process \u7684\u52a8\u6001\u3002 top [ - ] [ d delay ] [ q ] [ c ] [ S ] [ s ] [ i ] [ n ] [ b ]","title":"7.17 top\u4efb\u52a1\u7ba1\u7406\u5668"},{"location":"Linux/#718-tar","text":"Linux tar \uff08\u82f1\u6587\u5168\u62fc\uff1atape archive \uff09\u547d\u4ee4\u7528\u4e8e\u5907\u4efd\u6587\u4ef6\u3002 tar \u662f\u7528\u6765\u5efa\u7acb\uff0c\u8fd8\u539f\u5907\u4efd\u6587\u4ef6\u7684\u5de5\u5177\u7a0b\u5e8f\uff0c\u5b83\u53ef\u4ee5\u52a0\u5165\uff0c\u89e3\u5f00\u5907\u4efd\u6587\u4ef6\u5185\u7684\u6587\u4ef6\u3002 \u9996\u5148\u8981\u5f04\u6e05\u4e24\u4e2a\u6982\u5ff5\uff1a\u6253\u5305\u548c\u538b\u7f29\u3002\u6253\u5305\u662f\u6307\u5c06\u4e00\u5927\u5806\u6587\u4ef6\u6216\u76ee\u5f55\u53d8\u6210\u4e00\u4e2a\u603b\u7684\u6587\u4ef6\uff1b\u538b\u7f29\u5219\u662f\u5c06\u4e00\u4e2a\u5927\u7684\u6587\u4ef6\u901a\u8fc7\u4e00\u4e9b\u538b\u7f29\u7b97\u6cd5\u53d8\u6210\u4e00\u4e2a\u5c0f\u6587\u4ef6\u3002 \u4e3a\u4ec0\u4e48\u8981\u533a\u5206\u8fd9\u4e24\u4e2a\u6982\u5ff5\u5462\uff1f\u8fd9\u6e90\u4e8eLinux\u4e2d\u5f88\u591a\u538b\u7f29\u7a0b\u5e8f\u53ea\u80fd\u9488\u5bf9\u4e00\u4e2a\u6587\u4ef6\u8fdb\u884c\u538b\u7f29\uff0c\u8fd9\u6837\u5f53\u4f60\u60f3\u8981\u538b\u7f29\u4e00\u5927\u5806\u6587\u4ef6\u65f6\uff0c\u4f60\u5f97\u5148\u5c06\u8fd9\u4e00\u5927\u5806\u6587\u4ef6\u5148\u6253\u6210\u4e00\u4e2a\u5305\uff08tar\u547d\u4ee4\uff09\uff0c\u7136\u540e\u518d\u7528\u538b\u7f29\u7a0b\u5e8f\u8fdb\u884c\u538b\u7f29\uff08gzip bzip2\u547d\u4ee4\uff09\u3002 linux\u4e0b\u6700\u5e38\u7528\u7684\u6253\u5305\u7a0b\u5e8f\u5c31\u662ftar\u4e86\uff0c\u4f7f\u7528tar\u7a0b\u5e8f\u6253\u51fa\u6765\u7684\u5305\u6211\u4eec\u5e38\u79f0\u4e3atar\u5305\uff0ctar\u5305\u6587\u4ef6\u7684\u547d\u4ee4\u901a\u5e38\u90fd\u662f\u4ee5.tar\u7ed3\u5c3e\u7684\u3002\u751f\u6210tar\u5305\u540e\uff0c\u5c31\u53ef\u4ee5\u7528\u5176\u5b83\u7684\u7a0b\u5e8f\u6765\u8fdb\u884c\u538b\u7f29\u3002 \u6253\u5305\u547d\u4ee4\u793a\u4f8b: tar -cvf log.tar log2012.log tar -zcvf log.tar.gz log2012.log tar -jcvf log.tar.bz2 log2012.log zip FileName.zip DirName tar -cvf log.tar log2012.log \u4ec5\u6253\u5305\uff0c\u4e0d\u538b\u7f29. tar -zcvf log.tar.gz log2012.log \u6253\u5305\u540e\uff0c\u4ee5 gzip \u538b\u7f29 tar -jcvf log.tar.bz2 log2012.log \u6253\u5305\u540e\uff0c\u4ee5 bzip2 \u538b\u7f29 \u89e3\u5305\u793a\u4f8b: tar -zxvf file.tar.gz //\u89e3\u538btar.gz tar -jxvf file.tar.bz2 //\u89e3\u538b tar.bz2 unzip file.zip //\u89e3\u538bzip","title":"7.18 tar\u6253\u5305\u548c\u89e3\u5305"},{"location":"Linux/#8-linux","text":"command < input.txt 1 > output.txt 2 >err.txt command1 | command2 | command3 | ...","title":"8. Linux\u91cd\u5b9a\u5411\u548c\u7ba1\u9053"},{"location":"Linux/#81","text":"\u547d\u4ee4 \u8bf4\u660e command > file \u5c06\u8f93\u51fa\u91cd\u5b9a\u5411\u5230 file\u3002 command < file \u5c06\u8f93\u5165\u91cd\u5b9a\u5411\u5230 file\u3002 command >> file \u5c06\u8f93\u51fa\u4ee5\u8ffd\u52a0\u7684\u65b9\u5f0f\u91cd\u5b9a\u5411\u5230 file\u3002 n > file \u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e3a n \u7684\u6587\u4ef6\u91cd\u5b9a\u5411\u5230 file\u3002 n >> file \u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e3a n \u7684\u6587\u4ef6\u4ee5\u8ffd\u52a0\u7684\u65b9\u5f0f\u91cd\u5b9a\u5411\u5230 file\u3002 n >& m \u5c06\u8f93\u51fa\u6587\u4ef6 m \u548c n \u5408\u5e76\u3002 n <& m \u5c06\u8f93\u5165\u6587\u4ef6 m \u548c n \u5408\u5e76\u3002 << tag \u5c06\u5f00\u59cb\u6807\u8bb0 tag \u548c\u7ed3\u675f\u6807\u8bb0 tag \u4e4b\u95f4\u7684\u5185\u5bb9\u4f5c\u4e3a\u8f93\u5165\u3002 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a Unix/Linux \u547d\u4ee4\u8fd0\u884c\u65f6\u90fd\u4f1a\u6253\u5f00\u4e09\u4e2a\u6587\u4ef6\uff1a \u6807\u51c6\u8f93\u5165\u6587\u4ef6(stdin)\uff1astdin\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e3a0\uff0cUnix\u7a0b\u5e8f\u9ed8\u8ba4\u4ecestdin\u8bfb\u53d6\u6570\u636e\u3002 \u6807\u51c6\u8f93\u51fa\u6587\u4ef6(stdout)\uff1astdout \u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e3a1\uff0cUnix\u7a0b\u5e8f\u9ed8\u8ba4\u5411stdout\u8f93\u51fa\u6570\u636e\u3002 \u6807\u51c6\u9519\u8bef\u6587\u4ef6(stderr)\uff1astderr\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e3a2\uff0cUnix\u7a0b\u5e8f\u4f1a\u5411stderr\u6d41\u4e2d\u5199\u5165\u9519\u8bef\u4fe1\u606f\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c command > file \u5c06 stdout \u91cd\u5b9a\u5411\u5230 file\uff0c command < file \u5c06stdin \u91cd\u5b9a\u5411\u5230 file\u3002 \u5982\u679c\u5e0c\u671b stderr \u91cd\u5b9a\u5411\u5230 file\uff0c\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a $ command 2 > file \u5982\u679c\u5e0c\u671b stderr \u8ffd\u52a0\u5230 file \u6587\u4ef6\u672b\u5c3e\uff0c\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a $ command 2 >> file","title":"8.1 \u91cd\u5b9a\u5411"},{"location":"Linux/#82","text":"\u82e5\u60f3\u7edf\u8ba1 /etc\u76ee\u5f55\u4e0b\u6587\u4ef6\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u6b63\u5e38\u7684\u4f7f\u7528\u9700\u8981\u4e24\u4e2a\u6b65\u9aa4\u3002 \u663e\u7136\uff0cetc.txt \u4f5c\u4e3a\u4e2d\u95f4buffer\uff0c\u6ca1\u6709\u4e8c\u6b21\u4f7f\u7528\u7684\u9700\u8981\uff0c\u4e3a\u7701\u7565\u8fd9\u79cd\u9ebb\u70e6\uff0c\u540c\u65f6\u63d0\u9ad8\u4ee3\u7801\u6548\u7387\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7ba1\u9053\u8fd9\u4e2a\u529f\u80fd\u3002 \u5bf9\u6bd4\u4ee5\u4e0a\u4e24\u79cd\u65b9\u6cd5\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u7ba1\u9053\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u524d\u9762\u7684\u8fdb\u7a0b\u4ee5\u5199\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u540e\u9762\u7684\u8fdb\u7a0b\u4ee5\u8bfb\u65b9\u5f0f\u6253\u5f00\u3002\u8fd9\u6837\u524d\u9762\u5199\u5b8c\u540e\u9762\u8bfb\uff0c\u4e8e\u662f\u5c31\u5b9e\u73b0\u4e86\u901a\u4fe1\u3002\u5b9e\u9645\u4e0a\u7ba1\u9053\u7684\u8bbe\u8ba1\u4e5f\u662f\u9075\u5faaUNIX\u7684\u201c\u4e00\u5207\u7686\u6587\u4ef6\u201d\u8bbe\u8ba1\u539f\u5219\u7684\uff0c\u5b83\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u6587\u4ef6\u3002Linux\u7cfb\u7edf\u76f4\u63a5\u628a\u7ba1\u9053\u5b9e\u73b0\u6210\u4e86\u4e00\u79cd\u6587\u4ef6\u7cfb\u7edf\uff0c\u501f\u52a9VFS\u7ed9\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u64cd\u4f5c\u63a5\u53e3\u3002 \u867d\u7136\u5b9e\u73b0\u5f62\u6001\u4e0a\u662f\u6587\u4ef6\uff0c\u4f46\u662f\u7ba1\u9053\u672c\u8eab\u5e76\u4e0d\u5360\u7528\u78c1\u76d8\u6216\u8005\u5176\u4ed6\u5916\u90e8\u5b58\u50a8\u7684\u7a7a\u95f4\u3002\u5728Linux\u7684\u5b9e\u73b0\u4e0a\uff0c\u5b83\u5360\u7528\u7684\u662f\u5185\u5b58\u7a7a\u95f4\u3002\u6240\u4ee5\uff0cLinux\u4e0a\u7684\u7ba1\u9053\u5c31\u662f\u4e00\u4e2a\u64cd\u4f5c\u65b9\u5f0f\u4e3a\u6587\u4ef6\u7684\u5185\u5b58\u7f13\u51b2\u533a\u3002","title":"8.2 \u7ba1\u9053"},{"location":"env/","text":"\u5b9e\u9a8c\u5e73\u53f0\u642d\u5efa\u4ee5\u53ca\u73af\u5883\u914d\u7f6e \u00b6 \u672c\u8bfe\u7a0b\u5b9e\u9a8c\u63d0\u4f9b\u4e86 \u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0 \u4f9b\u540c\u5b66\u4eec\u505a\u5b9e\u9a8c\u3002\u5f53\u7136\uff0c\u540c\u5b66\u4eec\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u81ea\u5df1\u90e8\u7f72\u5b9e\u9a8c\u73af\u5883\uff0c\u4f53\u9a8c\u4e00\u4e0b\u81ea\u5df1\u52a8\u624b\u7684\u4e50\u8da3:-) 1. \u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0 \u00b6 \u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u5df2\u7ecf\u5c06XV6\u5b9e\u9a8c\u73af\u5883\u90e8\u7f72\u5728\u5b9e\u9a8c\u4e2d\u5fc3\u7684\u670d\u52a1\u5668\u4e0a\uff0c\u6211\u4eec\u628a\u6240\u6709\u4f9d\u8d56\u7684\u914d\u7f6e\u90fd\u5df2\u7ecf\u4e8b\u5148\u642d\u5efa\u5b8c\u6bd5\u3002\u65e0\u8bba\u4f60\u7684\u7535\u8111\u6027\u80fd\u5982\u4f55\uff0c\u65e0\u8bba\u4f60\u662f\u5728\u5bbf\u820d\u3001\u5b9e\u9a8c\u5ba4\u8fd8\u662f\u81ea\u4e60\u5ba4\uff0c\u53ea\u8981\u4f60\u8fd8\u80fd\u8fde\u4e0a\u6821\u56ed\u7f51\uff0c\u4f60\u5c31\u80fd\u5b8c\u6210\u4f60\u7684\u5b9e\u9a8c\u3002\u5177\u4f53\u8be6\u89c1 \u8fdc\u7a0b\u5b9e\u9a8c\u73af\u5883\u4f7f\u7528\u6307\u5357 \u3002 Warning \u867d\u7136\u6211\u4eec\u5df2\u7ecf\u505a\u4e86\u4e00\u4e9b\u65b9\u6848\u4fdd\u8bc1\u8fdc\u7a0b\u73af\u5883\u7684\u53ef\u9760\u6027\uff0c\u4f46\u5728\u67d0\u4e9b\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u4e5f\u4e0d\u80fd\u786e\u4fdd\u4e0d\u51fa\u6545\u969c\uff0c\u4e3a\u5b89\u5168\u8d77\u89c1\uff0c\u5efa\u8bae\u540c\u5b66\u4eec\u5c06\u4ee3\u7801\u53ca\u65f6\u4e0a\u4f20\u5230git\u4ed3\u5e93\u6216\u8005\u4e0b\u8f7d\u5230\u672c\u5730\u4fdd\u5b58\u3002 2. \u81ea\u884c\u90e8\u7f72\u7684\u5b9e\u9a8c\u73af\u5883 \u00b6 \u7528\u4e8e\u90e8\u7f72\u5b9e\u9a8c\u5e73\u53f0\u7684\u5b9e\u9a8c\u5de5\u5177 \u5bf9\u4e8e\u672c\u8bfe\u7a0b\u7684\u5b9e\u9a8c\u5e73\u53f0\u642d\u5efa\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230\u51e0\u4e2a\u5de5\u5177\uff1a VirtualBox\u865a\u62df\u673a \u5982\u679c\u4f60\u7684\u7535\u8111\u88c5\u7684\u662fWindows\u7cfb\u7edf\uff0c\u90a3\u4e48\u5fc5\u987b\u8981\u88c5\u4e00\u4e2a\u80fd\u8fd0\u884cLinux\u7cfb\u7edf\u7684\u865a\u62df\u673a\u3002VirtualBox\u662f\u4e00\u6b3e\u5f00\u6e90\u865a\u62df\u673a\u8f6f\u4ef6\uff0c\u76f8\u5bf9VMWare\u7b49\u5176\u4ed6\u865a\u62df\u673a\u6765\u8bf4\uff0c\u901f\u5ea6\u7a0d\u6162\uff0c\u7075\u6d3b\u6027\u8f83\u5dee\uff0c\u4f46\u514d\u8d39\uff01 Linux\u53d1\u884c\u7248 Linux\u53d1\u884c\u7248\u662f\u7531Linux\u5185\u6838\u3001GNU\u5de5\u5177\u3001\u9644\u52a0\u8f6f\u4ef6\u548c\u8f6f\u4ef6\u5305\u7ba1\u7406\u5668\u7ec4\u6210\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\u6240\u8c13\u201c\u53d1\u884c\u201d\uff0c\u662f\u7531\u67d0\u4e9b\u673a\u6784\u201c\u53d1\u884c\u201d\u4e86Linux\u5185\u6838\u4ee5\u53ca\u6240\u6709\u5fc5\u8981\u7684\u8f6f\u4ef6\u53ca\u5b9e\u7528\u7a0b\u5e8f\uff0c\u4f7f\u5176\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u4f7f\u7528\u3002\u4e3b\u6d41\u7684Linux\u53d1\u884c\u7248\u6709Ubuntu\u3001Debian\u3001Fedora\u3001Centos\u7b49\uff0c\u56fd\u4ea7Linux\u53d1\u884c\u7248\u6709openEuler\u3001Deepin\u7b49\uff0c\u4e3a\u652f\u6301\u56fd\u4ea7Linux\u53d1\u884c\u7248\uff0c\u6211\u4eec\u5efa\u8bae\u540c\u5b66\u4eec\u4f7f\u7528\u534e\u4e3a\u516c\u53f8\u53d1\u884c\u7684 openEuler \u4f5c\u4e3a\u5b9e\u9a8c\u5e73\u53f0\uff0c\u4ee5\u6b64\u63ed\u5f00openEuler\u7684\u795e\u79d8\u9762\u7eb1:-) RISC-V\u5de5\u5177\u94fe \u5305\u62ec\u4e00\u7cfb\u5217\u4ea4\u53c9\u7f16\u8bd1\u7684\u5de5\u5177\uff0c\u7528\u4e8e\u628a\u6e90\u7801\u7f16\u8bd1\u6210\u673a\u5668\u7801\uff0c\u5982gcc\u3001binutils\u3001glibc\u7b49\u3002 QEMU\u6a21\u62df\u5668 qemu\u6a21\u62df\u5668\u7528\u4e8e\u5728\u7535\u8111\uff08X86\uff09\u4e0a\u6a21\u62dfRISC-V\u67b6\u6784\u7684CPU\u3002\u5728\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u5c06\u901a\u8fc7qemu\u6a21\u62df\u5668\u6765\u89c2\u5bdfxv6\u7684\u8fd0\u884c\u8fc7\u7a0b\u3002QEMU\u672c\u8d28\u4e0a\u662f\u901a\u8fc7C\u8bed\u8a00\u6765\u6a21\u62df\u4eff\u771fRISC-V\u5904\u7406\u5668\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2aCPU\u6838\uff0cQEMU\u90fd\u4f1a\u8fd0\u884c\u8fd9\u4e48\u4e00\u4e2a\u5faa\u73af\uff1a (1)\u53d6\u6307\uff1a\u8bfb\u53d64/8\u5b57\u8282\u7684RISC-V\u6307\u4ee4\uff1b (2)\u8bd1\u7801\uff1a\u89e3\u6790RISC-V\u6307\u4ee4\uff0c\u5e76\u627e\u51fa\u5bf9\u5e94\u7684OP code\uff1b (3)\u6267\u884c\uff1a\u5728\u8f6f\u4ef6\u4e2d\u6267\u884c\u76f8\u5e94\u7684\u6307\u4ee4\u3002 QEMU\u4e3b\u5faa\u73af\u91cc\u4e5f\u9700\u8981\u6709\u5bc4\u5b58\u5668\u6587\u4ef6\uff0c\u7528\u4e8e\u7ef4\u62a4\u5bc4\u5b58\u5668\u7684\u72b6\u6001\u3002\u56de\u60f3\u6211\u4eec\u5728\u300a\u8ba1\u7b97\u673a\u8bbe\u8ba1\u4e0e\u5b9e\u8df5\u300b\u7684CPU\u5b9e\u9a8c\uff0c\u662f\u4e0d\u662f\u6709\u4f3c\u66fe\u76f8\u8bc6\u7684\u611f\u89c9:-) \u5bf9\u4e8e\u60f3\u5728\u81ea\u5df1\u7684\u7535\u8111\u4e0a\u5b89\u88c5\u5b9e\u9a8c\u73af\u5883\u7684\u540c\u5b66\uff0c\u672c\u5b9e\u9a8c\u63d0\u4f9b\u4e86\u4e24\u79cd\u5b89\u88c5\u65b9\u6cd5\uff1a \u672c\u5730\u865a\u62df\u673a \u81ea\u884c\u90e8\u7f72\u5b9e\u9a8c\u73af\u5883 2.1 \u672c\u5730\u865a\u62df\u673a \u00b6 \u672c\u5b9e\u9a8c\u63d0\u4f9bVirtualBox + openEuler\u7684\u955c\u50cf\uff0c\u6211\u4eec\u4e5f\u5e2e\u4f60\u628a\u6240\u6709\u4f9d\u8d56\u7684\u914d\u7f6e\u90fd\u5df2\u7ecf\u4e8b\u5148\u642d\u5efa\u5b8c\u6bd5\uff0c\u4f60\u53ea\u9700\u8981\u4e0b\u8f7d\u3001\u5bfc\u5165\u865a\u62df\u673a\u5373\u53ef\u4f7f\u7528\u3002\u6b65\u9aa4\u5982\u4e0b\uff1a Step1 . Virtualbox\u548copenEuler\u955c\u50cf\u4e0b\u8f7d\uff1a http://10.249.14.14:8000/index.php/s/7vlEVZPKaMTIpi0 Virtualbox\u5b89\u88c5\u6587\u4ef6\uff1a VirtualBox-6.1.10-138449-Win.exe openEuler\u955c\u50cf\uff1aopenEuler.zip Step2 . VirtualBox\u5b89\u88c5\u4ee5\u53ca\u955c\u50cf\u5bfc\u5165\u3002 \u5b89\u88c5\u597dVirtualBox\u540e\uff0c\u89e3\u538bopenEuler.zip\uff0c\u76f4\u63a5\u53cc\u51fbopenEuler(.vbox)\u6587\u4ef6\uff0c\u5373\u53ef\u6253\u5f00openEuler\u7cfb\u7edf\u865a\u62df\u673a\uff0c \u955c\u50cf\u7cfb\u7edf\u63d0\u4f9b\u6709\u4e24\u4e2a\u7528\u6237\uff0c\u5927\u5bb6\u6700\u597d\u4f7f\u7528cs\u7528\u6237\u767b\u5f55\u3002 \u7528\u6237\u540d \uff1aroot\uff0c\u5bc6\u7801\uff1aopeneuler@123 \u7528\u6237\u540d \uff1acs\uff0c\u5bc6\u7801\uff1aopeneuler@123 Step3 . \u4e0b\u8f7d\u8fd0\u884cxv6\u4ee3\u7801 \u8be6\u89c1 2.2.4.4 \u8fd0\u884cXV6 2.2 \u81ea\u884c\u90e8\u7f72\u5b9e\u9a8c\u73af\u5883 \u00b6 \u65e0\u8bba\u662f\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\uff0c\u8fd8\u662f\u672c\u5730\u865a\u62df\u673a\uff0c\u90fd\u662f\u6211\u4eec\u5df2\u7ecf\u90e8\u7f72\u597d\u7684\u5b9e\u9a8c\u73af\u5883\uff0c\u4f60\u53ea\u9700\u8981\u6309\u7167\u5b9e\u9a8c\u8981\u6c42\u7f16\u5199\u76f8\u5e94\u7684\u4ee3\u7801\u5c31\u884c\u3002\u4f46\u5b9e\u9645\u4e0a\uff0c\u4f60\u65e0\u6cd5\u77e5\u9053\u9879\u76ee\u91cc\u7684\u6240\u6709\u7ec6\u8282\uff0c\u96be\u4ee5\u638c\u63e1\u6574\u4e2a\u9879\u76ee\u7684\u67b6\u6784\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5e0c\u671b\u540c\u5b66\u4eec\u80fd\u591f\u81ea\u5df1\u52a8\u624b\u642d\u5efa\u5b9e\u9a8c\u73af\u5883\uff0c\u8fd9\u6837\u4f60\u5f97\u5230\u7684\u6536\u83b7\u624d\u662f\u6700\u5927\u7684:-) \u4f60\u9700\u81ea\u884c\u4e0b\u8f7d\u5e76\u5b89\u88c5\u6240\u6709\u5de5\u5177\u94fe\uff08\u6709\u7684\u5de5\u5177\u9700\u8981\u4f60\u81ea\u5df1\u7f16\u8bd1\uff09\uff0c\u4e0b\u5217\u6b65\u9aa4\u4e3b\u8981\u4ee5openEuler\u4e3a\u4f8b\uff1a \u6ce8\u610f\u4e8b\u9879 \u5982\u679c\u4f60\u5df2\u7ecf\u88c5\u6709ubuntu\u3001Centos\u6216Debian\u7b49\u5176\u4ed6Linux\u7cfb\u7edf\uff0c\u4f60\u53ef\u4ee5\u8df3\u8fc7\u672c\u5c0f\u8282\uff0c\u76f4\u63a5\u5b89\u88c5XV6\u7684\u8fd0\u884c\u73af\u5883\uff0c\u5177\u4f53\u5b89\u88c5\u6b65\u9aa4\u8bf7\u53c2\u8003: https://pdos.csail.mit.edu/6.S081/2020/tools.html 2.2.1 \u521b\u5efa\u865a\u62df\u673a \u00b6 \u672c\u8282\u5047\u5b9a\u4f60\u5df2\u7ecf\u5b89\u88c5\u597dOracle VM VirtualBox \u8f6f\u4ef6\uff0c\u6253\u5f00\u8be5\u8f6f\u4ef6\uff0c\u9009\u62e9\u201c\u65b0\u5efa\u201d\u6309\u94ae\uff0c\u8fdb\u884c\u521b\u5efa\u865a\u62df\u673a\u3002 \u521b\u5efa\u865a\u62df\u673a\u65f6\uff0c\u8bf7\u9009\u62e9Linux\u7c7b\u578b\u548c64-bit\u7248\u672c\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u5b89\u88c5\u5728C\u76d8\uff1a \u4e3a\u4e86\u5728\u8fd0\u884c\u7cfb\u7edf\u65f6\u6709\u8f83\u5feb\u7684\u901f\u5ea6\uff0c\u5185\u5b58\u8bbe\u7f6e\u4e3a8GB\uff08\u6216\u4ee5\u4e0a\uff09\uff1a \u73b0\u5728\u5c31\u521b\u5efa\u786c\u76d8\uff1a \u8fd9\u91cc\u786c\u76d8\u7c7b\u578b\u4e3aVHD\uff1a \u78c1\u76d8\u5bb9\u91cf\u201c\u52a8\u6001\u5206\u914d\u201d\uff1a \u4e3a\u4fdd\u8bc1\u8db3\u591f\u7684\u7a7a\u95f4\uff0c\u4e3a\u5bbf\u4e3b\u673a\u914d\u7f6e20GB\u5927\u5c0f\u7684\u5bb9\u91cf\uff1a 2.2.2 \u5bf9\u865a\u62df\u673a\u7684\u90e8\u5206\u914d\u7f6e\u8fdb\u884c\u8c03\u6574 \u00b6 \u7cfb\u7edf\u4fe1\u606f\u6982\u89c8\uff1a \u4ec5\u4fdd\u7559\u4ece\u5149\u9a71\u548c\u786c\u76d8\u542f\u52a8\uff1a \u6ce8\u610f\u5c06CPU\u81f3\u5c11\u8bbe\u7f6e\u62104\u6838\u4ee5\u63d0\u9ad8\u7cfb\u7edf\u7684\u8fd0\u884c\u901f\u5ea6\uff1a \u8bbe\u7f6e\u4e24\u5f20\u7f51\u5361\uff0c\u4e00\u5f20\u65f6\u9ed8\u8ba4\u7684NAT\u6a21\u5f0f\uff08\u4ee5\u4fbf\u4ece\u865a\u62df\u673a\u4e2d\u8bbf\u95ee\u5916\u7f51\uff09\uff1a \u4e00\u5f20\u662fHost-only\u6a21\u5f0f\uff08\u4ee5\u4fbf\u4ece\u8be5\u865a\u62df\u673a\u7684\u5bbf\u4e3b\u673a\u8bbf\u95ee\u5b83\uff09\uff1a \u8fd9\u662f\u6b64\u65f6\u7684\u6574\u4e2a\u865a\u62df\u673a\u6982\u51b5\uff1a 2.2.3 \u5b89\u88c5openEuler\u64cd\u4f5c\u7cfb\u7edf \u00b6 2.2.3.1 \u5c06openEuler20.09_x86-64\u955c\u50cf\u88c5\u8f7d\u5230\u5149\u9a71 \u00b6 \u9700\u8981\u4e0b\u8f7d\u597d\u64cd\u4f5c\u7cfb\u7edf\u955c\u50cf\u5230\u81ea\u5df1\u7684\u672c\u5730\u7535\u8111\uff1a \u2022 openEuler 20.09\u5b89\u88c5\u955c\u50cf\uff1a https://repo.openeuler.org/openEuler-20.09/ISO/x86_64/openEuler-20.09-x86_64-dvd.iso \u4e0b\u8f7d\u5b8c\u6210\u540e\uff0c\u6253\u5f00VirtualBox\u865a\u62df\u673a\u3002 \u70b9\u51fb\u5982\u4e0a\u56fe\u6240\u793a\u201copenEuler.vhd\u201d\uff08\u5149\u9a71\uff09\u6587\u5b57\u6309\u94ae\u3002 \u70b9\u51fb\u201c\u9009\u62e9\u865a\u62df\u76d8\u201d\u7136\u540e\u9009\u62e9\u5148\u524d\u81ea\u5df1\u4e0b\u8f7d\u5230\u672c\u5730\u78c1\u76d8\u7684openEuler\u5b89\u88c5\u955c\u50cf\u3002 \u64cd\u4f5c\u5b8c\u6bd5\u540e\u5149\u9a71\u4e2d\u4f1a\u663e\u793a\u8be5\u955c\u50cf\u7684\u540d\u79f0\u3002 2.2.3.2 \u5b89\u88c5\u64cd\u4f5c\u7cfb\u7edf \u00b6 \u542f\u52a8\u865a\u62df\u673a\uff0c\u79fb\u52a8\u952e\u76d8\u7684\u4e0a\u4e0b\u952e\u9009\u62e9\u201cInstall openEuler 20.09\u201d\u83dc\u5355\u9879\u5e76\u6309\u4e0b\u56de\u8f66\u952e\u8fdb\u5165\u5b89\u88c5\u754c\u9762\uff1a \u9009\u62e9\u82f1\u6587\u7248\u5b89\u88c5\uff1a \u8fdb\u5165\u5982\u4e0b\u754c\u9762 \u4fdd\u6301\u5b89\u88c5\u78c1\u76d8\u7684\u9ed8\u8ba4\u8bbe\u7f6e\uff1a \u5176\u4ed6\u9009\u9879\u4fdd\u6301\u9ed8\u8ba4\u8bbe\u7f6e\uff1a \u8bbe\u7f6eRoot Password \u6ce8\u610f\uff1a\u53ea\u9700\u8981\u8bbe\u7f6eroot\u8d26\u6237\u5bc6\u7801\u5373\u53ef\uff0croot\u8d26\u6237\u5bc6\u7801\u5fc5\u987b\u8bbe\u7f6e\u3002 \u63a8\u8350\u5bc6\u7801\uff1a openeuler@123 \u70b9\u51fb\u201c\u5f00\u59cb\u5b89\u88c5\u201d\u6309\u94ae\u5f00\u59cb\u5b89\u88c5\uff1a \u5b89\u88c5\u5b8c\u6210\u540e\u70b9\u51fb\u201c\u91cd\u542f\u7cfb\u7edf\u201d\u6309\u94ae\uff1a \u518d\u6b21\u8fdb\u5165\u83dc\u5355\u9009\u62e9\u754c\u9762\u65f6\uff0c\u79fb\u52a8\u952e\u76d8\u7684\u4e0a\u4e0b\u952e\u4ee5\u5c06\u7cfb\u7edf\u505c\u7559\u5728\u8be5\u754c\u9762\uff1a \u8fd9\u65f6\u9700\u8981\u5173\u673a\u865a\u62df\u673a\uff1a \u79fb\u51fa\u5149\u9a71\u4e2d\u7684\u955c\u50cf\uff1a \u82e5\u63d0\u793a\u662f\u5426\u5f3a\u884c\u79fb\u51fa\u5219\u9009\u62e9\u5f3a\u884c\u79fb\u51fa\uff1a \u91cd\u542f\u865a\u62df\u673a\uff0c\u7cfb\u7edf\u8fdb\u5165openEuler\u542f\u52a8\u754c\u9762\uff0c\u7528\u4e0a\u4e0b\u952e\u9009\u62e9\u7b2c\u4e00\u4e2a\u83dc\u5355\u9879\u5e76\u6309\u56de\u8f66\u952e\u542f\u52a8\uff08\u9ed8\u8ba4\u4e5f\u662f\u4ee5\u7b2c\u4e00\u4e2a\u83dc\u5355\u9879\u542f\u52a8\uff09\uff1a \u5148\u5728VirtualBox\u4e2d\u4ee5root\u7528\u6237\u767b\u5f55openEuler\u64cd\u4f5c\u7cfb\u7edf\uff1a \u81f3\u6b64\uff0c\u5df2\u5b8c\u6210\u865a\u62df\u673aopenEuler\u5b89\u88c5\u3002 2.2.4 XV6\u73af\u5883\u914d\u7f6e \u00b6 2.2.4.1 \u5b89\u88c5\u4f9d\u8d56\u5305 \u00b6 \u5b89\u88c5openEuler\u63d0\u4f9b\u7684Development Tools \u6ce8\u610f\u4e8b\u9879 \u7b2c\u4e00\u4e2a\u5b57\u7b26\u201c#\u201d\u6216\"$\"\u4e0d\u9700\u8981\u8f93\u5165\uff0c\u53ea\u9700\u8981\u8f93\u5165\u201c#\u201d\u6216\"$\"\u540e\u7684\u5b57\u7b26\u4e32\u3002 # yum group install -y \"Development Tools\" \u5b89\u88c5XV6\u9700\u8981\u7528\u5230\u7684\u4f9d\u8d56\u5305 # yum install autoconf automake curl gawk bison flex texinfo gperf libtool patchutils bc expat-devel pixman-devel 2.2.4.2 \u5b89\u88c5RISC-V GNU Compiler Toolchain \u00b6 $ git clone --recursive https://github.com/riscv/riscv-gnu-toolchain \u5982\u679c\u4e0b\u8f7d\u592a\u6162\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u5df2\u7ecf\u4e0b\u8f7d\u597d\u7684\u5305\u3002 \u4e0b\u8f7d\u5730\u5740\uff1a http://10.249.14.14:8000/index.php/s/7vlEVZPKaMTIpi0 \uff0c \u9009\u62e9riscv-gnu-toolchain.tar.gz\u3002\u4e0b\u8f7d\u5b8c\u6210\u540e\uff0c\u9700\u8981\u5c06riscv-gnu-toolchain.tar.gz\u4e0a\u4f20\u81f3Linux\u7cfb\u7edf\u4e2d\uff0c\u4e0a\u4f20\u65b9\u6cd5\u8be6\u89c1MobaXterm(SSH\u5de5\u5177)\u8fd9\u4e00\u8282\u4e2d\u7684 \u6587\u4ef6\u4f20\u8f93SFTP\u670d\u52a1 \u3002 \u89e3\u538b\u547d\u4ee4 $ tar zxvf riscv-gnu-toolchain.tar.gz \u89e3\u538b\u540e\u5b89\u88c5 $ cd riscv-gnu-toolchain $ ./configure --prefix = /usr/local $ make $ cd .. $ rm riscv-gnu-toolchain.tar.gz rm: remove regular file 'riscv-gnu-toolchain.tar.gz'? y 2.2.4.3 \u5b89\u88c5QEMU \u00b6 \u4e0b\u8f7dQEMU $ wget https://download.qemu.org/qemu-5.1.0.tar.xz $ tar xf qemu-5.1.0.tar.xz \u5b89\u88c5 $ cd qemu-5.1.0 $ ./configure --disable-kvm --disable-werror --prefix = /usr/local --target-list = \"riscv64-softmmu\" $ make $ make install $ cd .. $ rm qemu-5.1.0.tar.xz rm: remove regular file 'qemu-5.1.0.tar.xz'? y \u68c0\u67e5\u5b89\u88c5\u662f\u5426\u6210\u529f $ riscv64-unknown-elf-gcc --version riscv64-unknown-elf-gcc (GCC) 10.2.0 ... $ qemu-system-riscv64 --version QEMU emulator version 5.1.0 2.2.4.4 \u8fd0\u884cXV6 \u00b6 $ git clone https://gitee.com/hitsz-lab/xv6-labs-2020.git Cloning into 'xv6-labs-2020'... ... # \u5982\u679c\u662f\u521d\u6b21\u8fd0\u884cgit\uff0c\u8bbe\u7f6e\u4f60\u81ea\u5df1\u7684gitee\u7528\u6237\u4fe1\u606f $ git config --global user.email \"you@example.com\" $ git config --global user.name \"Your Name\" ... $ cd xv6-labs-2020 $ git checkout util $ make qemu # ... lots of output ... init: starting sh $ \u5f53\u53ef\u4ee5\u770b\u5230\u201cinit: starting sh\u201d\u7684\u5b57\u6837\u8868\u793axv6\u5df2\u7ecf\u6b63\u5e38\u542f\u52a8\uff0c\u6b64\u65f6\u5728\u201c$\u201d\u63d0\u793a\u7b26\u540e\u53ef\u8f93\u5165xv6\u652f\u6301\u7684shell\u547d\u4ee4\u3002 QEMU\u9000\u51fa\u65b9\u6cd5 \u5148\u6309\u201cCtrl+a\u201d\u7ec4\u5408\u952e\uff0c\u63a5\u7740\u5168\u90e8\u677e\u5f00\uff0c\u518d\u6309\u4e0b\u201cx\u201d\u952e \u81f3\u6b64\uff0cXV6\u5df2\u7ecf\u80fd\u591f\u6b63\u5e38\u8fd0\u884c\u4e86:-)","title":"\u5b9e\u9a8c\u5e73\u53f0\u4ee5\u53ca\u73af\u5883\u914d\u7f6e"},{"location":"env/#_1","text":"\u672c\u8bfe\u7a0b\u5b9e\u9a8c\u63d0\u4f9b\u4e86 \u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0 \u4f9b\u540c\u5b66\u4eec\u505a\u5b9e\u9a8c\u3002\u5f53\u7136\uff0c\u540c\u5b66\u4eec\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u81ea\u5df1\u90e8\u7f72\u5b9e\u9a8c\u73af\u5883\uff0c\u4f53\u9a8c\u4e00\u4e0b\u81ea\u5df1\u52a8\u624b\u7684\u4e50\u8da3:-)","title":"\u5b9e\u9a8c\u5e73\u53f0\u642d\u5efa\u4ee5\u53ca\u73af\u5883\u914d\u7f6e"},{"location":"env/#1","text":"\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u5df2\u7ecf\u5c06XV6\u5b9e\u9a8c\u73af\u5883\u90e8\u7f72\u5728\u5b9e\u9a8c\u4e2d\u5fc3\u7684\u670d\u52a1\u5668\u4e0a\uff0c\u6211\u4eec\u628a\u6240\u6709\u4f9d\u8d56\u7684\u914d\u7f6e\u90fd\u5df2\u7ecf\u4e8b\u5148\u642d\u5efa\u5b8c\u6bd5\u3002\u65e0\u8bba\u4f60\u7684\u7535\u8111\u6027\u80fd\u5982\u4f55\uff0c\u65e0\u8bba\u4f60\u662f\u5728\u5bbf\u820d\u3001\u5b9e\u9a8c\u5ba4\u8fd8\u662f\u81ea\u4e60\u5ba4\uff0c\u53ea\u8981\u4f60\u8fd8\u80fd\u8fde\u4e0a\u6821\u56ed\u7f51\uff0c\u4f60\u5c31\u80fd\u5b8c\u6210\u4f60\u7684\u5b9e\u9a8c\u3002\u5177\u4f53\u8be6\u89c1 \u8fdc\u7a0b\u5b9e\u9a8c\u73af\u5883\u4f7f\u7528\u6307\u5357 \u3002 Warning \u867d\u7136\u6211\u4eec\u5df2\u7ecf\u505a\u4e86\u4e00\u4e9b\u65b9\u6848\u4fdd\u8bc1\u8fdc\u7a0b\u73af\u5883\u7684\u53ef\u9760\u6027\uff0c\u4f46\u5728\u67d0\u4e9b\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u4e5f\u4e0d\u80fd\u786e\u4fdd\u4e0d\u51fa\u6545\u969c\uff0c\u4e3a\u5b89\u5168\u8d77\u89c1\uff0c\u5efa\u8bae\u540c\u5b66\u4eec\u5c06\u4ee3\u7801\u53ca\u65f6\u4e0a\u4f20\u5230git\u4ed3\u5e93\u6216\u8005\u4e0b\u8f7d\u5230\u672c\u5730\u4fdd\u5b58\u3002","title":"1. \u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0"},{"location":"env/#2","text":"\u7528\u4e8e\u90e8\u7f72\u5b9e\u9a8c\u5e73\u53f0\u7684\u5b9e\u9a8c\u5de5\u5177 \u5bf9\u4e8e\u672c\u8bfe\u7a0b\u7684\u5b9e\u9a8c\u5e73\u53f0\u642d\u5efa\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230\u51e0\u4e2a\u5de5\u5177\uff1a VirtualBox\u865a\u62df\u673a \u5982\u679c\u4f60\u7684\u7535\u8111\u88c5\u7684\u662fWindows\u7cfb\u7edf\uff0c\u90a3\u4e48\u5fc5\u987b\u8981\u88c5\u4e00\u4e2a\u80fd\u8fd0\u884cLinux\u7cfb\u7edf\u7684\u865a\u62df\u673a\u3002VirtualBox\u662f\u4e00\u6b3e\u5f00\u6e90\u865a\u62df\u673a\u8f6f\u4ef6\uff0c\u76f8\u5bf9VMWare\u7b49\u5176\u4ed6\u865a\u62df\u673a\u6765\u8bf4\uff0c\u901f\u5ea6\u7a0d\u6162\uff0c\u7075\u6d3b\u6027\u8f83\u5dee\uff0c\u4f46\u514d\u8d39\uff01 Linux\u53d1\u884c\u7248 Linux\u53d1\u884c\u7248\u662f\u7531Linux\u5185\u6838\u3001GNU\u5de5\u5177\u3001\u9644\u52a0\u8f6f\u4ef6\u548c\u8f6f\u4ef6\u5305\u7ba1\u7406\u5668\u7ec4\u6210\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\u6240\u8c13\u201c\u53d1\u884c\u201d\uff0c\u662f\u7531\u67d0\u4e9b\u673a\u6784\u201c\u53d1\u884c\u201d\u4e86Linux\u5185\u6838\u4ee5\u53ca\u6240\u6709\u5fc5\u8981\u7684\u8f6f\u4ef6\u53ca\u5b9e\u7528\u7a0b\u5e8f\uff0c\u4f7f\u5176\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u4f7f\u7528\u3002\u4e3b\u6d41\u7684Linux\u53d1\u884c\u7248\u6709Ubuntu\u3001Debian\u3001Fedora\u3001Centos\u7b49\uff0c\u56fd\u4ea7Linux\u53d1\u884c\u7248\u6709openEuler\u3001Deepin\u7b49\uff0c\u4e3a\u652f\u6301\u56fd\u4ea7Linux\u53d1\u884c\u7248\uff0c\u6211\u4eec\u5efa\u8bae\u540c\u5b66\u4eec\u4f7f\u7528\u534e\u4e3a\u516c\u53f8\u53d1\u884c\u7684 openEuler \u4f5c\u4e3a\u5b9e\u9a8c\u5e73\u53f0\uff0c\u4ee5\u6b64\u63ed\u5f00openEuler\u7684\u795e\u79d8\u9762\u7eb1:-) RISC-V\u5de5\u5177\u94fe \u5305\u62ec\u4e00\u7cfb\u5217\u4ea4\u53c9\u7f16\u8bd1\u7684\u5de5\u5177\uff0c\u7528\u4e8e\u628a\u6e90\u7801\u7f16\u8bd1\u6210\u673a\u5668\u7801\uff0c\u5982gcc\u3001binutils\u3001glibc\u7b49\u3002 QEMU\u6a21\u62df\u5668 qemu\u6a21\u62df\u5668\u7528\u4e8e\u5728\u7535\u8111\uff08X86\uff09\u4e0a\u6a21\u62dfRISC-V\u67b6\u6784\u7684CPU\u3002\u5728\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u5c06\u901a\u8fc7qemu\u6a21\u62df\u5668\u6765\u89c2\u5bdfxv6\u7684\u8fd0\u884c\u8fc7\u7a0b\u3002QEMU\u672c\u8d28\u4e0a\u662f\u901a\u8fc7C\u8bed\u8a00\u6765\u6a21\u62df\u4eff\u771fRISC-V\u5904\u7406\u5668\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2aCPU\u6838\uff0cQEMU\u90fd\u4f1a\u8fd0\u884c\u8fd9\u4e48\u4e00\u4e2a\u5faa\u73af\uff1a (1)\u53d6\u6307\uff1a\u8bfb\u53d64/8\u5b57\u8282\u7684RISC-V\u6307\u4ee4\uff1b (2)\u8bd1\u7801\uff1a\u89e3\u6790RISC-V\u6307\u4ee4\uff0c\u5e76\u627e\u51fa\u5bf9\u5e94\u7684OP code\uff1b (3)\u6267\u884c\uff1a\u5728\u8f6f\u4ef6\u4e2d\u6267\u884c\u76f8\u5e94\u7684\u6307\u4ee4\u3002 QEMU\u4e3b\u5faa\u73af\u91cc\u4e5f\u9700\u8981\u6709\u5bc4\u5b58\u5668\u6587\u4ef6\uff0c\u7528\u4e8e\u7ef4\u62a4\u5bc4\u5b58\u5668\u7684\u72b6\u6001\u3002\u56de\u60f3\u6211\u4eec\u5728\u300a\u8ba1\u7b97\u673a\u8bbe\u8ba1\u4e0e\u5b9e\u8df5\u300b\u7684CPU\u5b9e\u9a8c\uff0c\u662f\u4e0d\u662f\u6709\u4f3c\u66fe\u76f8\u8bc6\u7684\u611f\u89c9:-) \u5bf9\u4e8e\u60f3\u5728\u81ea\u5df1\u7684\u7535\u8111\u4e0a\u5b89\u88c5\u5b9e\u9a8c\u73af\u5883\u7684\u540c\u5b66\uff0c\u672c\u5b9e\u9a8c\u63d0\u4f9b\u4e86\u4e24\u79cd\u5b89\u88c5\u65b9\u6cd5\uff1a \u672c\u5730\u865a\u62df\u673a \u81ea\u884c\u90e8\u7f72\u5b9e\u9a8c\u73af\u5883","title":"2.  \u81ea\u884c\u90e8\u7f72\u7684\u5b9e\u9a8c\u73af\u5883"},{"location":"env/#21","text":"\u672c\u5b9e\u9a8c\u63d0\u4f9bVirtualBox + openEuler\u7684\u955c\u50cf\uff0c\u6211\u4eec\u4e5f\u5e2e\u4f60\u628a\u6240\u6709\u4f9d\u8d56\u7684\u914d\u7f6e\u90fd\u5df2\u7ecf\u4e8b\u5148\u642d\u5efa\u5b8c\u6bd5\uff0c\u4f60\u53ea\u9700\u8981\u4e0b\u8f7d\u3001\u5bfc\u5165\u865a\u62df\u673a\u5373\u53ef\u4f7f\u7528\u3002\u6b65\u9aa4\u5982\u4e0b\uff1a Step1 . Virtualbox\u548copenEuler\u955c\u50cf\u4e0b\u8f7d\uff1a http://10.249.14.14:8000/index.php/s/7vlEVZPKaMTIpi0 Virtualbox\u5b89\u88c5\u6587\u4ef6\uff1a VirtualBox-6.1.10-138449-Win.exe openEuler\u955c\u50cf\uff1aopenEuler.zip Step2 . VirtualBox\u5b89\u88c5\u4ee5\u53ca\u955c\u50cf\u5bfc\u5165\u3002 \u5b89\u88c5\u597dVirtualBox\u540e\uff0c\u89e3\u538bopenEuler.zip\uff0c\u76f4\u63a5\u53cc\u51fbopenEuler(.vbox)\u6587\u4ef6\uff0c\u5373\u53ef\u6253\u5f00openEuler\u7cfb\u7edf\u865a\u62df\u673a\uff0c \u955c\u50cf\u7cfb\u7edf\u63d0\u4f9b\u6709\u4e24\u4e2a\u7528\u6237\uff0c\u5927\u5bb6\u6700\u597d\u4f7f\u7528cs\u7528\u6237\u767b\u5f55\u3002 \u7528\u6237\u540d \uff1aroot\uff0c\u5bc6\u7801\uff1aopeneuler@123 \u7528\u6237\u540d \uff1acs\uff0c\u5bc6\u7801\uff1aopeneuler@123 Step3 . \u4e0b\u8f7d\u8fd0\u884cxv6\u4ee3\u7801 \u8be6\u89c1 2.2.4.4 \u8fd0\u884cXV6","title":"2.1  \u672c\u5730\u865a\u62df\u673a"},{"location":"env/#22","text":"\u65e0\u8bba\u662f\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\uff0c\u8fd8\u662f\u672c\u5730\u865a\u62df\u673a\uff0c\u90fd\u662f\u6211\u4eec\u5df2\u7ecf\u90e8\u7f72\u597d\u7684\u5b9e\u9a8c\u73af\u5883\uff0c\u4f60\u53ea\u9700\u8981\u6309\u7167\u5b9e\u9a8c\u8981\u6c42\u7f16\u5199\u76f8\u5e94\u7684\u4ee3\u7801\u5c31\u884c\u3002\u4f46\u5b9e\u9645\u4e0a\uff0c\u4f60\u65e0\u6cd5\u77e5\u9053\u9879\u76ee\u91cc\u7684\u6240\u6709\u7ec6\u8282\uff0c\u96be\u4ee5\u638c\u63e1\u6574\u4e2a\u9879\u76ee\u7684\u67b6\u6784\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5e0c\u671b\u540c\u5b66\u4eec\u80fd\u591f\u81ea\u5df1\u52a8\u624b\u642d\u5efa\u5b9e\u9a8c\u73af\u5883\uff0c\u8fd9\u6837\u4f60\u5f97\u5230\u7684\u6536\u83b7\u624d\u662f\u6700\u5927\u7684:-) \u4f60\u9700\u81ea\u884c\u4e0b\u8f7d\u5e76\u5b89\u88c5\u6240\u6709\u5de5\u5177\u94fe\uff08\u6709\u7684\u5de5\u5177\u9700\u8981\u4f60\u81ea\u5df1\u7f16\u8bd1\uff09\uff0c\u4e0b\u5217\u6b65\u9aa4\u4e3b\u8981\u4ee5openEuler\u4e3a\u4f8b\uff1a \u6ce8\u610f\u4e8b\u9879 \u5982\u679c\u4f60\u5df2\u7ecf\u88c5\u6709ubuntu\u3001Centos\u6216Debian\u7b49\u5176\u4ed6Linux\u7cfb\u7edf\uff0c\u4f60\u53ef\u4ee5\u8df3\u8fc7\u672c\u5c0f\u8282\uff0c\u76f4\u63a5\u5b89\u88c5XV6\u7684\u8fd0\u884c\u73af\u5883\uff0c\u5177\u4f53\u5b89\u88c5\u6b65\u9aa4\u8bf7\u53c2\u8003: https://pdos.csail.mit.edu/6.S081/2020/tools.html","title":"2.2  \u81ea\u884c\u90e8\u7f72\u5b9e\u9a8c\u73af\u5883"},{"location":"env/#221","text":"\u672c\u8282\u5047\u5b9a\u4f60\u5df2\u7ecf\u5b89\u88c5\u597dOracle VM VirtualBox \u8f6f\u4ef6\uff0c\u6253\u5f00\u8be5\u8f6f\u4ef6\uff0c\u9009\u62e9\u201c\u65b0\u5efa\u201d\u6309\u94ae\uff0c\u8fdb\u884c\u521b\u5efa\u865a\u62df\u673a\u3002 \u521b\u5efa\u865a\u62df\u673a\u65f6\uff0c\u8bf7\u9009\u62e9Linux\u7c7b\u578b\u548c64-bit\u7248\u672c\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u5b89\u88c5\u5728C\u76d8\uff1a \u4e3a\u4e86\u5728\u8fd0\u884c\u7cfb\u7edf\u65f6\u6709\u8f83\u5feb\u7684\u901f\u5ea6\uff0c\u5185\u5b58\u8bbe\u7f6e\u4e3a8GB\uff08\u6216\u4ee5\u4e0a\uff09\uff1a \u73b0\u5728\u5c31\u521b\u5efa\u786c\u76d8\uff1a \u8fd9\u91cc\u786c\u76d8\u7c7b\u578b\u4e3aVHD\uff1a \u78c1\u76d8\u5bb9\u91cf\u201c\u52a8\u6001\u5206\u914d\u201d\uff1a \u4e3a\u4fdd\u8bc1\u8db3\u591f\u7684\u7a7a\u95f4\uff0c\u4e3a\u5bbf\u4e3b\u673a\u914d\u7f6e20GB\u5927\u5c0f\u7684\u5bb9\u91cf\uff1a","title":"2.2.1 \u521b\u5efa\u865a\u62df\u673a"},{"location":"env/#222","text":"\u7cfb\u7edf\u4fe1\u606f\u6982\u89c8\uff1a \u4ec5\u4fdd\u7559\u4ece\u5149\u9a71\u548c\u786c\u76d8\u542f\u52a8\uff1a \u6ce8\u610f\u5c06CPU\u81f3\u5c11\u8bbe\u7f6e\u62104\u6838\u4ee5\u63d0\u9ad8\u7cfb\u7edf\u7684\u8fd0\u884c\u901f\u5ea6\uff1a \u8bbe\u7f6e\u4e24\u5f20\u7f51\u5361\uff0c\u4e00\u5f20\u65f6\u9ed8\u8ba4\u7684NAT\u6a21\u5f0f\uff08\u4ee5\u4fbf\u4ece\u865a\u62df\u673a\u4e2d\u8bbf\u95ee\u5916\u7f51\uff09\uff1a \u4e00\u5f20\u662fHost-only\u6a21\u5f0f\uff08\u4ee5\u4fbf\u4ece\u8be5\u865a\u62df\u673a\u7684\u5bbf\u4e3b\u673a\u8bbf\u95ee\u5b83\uff09\uff1a \u8fd9\u662f\u6b64\u65f6\u7684\u6574\u4e2a\u865a\u62df\u673a\u6982\u51b5\uff1a","title":"2.2.2 \u5bf9\u865a\u62df\u673a\u7684\u90e8\u5206\u914d\u7f6e\u8fdb\u884c\u8c03\u6574"},{"location":"env/#223-openeuler","text":"","title":"2.2.3 \u5b89\u88c5openEuler\u64cd\u4f5c\u7cfb\u7edf"},{"location":"env/#2231-openeuler2009_x86-64","text":"\u9700\u8981\u4e0b\u8f7d\u597d\u64cd\u4f5c\u7cfb\u7edf\u955c\u50cf\u5230\u81ea\u5df1\u7684\u672c\u5730\u7535\u8111\uff1a \u2022 openEuler 20.09\u5b89\u88c5\u955c\u50cf\uff1a https://repo.openeuler.org/openEuler-20.09/ISO/x86_64/openEuler-20.09-x86_64-dvd.iso \u4e0b\u8f7d\u5b8c\u6210\u540e\uff0c\u6253\u5f00VirtualBox\u865a\u62df\u673a\u3002 \u70b9\u51fb\u5982\u4e0a\u56fe\u6240\u793a\u201copenEuler.vhd\u201d\uff08\u5149\u9a71\uff09\u6587\u5b57\u6309\u94ae\u3002 \u70b9\u51fb\u201c\u9009\u62e9\u865a\u62df\u76d8\u201d\u7136\u540e\u9009\u62e9\u5148\u524d\u81ea\u5df1\u4e0b\u8f7d\u5230\u672c\u5730\u78c1\u76d8\u7684openEuler\u5b89\u88c5\u955c\u50cf\u3002 \u64cd\u4f5c\u5b8c\u6bd5\u540e\u5149\u9a71\u4e2d\u4f1a\u663e\u793a\u8be5\u955c\u50cf\u7684\u540d\u79f0\u3002","title":"2.2.3.1 \u5c06openEuler20.09_x86-64\u955c\u50cf\u88c5\u8f7d\u5230\u5149\u9a71"},{"location":"env/#2232","text":"\u542f\u52a8\u865a\u62df\u673a\uff0c\u79fb\u52a8\u952e\u76d8\u7684\u4e0a\u4e0b\u952e\u9009\u62e9\u201cInstall openEuler 20.09\u201d\u83dc\u5355\u9879\u5e76\u6309\u4e0b\u56de\u8f66\u952e\u8fdb\u5165\u5b89\u88c5\u754c\u9762\uff1a \u9009\u62e9\u82f1\u6587\u7248\u5b89\u88c5\uff1a \u8fdb\u5165\u5982\u4e0b\u754c\u9762 \u4fdd\u6301\u5b89\u88c5\u78c1\u76d8\u7684\u9ed8\u8ba4\u8bbe\u7f6e\uff1a \u5176\u4ed6\u9009\u9879\u4fdd\u6301\u9ed8\u8ba4\u8bbe\u7f6e\uff1a \u8bbe\u7f6eRoot Password \u6ce8\u610f\uff1a\u53ea\u9700\u8981\u8bbe\u7f6eroot\u8d26\u6237\u5bc6\u7801\u5373\u53ef\uff0croot\u8d26\u6237\u5bc6\u7801\u5fc5\u987b\u8bbe\u7f6e\u3002 \u63a8\u8350\u5bc6\u7801\uff1a openeuler@123 \u70b9\u51fb\u201c\u5f00\u59cb\u5b89\u88c5\u201d\u6309\u94ae\u5f00\u59cb\u5b89\u88c5\uff1a \u5b89\u88c5\u5b8c\u6210\u540e\u70b9\u51fb\u201c\u91cd\u542f\u7cfb\u7edf\u201d\u6309\u94ae\uff1a \u518d\u6b21\u8fdb\u5165\u83dc\u5355\u9009\u62e9\u754c\u9762\u65f6\uff0c\u79fb\u52a8\u952e\u76d8\u7684\u4e0a\u4e0b\u952e\u4ee5\u5c06\u7cfb\u7edf\u505c\u7559\u5728\u8be5\u754c\u9762\uff1a \u8fd9\u65f6\u9700\u8981\u5173\u673a\u865a\u62df\u673a\uff1a \u79fb\u51fa\u5149\u9a71\u4e2d\u7684\u955c\u50cf\uff1a \u82e5\u63d0\u793a\u662f\u5426\u5f3a\u884c\u79fb\u51fa\u5219\u9009\u62e9\u5f3a\u884c\u79fb\u51fa\uff1a \u91cd\u542f\u865a\u62df\u673a\uff0c\u7cfb\u7edf\u8fdb\u5165openEuler\u542f\u52a8\u754c\u9762\uff0c\u7528\u4e0a\u4e0b\u952e\u9009\u62e9\u7b2c\u4e00\u4e2a\u83dc\u5355\u9879\u5e76\u6309\u56de\u8f66\u952e\u542f\u52a8\uff08\u9ed8\u8ba4\u4e5f\u662f\u4ee5\u7b2c\u4e00\u4e2a\u83dc\u5355\u9879\u542f\u52a8\uff09\uff1a \u5148\u5728VirtualBox\u4e2d\u4ee5root\u7528\u6237\u767b\u5f55openEuler\u64cd\u4f5c\u7cfb\u7edf\uff1a \u81f3\u6b64\uff0c\u5df2\u5b8c\u6210\u865a\u62df\u673aopenEuler\u5b89\u88c5\u3002","title":"2.2.3.2 \u5b89\u88c5\u64cd\u4f5c\u7cfb\u7edf"},{"location":"env/#224-xv6","text":"","title":"2.2.4 XV6\u73af\u5883\u914d\u7f6e"},{"location":"env/#2241","text":"\u5b89\u88c5openEuler\u63d0\u4f9b\u7684Development Tools \u6ce8\u610f\u4e8b\u9879 \u7b2c\u4e00\u4e2a\u5b57\u7b26\u201c#\u201d\u6216\"$\"\u4e0d\u9700\u8981\u8f93\u5165\uff0c\u53ea\u9700\u8981\u8f93\u5165\u201c#\u201d\u6216\"$\"\u540e\u7684\u5b57\u7b26\u4e32\u3002 # yum group install -y \"Development Tools\" \u5b89\u88c5XV6\u9700\u8981\u7528\u5230\u7684\u4f9d\u8d56\u5305 # yum install autoconf automake curl gawk bison flex texinfo gperf libtool patchutils bc expat-devel pixman-devel","title":"2.2.4.1 \u5b89\u88c5\u4f9d\u8d56\u5305"},{"location":"env/#2242-risc-v-gnu-compiler-toolchain","text":"$ git clone --recursive https://github.com/riscv/riscv-gnu-toolchain \u5982\u679c\u4e0b\u8f7d\u592a\u6162\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u5df2\u7ecf\u4e0b\u8f7d\u597d\u7684\u5305\u3002 \u4e0b\u8f7d\u5730\u5740\uff1a http://10.249.14.14:8000/index.php/s/7vlEVZPKaMTIpi0 \uff0c \u9009\u62e9riscv-gnu-toolchain.tar.gz\u3002\u4e0b\u8f7d\u5b8c\u6210\u540e\uff0c\u9700\u8981\u5c06riscv-gnu-toolchain.tar.gz\u4e0a\u4f20\u81f3Linux\u7cfb\u7edf\u4e2d\uff0c\u4e0a\u4f20\u65b9\u6cd5\u8be6\u89c1MobaXterm(SSH\u5de5\u5177)\u8fd9\u4e00\u8282\u4e2d\u7684 \u6587\u4ef6\u4f20\u8f93SFTP\u670d\u52a1 \u3002 \u89e3\u538b\u547d\u4ee4 $ tar zxvf riscv-gnu-toolchain.tar.gz \u89e3\u538b\u540e\u5b89\u88c5 $ cd riscv-gnu-toolchain $ ./configure --prefix = /usr/local $ make $ cd .. $ rm riscv-gnu-toolchain.tar.gz rm: remove regular file 'riscv-gnu-toolchain.tar.gz'? y","title":"2.2.4.2 \u5b89\u88c5RISC-V GNU Compiler Toolchain"},{"location":"env/#2243-qemu","text":"\u4e0b\u8f7dQEMU $ wget https://download.qemu.org/qemu-5.1.0.tar.xz $ tar xf qemu-5.1.0.tar.xz \u5b89\u88c5 $ cd qemu-5.1.0 $ ./configure --disable-kvm --disable-werror --prefix = /usr/local --target-list = \"riscv64-softmmu\" $ make $ make install $ cd .. $ rm qemu-5.1.0.tar.xz rm: remove regular file 'qemu-5.1.0.tar.xz'? y \u68c0\u67e5\u5b89\u88c5\u662f\u5426\u6210\u529f $ riscv64-unknown-elf-gcc --version riscv64-unknown-elf-gcc (GCC) 10.2.0 ... $ qemu-system-riscv64 --version QEMU emulator version 5.1.0","title":"2.2.4.3 \u5b89\u88c5QEMU"},{"location":"env/#2244-xv6","text":"$ git clone https://gitee.com/hitsz-lab/xv6-labs-2020.git Cloning into 'xv6-labs-2020'... ... # \u5982\u679c\u662f\u521d\u6b21\u8fd0\u884cgit\uff0c\u8bbe\u7f6e\u4f60\u81ea\u5df1\u7684gitee\u7528\u6237\u4fe1\u606f $ git config --global user.email \"you@example.com\" $ git config --global user.name \"Your Name\" ... $ cd xv6-labs-2020 $ git checkout util $ make qemu # ... lots of output ... init: starting sh $ \u5f53\u53ef\u4ee5\u770b\u5230\u201cinit: starting sh\u201d\u7684\u5b57\u6837\u8868\u793axv6\u5df2\u7ecf\u6b63\u5e38\u542f\u52a8\uff0c\u6b64\u65f6\u5728\u201c$\u201d\u63d0\u793a\u7b26\u540e\u53ef\u8f93\u5165xv6\u652f\u6301\u7684shell\u547d\u4ee4\u3002 QEMU\u9000\u51fa\u65b9\u6cd5 \u5148\u6309\u201cCtrl+a\u201d\u7ec4\u5408\u952e\uff0c\u63a5\u7740\u5168\u90e8\u677e\u5f00\uff0c\u518d\u6309\u4e0b\u201cx\u201d\u952e \u81f3\u6b64\uff0cXV6\u5df2\u7ecf\u80fd\u591f\u6b63\u5e38\u8fd0\u884c\u4e86:-)","title":"2.2.4.4 \u8fd0\u884cXV6"},{"location":"remote_env/","text":"\u8fdc\u7a0b\u5b9e\u9a8c\u73af\u5883\u4f7f\u7528\u6307\u5357 \u00b6 \u901a\u77e5 \u4e25\u7981\u4f7f\u7528\u8fdc\u7a0b\u5b9e\u9a8c\u73af\u5883\u505a\u4e0e\u6559\u5b66\u65e0\u5173\u4e8b\u5b9c\uff0c\u675c\u7edd\u4f7f\u7528\u516c\u5171\u8d44\u6e90\u6316\u77ff\u7b49\uff0c\u4e00\u7ecf\u53d1\u73b0\u5c06\u4e25\u8083\u5904\u7406\uff0c\u611f\u8c22\u914d\u5408\uff01 0 \u901f\u67e5\u4fe1\u606f \u00b6 \u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0IP\u5730\u5740\uff1a 10.249.12.98 \uff0c\u7aef\u53e3\u53f7\uff1a 6666 \u6ca1\u9519:-)\u672c\u8bfe\u7a0b\u4e0e\u300a\u8ba1\u7b97\u673a\u8bbe\u8ba1\u4e0e\u5b9e\u8df5\u300b\u5171\u7528\u540c\u4e00\u4e2a\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u3002\u6211\u4eec\u5df2\u7ecf\u5728\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u4e0a\u90e8\u7f72\u4e86XV6\u7684\u8fd0\u884c\u73af\u5883\uff0c\u4f60\u53ea\u9700\u8981\u767b\u5f55\u540e\u4e0b\u8f7d\u5b9e\u9a8c\u4ee3\u7801\u5c31\u53ef\u4ee5\u505a\u5b9e\u9a8c\u3002 \u7528\u6237\u540d\u548c\u521d\u59cb\u5bc6\u7801\u90fd\u662f \u4f60\u7684\u5b66\u53f7 \uff0c\u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c\u5efa\u8bae\u4f60\u521d\u6b21\u767b\u5f55\u540e\u4fee\u6539\u521d\u59cb\u5bc6\u7801\u3002\u5982\u679c\u9047\u5230\u95ee\u9898\uff0c\u8bf7\u5bfb\u6c42\u52a9\u6559\u6216\u8001\u5e08\u7684\u5e2e\u52a9\u3002 \u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u5171\u67098\u4e2a\u8ba1\u7b97\u8282\u70b9\uff0c\u6bcf\u4e00\u4e2a\u8ba1\u7b97\u8282\u70b9\u90fd\u63d0\u4f9b\u76f8\u540c\u7684\u670d\u52a1\uff0c\u53ef\u80fd\u4f60\u6bcf\u6b21\u767b\u5f55\u7684\u8ba1\u7b97\u8282\u70b9\u4f1a\u4e0d\u4e00\u6837\uff0c\u4f46\u65e0\u987b\u62c5\u5fc3\uff0c\u4f60\u770b\u5230\u7684\u6587\u4ef6\u90fd\u662f\u4e00\u6837\u7684\u3002 1 \u5feb\u901f\u5165\u95e8 \u00b6 1.1 \u73af\u5883\u51c6\u5907 \u00b6 \u9700\u8981\u914d\u5408\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u4f7f\u7528\u7684\u8f6f\u4ef6\uff1a Visual Studio Code\uff08\u5fc5\u987b\uff09 MobaXterm\uff08\u63a8\u8350\uff09 1.1.1 \u5982\u4f55\u5b89\u88c5Visual Studio Code\uff1f \u00b6 \u6253\u5f00Visual Studio Code\u7684 \u5b98\u65b9\u7f51\u7ad9 \uff0c\u70b9\u51fb\u4e2d\u95f4\u7684\u201cDownload for Windows\u201d\u4e0b\u8f7d\u5b83\u7684\u5b89\u88c5\u5305\u3002\u53cc\u51fb\u8fd0\u884c\u5b89\u88c5\u5305\uff0c\u5e76\u5b8c\u6210\u5b89\u88c5\u5373\u53ef\u3002\u4f60\u53ef\u4ee5\u4ece\u5f00\u59cb\u83dc\u5355\u627e\u5230\u65b0\u5b89\u88c5\u4e0a\u7684Visual Studio Code\u3002 1.2 \u8fde\u63a5\u5230\u5b9e\u9a8c\u5e73\u53f0 \u00b6 1.2.1 \u5c06Visual Studio Code\u8fde\u63a5\u5230\u5b9e\u9a8c\u5e73\u53f0 \u00b6 Visual Studio Code\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u4ece\u5f00\u59cb\u83dc\u5355\u6253\u5f00\u5b83\u3002\u6211\u4eec\u9700\u8981\u5b89\u88c5Remote - SSH\u63d2\u4ef6\u3002\u70b9\u51fbVS Code\u5de6\u4fa7\u6269\u5c55(extension)\u6309\u94ae\uff0c\u5728\u641c\u7d22\u6846\u4e2d\u952e\u5165\u201cremote ssh\u201d\uff0c\u70b9\u51fbRemote - SSH\u63d2\u4ef6\uff0c\u5e76\u5b89\u88c5\u3002 \u5de6\u4fa7\u8fb9\u680f\u5e94\u8be5\u4f1a\u591a\u51fa\u4e00\u4e2a\u8fd9\u6837\u7684\u56fe\u6807\uff1a \u70b9\u51fb\u8fd9\u4e2a\u56fe\u6807\uff0c\u9009\u62e9SSH TARGETS\u53f3\u4fa7\u7684 + \u53f7\uff1a \u8fd9\u4f1a\u5728\u5c4f\u5e55\u4e0a\u65b9\u4e2d\u592e\u5f39\u51fa\u8f93\u5165\u6846\uff0c\u8981\u6c42\u8f93\u5165ssh\u6307\u4ee4\u3002\u5728\u8fd9\u91cc\u8f93\u5165 ssh \u4f60\u7684\u5b66\u53f7@\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0IP \uff0c\u4f8b\u5982 ssh 200110101@10.249.12.98 -p 6666 \u5c31\u662f\u5b66\u53f7\u4e3a200110101\u7684\u540c\u5b66\u5e0c\u671b\u8fde\u63a5\u5230\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u3002 \u8f93\u5165\u5b8c\u6210\u540e\uff0c\u6309\u4e0b\u56de\u8f66\u3002\u5982\u679c\u5f39\u51fa\u4e0b\u56fe\u6240\u793a\u7684\u754c\u9762\uff0c\u5219\u518d\u6b21\u6309\u4e0b\u56de\u8f66\uff1a \u73b0\u5728\uff0cSSH Target\u6dfb\u52a0\u6210\u529f\uff0c\u5de6\u4fa7SSH Target\u4e2d\u5e94\u8be5\u589e\u52a0\u4e86\u4e00\u680f\u3002\u5c06\u9f20\u6807\u79fb\u4e0a\u53bb\uff0c\u70b9\u51fb\u8fd9\u4e00\u680f\u53f3\u4fa7\u7684\u5c0f\u56fe\u6807\uff1a \u8fd9\u4f1a\u6253\u5f00\u4e00\u4e2a\u65b0\u7684VS Code\u7a97\u53e3\u3002\u65b0\u6253\u5f00\u7684\u7a97\u53e3\u4f1a\u8981\u6c42\u4f60\u9009\u62e9\u76ee\u6807\u673a\u5668\u7684\u5e73\u53f0\uff0c\u9009\u62e9Linux\uff0c\u6309\u4e0b\u56de\u8f66\uff1a \u5982\u679c\u5982\u4e0b\u56fe\u6240\u793a\u8981\u6c42\u4f60\u786e\u8ba4\u662f\u5426\u8fde\u63a5\uff0c\u5219\u518d\u6b21\u6309\u4e0b\u56de\u8f66\uff1a \u63a5\u4e0b\u6765\uff0c\u5b83\u4f1a\u8981\u6c42\u4f60\u8f93\u5165\u5bc6\u7801\u3002 \u521d\u59cb\u5bc6\u7801\u5373\u5b66\u53f7 \u3002 \u6700\u540e\u4e00\u6b21\u6309\u4e0b\u56de\u8f66\u3002\u5982\u679c\u6ca1\u6709\u66f4\u591a\u63d0\u793a\uff0c\u5de6\u4e0b\u89d2\u663e\u793a SSH: \u5b9e\u9a8c\u5e73\u53f0\u7684IP\u5730\u5740 \uff0c\u8bf4\u660e\u8fde\u63a5\u6210\u529f\u3002 \u73b0\u5728\uff0c\u70b9\u51fb\u4e0b\u65b9\u7684\u201c\u7ec8\u7aef\u201d\u6309\u94ae\uff0c\u6253\u5f00\u7ec8\u7aef\uff1a \u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c\u6211\u4eec\u9996\u5148\u4fee\u6539\u9ed8\u8ba4\u5bc6\u7801\u3002 \u70b9\u51fb\u7ec8\u7aef\uff0c\u5728\u5176\u4e2d\u952e\u5165\u4ee5\u4e0b\u5185\u5bb9\uff0c\u5e76\u56de\u8f66\uff1a passwd \u6b64\u65f6\uff0c\u5b83\u4f1a\u8981\u6c42\u4f60\u8f93\u5165\u65e7\u5bc6\u7801\u3002\u65e7\u5bc6\u7801\uff08\u5373\u9ed8\u8ba4\u5bc6\u7801\uff09\u4e3a\u4f60\u7684\u5b66\u53f7\u3002\u5b8c\u6210\u540e\u56de\u8f66\u3002 \u968f\u540e\uff0c\u5b83\u4f1a\u8981\u6c42\u4f60\u8f93\u5165\u65b0\u5bc6\u7801\uff0c\u5e76\u8fdb\u884c\u786e\u8ba4\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u5b58\u653exv6-labs-2020\u590d\u5236\u5230\u81ea\u5df1\u7684\u5de5\u4f5c\u7a7a\u95f4\u3002 \u5728\u7ec8\u7aef\u4e2d\u952e\u5165\u4ee5\u4e0b\u5185\u5bb9\uff0c\u5e76\u56de\u8f66\uff1a git clone https://gitee.com/hitsz-lab/xv6-labs-2020.git \u4f60\u5e94\u8be5\u4f1a\u770b\u5230\u8fd9\u6837\u7684\u8f93\u51fa\uff1a Cloning into 'xv6-labs-2020'... done. \u8fd9\u4ee3\u8868\u4f60\u5df2\u7ecf\u5c06xv6\u7684\u526f\u672c\u4e0b\u8f7d\u5230\u81ea\u5df1\u7684\u5de5\u4f5c\u7a7a\u95f4\u4e86\u3002\u63a5\u4e0b\u6765\uff0c\u4f60\u53ef\u4ee5\u70b9\u51fb\u5de6\u4fa7\u8fb9\u680f\u6700\u4e0a\u9762\u7684\u6309\u94ae\uff0c\u5e76\u6253\u5f00\u6587\u4ef6\u5939\uff1a \u5728\u5f39\u51fa\u7684\u83dc\u5355\u4e2d\uff0c\u9009\u62e9 xv6-labs-2020 \uff0c\u5e76\u6309\u4e0b\u201c\u786e\u8ba4\u201d\uff1a \u518d\u6b21\u8f93\u5165\u5bc6\u7801\uff0c\u6309\u4e0b\u56de\u8f66\u786e\u8ba4\uff0c\u5e76\u4fe1\u4efb\u4f5c\u8005\u3002 \u4f60\u521d\u6b65\u5b8c\u6210\u4e86\u5bf9\u5de5\u4f5c\u533a\u7684\u8bbe\u7f6e\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u6d4b\u8bd5xv6\u80fd\u5426\u6b63\u5e38\u7f16\u8bd1\u3001\u6267\u884c\u3002 \u5982\u679c\u4e0b\u65b9\u672a\u663e\u793a\u7ec8\u7aef\uff0c\u70b9\u51fb\u4e0a\u65b9\u83dc\u5355\u201c\u67e5\u770b\u201d-\u201c\u7ec8\u7aef\u201d\uff0c\u6216\u8005\u6309\u4e0bCtrl-`\uff08 \u6ce8\u610f\uff1a`\u4e0d\u662f\u2018\uff08\u5355\u5f15\u53f7\uff09\uff0c\u662f\u952e\u76d8\u5de6\u4e0a\u89d2\u7684\u90a3\u4e2a\u6309\u952e\u3002 \uff09\u4ee5\u6253\u5f00\u7ec8\u7aef\u754c\u9762\u3002\u5728\u65b0\u5f39\u51fa\u7684\u7ec8\u7aef\u4e2d\uff0c\u8f93\u5165\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u4ee5\u7f16\u8bd1\u5e76\u5728QEMU\u4e2d\u8fd0\u884cxv6\uff1a make qemu \u5982\u679c\u770b\u5230\u8bb8\u591a\u8f93\u51fa\uff0c\u5e76\u6700\u7ec8\u505c\u7559\u5728\u8fd9\u4e2a\u8f93\u51fa\u4e0a\uff1a xv6 kernel is booting hart 2 starting hart 1 starting init: starting sh $ \u90a3\u4e48\u8bf4\u660e\u4f60\u7684\u73af\u5883\u5df2\u7ecf\u914d\u7f6e\u5b8c\u6210\u3002 \u540c\u65f6\u6309\u4e0bCtrl + A\uff0c\u5168\u90e8\u677e\u5f00\uff0c\u518d\u6309\u4e0bx\u4ee5\u9000\u51faQEMU \u3002 \u5982\u679c\u9047\u5230\u95ee\u9898\uff0c\u8bf7\u8be2\u95ee\u8001\u5e08\u6216\u52a9\u6559\u3002 \u9644\u5f55 \u00b6 \u4e00\u4e9b\u8fdb\u9636\u6307\u5f15 \u00b6 \u4f7f\u7528ssh\u5bc6\u94a5\u5feb\u6377\u8ba4\u8bc1 \u00b6 \u6709\u6ca1\u6709\u611f\u89c9\u6bcf\u6b21\u90fd\u8981\u8f93\u5165\u5bc6\u7801\u975e\u5e38\u9ebb\u70e6\uff1fssh\u5bc6\u94a5\u53ef\u4ee5\u8ba9\u8ba4\u8bc1\u6d41\u7a0b\u81ea\u52a8\u5316\uff0c\u5927\u5927\u89e3\u653e\u53cc\u624b\u3002\u5728 \u672c\u5730 windows\u4e0b\uff0c\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u6253\u5f00CMD\uff0c\u8f93\u5165 ssh-keygen \u8ddf\u968f\u6307\u5f15\uff0c\u4e00\u8def\u56de\u8f66\uff0c\u4fbf\u53ef\u5b8c\u6210ssh\u5bc6\u94a5\u7684\u751f\u6210\u3002 \u8bf7\u52a1\u5fc5\u4fdd\u5b58\u597d\u81ea\u5df1\u7684\u79c1\u94a5\uff0c\u4e0d\u8981\u6cc4\u9732\uff01 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u79c1\u94a5\u52a0\u5165\u5230\u81ea\u5df1\u7684\u8eab\u4efd\u8ba4\u8bc1\u4e2d\u3002\u5728\u7ec8\u7aef\u7ee7\u7eed\u8f93\u5165\uff1a ssh-add \u4f60\u7684\u79c1\u94a5\u7684\u5b8c\u6574\u8def\u5f84 # \u4f8b\u5982\uff0c\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u6211\u5e94\u8be5\u952e\u5165ssh-add C:\\Users\\willson\\.ssh\\id_rsa_priv_20210909 \u5728\u4f60\u7684Windows\u4e0a\u5c06\u516c\u94a5\u6587\u4ef6\u6253\u5f00\uff08\u7528\u4f60\u559c\u6b22\u7684\u7eaf\u6587\u672c\u7f16\u8f91\u5668\uff0c\u6bd4\u5982\u8bb0\u4e8b\u672c\u6216\u8005VS Code\uff09\uff0c\u590d\u5236\u5176\u4e2d\u7684\u5185\u5bb9\u3002 \u6700\u540e\uff0c\u767b\u5f55\u4f60\u60f3\u8981\u5feb\u6377\u8ba4\u8bc1\u7684\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u7ec8\u7aef\uff0c\u5e76\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff1a mkdir -p ~/.ssh vi ~/.ssh/authorized_keys \u8fd9\u4f1a\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u7f16\u8f91\u754c\u9762\u3002\u6309\u4e0b i \u6309\u952e\uff0c\u8fdb\u5165\u7f16\u8f91\u6a21\u5f0f\uff0c\u5e76\u7c98\u8d34\u5230\u4e0a\u9762\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u7ec8\u7aef\u4e2d\u7f16\u8f91\u754c\u9762\u7684\u4e00\u4e2a\u65b0\u884c\u91cc\u3002\u6309\u4e0b Esc \uff0c\u6309\u4e0b :wq \u53ef\u4fdd\u5b58\u5e76\u9000\u51fa\u3002\u5982\u679c\u4e0d\u653e\u5fc3\uff0c\u53ef\u4ee5 cat ~/.ssh/authorized_keys \u5e76\u68c0\u67e5\u8f93\u51fa\u548c\u4f60\u521a\u624d\u8d34\u8fdb\u53bb\u7684\u662f\u4e0d\u662f\u4e00\u6837\u7684\u3002 \u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u4e0b\u6b21\u4f60\u4eceWindows\u767b\u9646\u65f6\uff0c\u5e94\u8be5\u5c31\u65e0\u9700\u5bc6\u7801\u8ba4\u8bc1\u4e86\u3002 Visual Studio Code\uff1a\u8fdb\u9636\u4f7f\u7528 \u00b6 \u6709\u6ca1\u6709\u6000\u5ff5Visual Studio\u3001CodeBlock\u7b49IDE\u4e2d\u4fbf\u6377\u7684\u4e00\u952e\u8fd0\u884c\u529f\u80fd\uff1f\u6ca1\u5173\u7cfb\uff0c\u5b8c\u5907\u7684\u63d2\u4ef6\u5e02\u573a\u914d\u5408\u81ea\u52a8\u5316\u811a\u672c\u53ef\u4ee5\u5b8c\u6210\u4f60\u7684\u4e00\u5207\u529f\u80fd\u9700\u6c42\uff01 \u4e0b\u7565\uff1a\u611f\u5174\u8da3\u7684\u8bdd\u53ef\u4ee5\u4e86\u89e3\u4e00\u4e0bIntelli Sense\u3001MakeFile\u4ee5\u53caVSCode\u4e2d\u7684Task\u3002 Q&A \u00b6 \u4e3a\u4f55\u8981\u4f7f\u7528\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\uff1f \u00b6 \u4e3b\u8981\u662f\u5b9e\u9a8c\u642d\u8d77\u6765\u6bd4\u8f83\u9ebb\u70e6\u3002\u6709\u51e0\u4e2a\u9009\u9879\u53ef\u4ee5\u9009\u62e9\uff0c1\u662f\u642d\u5efa\u4e00\u53f0Linux\u865a\u62df\u673a\uff0c2\u662f\u5728\u81ea\u5df1\u7535\u8111\u4e0a\u542f\u7528WSL\uff08Windows Subsystem for Linux\uff09\uff0c3\u662f\u6574\u4e00\u53f0\u8fd0\u884cLinux\u7684\u7535\u8111\u2014\u2014\u90fd\u53ef\u4ee5\uff0c\u4f46\u662f\u90fd\u633a\u9ebb\u70e6\u3002\u6211\u4eec\u5e2e\u4f60\u628a\u914d\u7f6e\u7684\u9ebb\u70e6\u4e8b\u5148\u505a\u5b8c\u4e86\uff0c\u4e8e\u662f\u4f60\u5c31\u53ef\u4ee5\u4e13\u5fc3\u4e8e\u5b9e\u9a8c\u672c\u8eab\u3002\u65e0\u8bba\u4f60\u7684\u7535\u8111\u6027\u80fd\u5982\u4f55\uff0c\u65e0\u8bba\u4f60\u662f\u5728\u5bbf\u820d\u3001\u5b9e\u9a8c\u5ba4\u8fd8\u662f\u81ea\u4e60\u5ba4\uff0c\u53ea\u8981\u4f60\u8fd8\u80fd\u8fde\u4e0a\u6821\u56ed\u7f51\uff0c\u4f60\u5c31\u80fd\u5b8c\u6210\u4f60\u7684\u5b9e\u9a8c\u3002 Troubleshooting \u00b6 \u6211\u4e0d\u662fWindows 10\u7cfb\u7edf\uff0c\u8fd9\u4f1a\u5e26\u6765\u4ec0\u4e48\u95ee\u9898\u5417\uff1f \u00b6 \u6211\u5728\u4f7f\u7528Linux/macOS\uff1f \u00b6 Visual Studio Code\u4e5f\u6709Linux\u7248\u548cmacOS\u7248\uff0c\u5177\u4f53\u64cd\u4f5c\u5927\u540c\u5c0f\u5f02\uff0c\u6bd5\u7adf\u73af\u5883\u4e3b\u8981\u5728\u670d\u52a1\u5668\u4e0a\u3002 \u6211\u6b63\u5728\u4f7f\u7528\u65e7\u7684Windows\u7248\u672c/\u6211\u6ca1\u6709\u66f4\u65b0\u6211\u7684Windows 10\u7cfb\u7edf\uff1f \u00b6 \u8bf7\u66f4\u65b0\u4f60\u7684\u7cfb\u7edf\u3002\u4f7f\u7528\u8fc7\u65f6\u7684\u7cfb\u7edf\u6709\u5404\u79cd\u5404\u6837\u7684\u98ce\u9669\uff0c\u5176\u4e2d\u6700\u5927\u7684\u662f\u4e0e\u65f6\u4ee3\u8131\u8f68\u3002 \u6211\u6b63\u5728\u4f7f\u7528Windows 11\uff1f \u00b6 \u8fd9\u7bc7\u6559\u7a0b\u5b8c\u5168\u517c\u5bb9Windows 11\u3002\u7b14\u8005\u6b63\u5728\u7528\u7684\u5c31\u662fWindows 11\u3002 \u6211\u8f93\u5165\u7684\u6240\u6709\u547d\u4ee4\u770b\u8d77\u6765\u90fd\u662f\u5bf9\u7684\uff0c\u4f46\u662f\u4e3a\u4ec0\u4e48\u8fd0\u884c\u5931\u8d25\u4e86\uff1f \u00b6 \u5168\u89d2\u6807\u70b9\u7b26\u53f7/\u82f1\u6587\u5b57\u7b26\uff1f \u00b6 \u786e\u4fdd\u4f60\u8f93\u5165\u7684\u662f\u6b63\u5e38\u7684\u534a\u89d2\u82f1\u6587\u5b57\u7b26\u4e0e\u82f1\u6587\u6807\u70b9\u7b26\u53f7\uff0c\u5982\u56fe\u6240\u793a\uff1a \u8fd9\u53ef\u4ee5\u901a\u8fc7\u4e00\u8d77\u6309\u4e0bshift+\u7a7a\u683c\uff0c\u6216\u8005\u5207\u6362\u5230\u82f1\u6587\u8f93\u5165\u6cd5\u89e3\u51b3\u3002 \u6c38\u8fdc\u4e0d\u8981\u5728\u4e2d\u6587\u8f93\u5165\u6cd5\u4e0b\u8f93\u5165\u547d\u4ee4\uff01 \u5982\u4f55\u9000\u51faXV6\uff1f \u00b6 \u540c\u65f6\u6309\u4e0b Ctrl + A \uff0c\u63a5\u7740\u5168\u90e8\u677e\u5f00\uff0c\u518d\u6309\u4e0b x \u4ee5\u9000\u51faQEMU\u3002 VSCode\u8fde\u63a5\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u65f6\u51fa\u73b0bad owner or permission\u62a5\u9519\uff1f \u00b6 \u89e3\u51b3\u65b9\u6cd5\uff1a\u8fdb\u5165\u8def\u5f84C:\\Users\\\u7528\u6237\u540d.ssh\uff0c\u53f3\u51fbconfig\u6587\u4ef6\u8fdb\u5165\u5c5e\u6027\u4e2d\u9ad8\u7ea7\u5b89\u5168\u7ba1\u7406\uff0c\u9009\u62e9\u7981\u6b62\u7ee7\u627f\uff0c\u5e76\u4e14\u5220\u9664\u6240\u6709\u6b64\u5bf9\u8c61\u4e2d\u7ee7\u627f\u7684\u6743\u9650\u3002 \u5177\u4f53\u53ef\u4ee5\u67e5\u770b\uff1a https://www.cnblogs.com/Akkuman/p/11187776.html","title":"\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u4f7f\u7528\u6307\u5357"},{"location":"remote_env/#_1","text":"\u901a\u77e5 \u4e25\u7981\u4f7f\u7528\u8fdc\u7a0b\u5b9e\u9a8c\u73af\u5883\u505a\u4e0e\u6559\u5b66\u65e0\u5173\u4e8b\u5b9c\uff0c\u675c\u7edd\u4f7f\u7528\u516c\u5171\u8d44\u6e90\u6316\u77ff\u7b49\uff0c\u4e00\u7ecf\u53d1\u73b0\u5c06\u4e25\u8083\u5904\u7406\uff0c\u611f\u8c22\u914d\u5408\uff01","title":"\u8fdc\u7a0b\u5b9e\u9a8c\u73af\u5883\u4f7f\u7528\u6307\u5357"},{"location":"remote_env/#0","text":"\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0IP\u5730\u5740\uff1a 10.249.12.98 \uff0c\u7aef\u53e3\u53f7\uff1a 6666 \u6ca1\u9519:-)\u672c\u8bfe\u7a0b\u4e0e\u300a\u8ba1\u7b97\u673a\u8bbe\u8ba1\u4e0e\u5b9e\u8df5\u300b\u5171\u7528\u540c\u4e00\u4e2a\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u3002\u6211\u4eec\u5df2\u7ecf\u5728\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u4e0a\u90e8\u7f72\u4e86XV6\u7684\u8fd0\u884c\u73af\u5883\uff0c\u4f60\u53ea\u9700\u8981\u767b\u5f55\u540e\u4e0b\u8f7d\u5b9e\u9a8c\u4ee3\u7801\u5c31\u53ef\u4ee5\u505a\u5b9e\u9a8c\u3002 \u7528\u6237\u540d\u548c\u521d\u59cb\u5bc6\u7801\u90fd\u662f \u4f60\u7684\u5b66\u53f7 \uff0c\u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c\u5efa\u8bae\u4f60\u521d\u6b21\u767b\u5f55\u540e\u4fee\u6539\u521d\u59cb\u5bc6\u7801\u3002\u5982\u679c\u9047\u5230\u95ee\u9898\uff0c\u8bf7\u5bfb\u6c42\u52a9\u6559\u6216\u8001\u5e08\u7684\u5e2e\u52a9\u3002 \u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u5171\u67098\u4e2a\u8ba1\u7b97\u8282\u70b9\uff0c\u6bcf\u4e00\u4e2a\u8ba1\u7b97\u8282\u70b9\u90fd\u63d0\u4f9b\u76f8\u540c\u7684\u670d\u52a1\uff0c\u53ef\u80fd\u4f60\u6bcf\u6b21\u767b\u5f55\u7684\u8ba1\u7b97\u8282\u70b9\u4f1a\u4e0d\u4e00\u6837\uff0c\u4f46\u65e0\u987b\u62c5\u5fc3\uff0c\u4f60\u770b\u5230\u7684\u6587\u4ef6\u90fd\u662f\u4e00\u6837\u7684\u3002","title":"0 \u901f\u67e5\u4fe1\u606f"},{"location":"remote_env/#1","text":"","title":"1 \u5feb\u901f\u5165\u95e8"},{"location":"remote_env/#11","text":"\u9700\u8981\u914d\u5408\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u4f7f\u7528\u7684\u8f6f\u4ef6\uff1a Visual Studio Code\uff08\u5fc5\u987b\uff09 MobaXterm\uff08\u63a8\u8350\uff09","title":"1.1 \u73af\u5883\u51c6\u5907"},{"location":"remote_env/#111-visual-studio-code","text":"\u6253\u5f00Visual Studio Code\u7684 \u5b98\u65b9\u7f51\u7ad9 \uff0c\u70b9\u51fb\u4e2d\u95f4\u7684\u201cDownload for Windows\u201d\u4e0b\u8f7d\u5b83\u7684\u5b89\u88c5\u5305\u3002\u53cc\u51fb\u8fd0\u884c\u5b89\u88c5\u5305\uff0c\u5e76\u5b8c\u6210\u5b89\u88c5\u5373\u53ef\u3002\u4f60\u53ef\u4ee5\u4ece\u5f00\u59cb\u83dc\u5355\u627e\u5230\u65b0\u5b89\u88c5\u4e0a\u7684Visual Studio Code\u3002","title":"1.1.1 \u5982\u4f55\u5b89\u88c5Visual Studio Code\uff1f"},{"location":"remote_env/#12","text":"","title":"1.2 \u8fde\u63a5\u5230\u5b9e\u9a8c\u5e73\u53f0"},{"location":"remote_env/#121-visual-studio-code","text":"Visual Studio Code\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u4ece\u5f00\u59cb\u83dc\u5355\u6253\u5f00\u5b83\u3002\u6211\u4eec\u9700\u8981\u5b89\u88c5Remote - SSH\u63d2\u4ef6\u3002\u70b9\u51fbVS Code\u5de6\u4fa7\u6269\u5c55(extension)\u6309\u94ae\uff0c\u5728\u641c\u7d22\u6846\u4e2d\u952e\u5165\u201cremote ssh\u201d\uff0c\u70b9\u51fbRemote - SSH\u63d2\u4ef6\uff0c\u5e76\u5b89\u88c5\u3002 \u5de6\u4fa7\u8fb9\u680f\u5e94\u8be5\u4f1a\u591a\u51fa\u4e00\u4e2a\u8fd9\u6837\u7684\u56fe\u6807\uff1a \u70b9\u51fb\u8fd9\u4e2a\u56fe\u6807\uff0c\u9009\u62e9SSH TARGETS\u53f3\u4fa7\u7684 + \u53f7\uff1a \u8fd9\u4f1a\u5728\u5c4f\u5e55\u4e0a\u65b9\u4e2d\u592e\u5f39\u51fa\u8f93\u5165\u6846\uff0c\u8981\u6c42\u8f93\u5165ssh\u6307\u4ee4\u3002\u5728\u8fd9\u91cc\u8f93\u5165 ssh \u4f60\u7684\u5b66\u53f7@\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0IP \uff0c\u4f8b\u5982 ssh 200110101@10.249.12.98 -p 6666 \u5c31\u662f\u5b66\u53f7\u4e3a200110101\u7684\u540c\u5b66\u5e0c\u671b\u8fde\u63a5\u5230\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u3002 \u8f93\u5165\u5b8c\u6210\u540e\uff0c\u6309\u4e0b\u56de\u8f66\u3002\u5982\u679c\u5f39\u51fa\u4e0b\u56fe\u6240\u793a\u7684\u754c\u9762\uff0c\u5219\u518d\u6b21\u6309\u4e0b\u56de\u8f66\uff1a \u73b0\u5728\uff0cSSH Target\u6dfb\u52a0\u6210\u529f\uff0c\u5de6\u4fa7SSH Target\u4e2d\u5e94\u8be5\u589e\u52a0\u4e86\u4e00\u680f\u3002\u5c06\u9f20\u6807\u79fb\u4e0a\u53bb\uff0c\u70b9\u51fb\u8fd9\u4e00\u680f\u53f3\u4fa7\u7684\u5c0f\u56fe\u6807\uff1a \u8fd9\u4f1a\u6253\u5f00\u4e00\u4e2a\u65b0\u7684VS Code\u7a97\u53e3\u3002\u65b0\u6253\u5f00\u7684\u7a97\u53e3\u4f1a\u8981\u6c42\u4f60\u9009\u62e9\u76ee\u6807\u673a\u5668\u7684\u5e73\u53f0\uff0c\u9009\u62e9Linux\uff0c\u6309\u4e0b\u56de\u8f66\uff1a \u5982\u679c\u5982\u4e0b\u56fe\u6240\u793a\u8981\u6c42\u4f60\u786e\u8ba4\u662f\u5426\u8fde\u63a5\uff0c\u5219\u518d\u6b21\u6309\u4e0b\u56de\u8f66\uff1a \u63a5\u4e0b\u6765\uff0c\u5b83\u4f1a\u8981\u6c42\u4f60\u8f93\u5165\u5bc6\u7801\u3002 \u521d\u59cb\u5bc6\u7801\u5373\u5b66\u53f7 \u3002 \u6700\u540e\u4e00\u6b21\u6309\u4e0b\u56de\u8f66\u3002\u5982\u679c\u6ca1\u6709\u66f4\u591a\u63d0\u793a\uff0c\u5de6\u4e0b\u89d2\u663e\u793a SSH: \u5b9e\u9a8c\u5e73\u53f0\u7684IP\u5730\u5740 \uff0c\u8bf4\u660e\u8fde\u63a5\u6210\u529f\u3002 \u73b0\u5728\uff0c\u70b9\u51fb\u4e0b\u65b9\u7684\u201c\u7ec8\u7aef\u201d\u6309\u94ae\uff0c\u6253\u5f00\u7ec8\u7aef\uff1a \u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c\u6211\u4eec\u9996\u5148\u4fee\u6539\u9ed8\u8ba4\u5bc6\u7801\u3002 \u70b9\u51fb\u7ec8\u7aef\uff0c\u5728\u5176\u4e2d\u952e\u5165\u4ee5\u4e0b\u5185\u5bb9\uff0c\u5e76\u56de\u8f66\uff1a passwd \u6b64\u65f6\uff0c\u5b83\u4f1a\u8981\u6c42\u4f60\u8f93\u5165\u65e7\u5bc6\u7801\u3002\u65e7\u5bc6\u7801\uff08\u5373\u9ed8\u8ba4\u5bc6\u7801\uff09\u4e3a\u4f60\u7684\u5b66\u53f7\u3002\u5b8c\u6210\u540e\u56de\u8f66\u3002 \u968f\u540e\uff0c\u5b83\u4f1a\u8981\u6c42\u4f60\u8f93\u5165\u65b0\u5bc6\u7801\uff0c\u5e76\u8fdb\u884c\u786e\u8ba4\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u5b58\u653exv6-labs-2020\u590d\u5236\u5230\u81ea\u5df1\u7684\u5de5\u4f5c\u7a7a\u95f4\u3002 \u5728\u7ec8\u7aef\u4e2d\u952e\u5165\u4ee5\u4e0b\u5185\u5bb9\uff0c\u5e76\u56de\u8f66\uff1a git clone https://gitee.com/hitsz-lab/xv6-labs-2020.git \u4f60\u5e94\u8be5\u4f1a\u770b\u5230\u8fd9\u6837\u7684\u8f93\u51fa\uff1a Cloning into 'xv6-labs-2020'... done. \u8fd9\u4ee3\u8868\u4f60\u5df2\u7ecf\u5c06xv6\u7684\u526f\u672c\u4e0b\u8f7d\u5230\u81ea\u5df1\u7684\u5de5\u4f5c\u7a7a\u95f4\u4e86\u3002\u63a5\u4e0b\u6765\uff0c\u4f60\u53ef\u4ee5\u70b9\u51fb\u5de6\u4fa7\u8fb9\u680f\u6700\u4e0a\u9762\u7684\u6309\u94ae\uff0c\u5e76\u6253\u5f00\u6587\u4ef6\u5939\uff1a \u5728\u5f39\u51fa\u7684\u83dc\u5355\u4e2d\uff0c\u9009\u62e9 xv6-labs-2020 \uff0c\u5e76\u6309\u4e0b\u201c\u786e\u8ba4\u201d\uff1a \u518d\u6b21\u8f93\u5165\u5bc6\u7801\uff0c\u6309\u4e0b\u56de\u8f66\u786e\u8ba4\uff0c\u5e76\u4fe1\u4efb\u4f5c\u8005\u3002 \u4f60\u521d\u6b65\u5b8c\u6210\u4e86\u5bf9\u5de5\u4f5c\u533a\u7684\u8bbe\u7f6e\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u6d4b\u8bd5xv6\u80fd\u5426\u6b63\u5e38\u7f16\u8bd1\u3001\u6267\u884c\u3002 \u5982\u679c\u4e0b\u65b9\u672a\u663e\u793a\u7ec8\u7aef\uff0c\u70b9\u51fb\u4e0a\u65b9\u83dc\u5355\u201c\u67e5\u770b\u201d-\u201c\u7ec8\u7aef\u201d\uff0c\u6216\u8005\u6309\u4e0bCtrl-`\uff08 \u6ce8\u610f\uff1a`\u4e0d\u662f\u2018\uff08\u5355\u5f15\u53f7\uff09\uff0c\u662f\u952e\u76d8\u5de6\u4e0a\u89d2\u7684\u90a3\u4e2a\u6309\u952e\u3002 \uff09\u4ee5\u6253\u5f00\u7ec8\u7aef\u754c\u9762\u3002\u5728\u65b0\u5f39\u51fa\u7684\u7ec8\u7aef\u4e2d\uff0c\u8f93\u5165\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u4ee5\u7f16\u8bd1\u5e76\u5728QEMU\u4e2d\u8fd0\u884cxv6\uff1a make qemu \u5982\u679c\u770b\u5230\u8bb8\u591a\u8f93\u51fa\uff0c\u5e76\u6700\u7ec8\u505c\u7559\u5728\u8fd9\u4e2a\u8f93\u51fa\u4e0a\uff1a xv6 kernel is booting hart 2 starting hart 1 starting init: starting sh $ \u90a3\u4e48\u8bf4\u660e\u4f60\u7684\u73af\u5883\u5df2\u7ecf\u914d\u7f6e\u5b8c\u6210\u3002 \u540c\u65f6\u6309\u4e0bCtrl + A\uff0c\u5168\u90e8\u677e\u5f00\uff0c\u518d\u6309\u4e0bx\u4ee5\u9000\u51faQEMU \u3002 \u5982\u679c\u9047\u5230\u95ee\u9898\uff0c\u8bf7\u8be2\u95ee\u8001\u5e08\u6216\u52a9\u6559\u3002","title":"1.2.1 \u5c06Visual Studio Code\u8fde\u63a5\u5230\u5b9e\u9a8c\u5e73\u53f0"},{"location":"remote_env/#_2","text":"","title":"\u9644\u5f55"},{"location":"remote_env/#_3","text":"","title":"\u4e00\u4e9b\u8fdb\u9636\u6307\u5f15"},{"location":"remote_env/#ssh","text":"\u6709\u6ca1\u6709\u611f\u89c9\u6bcf\u6b21\u90fd\u8981\u8f93\u5165\u5bc6\u7801\u975e\u5e38\u9ebb\u70e6\uff1fssh\u5bc6\u94a5\u53ef\u4ee5\u8ba9\u8ba4\u8bc1\u6d41\u7a0b\u81ea\u52a8\u5316\uff0c\u5927\u5927\u89e3\u653e\u53cc\u624b\u3002\u5728 \u672c\u5730 windows\u4e0b\uff0c\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u6253\u5f00CMD\uff0c\u8f93\u5165 ssh-keygen \u8ddf\u968f\u6307\u5f15\uff0c\u4e00\u8def\u56de\u8f66\uff0c\u4fbf\u53ef\u5b8c\u6210ssh\u5bc6\u94a5\u7684\u751f\u6210\u3002 \u8bf7\u52a1\u5fc5\u4fdd\u5b58\u597d\u81ea\u5df1\u7684\u79c1\u94a5\uff0c\u4e0d\u8981\u6cc4\u9732\uff01 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u79c1\u94a5\u52a0\u5165\u5230\u81ea\u5df1\u7684\u8eab\u4efd\u8ba4\u8bc1\u4e2d\u3002\u5728\u7ec8\u7aef\u7ee7\u7eed\u8f93\u5165\uff1a ssh-add \u4f60\u7684\u79c1\u94a5\u7684\u5b8c\u6574\u8def\u5f84 # \u4f8b\u5982\uff0c\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u6211\u5e94\u8be5\u952e\u5165ssh-add C:\\Users\\willson\\.ssh\\id_rsa_priv_20210909 \u5728\u4f60\u7684Windows\u4e0a\u5c06\u516c\u94a5\u6587\u4ef6\u6253\u5f00\uff08\u7528\u4f60\u559c\u6b22\u7684\u7eaf\u6587\u672c\u7f16\u8f91\u5668\uff0c\u6bd4\u5982\u8bb0\u4e8b\u672c\u6216\u8005VS Code\uff09\uff0c\u590d\u5236\u5176\u4e2d\u7684\u5185\u5bb9\u3002 \u6700\u540e\uff0c\u767b\u5f55\u4f60\u60f3\u8981\u5feb\u6377\u8ba4\u8bc1\u7684\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u7ec8\u7aef\uff0c\u5e76\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff1a mkdir -p ~/.ssh vi ~/.ssh/authorized_keys \u8fd9\u4f1a\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u7f16\u8f91\u754c\u9762\u3002\u6309\u4e0b i \u6309\u952e\uff0c\u8fdb\u5165\u7f16\u8f91\u6a21\u5f0f\uff0c\u5e76\u7c98\u8d34\u5230\u4e0a\u9762\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u7ec8\u7aef\u4e2d\u7f16\u8f91\u754c\u9762\u7684\u4e00\u4e2a\u65b0\u884c\u91cc\u3002\u6309\u4e0b Esc \uff0c\u6309\u4e0b :wq \u53ef\u4fdd\u5b58\u5e76\u9000\u51fa\u3002\u5982\u679c\u4e0d\u653e\u5fc3\uff0c\u53ef\u4ee5 cat ~/.ssh/authorized_keys \u5e76\u68c0\u67e5\u8f93\u51fa\u548c\u4f60\u521a\u624d\u8d34\u8fdb\u53bb\u7684\u662f\u4e0d\u662f\u4e00\u6837\u7684\u3002 \u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u4e0b\u6b21\u4f60\u4eceWindows\u767b\u9646\u65f6\uff0c\u5e94\u8be5\u5c31\u65e0\u9700\u5bc6\u7801\u8ba4\u8bc1\u4e86\u3002","title":"\u4f7f\u7528ssh\u5bc6\u94a5\u5feb\u6377\u8ba4\u8bc1"},{"location":"remote_env/#visual-studio-code","text":"\u6709\u6ca1\u6709\u6000\u5ff5Visual Studio\u3001CodeBlock\u7b49IDE\u4e2d\u4fbf\u6377\u7684\u4e00\u952e\u8fd0\u884c\u529f\u80fd\uff1f\u6ca1\u5173\u7cfb\uff0c\u5b8c\u5907\u7684\u63d2\u4ef6\u5e02\u573a\u914d\u5408\u81ea\u52a8\u5316\u811a\u672c\u53ef\u4ee5\u5b8c\u6210\u4f60\u7684\u4e00\u5207\u529f\u80fd\u9700\u6c42\uff01 \u4e0b\u7565\uff1a\u611f\u5174\u8da3\u7684\u8bdd\u53ef\u4ee5\u4e86\u89e3\u4e00\u4e0bIntelli Sense\u3001MakeFile\u4ee5\u53caVSCode\u4e2d\u7684Task\u3002","title":"Visual Studio Code\uff1a\u8fdb\u9636\u4f7f\u7528"},{"location":"remote_env/#qa","text":"","title":"Q&amp;A"},{"location":"remote_env/#_4","text":"\u4e3b\u8981\u662f\u5b9e\u9a8c\u642d\u8d77\u6765\u6bd4\u8f83\u9ebb\u70e6\u3002\u6709\u51e0\u4e2a\u9009\u9879\u53ef\u4ee5\u9009\u62e9\uff0c1\u662f\u642d\u5efa\u4e00\u53f0Linux\u865a\u62df\u673a\uff0c2\u662f\u5728\u81ea\u5df1\u7535\u8111\u4e0a\u542f\u7528WSL\uff08Windows Subsystem for Linux\uff09\uff0c3\u662f\u6574\u4e00\u53f0\u8fd0\u884cLinux\u7684\u7535\u8111\u2014\u2014\u90fd\u53ef\u4ee5\uff0c\u4f46\u662f\u90fd\u633a\u9ebb\u70e6\u3002\u6211\u4eec\u5e2e\u4f60\u628a\u914d\u7f6e\u7684\u9ebb\u70e6\u4e8b\u5148\u505a\u5b8c\u4e86\uff0c\u4e8e\u662f\u4f60\u5c31\u53ef\u4ee5\u4e13\u5fc3\u4e8e\u5b9e\u9a8c\u672c\u8eab\u3002\u65e0\u8bba\u4f60\u7684\u7535\u8111\u6027\u80fd\u5982\u4f55\uff0c\u65e0\u8bba\u4f60\u662f\u5728\u5bbf\u820d\u3001\u5b9e\u9a8c\u5ba4\u8fd8\u662f\u81ea\u4e60\u5ba4\uff0c\u53ea\u8981\u4f60\u8fd8\u80fd\u8fde\u4e0a\u6821\u56ed\u7f51\uff0c\u4f60\u5c31\u80fd\u5b8c\u6210\u4f60\u7684\u5b9e\u9a8c\u3002","title":"\u4e3a\u4f55\u8981\u4f7f\u7528\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\uff1f"},{"location":"remote_env/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"remote_env/#windows-10","text":"","title":"\u6211\u4e0d\u662fWindows 10\u7cfb\u7edf\uff0c\u8fd9\u4f1a\u5e26\u6765\u4ec0\u4e48\u95ee\u9898\u5417\uff1f"},{"location":"remote_env/#linuxmacos","text":"Visual Studio Code\u4e5f\u6709Linux\u7248\u548cmacOS\u7248\uff0c\u5177\u4f53\u64cd\u4f5c\u5927\u540c\u5c0f\u5f02\uff0c\u6bd5\u7adf\u73af\u5883\u4e3b\u8981\u5728\u670d\u52a1\u5668\u4e0a\u3002","title":"\u6211\u5728\u4f7f\u7528Linux/macOS\uff1f"},{"location":"remote_env/#windowswindows-10","text":"\u8bf7\u66f4\u65b0\u4f60\u7684\u7cfb\u7edf\u3002\u4f7f\u7528\u8fc7\u65f6\u7684\u7cfb\u7edf\u6709\u5404\u79cd\u5404\u6837\u7684\u98ce\u9669\uff0c\u5176\u4e2d\u6700\u5927\u7684\u662f\u4e0e\u65f6\u4ee3\u8131\u8f68\u3002","title":"\u6211\u6b63\u5728\u4f7f\u7528\u65e7\u7684Windows\u7248\u672c/\u6211\u6ca1\u6709\u66f4\u65b0\u6211\u7684Windows 10\u7cfb\u7edf\uff1f"},{"location":"remote_env/#windows-11","text":"\u8fd9\u7bc7\u6559\u7a0b\u5b8c\u5168\u517c\u5bb9Windows 11\u3002\u7b14\u8005\u6b63\u5728\u7528\u7684\u5c31\u662fWindows 11\u3002","title":"\u6211\u6b63\u5728\u4f7f\u7528Windows 11\uff1f"},{"location":"remote_env/#_5","text":"","title":"\u6211\u8f93\u5165\u7684\u6240\u6709\u547d\u4ee4\u770b\u8d77\u6765\u90fd\u662f\u5bf9\u7684\uff0c\u4f46\u662f\u4e3a\u4ec0\u4e48\u8fd0\u884c\u5931\u8d25\u4e86\uff1f"},{"location":"remote_env/#_6","text":"\u786e\u4fdd\u4f60\u8f93\u5165\u7684\u662f\u6b63\u5e38\u7684\u534a\u89d2\u82f1\u6587\u5b57\u7b26\u4e0e\u82f1\u6587\u6807\u70b9\u7b26\u53f7\uff0c\u5982\u56fe\u6240\u793a\uff1a \u8fd9\u53ef\u4ee5\u901a\u8fc7\u4e00\u8d77\u6309\u4e0bshift+\u7a7a\u683c\uff0c\u6216\u8005\u5207\u6362\u5230\u82f1\u6587\u8f93\u5165\u6cd5\u89e3\u51b3\u3002 \u6c38\u8fdc\u4e0d\u8981\u5728\u4e2d\u6587\u8f93\u5165\u6cd5\u4e0b\u8f93\u5165\u547d\u4ee4\uff01","title":"\u5168\u89d2\u6807\u70b9\u7b26\u53f7/\u82f1\u6587\u5b57\u7b26\uff1f"},{"location":"remote_env/#xv6","text":"\u540c\u65f6\u6309\u4e0b Ctrl + A \uff0c\u63a5\u7740\u5168\u90e8\u677e\u5f00\uff0c\u518d\u6309\u4e0b x \u4ee5\u9000\u51faQEMU\u3002","title":"\u5982\u4f55\u9000\u51faXV6\uff1f"},{"location":"remote_env/#vscodebad-owner-or-permission","text":"\u89e3\u51b3\u65b9\u6cd5\uff1a\u8fdb\u5165\u8def\u5f84C:\\Users\\\u7528\u6237\u540d.ssh\uff0c\u53f3\u51fbconfig\u6587\u4ef6\u8fdb\u5165\u5c5e\u6027\u4e2d\u9ad8\u7ea7\u5b89\u5168\u7ba1\u7406\uff0c\u9009\u62e9\u7981\u6b62\u7ee7\u627f\uff0c\u5e76\u4e14\u5220\u9664\u6240\u6709\u6b64\u5bf9\u8c61\u4e2d\u7ee7\u627f\u7684\u6743\u9650\u3002 \u5177\u4f53\u53ef\u4ee5\u67e5\u770b\uff1a https://www.cnblogs.com/Akkuman/p/11187776.html","title":"VSCode\u8fde\u63a5\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u65f6\u51fa\u73b0bad owner or permission\u62a5\u9519\uff1f"},{"location":"remote_env_gdb/","text":"\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u73af\u5883\u56fe\u5f62\u5316\u8c03\u8bd5\u6307\u5357 \u00b6 \u8c03\u8bd5\u8bf4\u660e \u901a\u5e38\u6765\u8bf4\uff0c\u4f7f\u7528\u7b80\u5355\u7c97\u66b4\u7684 printf\u5927\u6cd5 \uff08\u5728\u7279\u5b9a\u7684\u5730\u65b9\u6253\u5370\u65e5\u5fd7\uff09\u5c31\u80fd\u591f\u5904\u7406\u7edd\u5927\u591a\u6570\u7684bug\u3002\u4f46\u662f\u5bf9\u4e8e\u5927\u578b\u7684\u9879\u76ee\u5f00\u53d1\u6216\u6570\u91cf\u8d85\u591a\u7684\u6e90\u7801\uff0cprintf\u5927\u6cd5\u5c31\u4e0d\u80fd\u5feb\u901f\u5730\u53bb\u5b9a\u4f4d\u95ee\u9898\u6240\u5728\u3002\u529f\u80fd\u5f3a\u5927\u7684GDB\u8c03\u8bd5\u662fLinux\u7cfb\u7edf\u4e0b\u7684\u4e00\u4e2a\u7a0b\u5e8f\u8c03\u8bd5\u5229\u5668\uff0c\u4f7f\u7528GDB\u8c03\u8bd5\u53ef\u4ee5\u8bf4\u662f\u4f5c\u4e3aLinux\u4e0b\u7684\u7a0b\u5e8f\u5458\u5e94\u5f53\u8981\u638c\u63e1\u7684\u4e00\u5927\u6280\u80fd\u3002\u7136\u800c\uff0cGDB\u56e0\u5176\u547d\u4ee4\u884c\u7684\u65b9\u5f0f\u60f3\u5fc5\u4f1a\u6321\u4f4f\u4e86\u4e00\u5927\u6ce2\u540c\u5b66\uff0c\u9ed8\u9ed8\u5730\u7ee7\u7eed\u4f7f\u7528printf\u3002\u90a3\u6709\u6ca1\u6709\u5e26\u56fe\u5f62\u5316\u8c03\u8bd5\u754c\u9762\u7684\u8c03\u8bd5\u65b9\u6cd5\u5462\uff1f \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4e3a\u540c\u5b66\u4eec\u4ecb\u7ecd\u8c03\u8bd5\u624b\u6bb5\u7684\u91cd\u5934\u620f\uff1a\u4f7f\u7528VS Code\u6765\u8c03\u8bd5xv6 :-) \u4e3a\u4e86\u7ed9\u540c\u5b66\u4eec\u6f14\u793a\u5982\u4f55\u7528VSCode\u56fe\u5f62\u5316\u8c03\u8bd5XV6\uff0c\u6211\u4eec\u5f55\u5236\u4e86\u4e24\u4e2a\u6f14\u793a\u89c6\u9891\uff1a \u5982\u679c\u89c6\u9891\u4e0d\u592a\u6e05\u6670\uff0c\u5efa\u8bae\u5230bilibili\u4e0a\u89c2\u770b\u3002 \u30101. VSCode\u8c03\u8bd5xv6\u5185\u6838\u4ee3\u7801\u3011 https://www.bilibili.com/video/BV1ZB4y1E7X5?share_source=copy_web&vd_source=a822dcda3537564ccdd0bb45aa0afe33 \u30102. VSCode\u8c03\u8bd5xv6\u7528\u6237\u4ee3\u7801\u3011 https://www.bilibili.com/video/BV1i14y1Y7ZZ?share_source=copy_web&vd_source=a822dcda3537564ccdd0bb45aa0afe33 \u6ce8\u610f\u4e8b\u9879 \u5982\u679c\u4e0d\u60f3\u4f7f\u7528VS Code\u8c03\u8bd5\uff0c\u8fd8\u662f\u60f3\u5728\u8fdc\u7a0b\u5b9e\u9a8c\u73af\u5883\u4f7f\u7528gdb\u547d\u4ee4\u884c\u7684\u540c\u5b66\uff0c\u8bf7\u4f7f\u7528\u53ef\u4ee5\u652f\u6301\u591a\u79cd\u786c\u4ef6\u4f53\u7cfb\u67b6\u6784\u7684\u201cgdb-multiarch\u201d\u800c\u975e\u201cgdb\u201d\u6216\u8005\u201criscv64-unknown-elf-gdb\u201d\u3002 \u6253\u5f00\u7ec8\u7aef\uff0c\u5230xv6-labs-2020\u76ee\u5f55\u4e0b\u8f93\u5165\uff1a make qemu-gdb \u6253\u5f00\u53e6\u5916\u4e00\u4e2a\u7ec8\u7aef\uff0c\u5230xv6-labs-2020\u76ee\u5f55\u4e0b\u8f93\u5165 gdb-multiarch \u4f7f\u7528\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u548cVS Code\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5feb\u6377\u5730\u4f7f\u7528\u56fe\u5f62\u5316\u754c\u9762\u5b8c\u6210\u8c03\u8bd5\u529f\u80fd\u3002\u4ee5\u4e0b\u662f\u8bbe\u7f6e\u6b65\u9aa4\u3002 1. \u8bbe\u7f6eGDB\u4fe1\u4efb \u00b6 \u5728\u7ec8\u7aef\u4e2d\uff0c\u8f93\u5165\uff1a echo \"set auto-load safe-path /\" >> ~/.gdbinit \u8fd9\u4f1a\u5173\u95edgdb\u7684autoload\u4fe1\u4efb\u673a\u5236\u2014\u2014\u522b\u62c5\u5fc3\uff0c\u4f60\u4eec\u6ca1\u6709\u7ba1\u7406\u5458\u6743\u9650\uff0c\u641e\u4e0d\u574f\u8fdc\u7a0b\u73af\u5883\u7684\u3002 2. \u83b7\u53d6\u4e13\u5c5eGDB\u7aef\u53e3\u53f7 \u00b6 \u63a5\u4e0b\u6765\uff0c\u83b7\u53d6\u4f60\u4e13\u5c5e\u7684GDB\u7aef\u53e3\u53f7\u3002\u5728\u63a7\u5236\u53f0\u8f93\u5165 expr $(id -u) % 5000 + 25000 \u5e76\u56de\u8f66\uff0c\u4f60\u5e94\u8be5\u80fd\u5f97\u5230\u4e00\u4e32\u6570\u5b57\uff1a ldap_example@OSLabExecNode0:~$ expr $( id -u ) % 5000 + 25000 25001 // \u2190 \u8fd9\u4e2a \u8bf7\u8bb0\u597d\u8fd9\u4e32\u6570\u5b57\uff0c\u540e\u9762\u4f1a\u7528\u5230\u3002 3. \u8bbe\u7f6eVS Code \u00b6 \u9996\u5148 \u786e\u8ba4\u4f60\u7684VS Code\u5de5\u4f5c\u533a\u8def\u5f84\u662f\u5426\u662f\u4f60\u7684xv6\u8def\u5f84\uff0c\u6ca1\u6709\u989d\u5916\u5d4c\u5957\u4e00\u5c42\u6587\u4ef6\u5939 \u3002\u6309\u4e0b Ctrl+` \uff0c\u547c\u51fa\u7ec8\u7aef\uff0c\u8f93\u5165 ls \u3002\u4f60\u5e94\u8be5\u4f1a\u770b\u5230\u5982\u4e0b\u60c5\u666f\uff1a ldap_example@OSLabExecNode0:~/xv6-labs-2020$ ls conf fs.img grade-lab-util gradelib.py gradelib.pyc kernel LICENSE Makefile mkfs README user \u5982\u679c\u4e0d\u662f\uff0c\u6253\u5f00\u65b0\u7684\u5de5\u4f5c\u533a\uff0c\u9009\u62e9xv6\u6240\u5728\u7684\u6587\u4ef6\u5939\u6253\u5f00\u5373\u53ef\u3002 \u5728VS Code\u5de6\u4fa7\uff0c\u70b9\u51fb\u6269\u5c55\u9009\u9879\uff0c\u641c\u7d22\u3001\u5b89\u88c5 Native Debug \u63d2\u4ef6 \uff0c\u70b9\u51fb\u5b89\u88c5\uff1a \u63d2\u4ef6\u63a8\u8350 \u540c\u65f6\uff0c\u6211\u4eec\u4e5f\u5f3a\u70c8\u63a8\u8350\u4f60\u5b89\u88c5VS Code\u7684C/C++\u63d2\u4ef6\u3002\u8fd9\u4f1a\u7ed9\u4f60\u5e26\u6765\u81ea\u52a8\u8865\u5168\u3001Ctrl-\u70b9\u51fb\u8df3\u8f6c\u7b49\u5404\u79cd\u65b9\u4fbf\u7684\u529f\u80fd\u3002 \u5728VS Code\u5de6\u4fa7\uff0c\u70b9\u51fb\u201c\u8fd0\u884c\u548c\u8c03\u8bd5\u201d\u9009\u9879\uff0c\u5982\u56fe\uff1a \u9009\u62e9 \u521b\u5efalaunch.json\u6587\u4ef6 \uff0c\u9009\u62e9GDB\u3002 \u8fd9\u4f1a\u6253\u5f00\u4e00\u4e2a\u540d\u4e3a launch.json \u7684\u6587\u4ef6\u3002\u5c06\u5176\u4e2d\u5185\u5bb9\u5168\u90e8\u66ff\u6362\u4e3a\u5982\u4e0b\uff1a { \"version\" : \"0.2.0\" , \"configurations\" : [ { \"type\" : \"gdb\" , \"request\" : \"attach\" , \"name\" : \"Attach to gdbserver\" , \"executable\" : \"${workspaceRoot}/kernel/kernel\" , \"gdbpath\" : \"gdb-multiarch\" , \"remote\" : true , \"target\" : \"127.0.0.1:\u6b64\u524d\u4f60\u5f97\u5230\u7684GDB\u7aef\u53e3\u53f7\" , \"cwd\" : \"${workspaceRoot}\" , \"setupCommands\" : { \"text\" : \"source ${workspaceFolder}/.gdbinit\" } } ] } \u5176\u4e2d\uff0c\u7b2c\u5341\u884c \"target\": \"127.0.0.1:\u6b64\u524d\u4f60\u5f97\u5230\u7684GDB\u7aef\u53e3\u53f7\", \u7b2c\u4e8c\u4e2a\u5192\u53f7\u540e\u4e2d\u6587\u5185\u5bb9 \u66ff\u6362 \u4e3a\u6b64\u524d\u4f60\u901a\u8fc7 expr $(id -u) % 5000 + 25000 \u5f97\u5230\u7684\u6570\u5b57\uff0c\u6bd4\u598225001\u3002Ctrl+S\u4ee5\u4fdd\u5b58\u3002 \u5982\u6b64\uff0c\u914d\u7f6e\u4fbf\u5ba3\u544a\u5b8c\u6210\uff0c\u53ef\u4ee5\u4f7f\u7528\u3002 4. \u57fa\u7840\u4f7f\u7528\u6559\u5b66 \u00b6 \u6ce8\u610f \u9ed8\u8ba4\u542f\u7528\u7684\u662fxv6\u5185\u6838\u7684\u8c03\u8bd5\u3002\u82e5\u8981\u8c03\u8bd5\u7528\u6237\u7a0b\u5e8f\uff0c\u65b9\u6cd5\u53c2\u89c1\u4e0b\u65b9 4.4.4 \u7528\u6237\u6001\u7a0b\u5e8f\u8c03\u8bd5 \u8282\u3002 \u4e3a\u6f14\u793a\u8d77\u89c1\uff0c\u6211\u4eec\u5728 kernel/main.c \u7684\u7b2c13\u884c\u6253\u4e0b\u4e00\u4e2a\u65ad\u70b9\uff0c\u5982\u56fe\u3002 \u65ad\u70b9\u53ef\u4ee5\u9760\u4f7f\u7528\u9f20\u6807\u70b9\u51fb\u884c\u53f7\u5de6\u4fa7\u8bbe\u7f6e\u3002 \u5728\u4e0b\u65b9\u547d\u4ee4\u884c\u8f93\u5165 make qemu-gdb \u3002qemu\u4f1a\u81ea\u52a8\u542f\u52a8\uff0cgdb\u5f00\u59cb\u7b49\u5f85\u63a5\u5165\u3002\u6309\u4e0bF5\uff0c \u6216\u8005 \u70b9\u51fb\u5de6\u4fa7\u6309\u94ae\u8fd0\u884c\u4e0e\u8c03\u8bd5\uff0c\u5e76\u70b9\u51fb\u5de6\u4e0a\u89d2\u7eff\u8272\u4e09\u89d2\uff08Attach to gdb)\uff1a \u73b0\u5728\uff0c\u5185\u6838\u6210\u529f\u8fd0\u884c\uff0c\u5e76\u4e14\u505c\u6b62\u5728\u4e86\u65ad\u70b9\u5904\uff0c\u5982\u56fe\u6240\u793a\uff1a \u8fd9\u8bc1\u660e\u4e86\u6211\u4eec\u7684\u914d\u7f6e\u4e0eGDB\u8fd0\u884c\u6b63\u5e38\u3002 \u4e0a\u65b9\u7684\u6570\u4e2a\u6309\u952e\uff0c\u5206\u522b\u662f\u201c\u8fd0\u884c\u201d\u3001\u201c\u5355\u6b65\u8df3\u8fc7\uff08\u4e0b\u4e00\u884c\uff09\u201d\uff0c\u201c\u5355\u6b65\u8c03\u8bd5\uff08\u6b65\u5165\u51fd\u6570\uff09\u201d\uff0c\u201c\u5355\u6b65\u8df3\u51fa\uff08\u8df3\u51fa\u51fd\u6570\uff09\u201d\uff0c\u201c\u56de\u9000\uff08\u4e0d\u652f\u6301\uff09\u201d\uff0c\u201c\u53cd\u5411\uff08\u4e0d\u652f\u6301\uff09\u201d\uff0c\u201c\u91cd\u542f\uff08\u4e0d\u652f\u6301\uff09\u201d\uff0c\u201c\u65ad\u5f00\u201d\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u6ce8\u610f \u6bcf\u6b21\u8c03\u8bd5\u5b8c\u6210\uff0c\u52a1\u5fc5\u4f7f\u7528\u7ea2\u8272\u6309\u94ae \u65ad\u5f00 GDB\u8c03\u8bd5\uff0c\u5e76\u5728\u547d\u4ee4\u884c\u4e2d Ctrl-A, X \u4ee5\u505c\u6b62qemu\u3002 \u6ce8\u610f \u8fd0\u884c\u65f6\u4e0d\u5e94\u5bf9\u6e90\u6587\u4ef6\u8fdb\u884c\u4efb\u4f55\u4fee\u6539\u3002\u6b64\u65f6\u4fee\u6539\u5e76\u65e0\u4efb\u4f55\u610f\u4e49\u3002\u5982\u679c\u9700\u8981\u66f4\u6539\u7a0b\u5e8f\uff0c\u8bf7\u505c\u6b62\u8c03\u8bd5\u3001\u5b8c\u6210\u4fee\u6539\u518d\u91cd\u65b0\u5f00\u59cb\u8c03\u8bd5\u3002 \u70b9\u51fb\u5355\u6b65\uff0c\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u8bed\u53e5\u98de\u7684\u5230\u5904\u90fd\u662f\u3002\u8fd9\u662f\u56e0\u4e3a\uff0cxv6\u5b9e\u9a8c\u65f6\u9ed8\u8ba4\u662f\u5f00\u542f\u591a\u6838\u5904\u7406\u7684\u3002\u5982\u4e0b\u56fe\u5de6\u4fa7\u6240\u793a\uff0c\u73b0\u5728\u6709\u4e09\u4e2a\u7ebf\u7a0b\u5728\u540c\u65f6\u8fd0\u884c\uff0c\u4ee3\u8868\u4e09\u9897CPU\u6838\u5fc3\uff1a \u6ce8\u610f \u5982\u679c\u4e0d\u60f3\u5f00\u542f\u591a\u6838\u5fc3\uff0c\u53ef\u4ee5\u5728\u8fd0\u884c make qemu-gdb \u65f6\u4f7f\u7528 CPUS=1 \uff0c\u4ee5\u5355\u6838\u6a21\u5f0f\u542f\u52a8\uff0c\u5373\u8f93\u5165\u547d\u4ee4\u53d8\u4e3a make qemu-gdb CPUS=1 \u3002 \u6ce8\u610f \u5f00\u542f\u591a\u6838\u5fc3\u662f\u8bb8\u591alab\u68c0\u67e5\u7684\u5fc5\u8981\u6761\u4ef6\uff0c\u56e0\u4e3a\u6709\u4e9blab\u4e0b\u9700\u8981\u5904\u7406\u591a\u6838\u5fc3\u4e4b\u95f4\u7ade\u4e89\u95ee\u9898\u3002\u624b\u52a8\u6307\u5b9aCPUS\u4ec5\u7528\u4e8e\u8c03\u8bd5\u7528\u9014\uff0c\u5982\u679c\u4f60\u63d0\u4ea4\u7684\u4ee3\u7801\u4ec5\u53ef\u5728\u5355\u6838\u4e0b\u8fd0\u884c\u3001\u800c\u4e0d\u80fd\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\u8fd0\u884c\uff0c\u4f60\u5c06\u65e0\u6cd5\u5f97\u5230\u5206\u6570\u6216\u53ea\u80fd\u5f97\u5230\u90e8\u5206\u5206\u6570\u3002\u6b64\u65f6\u4f60\u5e94\u5f53\u5173\u6ce8\u9501\u4e0e\u7ade\u4e89\u76f8\u5173\u7684\u95ee\u9898\u3002 \u4e3a\u4e86\u4fbf\u4e8e\u6f14\u793a\u8d77\u89c1\uff0c\u540e\u7eed\u4ee5\u5355\u6838\u6a21\u5f0f\u6267\u884c\u3002 4.1 \u5355\u6b65\u8df3\u8fc7 \u00b6 \u5de6\u4fa7\u7b2c\u4e8c\u4e2a\u6309\u94ae\u4e3a\u5355\u6b65\u8df3\u8fc7\uff08\u5411\u4e0b\u4e00\u884c\uff09\u6309\u94ae\u3002\u70b9\u51fb\u5b83\u53ef\u4ee5\u8ba9\u7a0b\u5e8f\u5411\u4e0b\u8fd0\u884c\u4e00\u884c\u3002\u5982\u4e0b\u6240\u793a\u4e3a\u521d\u6001\uff1a \u6309\u4e0b\u5355\u6b65\u8df3\u8fc7\u6309\u94ae\uff0c\u5219\u7a0b\u5e8f\u5411\u4e0b\u6267\u884c\u4e00\u884c\uff1a 4.2 \u65ad\u70b9\u529f\u80fd \u00b6 \u8fd0\u884c\u65f6\u4e5f\u53ef\u8bbe\u7f6e\u65ad\u70b9\u3002\u7a0b\u5e8f\u5c06\u5728\u8fd0\u884c\u5230\u65ad\u70b9\u65f6\u505c\u6b62\u3002\u70b9\u51fb\u884c\u53f7\u5de6\u4fa7\u5373\u53ef\u8bbe\u7f6e\u65ad\u70b9\u3002\u4ee5\u8be5\u72b6\u6001\u4e3a\u521d\u6001\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u572817\u884c\u5904\u6709\u4e00\u4e2a\u672a\u89e6\u53d1\u7684\u65ad\u70b9\uff1a \u70b9\u51fb\u201c\u8fd0\u884c\u201d\uff08\u5de6\u4fa7\u7b2c\u4e00\u4e2a\u6309\u94ae\uff09\uff0c\u7a0b\u5e8f\u5c06\u81ea\u52a8\u8fd0\u884c\u5230\u4e0b\u4e00\u4e2a\u65ad\u70b9\u5e76\u505c\u6b62\uff1a \u4ece\u8f93\u51fa\u53ef\u89c1\u5176\u8f93\u51fa\u4e86\u4e00\u4e2a\u56de\u8f66\uff0c\u5e76\u505c\u6b62\u5728\u4e86\u8be5\u8bed\u53e5\u6267\u884c\u4e4b\u524d\u3002 4.3 \u5355\u6b65\u8c03\u8bd5\uff08\u6b65\u5165\u51fd\u6570\uff09\u3001\u5355\u6b65\u8df3\u51fa\u4e0e\u5c40\u90e8\u53d8\u91cf \u00b6 \u4e0a\u56de\u6211\u4eec\u505c\u5728\u4e86\u4e00\u4e2a printf \u5904\u3002\u6211\u4eec\u73b0\u5728\u5c06\u8fdb\u5165 printf \u51fd\u6570\u5185\u90e8\u8fdb\u884c\u7814\u7a76\u3002\u6211\u4eec\u70b9\u51fb\u5355\u6b65\u8c03\u8bd5\u6309\u94ae\uff08\u5de6\u6570\u7b2c3\u4e2a\uff09\uff0c\u8fd9\u4f1a\u5e26\u6211\u4eec\u8fdb\u5165 printf \u51fd\u6570\u7684\u7b2c\u4e00\u6761\u53ef\u6267\u884c\u8bed\u53e5\uff1a \u6b64\u65f6\uff0c\u5de6\u4e0a\u89d2\u4f1a\u663e\u793a\u5f53\u524d\u7684\u5c40\u90e8\u53d8\u91cf\u3002 <optimized out> \u8868\u660e\u5176\u5df2\u88ab\u4f18\u5316\u6389\u4e0d\u53ef\u89c1\uff0c\u8fd9\u6709\u53ef\u80fd\u56e0\u4e3a\u5176 \u6682\u65f6\u5c1a\u672a\u88ab\u521d\u59cb\u5316 \u3002\u5982\u56fe\uff0c\u7ee7\u7eed\u4f7f\u7528\u5355\u6b65\u8df3\u8fc7\uff08\u4e0b\u4e00\u884c\uff09\uff0c\u8fdb\u5165\u7b2c78\u884c\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u90e8\u5206\u6b64\u524d\u663e\u793a <optimized out> \u7684\u53d8\u91cf\u5df2\u7ecf\u53ef\u89c1\uff1a \u590d\u6742\u7684\u53d8\u91cf\uff08\u5982\u7ed3\u6784\u4f53\uff09\u53ef\u4ee5\u5c55\u5f00\u4ee5\u67e5\u770b\u5185\u5bb9\u3002 \u5f53\u4f60\u5b8c\u6210\u8be5\u51fd\u6570\u5904\u7684\u8c03\u8bd5\u4e0e\u7814\u7a76\uff0c\u53ef\u4ee5\u70b9\u51fb\u5355\u6b65\u8df3\u51fa\uff08\u5de6\u4fa7\u7b2c4\u4e2a\u6309\u94ae\uff09\u4ee5\u8df3\u51fa\u8be5\u51fd\u6570\u3002\u5982\u56fe\uff0c\u547d\u4ee4\u884c\u5904\u663e\u793a\u5bf9\u5e94\u4fe1\u606f\uff0c\u8868\u660e\u8be5\u51fd\u6570\u5df2\u88ab\u6267\u884c\u5b8c\u6210\uff1b\u8c03\u8bd5\u5668\u73b0\u5728\u505c\u5728\u4e86\u51fd\u6570\u5916\uff1a 4.4 \u7565\u5fae\u9ad8\u7ea7\u4e00\u70b9\u7684\u6280\u5de7 \u00b6 \u4ee5\u4e0a\u5185\u5bb9\u7686\u53ef\u4f9d\u9760GUI\u5b8c\u6210\uff0c\u5e76\u4e14\u5df2\u7ecf\u53ef\u4ee5\u8986\u76d6\u7edd\u5927\u591a\u6570\u9700\u6c42\u3002\u5982\u679c\u4f60\u9700\u8981\u5176\u4ed6\u4e00\u4e9b\u9ad8\u7ea7\u529f\u80fd\uff0c\u6216\u8005\u4ec5\u4ec5\u53ea\u662f\u60f3\u8981\u4e86\u89e3\u66f4\u591a\u2014\u2014\u6b22\u8fce\u3002 \u8fd9\u90e8\u5206\u5c06\u66f4\u4e3a\u7b80\u77ed\uff0c\u5e76\u4e14\u9ed8\u8ba4\u4f60\u4eec\u62e5\u6709\u4e00\u5b9a\u7a0b\u5ea6\u7684\u524d\u7f6e\u77e5\u8bc6\u3002 \u4ee5\u4e0b\u5185\u5bb9\u5747\u9700\u8981\u901a\u8fc7\u8c03\u8bd5\u63a7\u5236\u53f0\u64cd\u4f5c\u3002 4.4.1 \u5355\u6b65\u6c47\u7f16\u8c03\u8bd5\u3001\u6c47\u7f16\u663e\u793a \u00b6 \u6211\u4eec\u4ee5Trampoline\u5904\u7684\u8c03\u8bd5\u4f5c\u4e3a\u793a\u4f8b\u3002\u6211\u4eec\u53ef\u4ee5\u8fdb\u5165userret\u5904\uff1a \u5355\u6b65\u8df3\u8fc7\u8be5\u6307\u4ee4\uff0c\u8fdb\u5165trampoline\u7684userret\u3002\u901a\u8fc7 disas $pc, $pc+20 \uff0c\u53ef\u4ee5\u663e\u793a\u63a5\u4e0b\u676520byte\u7684\u6c47\u7f16\u6307\u4ee4\uff0c\u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u786e\u5b9e\u8fdb\u5165\u4e86userret\u5904\uff1a \u6216\u8005\u4f7f\u7528 display/10i $pc \u53ef\u4ee5\u8ba9gdb\u6301\u7eed\u81ea\u52a8\u663e\u793a\u4ecepc\u8d77\u768410\u6761\u6307\u4ee4\u3002 \u6ce8\u610f \u8fd9\u91cc\u76f4\u63a5 b uservec \u662f\u4e0d\u53ef\u884c\u7684\uff0c\u8fd9\u662f\u7531Trampoline\u7684\u7279\u6b8a\u6027\u5bfc\u81f4\u7684\u3002\u53ef\u4ee5\u81ea\u884c\u9605\u8bfb\u3001\u7406\u89e3\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u3002 4.4.2 \u5bc4\u5b58\u5668\u5185\u5bb9\u5206\u6790 \u00b6 \u4f7f\u7528 info reg \u53ef\u4ee5\u663e\u793a\u5f53\u524dCPU\u7684\u5bc4\u5b58\u5668\u3002 4.4.3 \u5185\u5b58\u5185\u5bb9 \u00b6 \u4f7f\u7528 x/\u5b57\u8282\u6570b *\u5730\u5740 \u53ef\u4ee5\u5c55\u793a\u5185\u5b58\u5185\u5bb9\uff1a 4.4.4 \u7528\u6237\u6001\u7a0b\u5e8f\u8c03\u8bd5 \u00b6 xv6\u7684\u5185\u6838\u6001\u548c\u7528\u6237\u6001\u5e76\u4e0d\u5171\u4eab\u9875\u8868\uff0c\u8c03\u8bd5\u7b26\u53f7\u4e5f\u5b8c\u5168\u4e0d\u540c\u3002\u8c03\u8bd5\u7528\u6237\u7a0b\u5e8f\u9700\u8981\u52a0\u8f7d\u5bf9\u5e94\u7684\u7528\u6237\u7a0b\u5e8f\u8c03\u8bd5\u7b26\u53f7\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u8c03\u8bd5\u63a7\u5236\u53f0\u5b8c\u6210\u8fd9\u4e00\u9879\u64cd\u4f5c\u3002\u6211\u4eec\u4ee5\u8c03\u8bd5\u81ea\u5e26\u7684\u7528\u6237\u7a0b\u5e8f\u201cls\"\u4e3a\u4f8b\u3002 Step1\uff1a \u5148\u5728\u7ec8\u7aef\u8f93\u5165\u201cmake qemu-gdb\u201d\u3002 \u63a5\u7740\uff0c\u6309\u4e0bF5\uff0c \u6216\u8005 \u70b9\u51fb\u5de6\u4fa7\u6309\u94ae\u8fd0\u884c\u4e0e\u8c03\u8bd5\uff0c\u5e76\u70b9\u51fb\u5de6\u4e0a\u89d2\u7eff\u8272\u4e09\u89d2\uff08Attach to gdb)\u3002 \u518d\u70b9\u51fb\u201c\u8fd0\u884c\u201d\uff0c\u8ba9xv6\u6b63\u5e38\u8fd0\u884c\uff0c\u76f4\u5230\u51fa\u73b0\u201c$\u201d\uff0c\u8868\u793a\u5df2\u7ecf\u8fdb\u5165shell\u4e2d\u3002 Step2\uff1a \u5728\u8c03\u8bd5\u63a7\u5236\u53f0\uff0c\u8f93\u5165\u201cinterrupt\u201d\u3002 Step3\uff1a \u6211\u4eec\u77e5\u9053\uff0c\u5728\u8fdb\u5165Trampoline\u5207\u6362\u524d\u6700\u540e\u4e00\u884cC\u4ee3\u7801\u4f4d\u4e8e kernel/trap.c:128 \u5904\uff0c\u6211\u4eec\u5c06\u65ad\u70b9\u6253\u5728\u6b64\u5904\uff0c\u7ee7\u7eed\u70b9\u51fb\u201c\u8fd0\u884c\u201d\u3002 Step4\uff1a \u5728xv6\u7684shell\u4e2d\u8f93\u5165 ls \uff0c\u4ee5\u542f\u52a8 ls \u7a0b\u5e8f\uff1b\u7a0b\u5e8f\u505c\u7559\u5728 kernel/trap.c:128 \u5904\u3002 Step5\uff1a \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u786e\u8ba4\u5bf9\u5e94xv6\u7684\u7528\u6237\u7a0b\u5e8f\u5165\u53e3\u70b9\uff0c\u6211\u4eec\u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u786e\u8ba4\u5e94\u7528\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\uff1a \u901a\u8fc7readelf\u786e\u8ba4\u5e94\u7528\u7a0b\u5e8f\u5165\u53e3\u70b9\u3002 \u5728VSCode\u4e0a\u76f4\u63a5\u6253\u5f00\u8be5\u5e94\u7528\u7a0b\u5e8f\u7684\u6e90\u4ee3\u7801\uff0c\u627e\u6253main()\u51fd\u6570\uff0c\u5e76\u5728main()\u51fd\u6570\u91cc\u6253\u4e0a\u65ad\u70b9\u3002 \u4ee5\u4e0b\u5206\u522b\u4ecb\u7ecd\u4e24\u79cd\u65b9\u6cd5\uff1a \u65b9\u6cd5\u4e00: \u901a\u8fc7readelf\u786e\u8ba4\u5e94\u7528\u7a0b\u5e8f\u5165\u53e3\u70b9 ls\u7684elf\u6587\u4ef6\u4f4d\u4e8e user/_ls \uff1a lgz_stu@OSLabExecNode1:~/xv6-labs-2020$ readelf -h user/_ls ELF Header: Magic: 7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 Class: ELF64 Data: 2's complement, little endian Version: 1 (current) OS/ABI: UNIX - System V ABI Version: 0 Type: EXEC (Executable file) Machine: RISC-V Version: 0x1 Entry point address: 0x27a Start of program headers: 64 (bytes into file) Start of section headers: 25064 (bytes into file) Flags: 0x5, RVC, double-float ABI Size of this header: 64 (bytes) Size of program headers: 56 (bytes) Number of program headers: 1 Size of section headers: 64 (bytes) Number of section headers: 18 Section header string table index: 17 \u53ef\u89c1\u5176\u4e2d\u663e\u793a Entry point address: 0x27a \uff0c\u5e94\u7528\u7a0b\u5e8f\u5165\u53e3\u70b9\u4f4d\u4e8e 0x27a \u5904\u3002\u968f\u540e\uff0c\u6211\u4eec\u7528\u4e0a\u9762\u7684\u65b9\u6cd5\u5f00\u59cb\u8c03\u8bd5\uff0c\u5e76\u5c06\u65ad\u70b9\u6253\u5728\u5373\u5c06\u8fd4\u56de\u7528\u6237\u6001\u5904\u3002 \u6211\u4eec\u524d\u5f80\u8c03\u8bd5\u63a7\u5236\u53f0\uff0c\u5728\u5176\u4e2d\u8f93\u5165 b *0x27a \uff0c\u5373\u5c06\u65ad\u70b9\u7f6e\u4e8e ls \u7a0b\u5e8f\u5165\u53e3\u5904\uff1a \u65b9\u6cd5\u4e8c: \u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u6e90\u4ee3\u7801main()\u51fd\u6570\u6253\u65ad\u70b9 \u5728VSCode\u4e2d\uff0c\u6253\u5f00user/ls.c\u6587\u4ef6\uff0c\u627e\u5230main()\u51fd\u6570\uff0c\u5728\u7b2c78\u884c\u6253\u4e0a\u65ad\u70b9\u3002 \u901a\u8fc7\u4e0a\u8ff0\u4e24\u4e2a\u65b9\u6cd5\u90fd\u53ef\u4ee5\u786e\u8ba4\u5e94\u7528\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\uff0c\u5c06\u65ad\u70b9\u6253\u5728\u5e94\u7528\u7a0b\u5e8f\u7684main()\u4e0a\u3002 Step6\uff1a \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u5728\u8c03\u8bd5\u7a97\u53e3\u5de6\u4e0b\u89d2\u5220\u9664\u539f\u6709\u7684\u5185\u6838\u6001\u65ad\u70b9\uff0c\u5e76\u901a\u8fc7\u8c03\u8bd5\u63a7\u5236\u53f0\uff0c\u52a0\u8f7d ls \u7684\u8c03\u8bd5\u7b26\u53f7\u3002\u5728\u5176\u4e2d\u8f93\u5165 file user/_ls \uff1a Step7\uff1a \u70b9\u51fb\u201c\u8fd0\u884c\u201d\u3002\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u8fdb\u5165\u4e86ls.c\u7684main\u51fd\u6570\u4e2d\u3002 Step8\uff1a \u6b64\u65f6\uff0c\u53ef\u4ee5\u5728user/ls.c\u6587\u4ef6\u4e2d\u76f4\u63a5\u6253\u4e0a\u65ad\u70b9\uff0c\u4e0b\u56fe\u662f\u5728user/ls.c\u4e2d\u7684\u7b2c78\u884c\u6253\u65ad\u70b9\u3002\u5982\u679c\u5df2\u7ecf\u572878\u884c\u6253\u8fc7\u65ad\u70b9\uff0c\u53ef\u4ee5\u5ffd\u7565\u8fd9\u4e00\u6b65\u3002 Step9\uff1a \u63a5\u4e0b\u6765\uff0c\u7ee7\u7eed\u6267\u884c\u3002qemu\u5c06\u505c\u6b62\u5728 ls \u7a0b\u5e8f\u7684\u7b2c78\u884c\u3002 \u70b9\u51fb\u4e0a\u65b9\u7684\u5355\u6b65\u8c03\u8bd5\u6309\u94ae\uff0c\u6211\u4eec\u53d1\u73b0vscode\u7684GUI\u8c03\u8bd5\u5de5\u5177\u73b0\u4e5f\u4ee5\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u3002 \u6b64\u540e\u7684\u5404\u79cd\u8c03\u8bd5\u6d41\u7a0b\u4e0e\u8c03\u8bd5\u5185\u6838\u65f6\u76f8\u540c\u3002 4.4.5 \u5176\u4ed6... \u00b6 \u5269\u4e0b\u7684\u53ef\u4ee5\u81ea\u884c\u5bfb\u627eGDB\u7684\u624b\u518c\u3002\u6b64\u5916\uff0c\u7531\u4e8e\u6211\u4eec\u7684\u5b9e\u9a8c\u8fd0\u884c\u5728qemu\u4e0a\uff0c\u4e14\u4f7f\u7528\u7684\u662f\u8f83\u4e3a\u65b0\u9896\u7684RISC-V\u67b6\u6784\uff0c\u6545\u800c\u5e38\u5e38\u4f1a\u6709\u4e0d\u652f\u6301\u6216\u8005\u9519\u8bef\u7684\u60c5\u51b5\u53d1\u751f\uff0c\u8fd9\u662f\u6b63\u5e38\u7684\u3002\u540c\u5b66\u4eec\u53ef\u4ee5\u8bd5\u8bd5\u81ea\u884c\u89e3\u51b3\u95ee\u9898\u3002","title":"\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u73af\u5883\u56fe\u5f62\u5316\u8c03\u8bd5\u6307\u5357"},{"location":"remote_env_gdb/#_1","text":"\u8c03\u8bd5\u8bf4\u660e \u901a\u5e38\u6765\u8bf4\uff0c\u4f7f\u7528\u7b80\u5355\u7c97\u66b4\u7684 printf\u5927\u6cd5 \uff08\u5728\u7279\u5b9a\u7684\u5730\u65b9\u6253\u5370\u65e5\u5fd7\uff09\u5c31\u80fd\u591f\u5904\u7406\u7edd\u5927\u591a\u6570\u7684bug\u3002\u4f46\u662f\u5bf9\u4e8e\u5927\u578b\u7684\u9879\u76ee\u5f00\u53d1\u6216\u6570\u91cf\u8d85\u591a\u7684\u6e90\u7801\uff0cprintf\u5927\u6cd5\u5c31\u4e0d\u80fd\u5feb\u901f\u5730\u53bb\u5b9a\u4f4d\u95ee\u9898\u6240\u5728\u3002\u529f\u80fd\u5f3a\u5927\u7684GDB\u8c03\u8bd5\u662fLinux\u7cfb\u7edf\u4e0b\u7684\u4e00\u4e2a\u7a0b\u5e8f\u8c03\u8bd5\u5229\u5668\uff0c\u4f7f\u7528GDB\u8c03\u8bd5\u53ef\u4ee5\u8bf4\u662f\u4f5c\u4e3aLinux\u4e0b\u7684\u7a0b\u5e8f\u5458\u5e94\u5f53\u8981\u638c\u63e1\u7684\u4e00\u5927\u6280\u80fd\u3002\u7136\u800c\uff0cGDB\u56e0\u5176\u547d\u4ee4\u884c\u7684\u65b9\u5f0f\u60f3\u5fc5\u4f1a\u6321\u4f4f\u4e86\u4e00\u5927\u6ce2\u540c\u5b66\uff0c\u9ed8\u9ed8\u5730\u7ee7\u7eed\u4f7f\u7528printf\u3002\u90a3\u6709\u6ca1\u6709\u5e26\u56fe\u5f62\u5316\u8c03\u8bd5\u754c\u9762\u7684\u8c03\u8bd5\u65b9\u6cd5\u5462\uff1f \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4e3a\u540c\u5b66\u4eec\u4ecb\u7ecd\u8c03\u8bd5\u624b\u6bb5\u7684\u91cd\u5934\u620f\uff1a\u4f7f\u7528VS Code\u6765\u8c03\u8bd5xv6 :-) \u4e3a\u4e86\u7ed9\u540c\u5b66\u4eec\u6f14\u793a\u5982\u4f55\u7528VSCode\u56fe\u5f62\u5316\u8c03\u8bd5XV6\uff0c\u6211\u4eec\u5f55\u5236\u4e86\u4e24\u4e2a\u6f14\u793a\u89c6\u9891\uff1a \u5982\u679c\u89c6\u9891\u4e0d\u592a\u6e05\u6670\uff0c\u5efa\u8bae\u5230bilibili\u4e0a\u89c2\u770b\u3002 \u30101. VSCode\u8c03\u8bd5xv6\u5185\u6838\u4ee3\u7801\u3011 https://www.bilibili.com/video/BV1ZB4y1E7X5?share_source=copy_web&vd_source=a822dcda3537564ccdd0bb45aa0afe33 \u30102. VSCode\u8c03\u8bd5xv6\u7528\u6237\u4ee3\u7801\u3011 https://www.bilibili.com/video/BV1i14y1Y7ZZ?share_source=copy_web&vd_source=a822dcda3537564ccdd0bb45aa0afe33 \u6ce8\u610f\u4e8b\u9879 \u5982\u679c\u4e0d\u60f3\u4f7f\u7528VS Code\u8c03\u8bd5\uff0c\u8fd8\u662f\u60f3\u5728\u8fdc\u7a0b\u5b9e\u9a8c\u73af\u5883\u4f7f\u7528gdb\u547d\u4ee4\u884c\u7684\u540c\u5b66\uff0c\u8bf7\u4f7f\u7528\u53ef\u4ee5\u652f\u6301\u591a\u79cd\u786c\u4ef6\u4f53\u7cfb\u67b6\u6784\u7684\u201cgdb-multiarch\u201d\u800c\u975e\u201cgdb\u201d\u6216\u8005\u201criscv64-unknown-elf-gdb\u201d\u3002 \u6253\u5f00\u7ec8\u7aef\uff0c\u5230xv6-labs-2020\u76ee\u5f55\u4e0b\u8f93\u5165\uff1a make qemu-gdb \u6253\u5f00\u53e6\u5916\u4e00\u4e2a\u7ec8\u7aef\uff0c\u5230xv6-labs-2020\u76ee\u5f55\u4e0b\u8f93\u5165 gdb-multiarch \u4f7f\u7528\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u548cVS Code\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5feb\u6377\u5730\u4f7f\u7528\u56fe\u5f62\u5316\u754c\u9762\u5b8c\u6210\u8c03\u8bd5\u529f\u80fd\u3002\u4ee5\u4e0b\u662f\u8bbe\u7f6e\u6b65\u9aa4\u3002","title":"\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u73af\u5883\u56fe\u5f62\u5316\u8c03\u8bd5\u6307\u5357"},{"location":"remote_env_gdb/#1-gdb","text":"\u5728\u7ec8\u7aef\u4e2d\uff0c\u8f93\u5165\uff1a echo \"set auto-load safe-path /\" >> ~/.gdbinit \u8fd9\u4f1a\u5173\u95edgdb\u7684autoload\u4fe1\u4efb\u673a\u5236\u2014\u2014\u522b\u62c5\u5fc3\uff0c\u4f60\u4eec\u6ca1\u6709\u7ba1\u7406\u5458\u6743\u9650\uff0c\u641e\u4e0d\u574f\u8fdc\u7a0b\u73af\u5883\u7684\u3002","title":"1. \u8bbe\u7f6eGDB\u4fe1\u4efb"},{"location":"remote_env_gdb/#2-gdb","text":"\u63a5\u4e0b\u6765\uff0c\u83b7\u53d6\u4f60\u4e13\u5c5e\u7684GDB\u7aef\u53e3\u53f7\u3002\u5728\u63a7\u5236\u53f0\u8f93\u5165 expr $(id -u) % 5000 + 25000 \u5e76\u56de\u8f66\uff0c\u4f60\u5e94\u8be5\u80fd\u5f97\u5230\u4e00\u4e32\u6570\u5b57\uff1a ldap_example@OSLabExecNode0:~$ expr $( id -u ) % 5000 + 25000 25001 // \u2190 \u8fd9\u4e2a \u8bf7\u8bb0\u597d\u8fd9\u4e32\u6570\u5b57\uff0c\u540e\u9762\u4f1a\u7528\u5230\u3002","title":"2. \u83b7\u53d6\u4e13\u5c5eGDB\u7aef\u53e3\u53f7"},{"location":"remote_env_gdb/#3-vs-code","text":"\u9996\u5148 \u786e\u8ba4\u4f60\u7684VS Code\u5de5\u4f5c\u533a\u8def\u5f84\u662f\u5426\u662f\u4f60\u7684xv6\u8def\u5f84\uff0c\u6ca1\u6709\u989d\u5916\u5d4c\u5957\u4e00\u5c42\u6587\u4ef6\u5939 \u3002\u6309\u4e0b Ctrl+` \uff0c\u547c\u51fa\u7ec8\u7aef\uff0c\u8f93\u5165 ls \u3002\u4f60\u5e94\u8be5\u4f1a\u770b\u5230\u5982\u4e0b\u60c5\u666f\uff1a ldap_example@OSLabExecNode0:~/xv6-labs-2020$ ls conf fs.img grade-lab-util gradelib.py gradelib.pyc kernel LICENSE Makefile mkfs README user \u5982\u679c\u4e0d\u662f\uff0c\u6253\u5f00\u65b0\u7684\u5de5\u4f5c\u533a\uff0c\u9009\u62e9xv6\u6240\u5728\u7684\u6587\u4ef6\u5939\u6253\u5f00\u5373\u53ef\u3002 \u5728VS Code\u5de6\u4fa7\uff0c\u70b9\u51fb\u6269\u5c55\u9009\u9879\uff0c\u641c\u7d22\u3001\u5b89\u88c5 Native Debug \u63d2\u4ef6 \uff0c\u70b9\u51fb\u5b89\u88c5\uff1a \u63d2\u4ef6\u63a8\u8350 \u540c\u65f6\uff0c\u6211\u4eec\u4e5f\u5f3a\u70c8\u63a8\u8350\u4f60\u5b89\u88c5VS Code\u7684C/C++\u63d2\u4ef6\u3002\u8fd9\u4f1a\u7ed9\u4f60\u5e26\u6765\u81ea\u52a8\u8865\u5168\u3001Ctrl-\u70b9\u51fb\u8df3\u8f6c\u7b49\u5404\u79cd\u65b9\u4fbf\u7684\u529f\u80fd\u3002 \u5728VS Code\u5de6\u4fa7\uff0c\u70b9\u51fb\u201c\u8fd0\u884c\u548c\u8c03\u8bd5\u201d\u9009\u9879\uff0c\u5982\u56fe\uff1a \u9009\u62e9 \u521b\u5efalaunch.json\u6587\u4ef6 \uff0c\u9009\u62e9GDB\u3002 \u8fd9\u4f1a\u6253\u5f00\u4e00\u4e2a\u540d\u4e3a launch.json \u7684\u6587\u4ef6\u3002\u5c06\u5176\u4e2d\u5185\u5bb9\u5168\u90e8\u66ff\u6362\u4e3a\u5982\u4e0b\uff1a { \"version\" : \"0.2.0\" , \"configurations\" : [ { \"type\" : \"gdb\" , \"request\" : \"attach\" , \"name\" : \"Attach to gdbserver\" , \"executable\" : \"${workspaceRoot}/kernel/kernel\" , \"gdbpath\" : \"gdb-multiarch\" , \"remote\" : true , \"target\" : \"127.0.0.1:\u6b64\u524d\u4f60\u5f97\u5230\u7684GDB\u7aef\u53e3\u53f7\" , \"cwd\" : \"${workspaceRoot}\" , \"setupCommands\" : { \"text\" : \"source ${workspaceFolder}/.gdbinit\" } } ] } \u5176\u4e2d\uff0c\u7b2c\u5341\u884c \"target\": \"127.0.0.1:\u6b64\u524d\u4f60\u5f97\u5230\u7684GDB\u7aef\u53e3\u53f7\", \u7b2c\u4e8c\u4e2a\u5192\u53f7\u540e\u4e2d\u6587\u5185\u5bb9 \u66ff\u6362 \u4e3a\u6b64\u524d\u4f60\u901a\u8fc7 expr $(id -u) % 5000 + 25000 \u5f97\u5230\u7684\u6570\u5b57\uff0c\u6bd4\u598225001\u3002Ctrl+S\u4ee5\u4fdd\u5b58\u3002 \u5982\u6b64\uff0c\u914d\u7f6e\u4fbf\u5ba3\u544a\u5b8c\u6210\uff0c\u53ef\u4ee5\u4f7f\u7528\u3002","title":"3. \u8bbe\u7f6eVS Code"},{"location":"remote_env_gdb/#4","text":"\u6ce8\u610f \u9ed8\u8ba4\u542f\u7528\u7684\u662fxv6\u5185\u6838\u7684\u8c03\u8bd5\u3002\u82e5\u8981\u8c03\u8bd5\u7528\u6237\u7a0b\u5e8f\uff0c\u65b9\u6cd5\u53c2\u89c1\u4e0b\u65b9 4.4.4 \u7528\u6237\u6001\u7a0b\u5e8f\u8c03\u8bd5 \u8282\u3002 \u4e3a\u6f14\u793a\u8d77\u89c1\uff0c\u6211\u4eec\u5728 kernel/main.c \u7684\u7b2c13\u884c\u6253\u4e0b\u4e00\u4e2a\u65ad\u70b9\uff0c\u5982\u56fe\u3002 \u65ad\u70b9\u53ef\u4ee5\u9760\u4f7f\u7528\u9f20\u6807\u70b9\u51fb\u884c\u53f7\u5de6\u4fa7\u8bbe\u7f6e\u3002 \u5728\u4e0b\u65b9\u547d\u4ee4\u884c\u8f93\u5165 make qemu-gdb \u3002qemu\u4f1a\u81ea\u52a8\u542f\u52a8\uff0cgdb\u5f00\u59cb\u7b49\u5f85\u63a5\u5165\u3002\u6309\u4e0bF5\uff0c \u6216\u8005 \u70b9\u51fb\u5de6\u4fa7\u6309\u94ae\u8fd0\u884c\u4e0e\u8c03\u8bd5\uff0c\u5e76\u70b9\u51fb\u5de6\u4e0a\u89d2\u7eff\u8272\u4e09\u89d2\uff08Attach to gdb)\uff1a \u73b0\u5728\uff0c\u5185\u6838\u6210\u529f\u8fd0\u884c\uff0c\u5e76\u4e14\u505c\u6b62\u5728\u4e86\u65ad\u70b9\u5904\uff0c\u5982\u56fe\u6240\u793a\uff1a \u8fd9\u8bc1\u660e\u4e86\u6211\u4eec\u7684\u914d\u7f6e\u4e0eGDB\u8fd0\u884c\u6b63\u5e38\u3002 \u4e0a\u65b9\u7684\u6570\u4e2a\u6309\u952e\uff0c\u5206\u522b\u662f\u201c\u8fd0\u884c\u201d\u3001\u201c\u5355\u6b65\u8df3\u8fc7\uff08\u4e0b\u4e00\u884c\uff09\u201d\uff0c\u201c\u5355\u6b65\u8c03\u8bd5\uff08\u6b65\u5165\u51fd\u6570\uff09\u201d\uff0c\u201c\u5355\u6b65\u8df3\u51fa\uff08\u8df3\u51fa\u51fd\u6570\uff09\u201d\uff0c\u201c\u56de\u9000\uff08\u4e0d\u652f\u6301\uff09\u201d\uff0c\u201c\u53cd\u5411\uff08\u4e0d\u652f\u6301\uff09\u201d\uff0c\u201c\u91cd\u542f\uff08\u4e0d\u652f\u6301\uff09\u201d\uff0c\u201c\u65ad\u5f00\u201d\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u6ce8\u610f \u6bcf\u6b21\u8c03\u8bd5\u5b8c\u6210\uff0c\u52a1\u5fc5\u4f7f\u7528\u7ea2\u8272\u6309\u94ae \u65ad\u5f00 GDB\u8c03\u8bd5\uff0c\u5e76\u5728\u547d\u4ee4\u884c\u4e2d Ctrl-A, X \u4ee5\u505c\u6b62qemu\u3002 \u6ce8\u610f \u8fd0\u884c\u65f6\u4e0d\u5e94\u5bf9\u6e90\u6587\u4ef6\u8fdb\u884c\u4efb\u4f55\u4fee\u6539\u3002\u6b64\u65f6\u4fee\u6539\u5e76\u65e0\u4efb\u4f55\u610f\u4e49\u3002\u5982\u679c\u9700\u8981\u66f4\u6539\u7a0b\u5e8f\uff0c\u8bf7\u505c\u6b62\u8c03\u8bd5\u3001\u5b8c\u6210\u4fee\u6539\u518d\u91cd\u65b0\u5f00\u59cb\u8c03\u8bd5\u3002 \u70b9\u51fb\u5355\u6b65\uff0c\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u8bed\u53e5\u98de\u7684\u5230\u5904\u90fd\u662f\u3002\u8fd9\u662f\u56e0\u4e3a\uff0cxv6\u5b9e\u9a8c\u65f6\u9ed8\u8ba4\u662f\u5f00\u542f\u591a\u6838\u5904\u7406\u7684\u3002\u5982\u4e0b\u56fe\u5de6\u4fa7\u6240\u793a\uff0c\u73b0\u5728\u6709\u4e09\u4e2a\u7ebf\u7a0b\u5728\u540c\u65f6\u8fd0\u884c\uff0c\u4ee3\u8868\u4e09\u9897CPU\u6838\u5fc3\uff1a \u6ce8\u610f \u5982\u679c\u4e0d\u60f3\u5f00\u542f\u591a\u6838\u5fc3\uff0c\u53ef\u4ee5\u5728\u8fd0\u884c make qemu-gdb \u65f6\u4f7f\u7528 CPUS=1 \uff0c\u4ee5\u5355\u6838\u6a21\u5f0f\u542f\u52a8\uff0c\u5373\u8f93\u5165\u547d\u4ee4\u53d8\u4e3a make qemu-gdb CPUS=1 \u3002 \u6ce8\u610f \u5f00\u542f\u591a\u6838\u5fc3\u662f\u8bb8\u591alab\u68c0\u67e5\u7684\u5fc5\u8981\u6761\u4ef6\uff0c\u56e0\u4e3a\u6709\u4e9blab\u4e0b\u9700\u8981\u5904\u7406\u591a\u6838\u5fc3\u4e4b\u95f4\u7ade\u4e89\u95ee\u9898\u3002\u624b\u52a8\u6307\u5b9aCPUS\u4ec5\u7528\u4e8e\u8c03\u8bd5\u7528\u9014\uff0c\u5982\u679c\u4f60\u63d0\u4ea4\u7684\u4ee3\u7801\u4ec5\u53ef\u5728\u5355\u6838\u4e0b\u8fd0\u884c\u3001\u800c\u4e0d\u80fd\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\u8fd0\u884c\uff0c\u4f60\u5c06\u65e0\u6cd5\u5f97\u5230\u5206\u6570\u6216\u53ea\u80fd\u5f97\u5230\u90e8\u5206\u5206\u6570\u3002\u6b64\u65f6\u4f60\u5e94\u5f53\u5173\u6ce8\u9501\u4e0e\u7ade\u4e89\u76f8\u5173\u7684\u95ee\u9898\u3002 \u4e3a\u4e86\u4fbf\u4e8e\u6f14\u793a\u8d77\u89c1\uff0c\u540e\u7eed\u4ee5\u5355\u6838\u6a21\u5f0f\u6267\u884c\u3002","title":"4. \u57fa\u7840\u4f7f\u7528\u6559\u5b66"},{"location":"remote_env_gdb/#41","text":"\u5de6\u4fa7\u7b2c\u4e8c\u4e2a\u6309\u94ae\u4e3a\u5355\u6b65\u8df3\u8fc7\uff08\u5411\u4e0b\u4e00\u884c\uff09\u6309\u94ae\u3002\u70b9\u51fb\u5b83\u53ef\u4ee5\u8ba9\u7a0b\u5e8f\u5411\u4e0b\u8fd0\u884c\u4e00\u884c\u3002\u5982\u4e0b\u6240\u793a\u4e3a\u521d\u6001\uff1a \u6309\u4e0b\u5355\u6b65\u8df3\u8fc7\u6309\u94ae\uff0c\u5219\u7a0b\u5e8f\u5411\u4e0b\u6267\u884c\u4e00\u884c\uff1a","title":"4.1 \u5355\u6b65\u8df3\u8fc7"},{"location":"remote_env_gdb/#42","text":"\u8fd0\u884c\u65f6\u4e5f\u53ef\u8bbe\u7f6e\u65ad\u70b9\u3002\u7a0b\u5e8f\u5c06\u5728\u8fd0\u884c\u5230\u65ad\u70b9\u65f6\u505c\u6b62\u3002\u70b9\u51fb\u884c\u53f7\u5de6\u4fa7\u5373\u53ef\u8bbe\u7f6e\u65ad\u70b9\u3002\u4ee5\u8be5\u72b6\u6001\u4e3a\u521d\u6001\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u572817\u884c\u5904\u6709\u4e00\u4e2a\u672a\u89e6\u53d1\u7684\u65ad\u70b9\uff1a \u70b9\u51fb\u201c\u8fd0\u884c\u201d\uff08\u5de6\u4fa7\u7b2c\u4e00\u4e2a\u6309\u94ae\uff09\uff0c\u7a0b\u5e8f\u5c06\u81ea\u52a8\u8fd0\u884c\u5230\u4e0b\u4e00\u4e2a\u65ad\u70b9\u5e76\u505c\u6b62\uff1a \u4ece\u8f93\u51fa\u53ef\u89c1\u5176\u8f93\u51fa\u4e86\u4e00\u4e2a\u56de\u8f66\uff0c\u5e76\u505c\u6b62\u5728\u4e86\u8be5\u8bed\u53e5\u6267\u884c\u4e4b\u524d\u3002","title":"4.2 \u65ad\u70b9\u529f\u80fd"},{"location":"remote_env_gdb/#43","text":"\u4e0a\u56de\u6211\u4eec\u505c\u5728\u4e86\u4e00\u4e2a printf \u5904\u3002\u6211\u4eec\u73b0\u5728\u5c06\u8fdb\u5165 printf \u51fd\u6570\u5185\u90e8\u8fdb\u884c\u7814\u7a76\u3002\u6211\u4eec\u70b9\u51fb\u5355\u6b65\u8c03\u8bd5\u6309\u94ae\uff08\u5de6\u6570\u7b2c3\u4e2a\uff09\uff0c\u8fd9\u4f1a\u5e26\u6211\u4eec\u8fdb\u5165 printf \u51fd\u6570\u7684\u7b2c\u4e00\u6761\u53ef\u6267\u884c\u8bed\u53e5\uff1a \u6b64\u65f6\uff0c\u5de6\u4e0a\u89d2\u4f1a\u663e\u793a\u5f53\u524d\u7684\u5c40\u90e8\u53d8\u91cf\u3002 <optimized out> \u8868\u660e\u5176\u5df2\u88ab\u4f18\u5316\u6389\u4e0d\u53ef\u89c1\uff0c\u8fd9\u6709\u53ef\u80fd\u56e0\u4e3a\u5176 \u6682\u65f6\u5c1a\u672a\u88ab\u521d\u59cb\u5316 \u3002\u5982\u56fe\uff0c\u7ee7\u7eed\u4f7f\u7528\u5355\u6b65\u8df3\u8fc7\uff08\u4e0b\u4e00\u884c\uff09\uff0c\u8fdb\u5165\u7b2c78\u884c\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u90e8\u5206\u6b64\u524d\u663e\u793a <optimized out> \u7684\u53d8\u91cf\u5df2\u7ecf\u53ef\u89c1\uff1a \u590d\u6742\u7684\u53d8\u91cf\uff08\u5982\u7ed3\u6784\u4f53\uff09\u53ef\u4ee5\u5c55\u5f00\u4ee5\u67e5\u770b\u5185\u5bb9\u3002 \u5f53\u4f60\u5b8c\u6210\u8be5\u51fd\u6570\u5904\u7684\u8c03\u8bd5\u4e0e\u7814\u7a76\uff0c\u53ef\u4ee5\u70b9\u51fb\u5355\u6b65\u8df3\u51fa\uff08\u5de6\u4fa7\u7b2c4\u4e2a\u6309\u94ae\uff09\u4ee5\u8df3\u51fa\u8be5\u51fd\u6570\u3002\u5982\u56fe\uff0c\u547d\u4ee4\u884c\u5904\u663e\u793a\u5bf9\u5e94\u4fe1\u606f\uff0c\u8868\u660e\u8be5\u51fd\u6570\u5df2\u88ab\u6267\u884c\u5b8c\u6210\uff1b\u8c03\u8bd5\u5668\u73b0\u5728\u505c\u5728\u4e86\u51fd\u6570\u5916\uff1a","title":"4.3 \u5355\u6b65\u8c03\u8bd5\uff08\u6b65\u5165\u51fd\u6570\uff09\u3001\u5355\u6b65\u8df3\u51fa\u4e0e\u5c40\u90e8\u53d8\u91cf"},{"location":"remote_env_gdb/#44","text":"\u4ee5\u4e0a\u5185\u5bb9\u7686\u53ef\u4f9d\u9760GUI\u5b8c\u6210\uff0c\u5e76\u4e14\u5df2\u7ecf\u53ef\u4ee5\u8986\u76d6\u7edd\u5927\u591a\u6570\u9700\u6c42\u3002\u5982\u679c\u4f60\u9700\u8981\u5176\u4ed6\u4e00\u4e9b\u9ad8\u7ea7\u529f\u80fd\uff0c\u6216\u8005\u4ec5\u4ec5\u53ea\u662f\u60f3\u8981\u4e86\u89e3\u66f4\u591a\u2014\u2014\u6b22\u8fce\u3002 \u8fd9\u90e8\u5206\u5c06\u66f4\u4e3a\u7b80\u77ed\uff0c\u5e76\u4e14\u9ed8\u8ba4\u4f60\u4eec\u62e5\u6709\u4e00\u5b9a\u7a0b\u5ea6\u7684\u524d\u7f6e\u77e5\u8bc6\u3002 \u4ee5\u4e0b\u5185\u5bb9\u5747\u9700\u8981\u901a\u8fc7\u8c03\u8bd5\u63a7\u5236\u53f0\u64cd\u4f5c\u3002","title":"4.4 \u7565\u5fae\u9ad8\u7ea7\u4e00\u70b9\u7684\u6280\u5de7"},{"location":"remote_env_gdb/#441","text":"\u6211\u4eec\u4ee5Trampoline\u5904\u7684\u8c03\u8bd5\u4f5c\u4e3a\u793a\u4f8b\u3002\u6211\u4eec\u53ef\u4ee5\u8fdb\u5165userret\u5904\uff1a \u5355\u6b65\u8df3\u8fc7\u8be5\u6307\u4ee4\uff0c\u8fdb\u5165trampoline\u7684userret\u3002\u901a\u8fc7 disas $pc, $pc+20 \uff0c\u53ef\u4ee5\u663e\u793a\u63a5\u4e0b\u676520byte\u7684\u6c47\u7f16\u6307\u4ee4\uff0c\u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u786e\u5b9e\u8fdb\u5165\u4e86userret\u5904\uff1a \u6216\u8005\u4f7f\u7528 display/10i $pc \u53ef\u4ee5\u8ba9gdb\u6301\u7eed\u81ea\u52a8\u663e\u793a\u4ecepc\u8d77\u768410\u6761\u6307\u4ee4\u3002 \u6ce8\u610f \u8fd9\u91cc\u76f4\u63a5 b uservec \u662f\u4e0d\u53ef\u884c\u7684\uff0c\u8fd9\u662f\u7531Trampoline\u7684\u7279\u6b8a\u6027\u5bfc\u81f4\u7684\u3002\u53ef\u4ee5\u81ea\u884c\u9605\u8bfb\u3001\u7406\u89e3\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u3002","title":"4.4.1 \u5355\u6b65\u6c47\u7f16\u8c03\u8bd5\u3001\u6c47\u7f16\u663e\u793a"},{"location":"remote_env_gdb/#442","text":"\u4f7f\u7528 info reg \u53ef\u4ee5\u663e\u793a\u5f53\u524dCPU\u7684\u5bc4\u5b58\u5668\u3002","title":"4.4.2 \u5bc4\u5b58\u5668\u5185\u5bb9\u5206\u6790"},{"location":"remote_env_gdb/#443","text":"\u4f7f\u7528 x/\u5b57\u8282\u6570b *\u5730\u5740 \u53ef\u4ee5\u5c55\u793a\u5185\u5b58\u5185\u5bb9\uff1a","title":"4.4.3 \u5185\u5b58\u5185\u5bb9"},{"location":"remote_env_gdb/#444","text":"xv6\u7684\u5185\u6838\u6001\u548c\u7528\u6237\u6001\u5e76\u4e0d\u5171\u4eab\u9875\u8868\uff0c\u8c03\u8bd5\u7b26\u53f7\u4e5f\u5b8c\u5168\u4e0d\u540c\u3002\u8c03\u8bd5\u7528\u6237\u7a0b\u5e8f\u9700\u8981\u52a0\u8f7d\u5bf9\u5e94\u7684\u7528\u6237\u7a0b\u5e8f\u8c03\u8bd5\u7b26\u53f7\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u8c03\u8bd5\u63a7\u5236\u53f0\u5b8c\u6210\u8fd9\u4e00\u9879\u64cd\u4f5c\u3002\u6211\u4eec\u4ee5\u8c03\u8bd5\u81ea\u5e26\u7684\u7528\u6237\u7a0b\u5e8f\u201cls\"\u4e3a\u4f8b\u3002 Step1\uff1a \u5148\u5728\u7ec8\u7aef\u8f93\u5165\u201cmake qemu-gdb\u201d\u3002 \u63a5\u7740\uff0c\u6309\u4e0bF5\uff0c \u6216\u8005 \u70b9\u51fb\u5de6\u4fa7\u6309\u94ae\u8fd0\u884c\u4e0e\u8c03\u8bd5\uff0c\u5e76\u70b9\u51fb\u5de6\u4e0a\u89d2\u7eff\u8272\u4e09\u89d2\uff08Attach to gdb)\u3002 \u518d\u70b9\u51fb\u201c\u8fd0\u884c\u201d\uff0c\u8ba9xv6\u6b63\u5e38\u8fd0\u884c\uff0c\u76f4\u5230\u51fa\u73b0\u201c$\u201d\uff0c\u8868\u793a\u5df2\u7ecf\u8fdb\u5165shell\u4e2d\u3002 Step2\uff1a \u5728\u8c03\u8bd5\u63a7\u5236\u53f0\uff0c\u8f93\u5165\u201cinterrupt\u201d\u3002 Step3\uff1a \u6211\u4eec\u77e5\u9053\uff0c\u5728\u8fdb\u5165Trampoline\u5207\u6362\u524d\u6700\u540e\u4e00\u884cC\u4ee3\u7801\u4f4d\u4e8e kernel/trap.c:128 \u5904\uff0c\u6211\u4eec\u5c06\u65ad\u70b9\u6253\u5728\u6b64\u5904\uff0c\u7ee7\u7eed\u70b9\u51fb\u201c\u8fd0\u884c\u201d\u3002 Step4\uff1a \u5728xv6\u7684shell\u4e2d\u8f93\u5165 ls \uff0c\u4ee5\u542f\u52a8 ls \u7a0b\u5e8f\uff1b\u7a0b\u5e8f\u505c\u7559\u5728 kernel/trap.c:128 \u5904\u3002 Step5\uff1a \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u786e\u8ba4\u5bf9\u5e94xv6\u7684\u7528\u6237\u7a0b\u5e8f\u5165\u53e3\u70b9\uff0c\u6211\u4eec\u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u786e\u8ba4\u5e94\u7528\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\uff1a \u901a\u8fc7readelf\u786e\u8ba4\u5e94\u7528\u7a0b\u5e8f\u5165\u53e3\u70b9\u3002 \u5728VSCode\u4e0a\u76f4\u63a5\u6253\u5f00\u8be5\u5e94\u7528\u7a0b\u5e8f\u7684\u6e90\u4ee3\u7801\uff0c\u627e\u6253main()\u51fd\u6570\uff0c\u5e76\u5728main()\u51fd\u6570\u91cc\u6253\u4e0a\u65ad\u70b9\u3002 \u4ee5\u4e0b\u5206\u522b\u4ecb\u7ecd\u4e24\u79cd\u65b9\u6cd5\uff1a \u65b9\u6cd5\u4e00: \u901a\u8fc7readelf\u786e\u8ba4\u5e94\u7528\u7a0b\u5e8f\u5165\u53e3\u70b9 ls\u7684elf\u6587\u4ef6\u4f4d\u4e8e user/_ls \uff1a lgz_stu@OSLabExecNode1:~/xv6-labs-2020$ readelf -h user/_ls ELF Header: Magic: 7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 Class: ELF64 Data: 2's complement, little endian Version: 1 (current) OS/ABI: UNIX - System V ABI Version: 0 Type: EXEC (Executable file) Machine: RISC-V Version: 0x1 Entry point address: 0x27a Start of program headers: 64 (bytes into file) Start of section headers: 25064 (bytes into file) Flags: 0x5, RVC, double-float ABI Size of this header: 64 (bytes) Size of program headers: 56 (bytes) Number of program headers: 1 Size of section headers: 64 (bytes) Number of section headers: 18 Section header string table index: 17 \u53ef\u89c1\u5176\u4e2d\u663e\u793a Entry point address: 0x27a \uff0c\u5e94\u7528\u7a0b\u5e8f\u5165\u53e3\u70b9\u4f4d\u4e8e 0x27a \u5904\u3002\u968f\u540e\uff0c\u6211\u4eec\u7528\u4e0a\u9762\u7684\u65b9\u6cd5\u5f00\u59cb\u8c03\u8bd5\uff0c\u5e76\u5c06\u65ad\u70b9\u6253\u5728\u5373\u5c06\u8fd4\u56de\u7528\u6237\u6001\u5904\u3002 \u6211\u4eec\u524d\u5f80\u8c03\u8bd5\u63a7\u5236\u53f0\uff0c\u5728\u5176\u4e2d\u8f93\u5165 b *0x27a \uff0c\u5373\u5c06\u65ad\u70b9\u7f6e\u4e8e ls \u7a0b\u5e8f\u5165\u53e3\u5904\uff1a \u65b9\u6cd5\u4e8c: \u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u6e90\u4ee3\u7801main()\u51fd\u6570\u6253\u65ad\u70b9 \u5728VSCode\u4e2d\uff0c\u6253\u5f00user/ls.c\u6587\u4ef6\uff0c\u627e\u5230main()\u51fd\u6570\uff0c\u5728\u7b2c78\u884c\u6253\u4e0a\u65ad\u70b9\u3002 \u901a\u8fc7\u4e0a\u8ff0\u4e24\u4e2a\u65b9\u6cd5\u90fd\u53ef\u4ee5\u786e\u8ba4\u5e94\u7528\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\uff0c\u5c06\u65ad\u70b9\u6253\u5728\u5e94\u7528\u7a0b\u5e8f\u7684main()\u4e0a\u3002 Step6\uff1a \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u5728\u8c03\u8bd5\u7a97\u53e3\u5de6\u4e0b\u89d2\u5220\u9664\u539f\u6709\u7684\u5185\u6838\u6001\u65ad\u70b9\uff0c\u5e76\u901a\u8fc7\u8c03\u8bd5\u63a7\u5236\u53f0\uff0c\u52a0\u8f7d ls \u7684\u8c03\u8bd5\u7b26\u53f7\u3002\u5728\u5176\u4e2d\u8f93\u5165 file user/_ls \uff1a Step7\uff1a \u70b9\u51fb\u201c\u8fd0\u884c\u201d\u3002\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u8fdb\u5165\u4e86ls.c\u7684main\u51fd\u6570\u4e2d\u3002 Step8\uff1a \u6b64\u65f6\uff0c\u53ef\u4ee5\u5728user/ls.c\u6587\u4ef6\u4e2d\u76f4\u63a5\u6253\u4e0a\u65ad\u70b9\uff0c\u4e0b\u56fe\u662f\u5728user/ls.c\u4e2d\u7684\u7b2c78\u884c\u6253\u65ad\u70b9\u3002\u5982\u679c\u5df2\u7ecf\u572878\u884c\u6253\u8fc7\u65ad\u70b9\uff0c\u53ef\u4ee5\u5ffd\u7565\u8fd9\u4e00\u6b65\u3002 Step9\uff1a \u63a5\u4e0b\u6765\uff0c\u7ee7\u7eed\u6267\u884c\u3002qemu\u5c06\u505c\u6b62\u5728 ls \u7a0b\u5e8f\u7684\u7b2c78\u884c\u3002 \u70b9\u51fb\u4e0a\u65b9\u7684\u5355\u6b65\u8c03\u8bd5\u6309\u94ae\uff0c\u6211\u4eec\u53d1\u73b0vscode\u7684GUI\u8c03\u8bd5\u5de5\u5177\u73b0\u4e5f\u4ee5\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u3002 \u6b64\u540e\u7684\u5404\u79cd\u8c03\u8bd5\u6d41\u7a0b\u4e0e\u8c03\u8bd5\u5185\u6838\u65f6\u76f8\u540c\u3002","title":"4.4.4 \u7528\u6237\u6001\u7a0b\u5e8f\u8c03\u8bd5"},{"location":"remote_env_gdb/#445","text":"\u5269\u4e0b\u7684\u53ef\u4ee5\u81ea\u884c\u5bfb\u627eGDB\u7684\u624b\u518c\u3002\u6b64\u5916\uff0c\u7531\u4e8e\u6211\u4eec\u7684\u5b9e\u9a8c\u8fd0\u884c\u5728qemu\u4e0a\uff0c\u4e14\u4f7f\u7528\u7684\u662f\u8f83\u4e3a\u65b0\u9896\u7684RISC-V\u67b6\u6784\uff0c\u6545\u800c\u5e38\u5e38\u4f1a\u6709\u4e0d\u652f\u6301\u6216\u8005\u9519\u8bef\u7684\u60c5\u51b5\u53d1\u751f\uff0c\u8fd9\u662f\u6b63\u5e38\u7684\u3002\u540c\u5b66\u4eec\u53ef\u4ee5\u8bd5\u8bd5\u81ea\u884c\u89e3\u51b3\u95ee\u9898\u3002","title":"4.4.5 \u5176\u4ed6..."},{"location":"tools/","text":"\u5b9e\u9a8c\u5b9e\u7528\u5de5\u5177 \u00b6 \u5bf9\u4e8e\u521d\u5165openEuler/Linux\u7684\u540c\u5b66\uff0c\u53ef\u80fd\u5bf9\u4e8eLinux\u7684\u547d\u4ee4\u884c\uff08openEuler20.09\u6682\u672a\u652f\u6301\u56fe\u5f62\u5316\u754c\u9762\uff09\u611f\u89c9\u5230\u4e00\u8138\u832b\u7136\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u7ed9\u540c\u5b66\u4eec\u63a8\u8350\u51e0\u6b3e\u5b9e\u7528\u5de5\u5177\uff0c\u4ee5\u4fbf\u5e2e\u52a9\u540c\u5b66\u4eec\u80fd\u5feb\u901f\u4e0a\u624bLinux\u5f00\u53d1\u5de5\u4f5c\u3002 1. SSH \u00b6 question 1 \u5982\u4f55\u5b9e\u73b0Linux\u548cWindows\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7684\u6570\u636e\u901a\u4fe1\u3001\u6587\u4ef6\u5171\u4eab\uff1f \u5728\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u63a8\u8350\u5927\u5bb6\u4f7f\u7528ssh\uff08Secure Shell\uff09\u8fdc\u7a0b\u767b\u5f55\u534f\u8bae\u3002 1.1 MobaXterm\uff08SSH\u5de5\u5177\uff09 \u00b6 \u5e38\u7528\u7684SSH\u5de5\u5177\u6709Putty\u3001XShell\u3001SecureCRT\u3001MobaXterm\u7b49\u3002\u5728\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u63a8\u8350\u540c\u5b66\u4eec\u4f7f\u7528MobaXterm\u3002 MobaXterm \u662f\u4e00\u6b3e\u8fdc\u7a0b\u63a7\u5236\u5de5\u5177\uff0c\u652f\u6301\u521b\u5efaSSH\u3001Telnet\u3001Rsh\u3001Xdmc\u3001RDP\u3001VNC\u3001FTP\u3001 SFTP\u3001\u4e32\u53e3(Serial COM)\u3001\u672c\u5730Shell\u3001Mosh\u3001Aws\u3001WSL(\u5fae\u8f6f\u5b50\u7cfb\u7edf)\u7b49\u8d85\u591a\u8fde\u63a5\u529f\u80fd\u3002MobaXterm \u63d0\u4f9b\u4e86\u4eba\u6027\u5316\u7684\u64cd\u4f5c\u754c\u9762\uff0c\u652f\u6301\u4e0e\u4e3b\u6d41\u7684\u64cd\u4f5c\u7cfb\u7edf\u8fde\u63a5\u8fdb\u884c\u63a7\u5236\u548c\u7ba1\u7406\u64cd\u4f5c\uff0c\u529f\u80fd\u5341\u5206\u5f3a\u5927\u3002 MobaXterm \u4e0b\u8f7d\u94fe\u63a5\uff1a http://10.249.14.14:8000/index.php/s/7vlEVZPKaMTIpi0 \u6253\u5f00MobaXterm\uff0c\u5355\u51fb\u6253\u5f00\u5de5\u5177Session\uff08\u4f4d\u4e8e\u5de6\u4e0a\u89d2\uff09\u9009\u62e9New sessions\u6253\u5f00\u65b0\u5efa\u7a97\u53e3\uff0c\u9009\u62e9SSH\uff0c\u8f93\u5165\u8fdc\u7a0b\u670d\u52a1\u5668\u7684IP\u5730\u5740\u3001\u767b\u9646\u7528\u6237\u540d\u53ca\u7aef\u53e3\uff08\u9ed8\u8ba4\u662f22\uff0c\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u7aef\u53e3\u53f7\u662f6666\uff09\uff0c\u70b9\u51fbOK\u3002 SSH\u914d\u7f6e\u4fe1\u606f\u6839\u636e\u5b9e\u9a8c\u73af\u5883\u6765\u914d\u7f6e\uff1a \u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u3002IP\u5730\u5740\uff1a 10.249.12.98 \uff0c\u7aef\u53e3\u53f7\uff1a 6666 \uff0c\u7528\u6237\u540d\u548c\u521d\u59cb\u5bc6\u7801\u90fd\u662f \u4f60\u7684\u5b66\u53f7 \u3002 \u81ea\u884c\u90e8\u7f72\u7684\u5b9e\u9a8c\u73af\u5883\u3002\u5982\u679c\u4f60\u7528\u7684\u662f\u4f60\u81ea\u5df1\u7684\u5b9e\u9a8c\u73af\u5883\uff0c\u53ef\u4ee5\u4f7f\u7528ip addr\u547d\u4ee4\u6765\u67e5\u8be2IP\u5730\u5740\uff0c\u8be6\u89c1 ip addr \u663e\u793a\u6216\u8bbe\u7f6e\u7f51\u7edc\u72b6\u6001 \u3002\u7aef\u53e3\u53f7\u5982\u679c\u5728\u6ca1\u6709\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\uff0c\u9ed8\u8ba4\u662f22\u3002\u7528\u6237\u540d\u548c\u5bc6\u7801\u662fLinux\u7cfb\u7edf\u4e2d\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u3002 \u70b9\u51fbOK\u540e\uff0c\u8f93\u5165\u5bc6\u7801\uff08\u8f93\u5165\u8fc7\u7a0b\u662f\u6ca1\u6709\u663e\u793a\u7684\uff0c\u8f93\u5165\u5b8c\u6210\u540e\u6572\u56de\u8f66\u952e\uff09 \u5373\u53ef\u8fdb\u5165Linux\u7cfb\u7edf\u7684\u547d\u4ee4\u884c\u7a97\u53e3\uff08shell\uff09\u3002 1.2 \u6587\u4ef6\u4f20\u8f93SFTP\u670d\u52a1 \u00b6 SSH\u8fdc\u7a0b\u767b\u5f55\u5b8c\u6bd5\uff0c\u5728\u5de6\u4e0b\u89d2\u6ca1\u6709\u4e00\u4e2a\u7ad6\u7740\u7684Sftp\uff0c\u53cc\u51fb\u5b83\uff0c\u5c31\u51fa\u73b0\u4e86\u8fdc\u7a0b\u670d\u52a1\u5668\u7684\u6587\u4ef6\u76ee\u5f55 \u63a5\u4e0b\u6765\u5728\u53ef\u4ee5\u70b9\u51fb\u7ea2\u8272\u6846\u6846\u7684\u6309\u94ae\u201cUpload to current folder\u201d\u6216\u8005\u201cDownload selected files\u201d\uff0c\u5728windows\u7cfb\u7edf\u548c\u865a\u62df\u673a/\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u4e4b\u95f4\u4e0a\u4f20\u6216\u4e0b\u8f7d\u6587\u4ef6\u3002 2 VScode \u00b6 question 2 \u5982\u4f55\u67e5\u9605\u3001\u7f16\u8f91\u3001\u8fd0\u884c\u548c\u8c03\u8bd5\u4ee3\u7801\uff1f \u5728\u5b9e\u9a8c\u4e2d\uff0c\u5f3a\u70c8\u63a8\u8350\u540c\u5b66\u4eec\u4f7f\u7528VScode\u4ee3\u7801\u7f16\u8f91\u5668\uff0c\u800c\u4e0d\u662f\u5728\u7269\u7406\u673a\u4e0a\u7f16\u8f91\u4ee3\u7801\u518d\u62f7\u8d1d\u8fc7\u53bb\u624b\u52a8\u8fd0\u884c\uff0c\u8fd9\u5c06\u8282\u7701\u5927\u91cf\u7684\u65f6\u95f4\u3002 \u901a\u8fc7VSCode\u7684\u5f3a\u5927\u6269\u5c55\u5e93\uff0c\u6211\u4eec\u53ef\u4ee5\u5728Windows\u7cfb\u7edf\u4e0a\u4f7f\u7528VScode\u4e00\u7ad9\u5f0f\u521b\u5efa\uff0c\u7f16\u8f91\uff0c\u6784\u5efa\uff0c\u8fd0\u884c\u548c\u8c03\u8bd5\u8fdc\u7a0b\u4e3b\u673a\u4e0a\u7684\u5de5\u7a0b\u6587\u4ef6\uff0c\u5c31\u50cf\u4f7f\u7528Code::Blocks\u64cd\u4f5c\u672c\u5730\u5de5\u7a0b\u4e00\u6837\u3002 2.1 \u914d\u7f6eopenEuler\u4ee5\u652f\u6301VScode\u8bbf\u95ee \u00b6 \u5982\u679c\u4f60\u7528\u7684\u7cfb\u7edf\u4e0d\u662fopenEuler\uff08\u4f8b\u5982\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u6216\u8005\u5176\u4ed6Linux\u7cfb\u7edf\uff09\uff0c\u90a3\u4f60\u53ef\u4ee5\u5ffd\u7565\u8fd9\u4e00\u5c0f\u8282\u3002 openEuler\u7cfb\u7edf\u9ed8\u8ba4\u4e0d\u652f\u6301Vscode\u8fdc\u7a0b\u767b\u5f55\uff0c\u9700\u8981\u5728openEuler\u865a\u62df\u673a\u4e2d\u505a\u5982\u4e0b\u4fee\u6539\uff1a step1\uff1a \u9996\u5148\u9700\u8981\u5728openEuler\u865a\u62df\u673a\u4e2d\u5207\u56deroot\u7528\u6237\uff0c\u5982\u679c\u4e0d\u662froot\u7528\u6237\uff0c\u8f93\u5165exit\u5373\u53ef\u8fd4\u56deroot\u7528\u6237\u3002 [cs@localhost root]$ exit exit [root@localhost ~]# step2\uff1a \u5728/etc/ssh/sshd_config\u6587\u4ef6\u4e2d\u505a\u5982\u4e0b\u4fee\u6539\uff1a AllowAgentForwarding yes AllowTcpForwarding yes GatewayPorts yes \u7528vi\u547d\u4ee4\u6253\u5f00sshd_config\uff1a vi\u662f\u6240\u6709Unix\u53caLinux\u7cfb\u7edf\u4e0b\u6807\u51c6\u7684\u7f16\u8f91\u5668\uff0c\u5b83\u5c31\u76f8\u5f53\u4e8ewindows\u7cfb\u7edf\u4e2d\u7684\u8bb0\u4e8b\u672c\u4e00\u6837\uff0c\u5b83\u662f\u6211\u4eec\u4f7f\u7528Linux\u7cfb\u7edf\u4e0d\u80fd\u7f3a\u5c11\u7684\u5de5\u5177\u3002vim\u53ef\u4ee5\u5f53\u4f5cvi\u7684\u5347\u7ea7\u7248\u672c\uff0c\u5b66\u4f1a\u5b83\uff0c\u4f60\u5c06\u5728Linux\u7684\u4e16\u754c\u91cc\u7545\u884c\u65e0\u963b:-) # vi /etc/ssh/sshd_config \u8f93\u5165\"/Allow\"\uff0c\u6309\u4e0b\u56de\u8f66\uff0c\u5c31\u4f1a\u53d1\u73b0\u5b9a\u4f4d\u5230\u4e86#AllowAgentForwarding yes\u8fd9\u4e00\u884c\uff0c\u6211\u4eec\u628a\u524d\u9762\u7684#\u5220\u53bb\u5373\u53ef\u3002 \u5982\u4f55\u5220\u9664\u5462\uff1f\u6b64\u65f6\u6309\u4e0bi\u4f1a\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\uff0c\u4e0b\u9762\u663e\u793a\u4e00\u4e2a--INSERT--\uff0c\u7136\u540e\u6b63\u5e38\u5220\u9664\u5373\u53ef\u3002\u63a5\u7740\u4fee\u6539AllowTcpForwarding yes\u548cGatewayPorts yes\u3002 \u63a5\u4e0b\u6765\u5982\u4f55\u4fdd\u5b58\u5462\uff1f\u6309\u4e0besc\u952e\uff0c\u5373\u53ef\u9000\u51fa\u63d2\u5165\u6a21\u5f0f\uff0c\u7136\u540e\uff0c\u8f93\u5165\":wq\"\u5373\u53ef\u4fdd\u5b58\u5e76\u9000\u51fa\u3002\uff08\u8f93\u5165\":q!\"\u662f\u4e0d\u4fdd\u5b58\u5e76\u9000\u51fa\uff09 step3\uff1a \u91cd\u542fssh\u670d\u52a1 \u8bbe\u7f6e\u597dssh\u7684\u4ee3\u7406\u8f6c\u53d1\u540e\uff0c\u73b0\u5728\u8fd8\u6ca1\u6709\u751f\u6548\uff0c\u9700\u8981\u91cd\u542f\u4e00\u4e0bssh\u670d\u52a1\uff0c\u547d\u4ee4\u884c\u5982\u4e0b\uff1a # systemctl restart sshd.service 2.2 \u5b89\u88c5VScode \u00b6 \u5728 https://code.visualstudio.com/ \u4e0b\u8f7d\u5e76\u5728\u7269\u7406\u673a\uff08Windows\u7cfb\u7edf\uff09\u4e0a\u5b89\u88c5VSCode\u8f6f\u4ef6\u3002 \u6253\u5f00\u540e\u5728\u5de6\u4fa7\u8fb9\u680f\u7684\u6269\u5c55\u5546\u5e97\u4e2d\u641c\u7d22\u5e76\u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55 Chinese (Simplified) Language Pack for Visual Studio Code Remote-SSH C/C++ \u5b89\u88c5\u5b8c\u6210\u540e\u91cd\u542fVSCode\u3002 2.3 \u4f7f\u7528VSCode\u767b\u5f55\u8fdc\u7a0b\u73af\u5883 \u00b6 \u63d0\u793a \u4f7f\u7528\u524d\uff0c\u9700\u8981\u5b89\u88c5Remote-SSH\u63d2\u4ef6\u3002 \u5728\u5de6\u4fa7\u8fb9\u680f\u7684\u8fdc\u7a0b\u8d44\u6e90\u7ba1\u7406\u5668\u5de5\u5177\u680f\u4e2d\u70b9\u51fb+\u53f7\uff0c\u5728\u9876\u90e8\u8f93\u5165 ssh \u4f60\u7684\u7528\u6237\u540d@IP\u5730\u5740 -p \u7aef\u53e3\u53f7 \u547d\u4ee4\u5e76\u4e00\u8def\u56de\u8f66\u3002 \u6b64\u65f6\u5728\u5de5\u5177\u680f\u4e2d\u53ef\u4ee5\u770b\u5230\u65b0\u6dfb\u52a0\u7684\u8fdc\u7a0b\u4e3b\u673a\u3002\u5728\u8fdc\u7a0b\u7535\u8111\u4e0a\u70b9\u51fb\u8fde\u63a5\uff0c\u8f93\u5165\u5bc6\u7801\u540e\u5c06\u4f1a\u6253\u5f00\u65b0\u7a97\u53e3\u8fde\u63a5\u5230\u8fdc\u7a0b\u4e3b\u673a\u4e2d\u3002 \u5728\u8fde\u63a5\u5230\u8fdc\u7a0b\u4e3b\u673a\u4e4b\u540e\uff0c\u9700\u8981\u5728\u518d\u6b21\u641c\u7d22\u5e76\u5b89\u88c5\u4e0a\u8ff0\u6269\u5c55\uff0c\u5c06\u5176\u5b89\u88c5\u5728\u8fdc\u7a0b\u4e3b\u673a\u4e0a\u3002C/C++\u6269\u5c55\u5728\u5b89\u88c5\u540e\u53ef\u80fd\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u6765\u4e0b\u8f7d\u4f9d\u8d56\u6587\u4ef6\u3002 \u56de\u8f66\uff0c\u63d0\u793aHost Added! \u5728\u6b64\u5904\u70b9\u51fb\u8fde\u63a5\uff1a \u8f93\u5165\u5bc6\u7801\u540e\uff0c\u7a0d\u7b49\u7247\u523b\uff0c\u7b49\u5f85\u7a97\u53e3\u6210\u4e3a\u5982\u4e0b\u65f6\uff0c\u5373\u8fde\u63a5\u6210\u529f\uff1a \u6b64\u65f6\uff0c\u53ef\u4ee5\u50cf\u672c\u5730\u4e00\u6837\u4f7f\u7528\u8fdc\u7a0b\u673a\u5668\u8fdb\u884c\u5de5\u4f5c\u4e86\u3002 VScode\u7684\u8be6\u7ec6\u7528\u6cd5\u67e5\u770b\u201c\u4f7f\u7528VSCode\u9605\u8bfb\u6e90\u4ee3\u7801\u6559\u7a0b.pdf\u201d\u3002 3 git \u00b6 question 3 \u4f60\u662f\u5426\u9047\u5230\u8fc7\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u4e00\u4e2a\u9879\u76ee\u7531\u4e8e\u4e0d\u505c\u5730\u4fee\u6539\uff0c\u6bcf\u6b21\u90fd\u662f\u590d\u5236\u7c98\u8d34\u526f\u672c\uff0c\u4ea7\u51fa\u7684\u6587\u4ef6\u526f\u672c\u5c31\u8d8a\u6765\u8d8a\u591a\u3002\u800c\u968f\u7740\u7248\u672c\u7684\u589e\u591a\uff0c\u4f60\u8fd8\u8bb0\u5f97\u8fd9\u4e9b\u7248\u672c\u5404\u81ea\u90fd\u4fee\u6539\u4e86\u4ec0\u4e48\u5417\uff1a\uff1f \u4e3a\u4e86\u80fd\u591f\u66f4\u65b9\u4fbf\u6211\u4eec\u7ba1\u7406\u4e0d\u540c\u7248\u672c\u7684\u6587\u4ef6/\u4ee3\u7801\uff0c\u5f3a\u70c8\u5efa\u8bae\u540c\u5b66\u4eec\u4f7f\u7528git\u8fdb\u884c\u7248\u672c\u63a7\u5236\u3002 3.1 \u540c\u6b65\u4e0a\u6e38\u4ed3\u5e93 \u00b6 \u5982\u679c\u672c\u8bfe\u7a0b\u5b9e\u9a8c\u4fee\u6539\u4e86\u5b9e\u9a8c\u4e0a\u6e38\u4ed3\u5e93\uff08\u5982\u679c\u8bfe\u7a0b\u5b9e\u9a8c\u6709\u4fee\u6539\uff0c\u7b2c\u4e00\u65f6\u95f4\u5c06\u5728\u7fa4\u91cc\u63a8\u9001\u901a\u77e5\uff0c\u8bf7\u5173\u6ce8\u7fa4\u6d88\u606f\uff01\uff09\uff0c\u800c\u4f60\u9700\u8981\u5c06\u672c\u8bfe\u7a0b\u5b9e\u9a8c\u7684\u4fee\u6539\u540c\u6b65\u5230\u81ea\u5df1\u7684\u4ed3\u5e93\uff0c\u8bf7\u6309\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a 3.1.1 \u68c0\u67e5\u4e0a\u6e38\u4ed3\u5e93\u8bbe\u7f6e \u00b6 \u4e3a\u4e86\u540c\u6b65\u4e0a\u6e38\u4ed3\u5e93\uff0c\u6211\u4eec\u9700\u8981\u5148\u8bbe\u7f6e\u4e0a\u6e38\u4ed3\u5e93\u3002\u68c0\u67e5\u4e0a\u6e38\u4ed3\u5e93\u662f\u5426\u5df2\u7ecf\u8bbe\u7f6e\u597d\uff0c\u53ef\u4ee5\u4f7f\u7528 git remote -v \u6307\u4ee4\u67e5\u770b\u3002 \u5982\u679c\u4e0a\u6e38\u4ed3\u5e93\u672a\u8bbe\u7f6e\u5b8c\u6210\uff0c\u90a3\u4e48\u6307\u4ee4\u7684\u6267\u884c\u6548\u679c\u5927\u6982\u662f\u8fd9\u6837\u7684\uff1a lgz_admin@OSLabExecNode0:~/xv6-labs-2020$ git remote -v origin git@gitee.com:willson0v0/xv6-labs-2020.git (fetch) origin git@gitee.com:willson0v0/xv6-labs-2020.git (push) \u53ef\u4ee5\u770b\u5230\uff0c\u5176\u4e2d\u53ea\u6709\u4e00\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5373 origin \uff1b\u5982\u679c\u4e0a\u6e38\u4ed3\u5e93\u5df2\u7ecf\u8bbe\u7f6e\u5b8c\u6210\uff0c\u90a3\u4e48\u6307\u4ee4\u7684\u6267\u884c\u6548\u679c\u5927\u6982\u662f\u8fd9\u6837\u7684\uff1a lgz_admin@OSLabExecNode0:~/xv6-labs-2020$ git remote -v origin git@gitee.com:willson0v0/xv6-labs-2020.git (fetch) origin git@gitee.com:willson0v0/xv6-labs-2020.git (push) upstream git@gitee.com:hitsz-lab/xv6-labs-2020.git (fetch) upstream git@gitee.com:hitsz-lab/xv6-labs-2020.git (push) \u5176\u4e2d\uff0c\u8fdc\u7a0b\u4ed3\u5e93 origin \u7684\u5730\u5740\uff08\u5728\u6b64\u5904\u663e\u793a\u4e3a git@gitee.com:willson0v0/xv6-labs-2020.git \uff09\u5e94\u8be5\u662f\u662f\u4f60\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740\uff0c\u800c\u8fdc\u7a0b\u4ed3\u5e93 upstream \u7684\u5730\u5740\u5e94\u8be5\u663e\u793a\u4e3a\u672c\u8bfe\u7a0b\u5b9e\u9a8c\u63d0\u4f9b\u7684\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740\uff0c\u5373 git@gitee.com:hitsz-lab/xv6-labs-2020.git \u6216\u8005 https://gitee.com/hitsz-lab/xv6-labs-2020.git \u3002 \u5982\u679c\u4f60\u7684\u8fdc\u7a0b\u4ed3\u5e93\u5df2\u7ecf\u8bbe\u7f6e\u5b8c\u6210\uff0c\u90a3\u4e48\u8df3\u5230 3.1.3 \u540c\u6b65\u4e0a\u6e38\u4ed3\u5e93\u66f4\u6539 \u7ee7\u7eed\u3002\u5426\u5219\uff0c\u8bf7\u6309\u7167 3.1.2 \u5b8c\u6210\u8fdc\u7a0b\u4ed3\u5e93\u8bbe\u7f6e \u8282\u5b8c\u6210\u8fdc\u7a0b\u4ed3\u5e93\u8bbe\u7f6e\u3002 3.1.2 \u5b8c\u6210\u8fdc\u7a0b\u4ed3\u5e93\u8bbe\u7f6e \u00b6 \u5982\u679c\u4f60\u6ca1\u6709\u8bbe\u7f6e\u4e0a\u6e38\u4ed3\u5e93\uff08\u5373 upstream \uff09\uff0c\u5e76\u4e14 origin\u4ed3\u5e93\u7684\u94fe\u63a5\u88ab\u8bbe\u7f6e\u4e3a\u672c\u8bfe\u7a0b\u5b9e\u9a8c\u7684\u8fdc\u7a0b\u4ed3\u5e93\u800c\u975e\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93 \uff0c\u90a3\u4e48\u8bf7\u5148\u53c2\u7167 3.2 \u5c06\u4ee3\u7801\u53d1\u5e03\u81f3\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93 \u8282\uff0c\u5c06\u4ee3\u7801\u53d1\u5e03\u81f3\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93\u3002 \u5982\u679c\u4f60\u7684 origin \u4ed3\u5e93\u6b63\u786e\u8bbe\u7f6e\u4e3a\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u90a3\u4e48\u8bf7\u8f93\u5165\u4ee5\u4e0b\u6307\u4ee4\uff0c\u8bbe\u7f6e\u4e0a\u6e38\u4ed3\u5e93\u4e3a\u672c\u8bfe\u7a0b\u5b9e\u9a8c\u63d0\u4f9b\u7684\u4ed3\u5e93\uff1a $ git remote add upstream git@gitee.com:hitsz-lab/xv6-labs-2020.git \u6b64\u65f6\uff0c\u5982\u679c\u5728\u8f93\u5165 git remote -v \uff0c\u5e94\u8be5\u80fd\u663e\u793a\u51fa 3.1.1 \u68c0\u67e5\u4e0a\u6e38\u4ed3\u5e93\u8bbe\u7f6e \u4e2d\u8bbe\u7f6e\u5b8c\u6210\u4e00\u6837\u7684\u6548\u679c\u3002 3.1.3 \u540c\u6b65\u4e0a\u6e38\u4ed3\u5e93\u66f4\u6539 \u00b6 \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4ee5\u5c06\u4e0a\u6e38\u4ed3\u5e93\u7684 syscall \u5206\u652f\u540c\u6b65\u5230\u672c\u5730\u7684 syscall \u5206\u652f\u4e3a\u4f8b\u3002\u952e\u5165\u4ee5\u4e0b\u6307\u4ee4\uff0c\u4ee5\u83b7\u53d6\u4e0a\u6e38\u66f4\u6539\u3001\u5207\u6362\u5230\u672c\u5730 syscall \u5206\u652f\u3001\u5b8c\u6210\u4e0e\u4e0a\u6e38\u4ed3\u5e93 syscall \u5206\u652f\u7684\u5408\u5e76\uff0c\u5e76\u6700\u540e\u4e0a\u4f20\u5230\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff1a $ git fetch --all $ git checkout syscall $ git merge upstream/syscall --no-edit $ git push origin \u68c0\u67e5\u5de5\u4f5c\u533a\u66f4\u6539 \u5207\u6362\u5206\u652f\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u5b58\u5de5\u4f5c\u533a\u7684\u66f4\u6539\u3002\u5982\u679c\u5207\u6362\u65f6\u63d0\u793a error: Your local changes to the following files would be overwritten by checkout \uff0c\u53c2\u8003 \u8fd9\u7bc7Q&A \uff0c\u68c0\u67e5\u5de5\u4f5c\u533a\u5e76commit\u4f60\u7684\u66f4\u6539\u3002 \u521d\u6b21Checkout\uff1f \u5982\u679c\u4f60\u6b64\u524d\u4ece\u672aCheckout\u8fc7\u8be5\u5206\u652f\uff0cCheckout\u65f6\u53ef\u80fd\u4f1a\u5411\u4f60\u62a5\u544a\u5982\u4e0b\u9519\u8bef\uff1a lgz_admin@OSLabExecNode0:~/git_demo/xv6-labs-2020$ git checkout syscall error: pathspec 'syscall' did not match any file(s) known to git hint: 'syscall' matched more than one remote tracking branch. hint: We found 2 remotes with a reference that matched. So we fell back hint: on trying to resolve the argument as a path, but failed there too! hint: hint: If you meant to check out a remote tracking branch on, e.g. 'origin', hint: you can do so by fully qualifying the name with the --track option: hint: hint: git checkout --track origin/<name> hint: hint: If you'd like to always have checkouts of an ambiguous <name> prefer hint: one remote, e.g. the 'origin' remote, consider setting hint: checkout.defaultRemote=origin in your config. \u8fd9\u662f\u7531\u4e8e\uff0c\u4e24\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\uff08\u4f60\u81ea\u5df1\u7684\u548c\u4e0a\u6e38\u7684\uff09\u90fd\u5b58\u5728 syscall \u5206\u652f\uff0cgit\u4e0d\u77e5\u9053\u8ddf\u8e2a\u54ea\u4e00\u4e2a\u5bfc\u81f4\u7684\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u53ea\u9700\u8981\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a git checkout --track origin/syscall \u5373\u53ef\u3002 \u5982\u679c\u5728 git merge upstream/syscall \u4e00\u6b65\u63d0\u793a\u5b58\u5728\u51b2\u7a81\uff0c\u8bf4\u660e\u4f60\u548c\u672c\u8bfe\u7a0b\u5b9e\u9a8c\u4fee\u6539\u8fc7\u540c\u4e00\u4e2a\u6587\u4ef6\uff0cgit\u65e0\u6cd5\u81ea\u52a8\u5408\u5e76\u3002\u51b2\u7a81\u7684\u8f93\u51fa\u5e94\u8be5\u7c7b\u4f3c\u4e8e\u4e0b\u9762\u8fd9\u6837\uff1a lgz_admin@OSLabExecNode0:~/git_demo/xv6-labs-2020$ git merge upstream/syscall CONFLICT (add/add): Merge conflict in time.txt Auto-merging time.txt Automatic merge failed; fix conflicts and then commit the result. \u5982\u679c\u53d1\u751f\u51b2\u7a81\uff0c\u8bf7\u53c2\u7167 3.3.3 \u5408\u5e76\u51b2\u7a81\u66f4\u6539 \u8282\u5b8c\u6210\u51b2\u7a81\u5408\u5e76\u64cd\u4f5c\u3002 3.2 \u5c06\u4ee3\u7801\u53d1\u5e03\u81f3\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93 \u00b6 \u5982\u679c\u4f60\u7684\u4ee3\u7801\u662f\u76f4\u63a5\u4ece\u672c\u8bfe\u7a0b\u5b9e\u9a8c\u4ed3\u5e93clone\u800c\u6765\uff0c\u800c\u975e\u5148fork\u51fa\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93\u3001\u518d\u8fdb\u884cclone\uff0c\u90a3\u4e48\u8fd9\u7bc7\u6559\u7a0b\u4f1a\u6307\u5f15\u4f60\u8bbe\u7f6e\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93\u3001\u5e76\u5c06\u4ee3\u7801\u53d1\u5e03\u81f3\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93\u5904\u3002 \u8fd9\u4e48\u505a\u6709\u4ec0\u4e48\u597d\u5904\uff1f \u5982\u679c\u4f60\u5728\u4e0d\u540c\u7684\u7535\u8111\u4e0a\u5de5\u4f5c\uff0c\u6bd4\u5982\u540c\u65f6\u5728\u5b9e\u9a8c\u5ba4\u7684\u7535\u8111\u3001\u81ea\u5df1\u7684\u7535\u8111\u548c\u8fdc\u7a0b\u5b9e\u9a8c\u73af\u5883\u4e0a\u64cd\u4f5c\uff0c\u90a3\u4e48\u8fdc\u7a0b\u4ed3\u5e93\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5728\u4e0d\u540c\u8bbe\u5907\u4e4b\u95f4\u540c\u6b65\u81ea\u5df1\u7684\u5de5\u4f5c\u8fdb\u5ea6\u3002 3.2.1 \u8bbe\u7acb\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff08\u4ee5gitee\u4e3a\u4f8b\uff09 \u00b6 \u767b\u5f55gitee\uff0c\u53f3\u4e0a\u89d2\u53ef\u89c1\u4e00\u4e2a\u52a0\u53f7\uff0c\u70b9\u51fb\u5b83\u4e0b\u62c9\u83dc\u5355\u4e2d\u7684\u201c\u65b0\u5efa\u4ed3\u5e93\u201d\u3002 \u70b9\u51fb\u8fdb\u5165\uff0c\u5e76\u4e3a\u81ea\u5df1\u7684\u4ed3\u5e93\u8bbe\u7f6e\u4e00\u4e2a\u4f60\u559c\u6b22\u7684\u540d\u79f0\u3002\u4f60\u53ef\u4ee5\u9009\u62e9\u516c\u5f00\u4ed3\u5e93\u6216\u8005\u79c1\u6709\u4ed3\u5e93\u3002\u5b8c\u6210\u540e\u70b9\u51fb\u201c\u521b\u5efa\u201d\uff0c\u5373\u53ef\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684\u8fdc\u7a0b\u4ed3\u5e93\u3002 \u8bf7\u4e0d\u8981\u521d\u59cb\u5316\u4ed3\u5e93\uff01 \u4f60\u7684\u4ed3\u5e93\u5728\u672c\u5730\uff0c\u56e0\u6b64\u8bf7\u4e0d\u8981\u521d\u59cb\u5316\u4ed3\u5e93\u3001\u8bbe\u7f6e\u6a21\u677f\u6216\u9009\u62e9\u5206\u652f\u6a21\u578b\u3002\u603b\u7684\u800c\u8a00\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5e76\u4e14\u628a\u6211\u4eec\u672c\u5730\u7684\u4ed3\u5e93\u585e\u8fdb\u53bb\u3002 \u4ed3\u5e93\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u4f1a\u6765\u5230\u8fd9\u4e2a\u754c\u9762\u3002\u5c06\u8fd9\u4e2a\u754c\u9762\u7684SSH\u5730\u5740\u590d\u5236\u4e0b\u6765\uff1a 3.2.2 \u6e05\u7406\u672c\u5730\u5de5\u4f5c\u6811 \u00b6 \u5728\u547d\u4ee4\u884c\u754c\u9762\uff0c\u8f93\u5165 git status \u3002\u5982\u679c\u5de5\u4f5c\u6811\u5e72\u51c0\uff0c\u5176\u4f1a\u663e\u793a\u5982\u4e0b\u5185\u5bb9\uff1a lgz_admin@OSLabExecNode0:~/git_demo/xv6-labs-2020$ git status On branch syscall Your branch is up to date with 'origin/syscall'. nothing to commit, working tree clean \u90a3\u4e48\uff0c\u4f60\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u4e00\u6b65\uff0c\u524d\u5f80 3.2.3 \u4fee\u6539\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740\u5e76\u63a8\u9001 \u7ee7\u7eed\u3002\u5982\u679c\u672c\u5730\u6709\u5c1a\u672acommit\u7684\u66f4\u6539\uff0c\u5219\u547d\u4ee4\u4f1a\u663e\u793a\u51fa\u4f60\u66f4\u6539\u8fc7\u7684\u5185\u5bb9\uff0c\u63d0\u793a\u5176\u5c1a\u672a\u88ab\u8ddf\u8e2a\uff1a lgz_admin@OSLabExecNode0:~/git_demo/xv6-labs-2020$ git status On branch syscall Your branch is up to date with 'origin/syscall'. Changes not staged for commit: (use \"git add <file>...\" to update what will be committed) (use \"git restore <file>...\" to discard changes in working directory) modified: time.txt no changes added to commit (use \"git add\" and/or \"git commit -a\") \u5982\u679c\u672c\u5730\u6709\u5c1a\u672acommit\u7684\u66f4\u6539\uff0c\u8bf7\u53c2\u7167 3.3.1.1 Commit \u4e2d\u7684\u64cd\u4f5c\uff08\u547d\u4ee4\u884c\u64cd\u4f5c\uff09\u6216\u8005 3.3.2 \u4f7f\u7528VS Code\u5185\u5efa\u7684\u56fe\u5f62\u5316\u754c\u9762\u5b8c\u6210\u64cd\u4f5c \u4e2d\u7684\u64cd\u4f5c\uff08VS code\u56fe\u5f62\u5316\u754c\u9762\u64cd\u4f5c\uff09\uff0c\u5b8c\u6210commit\u3002\u4f60\u6ca1\u6709\u63a8\u9001\u5230\u4e0a\u6e38\u4ed3\u5e93\uff08\u672c\u8bfe\u7a0b\u5b9e\u9a8c\u63d0\u4f9b\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff09\u7684\u6743\u9650\uff0c\u6240\u4ee5\u4e0d\u5fc5push\u3002 3.2.3 \u4fee\u6539\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740\u5e76\u63a8\u9001 \u00b6 \u5728\u547d\u4ee4\u884c\u4e2d\uff0c\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a $ git remote set-url origin git@gitee.com:willson0v0/my_xv6_repo.git \u5c06\u5176\u4e2d git@gitee.com:willson0v0/my_xv6_repo.git \u66ff\u6362\u6210 3.2.1 \u8bbe\u7acb\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff08\u4ee5gitee\u4e3a\u4f8b\uff09 \u4e2d\u590d\u5236\u4e0b\u6765\u7684\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740\u3002\u53ef\u4ee5\u8f93\u5165 git remote -v \u68c0\u89c6\u8fdc\u7a0b\u8fde\u63a5\u6709\u6ca1\u6709\u66f4\u6539\u6210\u529f\u3002\u5b8c\u6210\u540e\uff0c\u5207\u6362\u5230\u4f60\u60f3\u8981\u63a8\u9001\u7684\u5206\u652f\uff0c\u5e76\u4e0a\u4f20\u5230\u8fdc\u7a0b\u3002\u8fd9\u91cc\u4ee5 syscall \u5206\u652f\u4e3a\u4f8b\uff1a $ git push -u origin syscall \u8fd9\u4f1a\u5c06 syscall \u5206\u652f\u8bbe\u7f6e\u6210\u8ddf\u8e2a\u8fdc\u7a0b origin \u7684 syscall \u5206\u652f\uff0c\u5e76\u63a8\u9001\u3002\u73b0\u5728\u56de\u5230\u6d4f\u89c8\u5668\u5e76\u5237\u65b0\u4ed3\u5e93\u9875\u9762\uff0c\u4f60\u5e94\u8be5\u80fd\u770b\u5230\u4e0a\u4f20\u5df2\u7ecf\u5b8c\u6210\u3002 3.3 \u5e38\u7528git\u64cd\u4f5c \u00b6 \u4f60\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u547d\u4ee4\u884c\u5b8c\u6210 commit / push / pull / merge \u7b49\u64cd\u4f5c\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7VS Code\u5185\u5efa\u7684\u56fe\u5f62\u5316\u754c\u9762\u5b8c\u6210\u8fd9\u4e9b\u64cd\u4f5c\u3002 git\u5de5\u4f5c\u8fc7\u7a0b \u8bf4\u660e\uff1a workspace\uff1a\u5de5\u4f5c\u533a staging area\uff1a\u6682\u5b58\u533a/\u7f13\u5b58\u533a local respository\uff1a\u7248\u672c\u5e93\u6216\u672c\u5730\u4ed3\u5e93 remote repository\uff1a\u8fdc\u7a0b\u4ed3\u5e93 \u4ee5\u4e0b\u662fgit\u7684\u8bf4\u660e\uff1a https://git-scm.com/book/zh/v2 \u4ec0\u4e48\u662fCommit\uff1f \u4f60\u53ef\u4ee5\u5c06 Commit \u89c6\u4f5c\u662f\u4e00\u4e2a\u4e2a\u5c0f\u5c0f\u7684\u91cc\u7a0b\u7891\uff0c\u5b83\u6807\u793a\u4e86\u4f60\u7684\u4ee3\u7801\u8fdb\u5ea6\uff1b\u7248\u672c\u63a7\u5236\u5de5\u5177\uff08\u6bd4\u5982git\uff09\u7684\u7248\u672c\u5c31\u662f\u57fa\u4e8e\u8fd9\u4e00\u4e2a\u4e2a\u5c0f\u91cc\u7a0b\u7891\u5b9e\u73b0\u7684\uff1a\u4f60\u53ef\u4ee5\u4fee\u6539\u5b8c\u4ee3\u7801\u540e\u521b\u5efa\u65b0\u7684\u91cc\u7a0b\u7891\uff1b\u4e5f\u53ef\u4ee5\u5c06\u653e\u5f03\u51fa\u73b0\u4e86\u95ee\u9898\u7684\u4ee3\u7801\u4fee\u6539\uff0c\u5c06\u4ee3\u7801\u56de\u6eaf\u5230\u6b64\u524d\u7684\u67d0\u4e2a\u91cc\u7a0b\u7891\u5904\u3002 \u6bcf\u4e00\u4e2aCommit\u90fd\u6709\u4e00\u4e2a\u72ec\u7279\u7684hash\u503c\uff0c\u7528\u4ee5\u548c\u5176\u4ed6Commit\u533a\u5206\uff1bCommit\u8fd8\u4f1a\u6807\u793a\u662f\u8c01\u3001\u5728\u4f55\u65f6\u8fdb\u884c\u4e86\u8fd9\u4e2aCommit\uff0c\u8fd9\u5bf9\u534f\u4f5c\u5f00\u53d1\u6709\u5f88\u5927\u7684\u5e2e\u52a9\u3002 \u4ec0\u4e48\u662fPush/Pull\uff1f \u901a\u8fc7Commit\u7cfb\u7edf\uff0c\u6211\u4eec\u53ef\u4ee5\u5b8c\u6210\u4e00\u5b9a\u7684\u7248\u672c\u63a7\u5236\u529f\u80fd\u3002\u4f46\u662f\uff0c\u4e3a\u4e86\u5b8c\u6210\u4ee3\u7801\u534f\u4f5c\u4e0e\u540c\u6b65\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u628a\u4ee3\u7801\u653e\u5728\u4e00\u4e2a\u5404\u4e2a\u5199\u4f5c\u8005\u6216\u8005\u81ea\u5df1\u7684\u5404\u4e2a\u5de5\u4f5c\u73af\u5883\u90fd\u80fd\u8bbf\u95ee\u5230\u7684\u5730\u65b9\u2014\u2014\u4e00\u822c\u800c\u8a00\uff0c\u4e5f\u5c31\u662f\u8fdc\u7a0b\u4ed3\u5e93\u3002Push\u64cd\u4f5c\u5c31\u662f\u5c06\u672c\u5730\u7684\u66f4\u6539\uff08\u4e5f\u5c31\u662fCommit\u4eec\uff09\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\u7684\u4fee\u6539\uff1b\u800cPull\u5219\u662f\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u7684\u66f4\u6539\u540c\u6b65\u5230\u672c\u5730\u3002 \u4ec0\u4e48\u662fMerge\uff1f \u6211\u4eec\u77e5\u9053\uff0cGit\u4f5c\u4e3a\u7248\u672c\u63a7\u5236\u5de5\u5177\u53ef\u4ee5\u5141\u8bb8\u6211\u4eec\u5728\u540c\u4e00\u4e2a\u4ee3\u7801\u4ed3\u5e93\u5185\u8fdb\u884c\u534f\u4f5c\u3002\u5982\u679c\u4e24\u4e2a\u5f00\u53d1\u8005\u540c\u65f6\u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u90a3\u4e48\u5c31\u6709\u53ef\u80fd\u51fa\u73b0\u51b2\u7a81\uff1b\u53c8\u6216\u8005\u6211\u4eec\u8981\u5c06\u4ee3\u7801\u7684\u4e24\u4e2a\u5206\u652f\u5408\u5e76\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u9700\u8981\u8fdb\u884cMerge\u64cd\u4f5c\u3002\u5982\u679c\u65e0\u6cd5\u5b8c\u6210\u81ea\u52a8\u51b2\u7a81\u5408\u5e76\uff0c\u53ef\u80fd\u4f1a\u9700\u8981\u624b\u52a8\u5b8c\u6210\u51b2\u7a81\u5408\u5e76\u64cd\u4f5c\u3002 3.3.1 \u4f7f\u7528\u547d\u4ee4\u884c\u5b8c\u6210\u64cd\u4f5c \u00b6 3.3.1.1 Commit \u00b6 $ git add \u4f60\u8981\u4fdd\u5b58\u66f4\u6539\u7684\u6587\u4ef6\u4eec # \u6216\u8005\uff0cgit add --all \u4ee5\u6dfb\u52a0\u6240\u6709\u66f4\u6539\u3002 $ git commit -m \"\u672c\u6b21Commit\u4f60\u505a\u4e86\u4ec0\u4e48\" \u5efa\u8bae\u6bcf\u6b21Commit\u90fd\u4f7f\u7528\u6709\u6548\u7684Commit\u4fe1\u606f\uff0c\u4ee5\u4fbf\u4e8e\u81ea\u5df1\u8ffd\u8e2a\u4ee3\u7801\u8fdb\u5ea6\u3002 3.3.1.2 push \u00b6 push\u53ef\u4ee5\u5c06\u81ea\u5df1\u7684\u8fdb\u5ea6\u540c\u6b65\u5230\u8fdc\u7a0b\u4ed3\u5e93\u3002 $ git push 3.3.1.3 pull \u00b6 pull\u53ef\u4ee5\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u7684\u8fdb\u5ea6\u540c\u6b65\u5230\u672c\u5730\u3002 $ git pull 3.3.1.4 merge \u00b6 merge\u4e00\u822c\u7528\u4e8e\u5206\u652f\u4e4b\u95f4\u7684\u5408\u5e76\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4e0a\u6e38\u7684\u8fdc\u7a0b\u5206\u652f\u548c\u672c\u5730\u5206\u652f\u8fdb\u884c\u5408\u5e76\u3002 $ git checkout \u4f60\u60f3\u5408\u5e76\u7684\u672c\u5730\u5206\u652f $ git merge \u8fdc\u7a0b\u4ed3\u5e93\u540d\u79f0/\u5206\u652f\u540d\u79f0 \u4ed3\u5e93\u6743\u9650 \u4f60\u53ef\u4ee5\u4ece\u516c\u5171\u4ed3\u5e93\u62c9\u53d6\uff0c\u4f46\u4f60\u53ea\u80fd\u63a8\u9001\u5230\u4f60\u62e5\u6709\u6743\u9650\u7684\u4ed3\u5e93\u3002\u4e3a\u4e86\u9a8c\u8bc1\u4f60\u7684\u8eab\u4efd\uff0c\u4f60\u9700\u8981\u8bbe\u7f6e\u81ea\u5df1\u7684ssh\u5bc6\u94a5\u5bf9\u3002\u8bf7\u53c2\u7167 3.4\u8282 ssh\u5bc6\u94a5\u8bbe\u7f6e \u5b8c\u6210\u8bbe\u7f6e\u3002 3.3.2 \u4f7f\u7528VS Code\u5185\u5efa\u7684\u56fe\u5f62\u5316\u754c\u9762\u5b8c\u6210\u64cd\u4f5c \u00b6 VS Code\u7684\u7248\u672c\u63a7\u5236\u754c\u9762\u5728\u5de6\u4fa7\u4ece\u4e0a\u5f80\u4e0b\u6570\u7b2c\u4e8c\u4e2a\u6309\u94ae\u5904\uff1b\u4e0b\u65b9\u4f1a\u663e\u793a\u5f53\u524d\u6240\u5904\u7684\u5206\u652f\uff0c\u70b9\u51fb\u53ef\u4ee5\u5207\u6362\u5f53\u524d\u6240\u5904\u5206\u652f\uff1b\u53f3\u4fa7\u7684\u5706\u5f62\u53cc\u7bad\u5934\u5219\u4ee3\u8868\u4e0e\u8fdc\u7a0b\u73af\u5883\u540c\u6b65\u3002\u53f3\u4fa7Changes\u663e\u793a\u5de5\u4f5c\u533a\u4e2d\u88ab\u4fee\u6539\u7684\u6587\u4ef6\uff0c\u800cStaged\u5219\u663e\u793a\u5c06\u88ab\u52a0\u5165\u5230\u4e0b\u6b21Commit\u4e2d\u7684\u4fee\u6539\u3002\u5982\u56fe\uff0c\u8fd9\u4e2a\u754c\u9762\u663e\u793a\u6211\u4eec\u6709\u4e24\u4e2a\u88ab\u4fee\u6539\u7684\u6587\u4ef6\uff1a \u9f20\u6807\u79fb\u81f3Changes\u6216\u4e0b\u9762\u6240\u5217\u6587\u4ef6\u5904\uff0c\u70b9\u51fb\u53f3\u4fa7\u7684\u52a0\u53f7\uff0c\u53ef\u4ee5\u5c06\u6587\u4ef6\u52a0\u5165\u5230Staged\u533a\u4e2d\uff1a \u6b64\u65f6\uff0c\u8fd9\u4e9b\u6587\u4ef6\u5df2\u7ecf\u51c6\u5907\u597d\u88abCommit\u3002\u5728\u4e0a\u65b9\u6846\u5185\u8f93\u5165Commit\u4fe1\u606f\uff0c\u5e76\u70b9\u51fb \u221a \u6309\u94ae\u4ee5\u63d0\u4ea4\uff1a \u5728\u4e0b\u65b9\u7684\u540c\u6b65\u6309\u94ae\u5904\uff0c\u53ef\u4ee5\u53d1\u73b0\u67090\u4e2a\u63d0\u4ea4\u9700\u8981\u62c9\u53d6\u30011\u4e2a\u63d0\u4ea4\u9700\u8981\u63a8\u9001\u3002\u70b9\u51fb\u8fd9\u4e2a\u6309\u94ae\u4ee5\u540c\u6b65\uff0c\u6216\u8005\u70b9\u51fb\u5de6\u4e0a\u65b9\u90a3\u4e2a\u5de8\u5927\u7684\u84dd\u8272\u7684Sync Changes\uff08\u540c\u6b65\u66f4\u6539\uff09\uff1a \u8fd9\u6837\uff0c\u4f60\u7684\u4ee3\u7801\u5c31\u4fdd\u5b58\u5230\u4e91\u7aef\u4e86\u3002 \u4ed3\u5e93\u6743\u9650 \u4f60\u53ef\u4ee5\u4ece\u516c\u5171\u4ed3\u5e93\u62c9\u53d6\uff0c\u4f46\u4f60\u53ea\u80fd\u63a8\u9001\u5230\u4f60\u62e5\u6709\u6743\u9650\u7684\u4ed3\u5e93\u3002\u4e3a\u4e86\u9a8c\u8bc1\u4f60\u7684\u8eab\u4efd\uff0c\u4f60\u9700\u8981\u8bbe\u7f6e\u81ea\u5df1\u7684ssh\u5bc6\u94a5\u5bf9\u3002\u8bf7\u53c2\u7167 3.4\u8282 ssh\u5bc6\u94a5\u8bbe\u7f6e \u5b8c\u6210\u8bbe\u7f6e\u3002 3.3.3 \u5408\u5e76\u51b2\u7a81\u66f4\u6539 \u00b6 \u5982\u679c\u6709\u4e24\u4e2aCommit\u7684\u5185\u5bb9\u51fa\u73b0\u51b2\u7a81\uff0cmerge\u7684\u65f6\u5019\u5c31\u6709\u53ef\u80fd\u9700\u8981\u5408\u5e76\u51b2\u7a81\u66f4\u6539\u3002\u5efa\u8bae\u5728VSCode\u4e2d\u8fdb\u884c\u51b2\u7a81\u4fee\u6539\u3002\u4f8b\u5982\u6b64\u5904\uff0c\u6211\u5728\u5bf9\u672c\u5730 syscall \u505a\u4fee\u6539\u4e4b\u540e\uff0c\u5c06\u5176\u4e0e\u8fdc\u7a0b upstream/origin \u505a\u4fee\u6539\uff0c\u5e76\u89e6\u53d1\u4e86\u51b2\u7a81\uff1a \u4ece\u5de6\u4fa7\u7ea2\u6846\u4e2d\u201cMerge Changes\u201d\u680f\u4e2d\u53ef\u4ee5\u770b\u5230\u51fa\u73b0\u51b2\u7a81\u7684\u6587\u4ef6\u3002\u70b9\u5f00\u6587\u4ef6\uff0c\u53f3\u4fa7\u4f1a\u51fa\u73b0\u51b2\u7a81\u89c6\u56fe\u3002\u4e0a\u65b9\u9752\u8272\u90e8\u5206\u6307\u7684\u662f\u5f53\u524d\uff08\u672c\u5730\uff09\u7684\u4fee\u6539\uff0c\u800c\u4e0b\u65b9\u84dd\u8272\u90e8\u5206\u5219\u662f\u8fdc\u7a0b( upstream/origin )\u7684\u4fee\u6539\u3002\u6839\u636e\u5b9e\u9645\u60c5\u51b5\uff0c\u53ef\u4ee5\u4ece\u4e0a\u65b9\u51e0\u4e2a\u6309\u94ae\u4e2d\u9009\u62e9\u5408\u9002\u7684\u90a3\u4e2a\u3002\u8fd9\u6b21\uff0c\u6211\u60f3\u8981\u4fdd\u5b58\u6211\u81ea\u5df1\u7684\u4fee\u6539\u3001\u800c\u4e22\u5f03\u8fdc\u7a0b\u7684\u4fee\u6539\uff0c\u6545\u9009\u62e9 Accept Current Change \u3002\u968f\u540e\uff0c\u548cCommit\u524d\u4e00\u6837\uff0c\u5c06\u521a\u624d\u7684\u4fee\u6539Stage\uff0c\u5e76\u70b9\u51fb\u4e0a\u65b9 \u221a \u53f7\u63d0\u4ea4Commit\uff0c\u5e76\u63a8\u9001\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u51b2\u7a81\u66f4\u6539\u7684\u5408\u5e76\u3002 3.4 ssh\u5bc6\u94a5\u8bbe\u7f6e \u00b6 \u901a\u8fc7ssh\u5bc6\u94a5\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684\u5b8c\u6210\u4ece\u672c\u5730\u5230\u8fdc\u7a0b\u4ed3\u5e93\u7684\u8ba4\u8bc1\u3002\u8ddf\u968f\u4ee5\u4e0b\u6b65\u9aa4\uff0c\u4ee5\u5b8c\u6210ssh\u5bc6\u94a5\u521b\u5efa\uff0c\u5e76\u90e8\u7f72\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff1a 3.4.1 \u751f\u6210ssh\u5bc6\u94a5\u5bf9 \u00b6 \u5728\u7ec8\u7aef\u4e2d\uff0c\u8f93\u5165\u4ee5\u4e0b\u6307\u4ee4\u4ee5\u751f\u6210ssh\u5bc6\u94a5\u5bf9: ssh-keygen -t ed25519 -C \"name_of_ssh_keypair\" \u5bc6\u94a5\u5bf9\u7684\u540d\u5b57 \u5bc6\u94a5\u5bf9\u7684\u540d\u5b57\u5728\u6559\u7a0b\u4e2d\u5e38\u7528\u90ae\u7bb1\u5730\u5740\u4ee3\u66ff\uff0c\u8fd9\u662f\u4e00\u4e2a\u67d0\u79cd\u610f\u4e49\u4e0a\u7684\u4f20\u7edf\u3002\u6b64\u5916\uff0c\u4e3a\u4e86\u517c\u5bb9\u6027\u8003\u8651\uff0c\u4e0d\u5efa\u8bae\u5728\u5bc6\u94a5\u5bf9\u540d\u5b57\u4e2d\u4f7f\u7528\u9664\u4e86ASCII\u4e4b\u5916\u7684\u4efb\u4f55\u5b57\u7b26\u3002 \u8f93\u5165\u540e\uff0c\u6839\u636e\u7ec8\u7aef\u7684\u63d0\u793a\uff0c\u6309\u4e0b\u4e09\u6b21\u56de\u8f66\u5373\u53ef\u5b8c\u6210ssh\u5bc6\u94a5\u751f\u6210\uff0c\u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u8fd9\u4e9b\u9700\u8981\u8f93\u5165\u7684\u5185\u5bb9\uff1a lgz_admin@OSLabExecNode0:~/.ssh$ ssh-keygen -t ed25519 -C \"willson0v0@willson0v0.com\" Generating public/private ed25519 key pair. Enter file in which to save the key (/home/lgz_admin/.ssh/id_ed25519): # \u6309\u4e0b\u56de\u8f66\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u8def\u5f84\uff08~/.ssh/id_ed25519\uff09 Enter passphrase (empty for no passphrase): # \u6309\u4e0b\u56de\u8f66\u4ee5\u4f7f\u7528\u7a7a\u5bc6\u7801\uff0c\u6216\u8005\u81ea\u5b9a\u4e49\u5bc6\u7801\u518d\u56de\u8f66\u3002\u901a\u5e38\u53ef\u4ee5\u4e0d\u8bbe\u5bc6\u7801\u3002 Enter same passphrase again: # \u6309\u4e0b\u56de\u8f66\u786e\u8ba4\u7a7a\u5bc6\u7801\uff0c\u6216\u8005\u91cd\u65b0\u8f93\u5165\u4e0a\u4e00\u884c\u4e2d\u81ea\u5b9a\u4e49\u7684\u5bc6\u7801\u3002 Your identification has been saved in /home/lgz_admin/.ssh/id_ed25519 Your public key has been saved in /home/lgz_admin/.ssh/id_ed25519.pub The key fingerprint is: SHA256:1oDtnF8c1FXpDc+6U1Gogf8Swur0N/Dh6uFJFIlVJ9o willson0v0@willson0v0.com The key's randomart image is: +--[ED25519 256]--+ | .o+..o=| | o o.=.o+..| | . +.+.Eo.+o| | o +oo+. o+| | S.o.oo ..| | .oo..o o .| | o .++ o o | | .o.o= o | | .=o . . | +----[SHA256]-----+ \u73b0\u5728\uff0c\u4f60\u7684\u5bc6\u94a5\u5bf9\u5df2\u7ecf\u751f\u6210\u5b8c\u6210\u3002\u5982\u679c\u9075\u5faa\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u90a3\u4e48 ~/.ssh/id_ed25519 \u662f\u4f60\u7684\u79c1\u94a5\u6587\u4ef6\uff0c ~/.ssh/id_ed25519.pub \u5219\u662f\u4f60\u7684\u516c\u94a5\u6587\u4ef6\u3002\u901a\u8fc7 cat \u53ef\u4ee5\u5c55\u793a\u5176\u4e2d\u7684\u5185\u5bb9\uff1a lgz_admin@OSLabExecNode0:~/.ssh$ cat ~/.ssh/id_ed25519 # \u8fd9\u662f\u5c55\u793a\u7528\u7684\u5bc6\u94a5\u5bf9\u3002\u8bf7\u4e0d\u8981\u4f7f\u7528\u8be5\u5bc6\u94a5\u5bf9\uff0c\u4e5f\u4e0d\u8981\u8bb2\u81ea\u5df1\u7684\u79c1\u94a5\u5c55\u793a\u7ed9\u4efb\u4f55\u4eba\u3002 -----BEGIN OPENSSH PRIVATE KEY----- b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW QyNTUxOQAAACB07KkIxYhV60DnPqKY1E0AFoRgqnKRUy1qoh5M9EYJeAAAAKDKf/BCyn/w QgAAAAtzc2gtZWQyNTUxOQAAACB07KkIxYhV60DnPqKY1E0AFoRgqnKRUy1qoh5M9EYJeA AAAEBixqKUUTawYfl+mnEcqtxWT5up8xfbyaN438Iqjs3Gu3TsqQjFiFXrQOc+opjUTQAW hGCqcpFTLWqiHkz0Rgl4AAAAGXdpbGxzb24wdjBAd2lsbHNvbjB2MC5jb20BAgME -----END OPENSSH PRIVATE KEY----- lgz_admin@OSLabExecNode0:~/.ssh$ cat ~/.ssh/id_ed25519.pub ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHTsqQjFiFXrQOc+opjUTQAWhGCqcpFTLWqiHkz0Rgl4 willson0v0@willson0v0.com \u5b58\u50a8\u4f4d\u7f6e ssh agent\u4f1a\u81ea\u52a8\u88c5\u8f7d /.ssh/id_rsa\u6216\u8005 /.ssh/id_ed25519\u7b49\u5bc6\u94a5\u6587\u4ef6\u3002\u5982\u679c\u4f60\u66f4\u6539\u4e86\u5bc6\u94a5\u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u53ef\u80fd\u9700\u8981ssh-agent\u989d\u5916\u6dfb\u52a0\u5bc6\u94a5\u5230\u8eab\u4efd\u3002 \u4fdd\u62a4\u597d\u4f60\u7684\u79c1\u94a5\uff01 \u79c1\u94a5\uff08 ~/.ssh/id_ed25519 \uff09\u987e\u540d\u601d\u4e49\uff0c\u662f\u53ea\u6709\u4f60\u624d\u77e5\u9053\u7684\u5bc6\u94a5\u3002\u8bf7\u7edd\u5bf9\u4e0d\u8981\u5c06\u79c1\u94a5\u6cc4\u9732\uff0c\u56e0\u4e3a\u4efb\u4f55\u6301\u6709\u8fd9\u4e2a\u79c1\u94a5\u7684\u4eba\u90fd\u53ef\u4ee5\u4f2a\u88c5\u6210\u662f\u4f60\u3002 \u5173\u4e8e\u5bc6\u7801 \u53ef\u4ee5\u4e3assh\u5bc6\u94a5\u8bbe\u7f6e\u5bc6\u7801\uff0c\u4ee5\u4fdd\u8bc1\u5bc6\u94a5\u7684\u5b89\u5168\u3002\u4e0d\u8fc7\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\u8fd9\u5e76\u6ca1\u6709\u5fc5\u8981\uff0c\u800c\u4e14\u8fd9\u4f1a\u8ba9\u5404\u79cdssh\u53d8\u5f97\u5f88\u9ebb\u70e6\uff1a\u6bcf\u6b21push\u6216\u8005pull\u90fd\u8981\u8f93\u4e00\u6b21\u5bc6\u7801\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u5efa\u8bae\u4f60\u4e3assh\u5bc6\u94a5\u8bbe\u7f6e\u5bc6\u7801\u3002 3.4.2 \u5c06\u5bc6\u94a5\u90e8\u7f72\u5230Gitee \u00b6 \u5982\u679c\u4f60\u8981\u8bbf\u95ee\u7684\u8fdc\u7a0b\u4ed3\u5e93\u4f4d\u4e8eGitee\uff0c\u90a3\u4e48\u4f60\u9700\u8981\u5c06\u4f60\u7684 ssh\u516c\u94a5 \u90e8\u7f72\u5230Gitee\u3002\u9996\u5148\uff0c\u6253\u5f00 Gitee\u9875\u9762 \uff0c\u767b\u5f55\uff0c\u5e76\u70b9\u51fb\u5de6\u4e0a\u89d2\u4e2a\u4eba\u5934\u50cf-\u8bbe\u7f6e\uff1a \u968f\u540e\uff0c\u70b9\u51fb\u5de6\u4fa7\u7684ssh\u516c\u94a5\uff0c\u5e76\u5c06\u6b64\u524d\u751f\u6210\u7684 ssh\u516c\u94a5 \u5185\u5bb9\u62f7\u8d1d\u8fdb\u516c\u94a5\u533a\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7 cat ~/.ssh/id_ed25519.pub \u4ece\u7ec8\u7aef\u83b7\u5f97\u8fd9\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u3002\u968f\u540e\uff0c\u4f60\u53ef\u4ee5\u7f16\u8f91\u8fd9\u4e2a\u516c\u94a5\u7684\u6807\u9898\u3002\u6700\u540e\uff0c\u70b9\u51fb\u6700\u4e0b\u65b9\u6a59\u8272\u7684\u201c\u786e\u5b9a\u201d\uff0c\u5373\u53ef\u5b8c\u6210\u516c\u94a5\u7684\u6dfb\u52a0\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6307\u4ee4\uff0c\u5c1d\u8bd5\u8fde\u63a5\u5230Gitee\uff0c\u4ee5\u9a8c\u8bc1\u516c\u94a5\u662f\u5426\u6dfb\u52a0\u6210\u529f\uff1a lgz_admin@OSLabExecNode0:~$ ssh -T git@gitee.com Hi \u7528\u6237\u540d! You've successfully authenticated, but GITEE.COM does not provide shell access. 3.4.3 \u5c06\u5bc6\u94a5\u90e8\u7f72\u5230Github \u00b6 \u5982\u679c\u4f60\u8981\u8bbf\u95ee\u7684\u8fdc\u7a0b\u4ed3\u5e93\u4f4d\u4e8eGithub\uff0c\u90a3\u4e48\u4f60\u9700\u8981\u5c06\u4f60\u7684 ssh\u516c\u94a5 \u90e8\u7f72\u5230Gitee\u3002\u9996\u5148\uff0c\u6253\u5f00 Github\u9875\u9762 \uff0c\u767b\u5f55\uff0c\u5e76\u70b9\u51fb\u5de6\u4e0a\u89d2\u4e2a\u4eba\u5934\u50cf-Settings\uff1a \u968f\u540e\uff0c\u70b9\u51fb\u5de6\u4fa7SSH and GPG keys\uff0c\u5e76\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684New SSH key\uff1a \u6700\u540e\uff0c\u8f93\u5165SSH key\u7684\u6807\u9898\uff0c\u5c06\u6b64\u524d\u751f\u6210\u7684 ssh\u516c\u94a5 \u5185\u5bb9\u62f7\u8d1d\u8fdb\u516c\u94a5\u533a\uff0c\u5e76\u70b9\u51fb\u4e0b\u65b9\u7eff\u8272 Add SSH key \u5373\u53ef\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6307\u4ee4\uff0c\u5c1d\u8bd5\u8fde\u63a5\u5230Github\uff0c\u4ee5\u9a8c\u8bc1\u516c\u94a5\u662f\u5426\u6dfb\u52a0\u6210\u529f\uff1a lgz_admin@OSLabExecNode0:~$ ssh -T git@github.com Hi \u7528\u6237\u540d! You've successfully authenticated, but GitHub does not provide shell access. 3.5 \u5e38\u89c1\u95ee\u9898 \u00b6 3.5.1 \u65e0\u6cd5\u63a8\u9001\u600e\u4e48\u529e\uff1f \u00b6 \u5982\u679c\u4f60\u5c1d\u8bd5\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u6216\u8005\u4ece\u8fdc\u7a0b\u4ed3\u5e93\u62c9\u53d6\uff0c\u4f46\u662fgit\u5374\u663e\u793a\u51fa\u8fd9\u6837\u7684\u9519\u8bef\uff1a git@gitee.com: Permission denied (publickey). fatal: Could not read from remote repository. Please make sure you have the correct access rights and the repository exists \u8fd9\u8868\u660e\u4f60\u6ca1\u6709\u6743\u9650\u63a8\u9001\u5230\u8fd9\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\u3002\u4e00\u822c\u800c\u8a00\uff0c\u8fd9\u662f\u7531\u4e8e\u4f60\u6ca1\u6709\u8bbe\u7f6e\u597d\u81ea\u5df1\u7684ssh\u5bc6\u94a5\u9020\u6210\u7684\u3002\u8bf7\u53c2\u7167 3.4\u8282 ssh\u5bc6\u94a5\u8bbe\u7f6e \uff0c\u8bbe\u7f6e\u81ea\u5df1\u7684ssh\u5bc6\u94a5\u3002 3.5.2 \u6211\u600e\u4e48\u77e5\u9053\u6211\u4fee\u6539\u4e86\u54ea\u4e9b\u6587\u4ef6\uff1f \u00b6 \u901a\u5e38\u800c\u8a00\uff0c\u5b9e\u9a8c\u8981\u6c42\u540c\u5b66\u4eec\u63d0\u4ea4 \u6240\u6709 \u88ab\u4fee\u6539\u8fc7\u7684\u6587\u4ef6\u3002\u901a\u8fc7\u5c06\u5f53\u524d\u5de5\u4f5c\u8def\u5f84\u4e0e\u4e0a\u6e38\u4ed3\u5e93\uff08\u8bfe\u7a0b\u5b9e\u9a8c\u63d0\u4f9b\u7684\u4ed3\u5e93\uff09\u5bf9\u5e94\u5206\u652f\u7684\u5185\u5bb9\u76f8\u6bd4\u8f83\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u77e5\u9053\u81ea\u5df1\u66fe\u7ecf\u4fee\u6539\u8fc7\u54ea\u4e9b\u6587\u4ef6\uff0c\u5e76\u6253\u5305\u63d0\u4ea4\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5f53\u524d\u5206\u652f\u4e0e\u4e0a\u6e38\u4ed3\u5e93\u7684 syscall \u5206\u652f\u76f8\u6bd4\u8f83\uff1a lgz_admin@OSLabExecNode0:~/git_demo/xv6-labs-2020$ git fetch --all Fetching origin Fetching upstream lgz_admin@OSLabExecNode0:~/git_demo/xv6-labs-2020$ git diff --stat upstream/syscall * kernel/kalloc.c | 2 ++ kernel/syscall.c | 1 + kernel/syscall.h | 1 + kernel/sysinfo.h | 1 + 4 files changed, 5 insertions(+) \u8981\u6bd4\u8f83\u5176\u4ed6\u5206\u652f\uff0c\u5c06\u7b2c\u4e8c\u6761\u6307\u4ee4\u4e2d\u7684 syscall \u6539\u4e3a\u5bf9\u5e94\u5206\u652f\u540d\u5373\u53ef\u3002 \u8bf7\u5148\u5728\u672c\u5730\u5207\u6362\u5230\u5bf9\u5e94\u5206\u652f\uff01 \u5728\u6bd4\u8f83\u7684\u65f6\u5019\uff0c\u4f60\u9700\u8981\u5c06\u672c\u5730\u5206\u652f\u4e0e\u4e0a\u6e38\u5bf9\u5e94\u5206\u652f\u8fdb\u884c\u6bd4\u8f83\u3002\u4e3e\u4f8b\u800c\u8a00\uff0c\u4f60\u4e0d\u4f1a\u60f3\u6bd4\u8f83\u672c\u5730\u7684 util \u5206\u652f\u548c\u8fdc\u7a0b\u7684 syscall \u5206\u652f\uff0c\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u4e0d\u662f\u4e00\u4e2a\u5b9e\u9a8c\u7684\u3002\u8bf7\u5148\u4f7f\u7528 git checkout \u5206\u652f\u540d \u4ee5\u5207\u6362\u5230\u5bf9\u5e94\u5206\u652f\uff0c\u5e76\u5728\u4f7f\u7528 git diff --stat upstream/\u5206\u652f\u540d * \u65f6\u6307\u5b9a \u540c\u4e00\u4e2a \u4e0a\u6e38\u5206\u652f\u3002 \u672a\u8bbe\u7f6e\u4e0a\u6e38\u4ed3\u5e93\uff1f \u5982\u679cgit\u62a5\u544a\u201c fatal: ambiguous argument 'upstream/\u5206\u652f\u540d': unknown revision or path not in the working tree. \u201d\uff0c\u8bf4\u660e\u4f60\u5c1a\u672a\u8bbe\u7f6e\u4e0a\u6e38\u4ed3\u5e93\u3002\u8bf7\u5148\u6309\u672c\u6307\u5357\u4e2d\u7684 3.1-\u540c\u6b65\u4e0a\u6e38\u4ed3\u5e93 \u4e00\u8282\u5b8c\u6210\u4e0a\u6e38\u4ed3\u5e93\u7684\u8bbe\u7f6e\u4e0e\u540c\u6b65\uff0c\u518d\u8fdb\u884c\u6bd4\u8f83\u3002 3.5.3 \u4e3a\u4ec0\u4e48\u6211\u4e0d\u80fd\u5207\u6362\u5206\u652f\uff08checkout\uff09\uff1f \u00b6 \u901a\u5e38\u800c\u8a00\uff0c\u4e0d\u80fd\u5207\u6362\u5206\u652f\u7684\u4e3b\u8981\u539f\u56e0\u662f\u4f60\u5f53\u524d\u6709\u5c1a\u672a\u4fdd\u5b58\u7684\u4fee\u6539\uff0c\u6b64\u65f6checkout\u7684\u8bdd\u4f1a\u89e6\u53d1\u4ee5\u4e0b\u9519\u8bef\uff1a lgz_admin@OSLabExecNode0: ~/git_demo/xv6-labs-2020$ git checkout util \u2500\u256f error: Your local changes to the following files would be overwritten by checkout: Makefile Please commit your changes or stash them before you switch branches. Aborting \u901a\u8fc7 git status \u6307\u4ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u68c0\u67e5\u5f53\u524dgit\u7684\u72b6\u6001\u3002\u5982\u679c\u4f60\u7684\u8f93\u51fa\u5982\u4e0b\u6240\u793a\uff1a lgz_admin@OSLabExecNode0: ~/git_demo/xv6-labs-2020$ git status On branch syscall Your branch is up to date with 'origin/syscall'. Changes not staged for commit: (use \"git add <file>...\" to update what will be committed) (use \"git restore <file>...\" to discard changes in working directory) modified: Makefile no changes added to commit (use \"git add\" and/or \"git commit -a\") \u8fd9\u8bf4\u660e\u5f53\u524d\u4f60\u7684\u5de5\u4f5c\u533a\u6709\u5c1a\u672a\u4fdd\u5b58\u7684\u66f4\u6539\u3002\u8bf7\u53c2\u8003 3.3.1 \u4f7f\u7528\u547d\u4ee4\u884c\u5b8c\u6210\u64cd\u4f5c \u6216\u8005 3.3.2 \u4f7f\u7528VS Code\u5185\u5efa\u7684\u56fe\u5f62\u5316\u754c\u9762\u5b8c\u6210\u64cd\u4f5c \u8282\uff0c\u5b8c\u6210commit\u64cd\u4f5c\u3002 \u6216\u8005\uff0c\u5982\u679c\u4f60\u5e0c\u671b\u76f4\u63a5\u653e\u5f03\u6389\u4e0a\u4e00\u6b21commit\u540e\u7684 \u6240\u6709\u66f4\u6539 \uff0c\u90a3\u4e48\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 -f \u9009\u9879\u5f3a\u5236\u5207\u6362\u5206\u652f\uff0c\u4f8b\u5982 git checkout -f syscall \u3002 4 gcc \u00b6 question 4 \u5bf9\u4e8e\u4e60\u60ef\u4f7f\u7528Windows\u73b0\u6709\u7684IDE\u6765\u7f16\u8bd1\u7a0b\u5e8f\u7684\u6211\u4eec\uff0c\u9762\u5bf9Linux\u7684\u547d\u4ee4\u884c\uff0c\u5e94\u8be5\u5982\u4f55\u7f16\u8bd1\u81ea\u5df1\u5199\u597d\u7684\u4ee3\u7801\uff1a\uff1f \u901a\u5e38\u60c5\u51b5\u4e0b\uff0cLinux\u7528\u6237\u66f4\u559c\u6b22\u76f4\u63a5\u7f16\u5199\u76f8\u5e94\u7684GCC\u547d\u4ee4\u6765\u7f16\u8bd1\u7a0b\u5e8f\u3002\u5927\u90e8\u5206Linux\u53d1\u884c\u7248\u4e2d\u90fd\u4f1a\u9ed8\u8ba4\u5b89\u88c5GCC\u7f16\u8bd1\u5668\u3002 4.1 GCC\u5e38\u7528\u7f16\u8bd1\u9009\u9879 \u00b6 \u547d\u4ee4\u683c\u5f0f\uff1agcc [\u9009\u9879] [\u6587\u4ef6\u540d] -E: \u4ec5\u6267\u884c\u7f16\u8bd1\u9884\u5904\u7406 -S\uff1a\u5c06C\u4ee3\u7801\u8f6c\u6362\u4e3a\u6c47\u7f16\u4ee3\u7801 -c\uff1a\u4ec5\u6267\u884c\u7f16\u8bd1\u64cd\u4f5c\uff0c\u4e0d\u8fdb\u884c\u94fe\u63a5\u64cd\u4f5c -o: \u6307\u5b9a\u751f\u6210\u7684\u8f93\u51fa\u6587\u4ef6 4.2 GCC\u7f16\u8bd1\u7684\u56db\u4e2a\u9636\u6bb5 \u00b6 1\u3001\u5c06hello.c\u9884\u5904\u7406\u8f93\u51fahello.i\u6587\u4ef6 gcc -E hello.c -o hello.i 2\u3001\u5c06\u9884\u5904\u7406\u8f93\u51fa\u6587\u4ef6hello.i\u6c47\u7f16\u6210hello.s\u6587\u4ef6\u3002 gcc -S hello.i -o hello.s 3\u3001\u5c06\u6c47\u7f16\u8f93\u51fa\u6587\u4ef6hello.s\u7f16\u8bd1\u8f93\u51fahello.o\u6587\u4ef6 gcc -c hello.s -o hello.o 4\u3001\u5c06\u7f16\u8bd1\u8f93\u51fa\u6587\u4ef6hello.o\u94fe\u63a5\u6210\u6700\u7ec8\u53ef\u6267\u884c\u6587\u4ef6hello\u3002 gcc hello.o -o hello \u6216\u76f4\u63a5\u8f93\u5165\u4e0b\u9762\u4ee3\u7801\u4e00\u6b65\u5230\u4f4d gcc hello.c -o hello \u4e5f\u53ef\u4ee5\u6709\u591a\u4e2a\u6a21\u5757\u3001\u591a\u4e2a\u6587\u4ef6\u4e00\u8d77\u7f16\u8bd1\uff0c\u8bf7\u81ea\u884c\u767e\u5ea6\u3002 5 Makefile \u00b6 question 5 \u4ec0\u4e48\u662fmakefile\uff1f\u4f5c\u4e3a\u4e00\u4e2a\u4e13\u4e1a\u7684\u7a0b\u5e8f\u5458\uff0c\u7279\u522b\u662f\u5728Unix\uff08Linux\uff09\u73af\u5883\u4e0b\u5f00\u53d1\u7684\u7a0b\u5e8f\u5458\uff0c\u5982\u679c\u4e0d\u4f1a\u4f7f\u7528GNU make\u6765\u6784\u5efa\u548c\u7ba1\u7406\u81ea\u5df1\u7684\u5de5\u7a0b\uff0c\u5e94\u8be5\u4e0d\u80fd\u7b97\u662f\u4e00\u4e2a\u5408\u683c\u7684\u4e13\u4e1a\u7a0b\u5e8f\u5458\u3002\u4f1a\u4e0d\u4f1a\u5199Makefile\uff0c\u4ece\u4e00\u4e2a\u4fa7\u9762\u8bf4\u660e\u4e86\u4e00\u4e2a\u4eba\u662f\u5426\u5177\u5907\u5b8c\u6210\u5927\u578b\u5de5\u7a0b\u7684\u80fd\u529b\u3002\u56e0\u4e3a\uff0cMakefile\u5173\u7cfb\u5230\u4e86\u6574\u4e2a\u5de5\u7a0b\u7684\u7f16\u8bd1\u3001\u8fde\u63a5\u7b49\u89c4\u5219\u3002\u4e3a\u5de5\u7a0b\u7f16\u5199Makefile\u7684\u597d\u5904\u662f\u80fd\u591f\u7528\u4e00\u4e2amake\u547d\u4ee4\u6765\u5b8c\u6210\u201c\u81ea\u52a8\u5316\u7f16\u8bd1\"\uff0c\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u8f6f\u4ef6\u5f00\u53d1\u7684\u6548\u7387\u3002make\u662f\u4e00\u4e2a\u547d\u4ee4\u5de5\u5177\uff0c\u5b83\u7528\u4e8e\u89e3\u91camakefile\u4e2d\u7684\u6307\u4ee4\u3002 \u7f16\u5199\u89c4\u5219\uff1a <target> : < prerequisites > [tab] <commands> \u4e3a\u4e86\u5927\u5bb6\u80fd\u66f4\u4e3a\u6e05\u6670\u5730\u4e86\u89e3Makefile\u7684\u57fa\u672c\u6982\u5ff5\uff0c\u6211\u4eec\u6765\u5199\u4e00\u4e2a\u7b80\u5355\u7684Makefile\u3002 \u76f4\u63a5\u4f7f\u7528gcc\u7f16\u8bd1hello.c $ gcc -o hello hello.c \u90a3\u4e48\uff0c\u7b80\u6613\u7684Makefile\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u7684\u6837\u5b50\uff0c\u4e4b\u540e\u6267\u884cmake\u5373\u53ef\u4ea7\u751fhello\u53ef\u6267\u884c\u6587\u4ef6 all : hello . c gcc -o hello hello.c \u5efa\u8bae\u540c\u5b66\u4eec\u81ea\u5df1\u5c1d\u8bd5\u5199\u4e00\u4e2a\u7b80\u5355\u7684Makefile\u6587\u4ef6\uff0c\u8fd9\u91cc\u4e3a\u540c\u5b66\u4eec\u63d0\u4f9b\u4e24\u4e2a\u7f51\u5740\u4f9b\u5927\u5bb6\u5b66\u4e60\u53c2\u8003\uff1a \u8ddf\u6211\u4e00\u8d77\u5199Makefile:MakeFile Reading-Makefiles","title":"\u5b9e\u9a8c\u5b9e\u7528\u5de5\u5177"},{"location":"tools/#_1","text":"\u5bf9\u4e8e\u521d\u5165openEuler/Linux\u7684\u540c\u5b66\uff0c\u53ef\u80fd\u5bf9\u4e8eLinux\u7684\u547d\u4ee4\u884c\uff08openEuler20.09\u6682\u672a\u652f\u6301\u56fe\u5f62\u5316\u754c\u9762\uff09\u611f\u89c9\u5230\u4e00\u8138\u832b\u7136\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u7ed9\u540c\u5b66\u4eec\u63a8\u8350\u51e0\u6b3e\u5b9e\u7528\u5de5\u5177\uff0c\u4ee5\u4fbf\u5e2e\u52a9\u540c\u5b66\u4eec\u80fd\u5feb\u901f\u4e0a\u624bLinux\u5f00\u53d1\u5de5\u4f5c\u3002","title":"\u5b9e\u9a8c\u5b9e\u7528\u5de5\u5177"},{"location":"tools/#1-ssh","text":"question 1 \u5982\u4f55\u5b9e\u73b0Linux\u548cWindows\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7684\u6570\u636e\u901a\u4fe1\u3001\u6587\u4ef6\u5171\u4eab\uff1f \u5728\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u63a8\u8350\u5927\u5bb6\u4f7f\u7528ssh\uff08Secure Shell\uff09\u8fdc\u7a0b\u767b\u5f55\u534f\u8bae\u3002","title":"1. SSH"},{"location":"tools/#11-mobaxtermssh","text":"\u5e38\u7528\u7684SSH\u5de5\u5177\u6709Putty\u3001XShell\u3001SecureCRT\u3001MobaXterm\u7b49\u3002\u5728\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u63a8\u8350\u540c\u5b66\u4eec\u4f7f\u7528MobaXterm\u3002 MobaXterm \u662f\u4e00\u6b3e\u8fdc\u7a0b\u63a7\u5236\u5de5\u5177\uff0c\u652f\u6301\u521b\u5efaSSH\u3001Telnet\u3001Rsh\u3001Xdmc\u3001RDP\u3001VNC\u3001FTP\u3001 SFTP\u3001\u4e32\u53e3(Serial COM)\u3001\u672c\u5730Shell\u3001Mosh\u3001Aws\u3001WSL(\u5fae\u8f6f\u5b50\u7cfb\u7edf)\u7b49\u8d85\u591a\u8fde\u63a5\u529f\u80fd\u3002MobaXterm \u63d0\u4f9b\u4e86\u4eba\u6027\u5316\u7684\u64cd\u4f5c\u754c\u9762\uff0c\u652f\u6301\u4e0e\u4e3b\u6d41\u7684\u64cd\u4f5c\u7cfb\u7edf\u8fde\u63a5\u8fdb\u884c\u63a7\u5236\u548c\u7ba1\u7406\u64cd\u4f5c\uff0c\u529f\u80fd\u5341\u5206\u5f3a\u5927\u3002 MobaXterm \u4e0b\u8f7d\u94fe\u63a5\uff1a http://10.249.14.14:8000/index.php/s/7vlEVZPKaMTIpi0 \u6253\u5f00MobaXterm\uff0c\u5355\u51fb\u6253\u5f00\u5de5\u5177Session\uff08\u4f4d\u4e8e\u5de6\u4e0a\u89d2\uff09\u9009\u62e9New sessions\u6253\u5f00\u65b0\u5efa\u7a97\u53e3\uff0c\u9009\u62e9SSH\uff0c\u8f93\u5165\u8fdc\u7a0b\u670d\u52a1\u5668\u7684IP\u5730\u5740\u3001\u767b\u9646\u7528\u6237\u540d\u53ca\u7aef\u53e3\uff08\u9ed8\u8ba4\u662f22\uff0c\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u7aef\u53e3\u53f7\u662f6666\uff09\uff0c\u70b9\u51fbOK\u3002 SSH\u914d\u7f6e\u4fe1\u606f\u6839\u636e\u5b9e\u9a8c\u73af\u5883\u6765\u914d\u7f6e\uff1a \u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u3002IP\u5730\u5740\uff1a 10.249.12.98 \uff0c\u7aef\u53e3\u53f7\uff1a 6666 \uff0c\u7528\u6237\u540d\u548c\u521d\u59cb\u5bc6\u7801\u90fd\u662f \u4f60\u7684\u5b66\u53f7 \u3002 \u81ea\u884c\u90e8\u7f72\u7684\u5b9e\u9a8c\u73af\u5883\u3002\u5982\u679c\u4f60\u7528\u7684\u662f\u4f60\u81ea\u5df1\u7684\u5b9e\u9a8c\u73af\u5883\uff0c\u53ef\u4ee5\u4f7f\u7528ip addr\u547d\u4ee4\u6765\u67e5\u8be2IP\u5730\u5740\uff0c\u8be6\u89c1 ip addr \u663e\u793a\u6216\u8bbe\u7f6e\u7f51\u7edc\u72b6\u6001 \u3002\u7aef\u53e3\u53f7\u5982\u679c\u5728\u6ca1\u6709\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\uff0c\u9ed8\u8ba4\u662f22\u3002\u7528\u6237\u540d\u548c\u5bc6\u7801\u662fLinux\u7cfb\u7edf\u4e2d\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u3002 \u70b9\u51fbOK\u540e\uff0c\u8f93\u5165\u5bc6\u7801\uff08\u8f93\u5165\u8fc7\u7a0b\u662f\u6ca1\u6709\u663e\u793a\u7684\uff0c\u8f93\u5165\u5b8c\u6210\u540e\u6572\u56de\u8f66\u952e\uff09 \u5373\u53ef\u8fdb\u5165Linux\u7cfb\u7edf\u7684\u547d\u4ee4\u884c\u7a97\u53e3\uff08shell\uff09\u3002","title":"1.1 MobaXterm\uff08SSH\u5de5\u5177\uff09"},{"location":"tools/#12-sftp","text":"SSH\u8fdc\u7a0b\u767b\u5f55\u5b8c\u6bd5\uff0c\u5728\u5de6\u4e0b\u89d2\u6ca1\u6709\u4e00\u4e2a\u7ad6\u7740\u7684Sftp\uff0c\u53cc\u51fb\u5b83\uff0c\u5c31\u51fa\u73b0\u4e86\u8fdc\u7a0b\u670d\u52a1\u5668\u7684\u6587\u4ef6\u76ee\u5f55 \u63a5\u4e0b\u6765\u5728\u53ef\u4ee5\u70b9\u51fb\u7ea2\u8272\u6846\u6846\u7684\u6309\u94ae\u201cUpload to current folder\u201d\u6216\u8005\u201cDownload selected files\u201d\uff0c\u5728windows\u7cfb\u7edf\u548c\u865a\u62df\u673a/\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u4e4b\u95f4\u4e0a\u4f20\u6216\u4e0b\u8f7d\u6587\u4ef6\u3002","title":"1.2 \u6587\u4ef6\u4f20\u8f93SFTP\u670d\u52a1"},{"location":"tools/#2-vscode","text":"question 2 \u5982\u4f55\u67e5\u9605\u3001\u7f16\u8f91\u3001\u8fd0\u884c\u548c\u8c03\u8bd5\u4ee3\u7801\uff1f \u5728\u5b9e\u9a8c\u4e2d\uff0c\u5f3a\u70c8\u63a8\u8350\u540c\u5b66\u4eec\u4f7f\u7528VScode\u4ee3\u7801\u7f16\u8f91\u5668\uff0c\u800c\u4e0d\u662f\u5728\u7269\u7406\u673a\u4e0a\u7f16\u8f91\u4ee3\u7801\u518d\u62f7\u8d1d\u8fc7\u53bb\u624b\u52a8\u8fd0\u884c\uff0c\u8fd9\u5c06\u8282\u7701\u5927\u91cf\u7684\u65f6\u95f4\u3002 \u901a\u8fc7VSCode\u7684\u5f3a\u5927\u6269\u5c55\u5e93\uff0c\u6211\u4eec\u53ef\u4ee5\u5728Windows\u7cfb\u7edf\u4e0a\u4f7f\u7528VScode\u4e00\u7ad9\u5f0f\u521b\u5efa\uff0c\u7f16\u8f91\uff0c\u6784\u5efa\uff0c\u8fd0\u884c\u548c\u8c03\u8bd5\u8fdc\u7a0b\u4e3b\u673a\u4e0a\u7684\u5de5\u7a0b\u6587\u4ef6\uff0c\u5c31\u50cf\u4f7f\u7528Code::Blocks\u64cd\u4f5c\u672c\u5730\u5de5\u7a0b\u4e00\u6837\u3002","title":"2 VScode"},{"location":"tools/#21-openeulervscode","text":"\u5982\u679c\u4f60\u7528\u7684\u7cfb\u7edf\u4e0d\u662fopenEuler\uff08\u4f8b\u5982\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u6216\u8005\u5176\u4ed6Linux\u7cfb\u7edf\uff09\uff0c\u90a3\u4f60\u53ef\u4ee5\u5ffd\u7565\u8fd9\u4e00\u5c0f\u8282\u3002 openEuler\u7cfb\u7edf\u9ed8\u8ba4\u4e0d\u652f\u6301Vscode\u8fdc\u7a0b\u767b\u5f55\uff0c\u9700\u8981\u5728openEuler\u865a\u62df\u673a\u4e2d\u505a\u5982\u4e0b\u4fee\u6539\uff1a step1\uff1a \u9996\u5148\u9700\u8981\u5728openEuler\u865a\u62df\u673a\u4e2d\u5207\u56deroot\u7528\u6237\uff0c\u5982\u679c\u4e0d\u662froot\u7528\u6237\uff0c\u8f93\u5165exit\u5373\u53ef\u8fd4\u56deroot\u7528\u6237\u3002 [cs@localhost root]$ exit exit [root@localhost ~]# step2\uff1a \u5728/etc/ssh/sshd_config\u6587\u4ef6\u4e2d\u505a\u5982\u4e0b\u4fee\u6539\uff1a AllowAgentForwarding yes AllowTcpForwarding yes GatewayPorts yes \u7528vi\u547d\u4ee4\u6253\u5f00sshd_config\uff1a vi\u662f\u6240\u6709Unix\u53caLinux\u7cfb\u7edf\u4e0b\u6807\u51c6\u7684\u7f16\u8f91\u5668\uff0c\u5b83\u5c31\u76f8\u5f53\u4e8ewindows\u7cfb\u7edf\u4e2d\u7684\u8bb0\u4e8b\u672c\u4e00\u6837\uff0c\u5b83\u662f\u6211\u4eec\u4f7f\u7528Linux\u7cfb\u7edf\u4e0d\u80fd\u7f3a\u5c11\u7684\u5de5\u5177\u3002vim\u53ef\u4ee5\u5f53\u4f5cvi\u7684\u5347\u7ea7\u7248\u672c\uff0c\u5b66\u4f1a\u5b83\uff0c\u4f60\u5c06\u5728Linux\u7684\u4e16\u754c\u91cc\u7545\u884c\u65e0\u963b:-) # vi /etc/ssh/sshd_config \u8f93\u5165\"/Allow\"\uff0c\u6309\u4e0b\u56de\u8f66\uff0c\u5c31\u4f1a\u53d1\u73b0\u5b9a\u4f4d\u5230\u4e86#AllowAgentForwarding yes\u8fd9\u4e00\u884c\uff0c\u6211\u4eec\u628a\u524d\u9762\u7684#\u5220\u53bb\u5373\u53ef\u3002 \u5982\u4f55\u5220\u9664\u5462\uff1f\u6b64\u65f6\u6309\u4e0bi\u4f1a\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\uff0c\u4e0b\u9762\u663e\u793a\u4e00\u4e2a--INSERT--\uff0c\u7136\u540e\u6b63\u5e38\u5220\u9664\u5373\u53ef\u3002\u63a5\u7740\u4fee\u6539AllowTcpForwarding yes\u548cGatewayPorts yes\u3002 \u63a5\u4e0b\u6765\u5982\u4f55\u4fdd\u5b58\u5462\uff1f\u6309\u4e0besc\u952e\uff0c\u5373\u53ef\u9000\u51fa\u63d2\u5165\u6a21\u5f0f\uff0c\u7136\u540e\uff0c\u8f93\u5165\":wq\"\u5373\u53ef\u4fdd\u5b58\u5e76\u9000\u51fa\u3002\uff08\u8f93\u5165\":q!\"\u662f\u4e0d\u4fdd\u5b58\u5e76\u9000\u51fa\uff09 step3\uff1a \u91cd\u542fssh\u670d\u52a1 \u8bbe\u7f6e\u597dssh\u7684\u4ee3\u7406\u8f6c\u53d1\u540e\uff0c\u73b0\u5728\u8fd8\u6ca1\u6709\u751f\u6548\uff0c\u9700\u8981\u91cd\u542f\u4e00\u4e0bssh\u670d\u52a1\uff0c\u547d\u4ee4\u884c\u5982\u4e0b\uff1a # systemctl restart sshd.service","title":"2.1 \u914d\u7f6eopenEuler\u4ee5\u652f\u6301VScode\u8bbf\u95ee"},{"location":"tools/#22-vscode","text":"\u5728 https://code.visualstudio.com/ \u4e0b\u8f7d\u5e76\u5728\u7269\u7406\u673a\uff08Windows\u7cfb\u7edf\uff09\u4e0a\u5b89\u88c5VSCode\u8f6f\u4ef6\u3002 \u6253\u5f00\u540e\u5728\u5de6\u4fa7\u8fb9\u680f\u7684\u6269\u5c55\u5546\u5e97\u4e2d\u641c\u7d22\u5e76\u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55 Chinese (Simplified) Language Pack for Visual Studio Code Remote-SSH C/C++ \u5b89\u88c5\u5b8c\u6210\u540e\u91cd\u542fVSCode\u3002","title":"2.2 \u5b89\u88c5VScode"},{"location":"tools/#23-vscode","text":"\u63d0\u793a \u4f7f\u7528\u524d\uff0c\u9700\u8981\u5b89\u88c5Remote-SSH\u63d2\u4ef6\u3002 \u5728\u5de6\u4fa7\u8fb9\u680f\u7684\u8fdc\u7a0b\u8d44\u6e90\u7ba1\u7406\u5668\u5de5\u5177\u680f\u4e2d\u70b9\u51fb+\u53f7\uff0c\u5728\u9876\u90e8\u8f93\u5165 ssh \u4f60\u7684\u7528\u6237\u540d@IP\u5730\u5740 -p \u7aef\u53e3\u53f7 \u547d\u4ee4\u5e76\u4e00\u8def\u56de\u8f66\u3002 \u6b64\u65f6\u5728\u5de5\u5177\u680f\u4e2d\u53ef\u4ee5\u770b\u5230\u65b0\u6dfb\u52a0\u7684\u8fdc\u7a0b\u4e3b\u673a\u3002\u5728\u8fdc\u7a0b\u7535\u8111\u4e0a\u70b9\u51fb\u8fde\u63a5\uff0c\u8f93\u5165\u5bc6\u7801\u540e\u5c06\u4f1a\u6253\u5f00\u65b0\u7a97\u53e3\u8fde\u63a5\u5230\u8fdc\u7a0b\u4e3b\u673a\u4e2d\u3002 \u5728\u8fde\u63a5\u5230\u8fdc\u7a0b\u4e3b\u673a\u4e4b\u540e\uff0c\u9700\u8981\u5728\u518d\u6b21\u641c\u7d22\u5e76\u5b89\u88c5\u4e0a\u8ff0\u6269\u5c55\uff0c\u5c06\u5176\u5b89\u88c5\u5728\u8fdc\u7a0b\u4e3b\u673a\u4e0a\u3002C/C++\u6269\u5c55\u5728\u5b89\u88c5\u540e\u53ef\u80fd\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u6765\u4e0b\u8f7d\u4f9d\u8d56\u6587\u4ef6\u3002 \u56de\u8f66\uff0c\u63d0\u793aHost Added! \u5728\u6b64\u5904\u70b9\u51fb\u8fde\u63a5\uff1a \u8f93\u5165\u5bc6\u7801\u540e\uff0c\u7a0d\u7b49\u7247\u523b\uff0c\u7b49\u5f85\u7a97\u53e3\u6210\u4e3a\u5982\u4e0b\u65f6\uff0c\u5373\u8fde\u63a5\u6210\u529f\uff1a \u6b64\u65f6\uff0c\u53ef\u4ee5\u50cf\u672c\u5730\u4e00\u6837\u4f7f\u7528\u8fdc\u7a0b\u673a\u5668\u8fdb\u884c\u5de5\u4f5c\u4e86\u3002 VScode\u7684\u8be6\u7ec6\u7528\u6cd5\u67e5\u770b\u201c\u4f7f\u7528VSCode\u9605\u8bfb\u6e90\u4ee3\u7801\u6559\u7a0b.pdf\u201d\u3002","title":"2.3 \u4f7f\u7528VSCode\u767b\u5f55\u8fdc\u7a0b\u73af\u5883"},{"location":"tools/#3-git","text":"question 3 \u4f60\u662f\u5426\u9047\u5230\u8fc7\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u4e00\u4e2a\u9879\u76ee\u7531\u4e8e\u4e0d\u505c\u5730\u4fee\u6539\uff0c\u6bcf\u6b21\u90fd\u662f\u590d\u5236\u7c98\u8d34\u526f\u672c\uff0c\u4ea7\u51fa\u7684\u6587\u4ef6\u526f\u672c\u5c31\u8d8a\u6765\u8d8a\u591a\u3002\u800c\u968f\u7740\u7248\u672c\u7684\u589e\u591a\uff0c\u4f60\u8fd8\u8bb0\u5f97\u8fd9\u4e9b\u7248\u672c\u5404\u81ea\u90fd\u4fee\u6539\u4e86\u4ec0\u4e48\u5417\uff1a\uff1f \u4e3a\u4e86\u80fd\u591f\u66f4\u65b9\u4fbf\u6211\u4eec\u7ba1\u7406\u4e0d\u540c\u7248\u672c\u7684\u6587\u4ef6/\u4ee3\u7801\uff0c\u5f3a\u70c8\u5efa\u8bae\u540c\u5b66\u4eec\u4f7f\u7528git\u8fdb\u884c\u7248\u672c\u63a7\u5236\u3002","title":"3 git"},{"location":"tools/#31","text":"\u5982\u679c\u672c\u8bfe\u7a0b\u5b9e\u9a8c\u4fee\u6539\u4e86\u5b9e\u9a8c\u4e0a\u6e38\u4ed3\u5e93\uff08\u5982\u679c\u8bfe\u7a0b\u5b9e\u9a8c\u6709\u4fee\u6539\uff0c\u7b2c\u4e00\u65f6\u95f4\u5c06\u5728\u7fa4\u91cc\u63a8\u9001\u901a\u77e5\uff0c\u8bf7\u5173\u6ce8\u7fa4\u6d88\u606f\uff01\uff09\uff0c\u800c\u4f60\u9700\u8981\u5c06\u672c\u8bfe\u7a0b\u5b9e\u9a8c\u7684\u4fee\u6539\u540c\u6b65\u5230\u81ea\u5df1\u7684\u4ed3\u5e93\uff0c\u8bf7\u6309\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a","title":"3.1 \u540c\u6b65\u4e0a\u6e38\u4ed3\u5e93"},{"location":"tools/#311","text":"\u4e3a\u4e86\u540c\u6b65\u4e0a\u6e38\u4ed3\u5e93\uff0c\u6211\u4eec\u9700\u8981\u5148\u8bbe\u7f6e\u4e0a\u6e38\u4ed3\u5e93\u3002\u68c0\u67e5\u4e0a\u6e38\u4ed3\u5e93\u662f\u5426\u5df2\u7ecf\u8bbe\u7f6e\u597d\uff0c\u53ef\u4ee5\u4f7f\u7528 git remote -v \u6307\u4ee4\u67e5\u770b\u3002 \u5982\u679c\u4e0a\u6e38\u4ed3\u5e93\u672a\u8bbe\u7f6e\u5b8c\u6210\uff0c\u90a3\u4e48\u6307\u4ee4\u7684\u6267\u884c\u6548\u679c\u5927\u6982\u662f\u8fd9\u6837\u7684\uff1a lgz_admin@OSLabExecNode0:~/xv6-labs-2020$ git remote -v origin git@gitee.com:willson0v0/xv6-labs-2020.git (fetch) origin git@gitee.com:willson0v0/xv6-labs-2020.git (push) \u53ef\u4ee5\u770b\u5230\uff0c\u5176\u4e2d\u53ea\u6709\u4e00\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5373 origin \uff1b\u5982\u679c\u4e0a\u6e38\u4ed3\u5e93\u5df2\u7ecf\u8bbe\u7f6e\u5b8c\u6210\uff0c\u90a3\u4e48\u6307\u4ee4\u7684\u6267\u884c\u6548\u679c\u5927\u6982\u662f\u8fd9\u6837\u7684\uff1a lgz_admin@OSLabExecNode0:~/xv6-labs-2020$ git remote -v origin git@gitee.com:willson0v0/xv6-labs-2020.git (fetch) origin git@gitee.com:willson0v0/xv6-labs-2020.git (push) upstream git@gitee.com:hitsz-lab/xv6-labs-2020.git (fetch) upstream git@gitee.com:hitsz-lab/xv6-labs-2020.git (push) \u5176\u4e2d\uff0c\u8fdc\u7a0b\u4ed3\u5e93 origin \u7684\u5730\u5740\uff08\u5728\u6b64\u5904\u663e\u793a\u4e3a git@gitee.com:willson0v0/xv6-labs-2020.git \uff09\u5e94\u8be5\u662f\u662f\u4f60\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740\uff0c\u800c\u8fdc\u7a0b\u4ed3\u5e93 upstream \u7684\u5730\u5740\u5e94\u8be5\u663e\u793a\u4e3a\u672c\u8bfe\u7a0b\u5b9e\u9a8c\u63d0\u4f9b\u7684\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740\uff0c\u5373 git@gitee.com:hitsz-lab/xv6-labs-2020.git \u6216\u8005 https://gitee.com/hitsz-lab/xv6-labs-2020.git \u3002 \u5982\u679c\u4f60\u7684\u8fdc\u7a0b\u4ed3\u5e93\u5df2\u7ecf\u8bbe\u7f6e\u5b8c\u6210\uff0c\u90a3\u4e48\u8df3\u5230 3.1.3 \u540c\u6b65\u4e0a\u6e38\u4ed3\u5e93\u66f4\u6539 \u7ee7\u7eed\u3002\u5426\u5219\uff0c\u8bf7\u6309\u7167 3.1.2 \u5b8c\u6210\u8fdc\u7a0b\u4ed3\u5e93\u8bbe\u7f6e \u8282\u5b8c\u6210\u8fdc\u7a0b\u4ed3\u5e93\u8bbe\u7f6e\u3002","title":"3.1.1 \u68c0\u67e5\u4e0a\u6e38\u4ed3\u5e93\u8bbe\u7f6e"},{"location":"tools/#312","text":"\u5982\u679c\u4f60\u6ca1\u6709\u8bbe\u7f6e\u4e0a\u6e38\u4ed3\u5e93\uff08\u5373 upstream \uff09\uff0c\u5e76\u4e14 origin\u4ed3\u5e93\u7684\u94fe\u63a5\u88ab\u8bbe\u7f6e\u4e3a\u672c\u8bfe\u7a0b\u5b9e\u9a8c\u7684\u8fdc\u7a0b\u4ed3\u5e93\u800c\u975e\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93 \uff0c\u90a3\u4e48\u8bf7\u5148\u53c2\u7167 3.2 \u5c06\u4ee3\u7801\u53d1\u5e03\u81f3\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93 \u8282\uff0c\u5c06\u4ee3\u7801\u53d1\u5e03\u81f3\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93\u3002 \u5982\u679c\u4f60\u7684 origin \u4ed3\u5e93\u6b63\u786e\u8bbe\u7f6e\u4e3a\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u90a3\u4e48\u8bf7\u8f93\u5165\u4ee5\u4e0b\u6307\u4ee4\uff0c\u8bbe\u7f6e\u4e0a\u6e38\u4ed3\u5e93\u4e3a\u672c\u8bfe\u7a0b\u5b9e\u9a8c\u63d0\u4f9b\u7684\u4ed3\u5e93\uff1a $ git remote add upstream git@gitee.com:hitsz-lab/xv6-labs-2020.git \u6b64\u65f6\uff0c\u5982\u679c\u5728\u8f93\u5165 git remote -v \uff0c\u5e94\u8be5\u80fd\u663e\u793a\u51fa 3.1.1 \u68c0\u67e5\u4e0a\u6e38\u4ed3\u5e93\u8bbe\u7f6e \u4e2d\u8bbe\u7f6e\u5b8c\u6210\u4e00\u6837\u7684\u6548\u679c\u3002","title":"3.1.2 \u5b8c\u6210\u8fdc\u7a0b\u4ed3\u5e93\u8bbe\u7f6e"},{"location":"tools/#313","text":"\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4ee5\u5c06\u4e0a\u6e38\u4ed3\u5e93\u7684 syscall \u5206\u652f\u540c\u6b65\u5230\u672c\u5730\u7684 syscall \u5206\u652f\u4e3a\u4f8b\u3002\u952e\u5165\u4ee5\u4e0b\u6307\u4ee4\uff0c\u4ee5\u83b7\u53d6\u4e0a\u6e38\u66f4\u6539\u3001\u5207\u6362\u5230\u672c\u5730 syscall \u5206\u652f\u3001\u5b8c\u6210\u4e0e\u4e0a\u6e38\u4ed3\u5e93 syscall \u5206\u652f\u7684\u5408\u5e76\uff0c\u5e76\u6700\u540e\u4e0a\u4f20\u5230\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff1a $ git fetch --all $ git checkout syscall $ git merge upstream/syscall --no-edit $ git push origin \u68c0\u67e5\u5de5\u4f5c\u533a\u66f4\u6539 \u5207\u6362\u5206\u652f\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u5b58\u5de5\u4f5c\u533a\u7684\u66f4\u6539\u3002\u5982\u679c\u5207\u6362\u65f6\u63d0\u793a error: Your local changes to the following files would be overwritten by checkout \uff0c\u53c2\u8003 \u8fd9\u7bc7Q&A \uff0c\u68c0\u67e5\u5de5\u4f5c\u533a\u5e76commit\u4f60\u7684\u66f4\u6539\u3002 \u521d\u6b21Checkout\uff1f \u5982\u679c\u4f60\u6b64\u524d\u4ece\u672aCheckout\u8fc7\u8be5\u5206\u652f\uff0cCheckout\u65f6\u53ef\u80fd\u4f1a\u5411\u4f60\u62a5\u544a\u5982\u4e0b\u9519\u8bef\uff1a lgz_admin@OSLabExecNode0:~/git_demo/xv6-labs-2020$ git checkout syscall error: pathspec 'syscall' did not match any file(s) known to git hint: 'syscall' matched more than one remote tracking branch. hint: We found 2 remotes with a reference that matched. So we fell back hint: on trying to resolve the argument as a path, but failed there too! hint: hint: If you meant to check out a remote tracking branch on, e.g. 'origin', hint: you can do so by fully qualifying the name with the --track option: hint: hint: git checkout --track origin/<name> hint: hint: If you'd like to always have checkouts of an ambiguous <name> prefer hint: one remote, e.g. the 'origin' remote, consider setting hint: checkout.defaultRemote=origin in your config. \u8fd9\u662f\u7531\u4e8e\uff0c\u4e24\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\uff08\u4f60\u81ea\u5df1\u7684\u548c\u4e0a\u6e38\u7684\uff09\u90fd\u5b58\u5728 syscall \u5206\u652f\uff0cgit\u4e0d\u77e5\u9053\u8ddf\u8e2a\u54ea\u4e00\u4e2a\u5bfc\u81f4\u7684\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u53ea\u9700\u8981\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a git checkout --track origin/syscall \u5373\u53ef\u3002 \u5982\u679c\u5728 git merge upstream/syscall \u4e00\u6b65\u63d0\u793a\u5b58\u5728\u51b2\u7a81\uff0c\u8bf4\u660e\u4f60\u548c\u672c\u8bfe\u7a0b\u5b9e\u9a8c\u4fee\u6539\u8fc7\u540c\u4e00\u4e2a\u6587\u4ef6\uff0cgit\u65e0\u6cd5\u81ea\u52a8\u5408\u5e76\u3002\u51b2\u7a81\u7684\u8f93\u51fa\u5e94\u8be5\u7c7b\u4f3c\u4e8e\u4e0b\u9762\u8fd9\u6837\uff1a lgz_admin@OSLabExecNode0:~/git_demo/xv6-labs-2020$ git merge upstream/syscall CONFLICT (add/add): Merge conflict in time.txt Auto-merging time.txt Automatic merge failed; fix conflicts and then commit the result. \u5982\u679c\u53d1\u751f\u51b2\u7a81\uff0c\u8bf7\u53c2\u7167 3.3.3 \u5408\u5e76\u51b2\u7a81\u66f4\u6539 \u8282\u5b8c\u6210\u51b2\u7a81\u5408\u5e76\u64cd\u4f5c\u3002","title":"3.1.3 \u540c\u6b65\u4e0a\u6e38\u4ed3\u5e93\u66f4\u6539"},{"location":"tools/#32","text":"\u5982\u679c\u4f60\u7684\u4ee3\u7801\u662f\u76f4\u63a5\u4ece\u672c\u8bfe\u7a0b\u5b9e\u9a8c\u4ed3\u5e93clone\u800c\u6765\uff0c\u800c\u975e\u5148fork\u51fa\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93\u3001\u518d\u8fdb\u884cclone\uff0c\u90a3\u4e48\u8fd9\u7bc7\u6559\u7a0b\u4f1a\u6307\u5f15\u4f60\u8bbe\u7f6e\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93\u3001\u5e76\u5c06\u4ee3\u7801\u53d1\u5e03\u81f3\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93\u5904\u3002 \u8fd9\u4e48\u505a\u6709\u4ec0\u4e48\u597d\u5904\uff1f \u5982\u679c\u4f60\u5728\u4e0d\u540c\u7684\u7535\u8111\u4e0a\u5de5\u4f5c\uff0c\u6bd4\u5982\u540c\u65f6\u5728\u5b9e\u9a8c\u5ba4\u7684\u7535\u8111\u3001\u81ea\u5df1\u7684\u7535\u8111\u548c\u8fdc\u7a0b\u5b9e\u9a8c\u73af\u5883\u4e0a\u64cd\u4f5c\uff0c\u90a3\u4e48\u8fdc\u7a0b\u4ed3\u5e93\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5728\u4e0d\u540c\u8bbe\u5907\u4e4b\u95f4\u540c\u6b65\u81ea\u5df1\u7684\u5de5\u4f5c\u8fdb\u5ea6\u3002","title":"3.2 \u5c06\u4ee3\u7801\u53d1\u5e03\u81f3\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93"},{"location":"tools/#321-gitee","text":"\u767b\u5f55gitee\uff0c\u53f3\u4e0a\u89d2\u53ef\u89c1\u4e00\u4e2a\u52a0\u53f7\uff0c\u70b9\u51fb\u5b83\u4e0b\u62c9\u83dc\u5355\u4e2d\u7684\u201c\u65b0\u5efa\u4ed3\u5e93\u201d\u3002 \u70b9\u51fb\u8fdb\u5165\uff0c\u5e76\u4e3a\u81ea\u5df1\u7684\u4ed3\u5e93\u8bbe\u7f6e\u4e00\u4e2a\u4f60\u559c\u6b22\u7684\u540d\u79f0\u3002\u4f60\u53ef\u4ee5\u9009\u62e9\u516c\u5f00\u4ed3\u5e93\u6216\u8005\u79c1\u6709\u4ed3\u5e93\u3002\u5b8c\u6210\u540e\u70b9\u51fb\u201c\u521b\u5efa\u201d\uff0c\u5373\u53ef\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684\u8fdc\u7a0b\u4ed3\u5e93\u3002 \u8bf7\u4e0d\u8981\u521d\u59cb\u5316\u4ed3\u5e93\uff01 \u4f60\u7684\u4ed3\u5e93\u5728\u672c\u5730\uff0c\u56e0\u6b64\u8bf7\u4e0d\u8981\u521d\u59cb\u5316\u4ed3\u5e93\u3001\u8bbe\u7f6e\u6a21\u677f\u6216\u9009\u62e9\u5206\u652f\u6a21\u578b\u3002\u603b\u7684\u800c\u8a00\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5e76\u4e14\u628a\u6211\u4eec\u672c\u5730\u7684\u4ed3\u5e93\u585e\u8fdb\u53bb\u3002 \u4ed3\u5e93\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u4f1a\u6765\u5230\u8fd9\u4e2a\u754c\u9762\u3002\u5c06\u8fd9\u4e2a\u754c\u9762\u7684SSH\u5730\u5740\u590d\u5236\u4e0b\u6765\uff1a","title":"3.2.1 \u8bbe\u7acb\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff08\u4ee5gitee\u4e3a\u4f8b\uff09"},{"location":"tools/#322","text":"\u5728\u547d\u4ee4\u884c\u754c\u9762\uff0c\u8f93\u5165 git status \u3002\u5982\u679c\u5de5\u4f5c\u6811\u5e72\u51c0\uff0c\u5176\u4f1a\u663e\u793a\u5982\u4e0b\u5185\u5bb9\uff1a lgz_admin@OSLabExecNode0:~/git_demo/xv6-labs-2020$ git status On branch syscall Your branch is up to date with 'origin/syscall'. nothing to commit, working tree clean \u90a3\u4e48\uff0c\u4f60\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u4e00\u6b65\uff0c\u524d\u5f80 3.2.3 \u4fee\u6539\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740\u5e76\u63a8\u9001 \u7ee7\u7eed\u3002\u5982\u679c\u672c\u5730\u6709\u5c1a\u672acommit\u7684\u66f4\u6539\uff0c\u5219\u547d\u4ee4\u4f1a\u663e\u793a\u51fa\u4f60\u66f4\u6539\u8fc7\u7684\u5185\u5bb9\uff0c\u63d0\u793a\u5176\u5c1a\u672a\u88ab\u8ddf\u8e2a\uff1a lgz_admin@OSLabExecNode0:~/git_demo/xv6-labs-2020$ git status On branch syscall Your branch is up to date with 'origin/syscall'. Changes not staged for commit: (use \"git add <file>...\" to update what will be committed) (use \"git restore <file>...\" to discard changes in working directory) modified: time.txt no changes added to commit (use \"git add\" and/or \"git commit -a\") \u5982\u679c\u672c\u5730\u6709\u5c1a\u672acommit\u7684\u66f4\u6539\uff0c\u8bf7\u53c2\u7167 3.3.1.1 Commit \u4e2d\u7684\u64cd\u4f5c\uff08\u547d\u4ee4\u884c\u64cd\u4f5c\uff09\u6216\u8005 3.3.2 \u4f7f\u7528VS Code\u5185\u5efa\u7684\u56fe\u5f62\u5316\u754c\u9762\u5b8c\u6210\u64cd\u4f5c \u4e2d\u7684\u64cd\u4f5c\uff08VS code\u56fe\u5f62\u5316\u754c\u9762\u64cd\u4f5c\uff09\uff0c\u5b8c\u6210commit\u3002\u4f60\u6ca1\u6709\u63a8\u9001\u5230\u4e0a\u6e38\u4ed3\u5e93\uff08\u672c\u8bfe\u7a0b\u5b9e\u9a8c\u63d0\u4f9b\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff09\u7684\u6743\u9650\uff0c\u6240\u4ee5\u4e0d\u5fc5push\u3002","title":"3.2.2 \u6e05\u7406\u672c\u5730\u5de5\u4f5c\u6811"},{"location":"tools/#323","text":"\u5728\u547d\u4ee4\u884c\u4e2d\uff0c\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a $ git remote set-url origin git@gitee.com:willson0v0/my_xv6_repo.git \u5c06\u5176\u4e2d git@gitee.com:willson0v0/my_xv6_repo.git \u66ff\u6362\u6210 3.2.1 \u8bbe\u7acb\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff08\u4ee5gitee\u4e3a\u4f8b\uff09 \u4e2d\u590d\u5236\u4e0b\u6765\u7684\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740\u3002\u53ef\u4ee5\u8f93\u5165 git remote -v \u68c0\u89c6\u8fdc\u7a0b\u8fde\u63a5\u6709\u6ca1\u6709\u66f4\u6539\u6210\u529f\u3002\u5b8c\u6210\u540e\uff0c\u5207\u6362\u5230\u4f60\u60f3\u8981\u63a8\u9001\u7684\u5206\u652f\uff0c\u5e76\u4e0a\u4f20\u5230\u8fdc\u7a0b\u3002\u8fd9\u91cc\u4ee5 syscall \u5206\u652f\u4e3a\u4f8b\uff1a $ git push -u origin syscall \u8fd9\u4f1a\u5c06 syscall \u5206\u652f\u8bbe\u7f6e\u6210\u8ddf\u8e2a\u8fdc\u7a0b origin \u7684 syscall \u5206\u652f\uff0c\u5e76\u63a8\u9001\u3002\u73b0\u5728\u56de\u5230\u6d4f\u89c8\u5668\u5e76\u5237\u65b0\u4ed3\u5e93\u9875\u9762\uff0c\u4f60\u5e94\u8be5\u80fd\u770b\u5230\u4e0a\u4f20\u5df2\u7ecf\u5b8c\u6210\u3002","title":"3.2.3 \u4fee\u6539\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740\u5e76\u63a8\u9001"},{"location":"tools/#33-git","text":"\u4f60\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u547d\u4ee4\u884c\u5b8c\u6210 commit / push / pull / merge \u7b49\u64cd\u4f5c\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7VS Code\u5185\u5efa\u7684\u56fe\u5f62\u5316\u754c\u9762\u5b8c\u6210\u8fd9\u4e9b\u64cd\u4f5c\u3002 git\u5de5\u4f5c\u8fc7\u7a0b \u8bf4\u660e\uff1a workspace\uff1a\u5de5\u4f5c\u533a staging area\uff1a\u6682\u5b58\u533a/\u7f13\u5b58\u533a local respository\uff1a\u7248\u672c\u5e93\u6216\u672c\u5730\u4ed3\u5e93 remote repository\uff1a\u8fdc\u7a0b\u4ed3\u5e93 \u4ee5\u4e0b\u662fgit\u7684\u8bf4\u660e\uff1a https://git-scm.com/book/zh/v2 \u4ec0\u4e48\u662fCommit\uff1f \u4f60\u53ef\u4ee5\u5c06 Commit \u89c6\u4f5c\u662f\u4e00\u4e2a\u4e2a\u5c0f\u5c0f\u7684\u91cc\u7a0b\u7891\uff0c\u5b83\u6807\u793a\u4e86\u4f60\u7684\u4ee3\u7801\u8fdb\u5ea6\uff1b\u7248\u672c\u63a7\u5236\u5de5\u5177\uff08\u6bd4\u5982git\uff09\u7684\u7248\u672c\u5c31\u662f\u57fa\u4e8e\u8fd9\u4e00\u4e2a\u4e2a\u5c0f\u91cc\u7a0b\u7891\u5b9e\u73b0\u7684\uff1a\u4f60\u53ef\u4ee5\u4fee\u6539\u5b8c\u4ee3\u7801\u540e\u521b\u5efa\u65b0\u7684\u91cc\u7a0b\u7891\uff1b\u4e5f\u53ef\u4ee5\u5c06\u653e\u5f03\u51fa\u73b0\u4e86\u95ee\u9898\u7684\u4ee3\u7801\u4fee\u6539\uff0c\u5c06\u4ee3\u7801\u56de\u6eaf\u5230\u6b64\u524d\u7684\u67d0\u4e2a\u91cc\u7a0b\u7891\u5904\u3002 \u6bcf\u4e00\u4e2aCommit\u90fd\u6709\u4e00\u4e2a\u72ec\u7279\u7684hash\u503c\uff0c\u7528\u4ee5\u548c\u5176\u4ed6Commit\u533a\u5206\uff1bCommit\u8fd8\u4f1a\u6807\u793a\u662f\u8c01\u3001\u5728\u4f55\u65f6\u8fdb\u884c\u4e86\u8fd9\u4e2aCommit\uff0c\u8fd9\u5bf9\u534f\u4f5c\u5f00\u53d1\u6709\u5f88\u5927\u7684\u5e2e\u52a9\u3002 \u4ec0\u4e48\u662fPush/Pull\uff1f \u901a\u8fc7Commit\u7cfb\u7edf\uff0c\u6211\u4eec\u53ef\u4ee5\u5b8c\u6210\u4e00\u5b9a\u7684\u7248\u672c\u63a7\u5236\u529f\u80fd\u3002\u4f46\u662f\uff0c\u4e3a\u4e86\u5b8c\u6210\u4ee3\u7801\u534f\u4f5c\u4e0e\u540c\u6b65\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u628a\u4ee3\u7801\u653e\u5728\u4e00\u4e2a\u5404\u4e2a\u5199\u4f5c\u8005\u6216\u8005\u81ea\u5df1\u7684\u5404\u4e2a\u5de5\u4f5c\u73af\u5883\u90fd\u80fd\u8bbf\u95ee\u5230\u7684\u5730\u65b9\u2014\u2014\u4e00\u822c\u800c\u8a00\uff0c\u4e5f\u5c31\u662f\u8fdc\u7a0b\u4ed3\u5e93\u3002Push\u64cd\u4f5c\u5c31\u662f\u5c06\u672c\u5730\u7684\u66f4\u6539\uff08\u4e5f\u5c31\u662fCommit\u4eec\uff09\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\u7684\u4fee\u6539\uff1b\u800cPull\u5219\u662f\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u7684\u66f4\u6539\u540c\u6b65\u5230\u672c\u5730\u3002 \u4ec0\u4e48\u662fMerge\uff1f \u6211\u4eec\u77e5\u9053\uff0cGit\u4f5c\u4e3a\u7248\u672c\u63a7\u5236\u5de5\u5177\u53ef\u4ee5\u5141\u8bb8\u6211\u4eec\u5728\u540c\u4e00\u4e2a\u4ee3\u7801\u4ed3\u5e93\u5185\u8fdb\u884c\u534f\u4f5c\u3002\u5982\u679c\u4e24\u4e2a\u5f00\u53d1\u8005\u540c\u65f6\u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u90a3\u4e48\u5c31\u6709\u53ef\u80fd\u51fa\u73b0\u51b2\u7a81\uff1b\u53c8\u6216\u8005\u6211\u4eec\u8981\u5c06\u4ee3\u7801\u7684\u4e24\u4e2a\u5206\u652f\u5408\u5e76\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u9700\u8981\u8fdb\u884cMerge\u64cd\u4f5c\u3002\u5982\u679c\u65e0\u6cd5\u5b8c\u6210\u81ea\u52a8\u51b2\u7a81\u5408\u5e76\uff0c\u53ef\u80fd\u4f1a\u9700\u8981\u624b\u52a8\u5b8c\u6210\u51b2\u7a81\u5408\u5e76\u64cd\u4f5c\u3002","title":"3.3 \u5e38\u7528git\u64cd\u4f5c"},{"location":"tools/#331","text":"","title":"3.3.1 \u4f7f\u7528\u547d\u4ee4\u884c\u5b8c\u6210\u64cd\u4f5c"},{"location":"tools/#3311-commit","text":"$ git add \u4f60\u8981\u4fdd\u5b58\u66f4\u6539\u7684\u6587\u4ef6\u4eec # \u6216\u8005\uff0cgit add --all \u4ee5\u6dfb\u52a0\u6240\u6709\u66f4\u6539\u3002 $ git commit -m \"\u672c\u6b21Commit\u4f60\u505a\u4e86\u4ec0\u4e48\" \u5efa\u8bae\u6bcf\u6b21Commit\u90fd\u4f7f\u7528\u6709\u6548\u7684Commit\u4fe1\u606f\uff0c\u4ee5\u4fbf\u4e8e\u81ea\u5df1\u8ffd\u8e2a\u4ee3\u7801\u8fdb\u5ea6\u3002","title":"3.3.1.1 Commit"},{"location":"tools/#3312-push","text":"push\u53ef\u4ee5\u5c06\u81ea\u5df1\u7684\u8fdb\u5ea6\u540c\u6b65\u5230\u8fdc\u7a0b\u4ed3\u5e93\u3002 $ git push","title":"3.3.1.2 push"},{"location":"tools/#3313-pull","text":"pull\u53ef\u4ee5\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u7684\u8fdb\u5ea6\u540c\u6b65\u5230\u672c\u5730\u3002 $ git pull","title":"3.3.1.3 pull"},{"location":"tools/#3314-merge","text":"merge\u4e00\u822c\u7528\u4e8e\u5206\u652f\u4e4b\u95f4\u7684\u5408\u5e76\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4e0a\u6e38\u7684\u8fdc\u7a0b\u5206\u652f\u548c\u672c\u5730\u5206\u652f\u8fdb\u884c\u5408\u5e76\u3002 $ git checkout \u4f60\u60f3\u5408\u5e76\u7684\u672c\u5730\u5206\u652f $ git merge \u8fdc\u7a0b\u4ed3\u5e93\u540d\u79f0/\u5206\u652f\u540d\u79f0 \u4ed3\u5e93\u6743\u9650 \u4f60\u53ef\u4ee5\u4ece\u516c\u5171\u4ed3\u5e93\u62c9\u53d6\uff0c\u4f46\u4f60\u53ea\u80fd\u63a8\u9001\u5230\u4f60\u62e5\u6709\u6743\u9650\u7684\u4ed3\u5e93\u3002\u4e3a\u4e86\u9a8c\u8bc1\u4f60\u7684\u8eab\u4efd\uff0c\u4f60\u9700\u8981\u8bbe\u7f6e\u81ea\u5df1\u7684ssh\u5bc6\u94a5\u5bf9\u3002\u8bf7\u53c2\u7167 3.4\u8282 ssh\u5bc6\u94a5\u8bbe\u7f6e \u5b8c\u6210\u8bbe\u7f6e\u3002","title":"3.3.1.4 merge"},{"location":"tools/#332-vs-code","text":"VS Code\u7684\u7248\u672c\u63a7\u5236\u754c\u9762\u5728\u5de6\u4fa7\u4ece\u4e0a\u5f80\u4e0b\u6570\u7b2c\u4e8c\u4e2a\u6309\u94ae\u5904\uff1b\u4e0b\u65b9\u4f1a\u663e\u793a\u5f53\u524d\u6240\u5904\u7684\u5206\u652f\uff0c\u70b9\u51fb\u53ef\u4ee5\u5207\u6362\u5f53\u524d\u6240\u5904\u5206\u652f\uff1b\u53f3\u4fa7\u7684\u5706\u5f62\u53cc\u7bad\u5934\u5219\u4ee3\u8868\u4e0e\u8fdc\u7a0b\u73af\u5883\u540c\u6b65\u3002\u53f3\u4fa7Changes\u663e\u793a\u5de5\u4f5c\u533a\u4e2d\u88ab\u4fee\u6539\u7684\u6587\u4ef6\uff0c\u800cStaged\u5219\u663e\u793a\u5c06\u88ab\u52a0\u5165\u5230\u4e0b\u6b21Commit\u4e2d\u7684\u4fee\u6539\u3002\u5982\u56fe\uff0c\u8fd9\u4e2a\u754c\u9762\u663e\u793a\u6211\u4eec\u6709\u4e24\u4e2a\u88ab\u4fee\u6539\u7684\u6587\u4ef6\uff1a \u9f20\u6807\u79fb\u81f3Changes\u6216\u4e0b\u9762\u6240\u5217\u6587\u4ef6\u5904\uff0c\u70b9\u51fb\u53f3\u4fa7\u7684\u52a0\u53f7\uff0c\u53ef\u4ee5\u5c06\u6587\u4ef6\u52a0\u5165\u5230Staged\u533a\u4e2d\uff1a \u6b64\u65f6\uff0c\u8fd9\u4e9b\u6587\u4ef6\u5df2\u7ecf\u51c6\u5907\u597d\u88abCommit\u3002\u5728\u4e0a\u65b9\u6846\u5185\u8f93\u5165Commit\u4fe1\u606f\uff0c\u5e76\u70b9\u51fb \u221a \u6309\u94ae\u4ee5\u63d0\u4ea4\uff1a \u5728\u4e0b\u65b9\u7684\u540c\u6b65\u6309\u94ae\u5904\uff0c\u53ef\u4ee5\u53d1\u73b0\u67090\u4e2a\u63d0\u4ea4\u9700\u8981\u62c9\u53d6\u30011\u4e2a\u63d0\u4ea4\u9700\u8981\u63a8\u9001\u3002\u70b9\u51fb\u8fd9\u4e2a\u6309\u94ae\u4ee5\u540c\u6b65\uff0c\u6216\u8005\u70b9\u51fb\u5de6\u4e0a\u65b9\u90a3\u4e2a\u5de8\u5927\u7684\u84dd\u8272\u7684Sync Changes\uff08\u540c\u6b65\u66f4\u6539\uff09\uff1a \u8fd9\u6837\uff0c\u4f60\u7684\u4ee3\u7801\u5c31\u4fdd\u5b58\u5230\u4e91\u7aef\u4e86\u3002 \u4ed3\u5e93\u6743\u9650 \u4f60\u53ef\u4ee5\u4ece\u516c\u5171\u4ed3\u5e93\u62c9\u53d6\uff0c\u4f46\u4f60\u53ea\u80fd\u63a8\u9001\u5230\u4f60\u62e5\u6709\u6743\u9650\u7684\u4ed3\u5e93\u3002\u4e3a\u4e86\u9a8c\u8bc1\u4f60\u7684\u8eab\u4efd\uff0c\u4f60\u9700\u8981\u8bbe\u7f6e\u81ea\u5df1\u7684ssh\u5bc6\u94a5\u5bf9\u3002\u8bf7\u53c2\u7167 3.4\u8282 ssh\u5bc6\u94a5\u8bbe\u7f6e \u5b8c\u6210\u8bbe\u7f6e\u3002","title":"3.3.2 \u4f7f\u7528VS Code\u5185\u5efa\u7684\u56fe\u5f62\u5316\u754c\u9762\u5b8c\u6210\u64cd\u4f5c"},{"location":"tools/#333","text":"\u5982\u679c\u6709\u4e24\u4e2aCommit\u7684\u5185\u5bb9\u51fa\u73b0\u51b2\u7a81\uff0cmerge\u7684\u65f6\u5019\u5c31\u6709\u53ef\u80fd\u9700\u8981\u5408\u5e76\u51b2\u7a81\u66f4\u6539\u3002\u5efa\u8bae\u5728VSCode\u4e2d\u8fdb\u884c\u51b2\u7a81\u4fee\u6539\u3002\u4f8b\u5982\u6b64\u5904\uff0c\u6211\u5728\u5bf9\u672c\u5730 syscall \u505a\u4fee\u6539\u4e4b\u540e\uff0c\u5c06\u5176\u4e0e\u8fdc\u7a0b upstream/origin \u505a\u4fee\u6539\uff0c\u5e76\u89e6\u53d1\u4e86\u51b2\u7a81\uff1a \u4ece\u5de6\u4fa7\u7ea2\u6846\u4e2d\u201cMerge Changes\u201d\u680f\u4e2d\u53ef\u4ee5\u770b\u5230\u51fa\u73b0\u51b2\u7a81\u7684\u6587\u4ef6\u3002\u70b9\u5f00\u6587\u4ef6\uff0c\u53f3\u4fa7\u4f1a\u51fa\u73b0\u51b2\u7a81\u89c6\u56fe\u3002\u4e0a\u65b9\u9752\u8272\u90e8\u5206\u6307\u7684\u662f\u5f53\u524d\uff08\u672c\u5730\uff09\u7684\u4fee\u6539\uff0c\u800c\u4e0b\u65b9\u84dd\u8272\u90e8\u5206\u5219\u662f\u8fdc\u7a0b( upstream/origin )\u7684\u4fee\u6539\u3002\u6839\u636e\u5b9e\u9645\u60c5\u51b5\uff0c\u53ef\u4ee5\u4ece\u4e0a\u65b9\u51e0\u4e2a\u6309\u94ae\u4e2d\u9009\u62e9\u5408\u9002\u7684\u90a3\u4e2a\u3002\u8fd9\u6b21\uff0c\u6211\u60f3\u8981\u4fdd\u5b58\u6211\u81ea\u5df1\u7684\u4fee\u6539\u3001\u800c\u4e22\u5f03\u8fdc\u7a0b\u7684\u4fee\u6539\uff0c\u6545\u9009\u62e9 Accept Current Change \u3002\u968f\u540e\uff0c\u548cCommit\u524d\u4e00\u6837\uff0c\u5c06\u521a\u624d\u7684\u4fee\u6539Stage\uff0c\u5e76\u70b9\u51fb\u4e0a\u65b9 \u221a \u53f7\u63d0\u4ea4Commit\uff0c\u5e76\u63a8\u9001\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u51b2\u7a81\u66f4\u6539\u7684\u5408\u5e76\u3002","title":"3.3.3 \u5408\u5e76\u51b2\u7a81\u66f4\u6539"},{"location":"tools/#34-ssh","text":"\u901a\u8fc7ssh\u5bc6\u94a5\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684\u5b8c\u6210\u4ece\u672c\u5730\u5230\u8fdc\u7a0b\u4ed3\u5e93\u7684\u8ba4\u8bc1\u3002\u8ddf\u968f\u4ee5\u4e0b\u6b65\u9aa4\uff0c\u4ee5\u5b8c\u6210ssh\u5bc6\u94a5\u521b\u5efa\uff0c\u5e76\u90e8\u7f72\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff1a","title":"3.4 ssh\u5bc6\u94a5\u8bbe\u7f6e"},{"location":"tools/#341-ssh","text":"\u5728\u7ec8\u7aef\u4e2d\uff0c\u8f93\u5165\u4ee5\u4e0b\u6307\u4ee4\u4ee5\u751f\u6210ssh\u5bc6\u94a5\u5bf9: ssh-keygen -t ed25519 -C \"name_of_ssh_keypair\" \u5bc6\u94a5\u5bf9\u7684\u540d\u5b57 \u5bc6\u94a5\u5bf9\u7684\u540d\u5b57\u5728\u6559\u7a0b\u4e2d\u5e38\u7528\u90ae\u7bb1\u5730\u5740\u4ee3\u66ff\uff0c\u8fd9\u662f\u4e00\u4e2a\u67d0\u79cd\u610f\u4e49\u4e0a\u7684\u4f20\u7edf\u3002\u6b64\u5916\uff0c\u4e3a\u4e86\u517c\u5bb9\u6027\u8003\u8651\uff0c\u4e0d\u5efa\u8bae\u5728\u5bc6\u94a5\u5bf9\u540d\u5b57\u4e2d\u4f7f\u7528\u9664\u4e86ASCII\u4e4b\u5916\u7684\u4efb\u4f55\u5b57\u7b26\u3002 \u8f93\u5165\u540e\uff0c\u6839\u636e\u7ec8\u7aef\u7684\u63d0\u793a\uff0c\u6309\u4e0b\u4e09\u6b21\u56de\u8f66\u5373\u53ef\u5b8c\u6210ssh\u5bc6\u94a5\u751f\u6210\uff0c\u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u8fd9\u4e9b\u9700\u8981\u8f93\u5165\u7684\u5185\u5bb9\uff1a lgz_admin@OSLabExecNode0:~/.ssh$ ssh-keygen -t ed25519 -C \"willson0v0@willson0v0.com\" Generating public/private ed25519 key pair. Enter file in which to save the key (/home/lgz_admin/.ssh/id_ed25519): # \u6309\u4e0b\u56de\u8f66\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u8def\u5f84\uff08~/.ssh/id_ed25519\uff09 Enter passphrase (empty for no passphrase): # \u6309\u4e0b\u56de\u8f66\u4ee5\u4f7f\u7528\u7a7a\u5bc6\u7801\uff0c\u6216\u8005\u81ea\u5b9a\u4e49\u5bc6\u7801\u518d\u56de\u8f66\u3002\u901a\u5e38\u53ef\u4ee5\u4e0d\u8bbe\u5bc6\u7801\u3002 Enter same passphrase again: # \u6309\u4e0b\u56de\u8f66\u786e\u8ba4\u7a7a\u5bc6\u7801\uff0c\u6216\u8005\u91cd\u65b0\u8f93\u5165\u4e0a\u4e00\u884c\u4e2d\u81ea\u5b9a\u4e49\u7684\u5bc6\u7801\u3002 Your identification has been saved in /home/lgz_admin/.ssh/id_ed25519 Your public key has been saved in /home/lgz_admin/.ssh/id_ed25519.pub The key fingerprint is: SHA256:1oDtnF8c1FXpDc+6U1Gogf8Swur0N/Dh6uFJFIlVJ9o willson0v0@willson0v0.com The key's randomart image is: +--[ED25519 256]--+ | .o+..o=| | o o.=.o+..| | . +.+.Eo.+o| | o +oo+. o+| | S.o.oo ..| | .oo..o o .| | o .++ o o | | .o.o= o | | .=o . . | +----[SHA256]-----+ \u73b0\u5728\uff0c\u4f60\u7684\u5bc6\u94a5\u5bf9\u5df2\u7ecf\u751f\u6210\u5b8c\u6210\u3002\u5982\u679c\u9075\u5faa\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u90a3\u4e48 ~/.ssh/id_ed25519 \u662f\u4f60\u7684\u79c1\u94a5\u6587\u4ef6\uff0c ~/.ssh/id_ed25519.pub \u5219\u662f\u4f60\u7684\u516c\u94a5\u6587\u4ef6\u3002\u901a\u8fc7 cat \u53ef\u4ee5\u5c55\u793a\u5176\u4e2d\u7684\u5185\u5bb9\uff1a lgz_admin@OSLabExecNode0:~/.ssh$ cat ~/.ssh/id_ed25519 # \u8fd9\u662f\u5c55\u793a\u7528\u7684\u5bc6\u94a5\u5bf9\u3002\u8bf7\u4e0d\u8981\u4f7f\u7528\u8be5\u5bc6\u94a5\u5bf9\uff0c\u4e5f\u4e0d\u8981\u8bb2\u81ea\u5df1\u7684\u79c1\u94a5\u5c55\u793a\u7ed9\u4efb\u4f55\u4eba\u3002 -----BEGIN OPENSSH PRIVATE KEY----- b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW QyNTUxOQAAACB07KkIxYhV60DnPqKY1E0AFoRgqnKRUy1qoh5M9EYJeAAAAKDKf/BCyn/w QgAAAAtzc2gtZWQyNTUxOQAAACB07KkIxYhV60DnPqKY1E0AFoRgqnKRUy1qoh5M9EYJeA AAAEBixqKUUTawYfl+mnEcqtxWT5up8xfbyaN438Iqjs3Gu3TsqQjFiFXrQOc+opjUTQAW hGCqcpFTLWqiHkz0Rgl4AAAAGXdpbGxzb24wdjBAd2lsbHNvbjB2MC5jb20BAgME -----END OPENSSH PRIVATE KEY----- lgz_admin@OSLabExecNode0:~/.ssh$ cat ~/.ssh/id_ed25519.pub ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHTsqQjFiFXrQOc+opjUTQAWhGCqcpFTLWqiHkz0Rgl4 willson0v0@willson0v0.com \u5b58\u50a8\u4f4d\u7f6e ssh agent\u4f1a\u81ea\u52a8\u88c5\u8f7d /.ssh/id_rsa\u6216\u8005 /.ssh/id_ed25519\u7b49\u5bc6\u94a5\u6587\u4ef6\u3002\u5982\u679c\u4f60\u66f4\u6539\u4e86\u5bc6\u94a5\u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u53ef\u80fd\u9700\u8981ssh-agent\u989d\u5916\u6dfb\u52a0\u5bc6\u94a5\u5230\u8eab\u4efd\u3002 \u4fdd\u62a4\u597d\u4f60\u7684\u79c1\u94a5\uff01 \u79c1\u94a5\uff08 ~/.ssh/id_ed25519 \uff09\u987e\u540d\u601d\u4e49\uff0c\u662f\u53ea\u6709\u4f60\u624d\u77e5\u9053\u7684\u5bc6\u94a5\u3002\u8bf7\u7edd\u5bf9\u4e0d\u8981\u5c06\u79c1\u94a5\u6cc4\u9732\uff0c\u56e0\u4e3a\u4efb\u4f55\u6301\u6709\u8fd9\u4e2a\u79c1\u94a5\u7684\u4eba\u90fd\u53ef\u4ee5\u4f2a\u88c5\u6210\u662f\u4f60\u3002 \u5173\u4e8e\u5bc6\u7801 \u53ef\u4ee5\u4e3assh\u5bc6\u94a5\u8bbe\u7f6e\u5bc6\u7801\uff0c\u4ee5\u4fdd\u8bc1\u5bc6\u94a5\u7684\u5b89\u5168\u3002\u4e0d\u8fc7\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\u8fd9\u5e76\u6ca1\u6709\u5fc5\u8981\uff0c\u800c\u4e14\u8fd9\u4f1a\u8ba9\u5404\u79cdssh\u53d8\u5f97\u5f88\u9ebb\u70e6\uff1a\u6bcf\u6b21push\u6216\u8005pull\u90fd\u8981\u8f93\u4e00\u6b21\u5bc6\u7801\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u5efa\u8bae\u4f60\u4e3assh\u5bc6\u94a5\u8bbe\u7f6e\u5bc6\u7801\u3002","title":"3.4.1 \u751f\u6210ssh\u5bc6\u94a5\u5bf9"},{"location":"tools/#342-gitee","text":"\u5982\u679c\u4f60\u8981\u8bbf\u95ee\u7684\u8fdc\u7a0b\u4ed3\u5e93\u4f4d\u4e8eGitee\uff0c\u90a3\u4e48\u4f60\u9700\u8981\u5c06\u4f60\u7684 ssh\u516c\u94a5 \u90e8\u7f72\u5230Gitee\u3002\u9996\u5148\uff0c\u6253\u5f00 Gitee\u9875\u9762 \uff0c\u767b\u5f55\uff0c\u5e76\u70b9\u51fb\u5de6\u4e0a\u89d2\u4e2a\u4eba\u5934\u50cf-\u8bbe\u7f6e\uff1a \u968f\u540e\uff0c\u70b9\u51fb\u5de6\u4fa7\u7684ssh\u516c\u94a5\uff0c\u5e76\u5c06\u6b64\u524d\u751f\u6210\u7684 ssh\u516c\u94a5 \u5185\u5bb9\u62f7\u8d1d\u8fdb\u516c\u94a5\u533a\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7 cat ~/.ssh/id_ed25519.pub \u4ece\u7ec8\u7aef\u83b7\u5f97\u8fd9\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u3002\u968f\u540e\uff0c\u4f60\u53ef\u4ee5\u7f16\u8f91\u8fd9\u4e2a\u516c\u94a5\u7684\u6807\u9898\u3002\u6700\u540e\uff0c\u70b9\u51fb\u6700\u4e0b\u65b9\u6a59\u8272\u7684\u201c\u786e\u5b9a\u201d\uff0c\u5373\u53ef\u5b8c\u6210\u516c\u94a5\u7684\u6dfb\u52a0\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6307\u4ee4\uff0c\u5c1d\u8bd5\u8fde\u63a5\u5230Gitee\uff0c\u4ee5\u9a8c\u8bc1\u516c\u94a5\u662f\u5426\u6dfb\u52a0\u6210\u529f\uff1a lgz_admin@OSLabExecNode0:~$ ssh -T git@gitee.com Hi \u7528\u6237\u540d! You've successfully authenticated, but GITEE.COM does not provide shell access.","title":"3.4.2 \u5c06\u5bc6\u94a5\u90e8\u7f72\u5230Gitee"},{"location":"tools/#343-github","text":"\u5982\u679c\u4f60\u8981\u8bbf\u95ee\u7684\u8fdc\u7a0b\u4ed3\u5e93\u4f4d\u4e8eGithub\uff0c\u90a3\u4e48\u4f60\u9700\u8981\u5c06\u4f60\u7684 ssh\u516c\u94a5 \u90e8\u7f72\u5230Gitee\u3002\u9996\u5148\uff0c\u6253\u5f00 Github\u9875\u9762 \uff0c\u767b\u5f55\uff0c\u5e76\u70b9\u51fb\u5de6\u4e0a\u89d2\u4e2a\u4eba\u5934\u50cf-Settings\uff1a \u968f\u540e\uff0c\u70b9\u51fb\u5de6\u4fa7SSH and GPG keys\uff0c\u5e76\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684New SSH key\uff1a \u6700\u540e\uff0c\u8f93\u5165SSH key\u7684\u6807\u9898\uff0c\u5c06\u6b64\u524d\u751f\u6210\u7684 ssh\u516c\u94a5 \u5185\u5bb9\u62f7\u8d1d\u8fdb\u516c\u94a5\u533a\uff0c\u5e76\u70b9\u51fb\u4e0b\u65b9\u7eff\u8272 Add SSH key \u5373\u53ef\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6307\u4ee4\uff0c\u5c1d\u8bd5\u8fde\u63a5\u5230Github\uff0c\u4ee5\u9a8c\u8bc1\u516c\u94a5\u662f\u5426\u6dfb\u52a0\u6210\u529f\uff1a lgz_admin@OSLabExecNode0:~$ ssh -T git@github.com Hi \u7528\u6237\u540d! You've successfully authenticated, but GitHub does not provide shell access.","title":"3.4.3 \u5c06\u5bc6\u94a5\u90e8\u7f72\u5230Github"},{"location":"tools/#35","text":"","title":"3.5 \u5e38\u89c1\u95ee\u9898"},{"location":"tools/#351","text":"\u5982\u679c\u4f60\u5c1d\u8bd5\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u6216\u8005\u4ece\u8fdc\u7a0b\u4ed3\u5e93\u62c9\u53d6\uff0c\u4f46\u662fgit\u5374\u663e\u793a\u51fa\u8fd9\u6837\u7684\u9519\u8bef\uff1a git@gitee.com: Permission denied (publickey). fatal: Could not read from remote repository. Please make sure you have the correct access rights and the repository exists \u8fd9\u8868\u660e\u4f60\u6ca1\u6709\u6743\u9650\u63a8\u9001\u5230\u8fd9\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\u3002\u4e00\u822c\u800c\u8a00\uff0c\u8fd9\u662f\u7531\u4e8e\u4f60\u6ca1\u6709\u8bbe\u7f6e\u597d\u81ea\u5df1\u7684ssh\u5bc6\u94a5\u9020\u6210\u7684\u3002\u8bf7\u53c2\u7167 3.4\u8282 ssh\u5bc6\u94a5\u8bbe\u7f6e \uff0c\u8bbe\u7f6e\u81ea\u5df1\u7684ssh\u5bc6\u94a5\u3002","title":"3.5.1 \u65e0\u6cd5\u63a8\u9001\u600e\u4e48\u529e\uff1f"},{"location":"tools/#352","text":"\u901a\u5e38\u800c\u8a00\uff0c\u5b9e\u9a8c\u8981\u6c42\u540c\u5b66\u4eec\u63d0\u4ea4 \u6240\u6709 \u88ab\u4fee\u6539\u8fc7\u7684\u6587\u4ef6\u3002\u901a\u8fc7\u5c06\u5f53\u524d\u5de5\u4f5c\u8def\u5f84\u4e0e\u4e0a\u6e38\u4ed3\u5e93\uff08\u8bfe\u7a0b\u5b9e\u9a8c\u63d0\u4f9b\u7684\u4ed3\u5e93\uff09\u5bf9\u5e94\u5206\u652f\u7684\u5185\u5bb9\u76f8\u6bd4\u8f83\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u77e5\u9053\u81ea\u5df1\u66fe\u7ecf\u4fee\u6539\u8fc7\u54ea\u4e9b\u6587\u4ef6\uff0c\u5e76\u6253\u5305\u63d0\u4ea4\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5f53\u524d\u5206\u652f\u4e0e\u4e0a\u6e38\u4ed3\u5e93\u7684 syscall \u5206\u652f\u76f8\u6bd4\u8f83\uff1a lgz_admin@OSLabExecNode0:~/git_demo/xv6-labs-2020$ git fetch --all Fetching origin Fetching upstream lgz_admin@OSLabExecNode0:~/git_demo/xv6-labs-2020$ git diff --stat upstream/syscall * kernel/kalloc.c | 2 ++ kernel/syscall.c | 1 + kernel/syscall.h | 1 + kernel/sysinfo.h | 1 + 4 files changed, 5 insertions(+) \u8981\u6bd4\u8f83\u5176\u4ed6\u5206\u652f\uff0c\u5c06\u7b2c\u4e8c\u6761\u6307\u4ee4\u4e2d\u7684 syscall \u6539\u4e3a\u5bf9\u5e94\u5206\u652f\u540d\u5373\u53ef\u3002 \u8bf7\u5148\u5728\u672c\u5730\u5207\u6362\u5230\u5bf9\u5e94\u5206\u652f\uff01 \u5728\u6bd4\u8f83\u7684\u65f6\u5019\uff0c\u4f60\u9700\u8981\u5c06\u672c\u5730\u5206\u652f\u4e0e\u4e0a\u6e38\u5bf9\u5e94\u5206\u652f\u8fdb\u884c\u6bd4\u8f83\u3002\u4e3e\u4f8b\u800c\u8a00\uff0c\u4f60\u4e0d\u4f1a\u60f3\u6bd4\u8f83\u672c\u5730\u7684 util \u5206\u652f\u548c\u8fdc\u7a0b\u7684 syscall \u5206\u652f\uff0c\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u4e0d\u662f\u4e00\u4e2a\u5b9e\u9a8c\u7684\u3002\u8bf7\u5148\u4f7f\u7528 git checkout \u5206\u652f\u540d \u4ee5\u5207\u6362\u5230\u5bf9\u5e94\u5206\u652f\uff0c\u5e76\u5728\u4f7f\u7528 git diff --stat upstream/\u5206\u652f\u540d * \u65f6\u6307\u5b9a \u540c\u4e00\u4e2a \u4e0a\u6e38\u5206\u652f\u3002 \u672a\u8bbe\u7f6e\u4e0a\u6e38\u4ed3\u5e93\uff1f \u5982\u679cgit\u62a5\u544a\u201c fatal: ambiguous argument 'upstream/\u5206\u652f\u540d': unknown revision or path not in the working tree. \u201d\uff0c\u8bf4\u660e\u4f60\u5c1a\u672a\u8bbe\u7f6e\u4e0a\u6e38\u4ed3\u5e93\u3002\u8bf7\u5148\u6309\u672c\u6307\u5357\u4e2d\u7684 3.1-\u540c\u6b65\u4e0a\u6e38\u4ed3\u5e93 \u4e00\u8282\u5b8c\u6210\u4e0a\u6e38\u4ed3\u5e93\u7684\u8bbe\u7f6e\u4e0e\u540c\u6b65\uff0c\u518d\u8fdb\u884c\u6bd4\u8f83\u3002","title":"3.5.2 \u6211\u600e\u4e48\u77e5\u9053\u6211\u4fee\u6539\u4e86\u54ea\u4e9b\u6587\u4ef6\uff1f"},{"location":"tools/#353-checkout","text":"\u901a\u5e38\u800c\u8a00\uff0c\u4e0d\u80fd\u5207\u6362\u5206\u652f\u7684\u4e3b\u8981\u539f\u56e0\u662f\u4f60\u5f53\u524d\u6709\u5c1a\u672a\u4fdd\u5b58\u7684\u4fee\u6539\uff0c\u6b64\u65f6checkout\u7684\u8bdd\u4f1a\u89e6\u53d1\u4ee5\u4e0b\u9519\u8bef\uff1a lgz_admin@OSLabExecNode0: ~/git_demo/xv6-labs-2020$ git checkout util \u2500\u256f error: Your local changes to the following files would be overwritten by checkout: Makefile Please commit your changes or stash them before you switch branches. Aborting \u901a\u8fc7 git status \u6307\u4ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u68c0\u67e5\u5f53\u524dgit\u7684\u72b6\u6001\u3002\u5982\u679c\u4f60\u7684\u8f93\u51fa\u5982\u4e0b\u6240\u793a\uff1a lgz_admin@OSLabExecNode0: ~/git_demo/xv6-labs-2020$ git status On branch syscall Your branch is up to date with 'origin/syscall'. Changes not staged for commit: (use \"git add <file>...\" to update what will be committed) (use \"git restore <file>...\" to discard changes in working directory) modified: Makefile no changes added to commit (use \"git add\" and/or \"git commit -a\") \u8fd9\u8bf4\u660e\u5f53\u524d\u4f60\u7684\u5de5\u4f5c\u533a\u6709\u5c1a\u672a\u4fdd\u5b58\u7684\u66f4\u6539\u3002\u8bf7\u53c2\u8003 3.3.1 \u4f7f\u7528\u547d\u4ee4\u884c\u5b8c\u6210\u64cd\u4f5c \u6216\u8005 3.3.2 \u4f7f\u7528VS Code\u5185\u5efa\u7684\u56fe\u5f62\u5316\u754c\u9762\u5b8c\u6210\u64cd\u4f5c \u8282\uff0c\u5b8c\u6210commit\u64cd\u4f5c\u3002 \u6216\u8005\uff0c\u5982\u679c\u4f60\u5e0c\u671b\u76f4\u63a5\u653e\u5f03\u6389\u4e0a\u4e00\u6b21commit\u540e\u7684 \u6240\u6709\u66f4\u6539 \uff0c\u90a3\u4e48\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 -f \u9009\u9879\u5f3a\u5236\u5207\u6362\u5206\u652f\uff0c\u4f8b\u5982 git checkout -f syscall \u3002","title":"3.5.3 \u4e3a\u4ec0\u4e48\u6211\u4e0d\u80fd\u5207\u6362\u5206\u652f\uff08checkout\uff09\uff1f"},{"location":"tools/#4-gcc","text":"question 4 \u5bf9\u4e8e\u4e60\u60ef\u4f7f\u7528Windows\u73b0\u6709\u7684IDE\u6765\u7f16\u8bd1\u7a0b\u5e8f\u7684\u6211\u4eec\uff0c\u9762\u5bf9Linux\u7684\u547d\u4ee4\u884c\uff0c\u5e94\u8be5\u5982\u4f55\u7f16\u8bd1\u81ea\u5df1\u5199\u597d\u7684\u4ee3\u7801\uff1a\uff1f \u901a\u5e38\u60c5\u51b5\u4e0b\uff0cLinux\u7528\u6237\u66f4\u559c\u6b22\u76f4\u63a5\u7f16\u5199\u76f8\u5e94\u7684GCC\u547d\u4ee4\u6765\u7f16\u8bd1\u7a0b\u5e8f\u3002\u5927\u90e8\u5206Linux\u53d1\u884c\u7248\u4e2d\u90fd\u4f1a\u9ed8\u8ba4\u5b89\u88c5GCC\u7f16\u8bd1\u5668\u3002","title":"4 gcc"},{"location":"tools/#41-gcc","text":"\u547d\u4ee4\u683c\u5f0f\uff1agcc [\u9009\u9879] [\u6587\u4ef6\u540d] -E: \u4ec5\u6267\u884c\u7f16\u8bd1\u9884\u5904\u7406 -S\uff1a\u5c06C\u4ee3\u7801\u8f6c\u6362\u4e3a\u6c47\u7f16\u4ee3\u7801 -c\uff1a\u4ec5\u6267\u884c\u7f16\u8bd1\u64cd\u4f5c\uff0c\u4e0d\u8fdb\u884c\u94fe\u63a5\u64cd\u4f5c -o: \u6307\u5b9a\u751f\u6210\u7684\u8f93\u51fa\u6587\u4ef6","title":"4.1 GCC\u5e38\u7528\u7f16\u8bd1\u9009\u9879"},{"location":"tools/#42-gcc","text":"1\u3001\u5c06hello.c\u9884\u5904\u7406\u8f93\u51fahello.i\u6587\u4ef6 gcc -E hello.c -o hello.i 2\u3001\u5c06\u9884\u5904\u7406\u8f93\u51fa\u6587\u4ef6hello.i\u6c47\u7f16\u6210hello.s\u6587\u4ef6\u3002 gcc -S hello.i -o hello.s 3\u3001\u5c06\u6c47\u7f16\u8f93\u51fa\u6587\u4ef6hello.s\u7f16\u8bd1\u8f93\u51fahello.o\u6587\u4ef6 gcc -c hello.s -o hello.o 4\u3001\u5c06\u7f16\u8bd1\u8f93\u51fa\u6587\u4ef6hello.o\u94fe\u63a5\u6210\u6700\u7ec8\u53ef\u6267\u884c\u6587\u4ef6hello\u3002 gcc hello.o -o hello \u6216\u76f4\u63a5\u8f93\u5165\u4e0b\u9762\u4ee3\u7801\u4e00\u6b65\u5230\u4f4d gcc hello.c -o hello \u4e5f\u53ef\u4ee5\u6709\u591a\u4e2a\u6a21\u5757\u3001\u591a\u4e2a\u6587\u4ef6\u4e00\u8d77\u7f16\u8bd1\uff0c\u8bf7\u81ea\u884c\u767e\u5ea6\u3002","title":"4.2 GCC\u7f16\u8bd1\u7684\u56db\u4e2a\u9636\u6bb5"},{"location":"tools/#5-makefile","text":"question 5 \u4ec0\u4e48\u662fmakefile\uff1f\u4f5c\u4e3a\u4e00\u4e2a\u4e13\u4e1a\u7684\u7a0b\u5e8f\u5458\uff0c\u7279\u522b\u662f\u5728Unix\uff08Linux\uff09\u73af\u5883\u4e0b\u5f00\u53d1\u7684\u7a0b\u5e8f\u5458\uff0c\u5982\u679c\u4e0d\u4f1a\u4f7f\u7528GNU make\u6765\u6784\u5efa\u548c\u7ba1\u7406\u81ea\u5df1\u7684\u5de5\u7a0b\uff0c\u5e94\u8be5\u4e0d\u80fd\u7b97\u662f\u4e00\u4e2a\u5408\u683c\u7684\u4e13\u4e1a\u7a0b\u5e8f\u5458\u3002\u4f1a\u4e0d\u4f1a\u5199Makefile\uff0c\u4ece\u4e00\u4e2a\u4fa7\u9762\u8bf4\u660e\u4e86\u4e00\u4e2a\u4eba\u662f\u5426\u5177\u5907\u5b8c\u6210\u5927\u578b\u5de5\u7a0b\u7684\u80fd\u529b\u3002\u56e0\u4e3a\uff0cMakefile\u5173\u7cfb\u5230\u4e86\u6574\u4e2a\u5de5\u7a0b\u7684\u7f16\u8bd1\u3001\u8fde\u63a5\u7b49\u89c4\u5219\u3002\u4e3a\u5de5\u7a0b\u7f16\u5199Makefile\u7684\u597d\u5904\u662f\u80fd\u591f\u7528\u4e00\u4e2amake\u547d\u4ee4\u6765\u5b8c\u6210\u201c\u81ea\u52a8\u5316\u7f16\u8bd1\"\uff0c\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u8f6f\u4ef6\u5f00\u53d1\u7684\u6548\u7387\u3002make\u662f\u4e00\u4e2a\u547d\u4ee4\u5de5\u5177\uff0c\u5b83\u7528\u4e8e\u89e3\u91camakefile\u4e2d\u7684\u6307\u4ee4\u3002 \u7f16\u5199\u89c4\u5219\uff1a <target> : < prerequisites > [tab] <commands> \u4e3a\u4e86\u5927\u5bb6\u80fd\u66f4\u4e3a\u6e05\u6670\u5730\u4e86\u89e3Makefile\u7684\u57fa\u672c\u6982\u5ff5\uff0c\u6211\u4eec\u6765\u5199\u4e00\u4e2a\u7b80\u5355\u7684Makefile\u3002 \u76f4\u63a5\u4f7f\u7528gcc\u7f16\u8bd1hello.c $ gcc -o hello hello.c \u90a3\u4e48\uff0c\u7b80\u6613\u7684Makefile\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u7684\u6837\u5b50\uff0c\u4e4b\u540e\u6267\u884cmake\u5373\u53ef\u4ea7\u751fhello\u53ef\u6267\u884c\u6587\u4ef6 all : hello . c gcc -o hello hello.c \u5efa\u8bae\u540c\u5b66\u4eec\u81ea\u5df1\u5c1d\u8bd5\u5199\u4e00\u4e2a\u7b80\u5355\u7684Makefile\u6587\u4ef6\uff0c\u8fd9\u91cc\u4e3a\u540c\u5b66\u4eec\u63d0\u4f9b\u4e24\u4e2a\u7f51\u5740\u4f9b\u5927\u5bb6\u5b66\u4e60\u53c2\u8003\uff1a \u8ddf\u6211\u4e00\u8d77\u5199Makefile:MakeFile Reading-Makefiles","title":"5 Makefile"},{"location":"faq/faq-env/","text":"\u6e29\u99a8\u63d0\u793a \u672c\u6587\u6863\u4f1a\u4e0d\u5b9a\u65f6\u66f4\u65b0\u540c\u5b66\u4eec\u5728\u5b9e\u9a8c\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0\u7684\u95ee\u9898\u4ee5\u53ca\u5bf9\u5e94\u7684\u89e3\u51b3\u529e\u6cd5\uff0c\u4f9b\u540c\u5b66\u4eec\u53c2\u8003\u3002\u7279\u522b\u611f\u8c22\u7ed9\u672c\u8bfe\u7a0b\u5b9e\u9a8c\u53cd\u9988\u95ee\u9898\u3001\u5efa\u8bae\u4ee5\u53ca\u610f\u89c1\u7684\u540c\u5b66\u3002 \u5b9e\u9a8c\u73af\u5883\u95ee\u9898 \u00b6 1. \u9ad8\u7248\u672c\u5de5\u5177\u517c\u5bb9\u95ee\u9898 \u00b6 1.1 xv6\u5982\u4f55\u5728QEMU>=6.0.0\u4e0a\u542f\u52a8\uff1f \u00b6 \u5177\u4f53\u89e3\u51b3\u65b9\u6848\u8be6\u89c1piazza \uff1a https://piazza.com/class/l7fs47nofoc4pm/post/8 Patch\u6587\u4ef6\uff1a pmp.patch \u8be5\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u6765\u81ea20\u7ea7\u67d0\u4f4d\u5927\u4f6c\u7684\u5206\u4eab\uff0c\u975e\u5e38\u611f\u8c22\u8fd9\u4f4d\u5927\u4f6c\u7684\u8d21\u732e~~ 1.2 \u4f7f\u7528\u9ad8\u7248\u672cgcc (\u226512)\u51fa\u73b0\u62a5\u9519 \u00b6 \u5177\u4f53\u89e3\u51b3\u65b9\u6848\u8be6\u89c1piazza \uff1a https://piazza.com/class/l7fs47nofoc4pm/post/22 2. VSCode\u65e0\u6cd5\u8fde\u63a5\u5b9e\u9a8c\u5e73\u53f0 \u00b6 2.1 VS Code\u8fde\u63a5\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u65f6\u63d0\u793a ssh: connect to host 10.249.12.98 port 22: Connection timed out \uff1f \u00b6 \u7aef\u53e3\u53f7\u5199\u9519\u4e86\uff0c\u8bf7\u53c2\u8003\u5b9e\u9a8c\u6307\u5bfc\u4e66\u8981\u6c42\u6765\u8fde\u63a5\u3002 https://hitsz-cslab.gitee.io/os-labs/remote_env/ \u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0IP\u5730\u5740\uff1a 10.249.12.98 \uff0c\u7aef\u53e3\u53f7\uff1a 6666 2.2 VS Code\u8fde\u63a5\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u65f6\u51fa\u73b0 bad owner or permission \u62a5\u9519\uff1f \u00b6 \u89e3\u51b3\u65b9\u6cd5\uff1a\u8fdb\u5165\u8def\u5f84 C:\\Users\\\u7528\u6237\u540d\\.ssh \uff0c\u53f3\u51fbconfig\u6587\u4ef6\u8fdb\u5165\u5c5e\u6027\u4e2d\u9ad8\u7ea7\u5b89\u5168\u7ba1\u7406\uff0c\u9009\u62e9\u7981\u6b62\u7ee7\u627f\uff0c\u5e76\u4e14\u5220\u9664\u6240\u6709\u6b64\u5bf9\u8c61\u4e2d\u7ee7\u627f\u7684\u6743\u9650\u3002 \u5177\u4f53\u53ef\u4ee5\u67e5\u770b\uff1a https://www.cnblogs.com/Akkuman/p/11187776.html 2.3 \u5728\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u4e0aclone xv6-labs-2020\u5931\u8d25\uff1f \u00b6 \u5982\u56fe\uff1a \u539f\u56e0\uff1a \u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u7ed9\u6bcf\u4f4d\u540c\u5b66\u505a\u4e86\u8d44\u6e90\u9650\u989d\u7ba1\u7406\uff0c\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u7684\u540c\u5b66\uff0c\u6709\u53ef\u80fd\u662f\u4e4b\u524d\u7684\u300a\u8ba1\u7b97\u673a\u8bbe\u8ba1\u4e0e\u5b9e\u8df5\u300b\u5b9e\u9a8c\u5305 cdp-tests \u5360\u7528\u4e86\u592a\u591a\u7a7a\u95f4\uff0c\u4f60\u9700\u8981\u5220\u9664 cdp-tests/waveform \u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6ce2\u5f62\u56fe\u6587\u4ef6\uff08\u4e3b\u8981\u662f\u6ce2\u5f62\u56fe\u6587\u4ef6\u592a\u5927\u4e86\uff09\u3002 \u4f7f\u7528mobaxterm\u767b\u5f55\uff0c\u8f93\u5165\u5982\u4e0b\u547d\u4ee4\uff1a \u4f7f\u7528 rm -rf * \u5220\u9664\u540e\uff0c\u5e94\u8be5\u5c31\u80fdclone xv6-labs-2020\u3002 2.4 VS Code\u8fde\u63a5\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u65f6\u63d0\u793a mkdir: cannot create directory '/home/students/XXX' \u00b6 \u5982\u56fe\uff1a \u539f\u56e0\uff1a \u4e0e\u4e0a\u8ff0\u95ee\u9898\u4e00\u6837\uff0c\u4e5f\u662f\u56e0\u4e3a\u8d44\u6e90\u9650\u989d\u7684\u95ee\u9898\u3002\u4e4b\u524d\u7684\u300a\u8ba1\u7b97\u673a\u8bbe\u8ba1\u4e0e\u5b9e\u8df5\u300b\u5b9e\u9a8c\u5305 cdp-tests \u5360\u7528\u4e86\u592a\u591a\u7a7a\u95f4\uff0c\u4f60\u9700\u8981\u5220\u9664 cdp-tests/waveform \u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6ce2\u5f62\u56fe\u6587\u4ef6\uff08\u4e3b\u8981\u662f\u6ce2\u5f62\u56fe\u6587\u4ef6\u592a\u5927\u4e86\uff09\u3002 \u4f7f\u7528mobaxterm\u767b\u5f55\uff0c\u8f93\u5165\u5982\u4e0b\u547d\u4ee4\uff1a 3. VSCode\u65e0\u6cd5\u7528GDB\u56fe\u5f62\u5316\u8c03\u8bd5 \u00b6 3.1 \u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u56fe\u5f62\u5316\u65e0\u6cd5\u8c03\u8bd5 Failed to attach: Remote communication error \uff1f \u00b6 VSCode\u8fdc\u7a0b\u8c03\u8bd5\u65f6\uff0c\u63d0\u793a\u5982\u4e0b\u9519\u8bef\uff1a \u5177\u4f53\u89e3\u51b3\u65b9\u6848\u8be6\u89c1piazza \uff1a https://piazza.com/class/l7fs47nofoc4pm/post/20 \u6253\u5f00xv6\u5de5\u4f5c\u76ee\u5f55\u4e0b\u7684.gdbint\u6587\u4ef6\uff0c\u5c06\u7b2c\u4e09\u884c target remote 127.0.0.1:*** \u7528 # \u6ce8\u91ca\u6389\u3002 3.2 \u8fdc\u7a0b\u5e73\u53f0\u8c03\u8bd5\u65f6VSCode\u62a5\u9519 Failed to attach: 127.0.0.1:XXX: Connection timed out. (from target-select remote 127.0.0.11:XXX) ? \u00b6 \u5982\u56fe\uff1a \u539f\u56e0\uff1a \u6ca1\u6709\u5728\u7ec8\u7aef\u8f93\u5165make qemu-gdb\uff0c\u76f4\u63a5\u70b9\u4e86VSCode\u7684debug\u7684\u4e09\u89d2\u5f62\u7b26\u53f7\u8fdb\u884c\u8c03\u8bd5\u3002 \u6216\u8005\uff0c\u8bf7\u68c0\u67e5launch.json\u7684GDB\u7aef\u53e3\u53f7\u662f\u5426\u5199\u5bf9\uff1f 3.3 \u8fdc\u7a0b\u5e73\u53f0\u8c03\u8bd5\u65f6VSCode\u62a5\u9519 Failed to attach: Truncated register 37 in remote 'g' packet ? \u00b6 \u5982\u56fe\uff1a \u539f\u56e0\uff1a VSCode\u5de5\u4f5c\u533a\u8def\u5f84\u4e0d\u662fXV6\u8def\u5f84\uff0c\u5d4c\u5957\u4e86\u5916\u9762\u4e00\u5c42\u6587\u4ef6\u5939\u3002 \u89e3\u51b3\u65b9\u6cd5\uff1a \u9996\u5148 \u786e\u8ba4\u4f60\u7684VS Code\u5de5\u4f5c\u533a\u8def\u5f84\u662f\u5426\u662f\u4f60\u7684xv6\u8def\u5f84\uff0c\u6ca1\u6709\u989d\u5916\u5d4c\u5957\u4e00\u5c42\u6587\u4ef6\u5939 \u3002\u6309\u4e0b Ctrl+` \uff0c\u547c\u51fa\u7ec8\u7aef\uff0c\u8f93\u5165 ls \u3002\u4f60\u5e94\u8be5\u4f1a\u770b\u5230\u5982\u4e0b\u60c5\u666f\uff1a ldap_example@OSLabExecNode0:~/xv6-labs-2020$ ls conf fs.img grade-lab-util gradelib.py gradelib.pyc kernel LICENSE Makefile mkfs README user \u5982\u679c\u4e0d\u662f\uff0c\u6253\u5f00\u65b0\u7684\u5de5\u4f5c\u533a\uff0c\u9009\u62e9xv6\u6240\u5728\u7684\u6587\u4ef6\u5939\u6253\u5f00\u5373\u53ef\u3002\u6b63\u786e\u7684\u5de5\u4f5c\u533a\u5e94\u8be5\u5982\u4e0b\u663e\u793a\uff1a 4 xv6\u8fd0\u884c\u62a5\u9519 \u00b6 4.1 \u8fdc\u7a0b\u5e73\u53f0make qemu\u62a5\u9519 Is another process using the image [fs.img] ? \u00b6 \u5982\u56fe\uff1a \u7528ps\u6216top\u547d\u4ee4\u67e5\u770b\u4e00\u4e0b\u662f\u4e0d\u662f\u5df2\u7ecf\u5f00\u542f\u4e86qemu\uff1f\u5982\u679cqemu\u5df2\u7ecf\u5728\u8fd0\u884c\uff0c\u8bf7\u5148\u7ed3\u675f\u8be5\u8fdb\u7a0b\u3002 \u5177\u4f53\u89e3\u51b3\u65b9\u6848\u8be6\u89c1piazza \uff1a https://piazza.com/class/l7fs47nofoc4pm/post/23 \u53e6\u5916\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\uff1a\u8f93\u5165\u5728xv6-labs-2020\u76ee\u5f55\u4e0b\u8f93\u5165 make clean \u6e05\u9664fs.img\uff0c\u7136\u540e\u518d\u8fd0\u884c make qemu 5 git\u5e38\u89c1\u95ee\u9898 \u00b6 5.1 \u65e0\u6cd5\u63a8\u9001\u600e\u4e48\u529e\uff1f \u00b6 \u5982\u679c\u4f60\u5c1d\u8bd5\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u6216\u8005\u4ece\u8fdc\u7a0b\u4ed3\u5e93\u62c9\u53d6\uff0c\u4f46\u662fgit\u5374\u663e\u793a\u51fa\u8fd9\u6837\u7684\u9519\u8bef\uff1a git@gitee.com: Permission denied (publickey). fatal: Could not read from remote repository. Please make sure you have the correct access rights and the repository exists \u8fd9\u8868\u660e\u4f60\u6ca1\u6709\u6743\u9650\u63a8\u9001\u5230\u8fd9\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\u3002\u4e00\u822c\u800c\u8a00\uff0c\u8fd9\u662f\u7531\u4e8e\u4f60\u6ca1\u6709\u8bbe\u7f6e\u597d\u81ea\u5df1\u7684ssh\u5bc6\u94a5\u9020\u6210\u7684\u3002\u8bf7\u53c2\u7167 3.4\u8282 ssh\u5bc6\u94a5\u8bbe\u7f6e \uff0c\u8bbe\u7f6e\u81ea\u5df1\u7684ssh\u5bc6\u94a5\u3002 5.2 \u6211\u600e\u4e48\u77e5\u9053\u6211\u4fee\u6539\u4e86\u54ea\u4e9b\u6587\u4ef6\uff1f \u00b6 \u901a\u5e38\u800c\u8a00\uff0c\u5b9e\u9a8c\u8981\u6c42\u540c\u5b66\u4eec\u63d0\u4ea4 \u6240\u6709 \u88ab\u4fee\u6539\u8fc7\u7684\u6587\u4ef6\u3002\u901a\u8fc7\u5c06\u5f53\u524d\u5de5\u4f5c\u8def\u5f84\u4e0e\u4e0a\u6e38\u4ed3\u5e93\uff08\u8bfe\u7a0b\u5b9e\u9a8c\u63d0\u4f9b\u7684\u4ed3\u5e93\uff09\u5bf9\u5e94\u5206\u652f\u7684\u5185\u5bb9\u76f8\u6bd4\u8f83\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u77e5\u9053\u81ea\u5df1\u66fe\u7ecf\u4fee\u6539\u8fc7\u54ea\u4e9b\u6587\u4ef6\uff0c\u5e76\u6253\u5305\u63d0\u4ea4\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5f53\u524d\u5206\u652f\u4e0e\u4e0a\u6e38\u4ed3\u5e93\u7684 syscall \u5206\u652f\u76f8\u6bd4\u8f83\uff1a lgz_admin@OSLabExecNode0:~/git_demo/xv6-labs-2020$ git fetch --all Fetching origin Fetching upstream lgz_admin@OSLabExecNode0:~/git_demo/xv6-labs-2020$ git diff --stat upstream/syscall * kernel/kalloc.c | 2 ++ kernel/syscall.c | 1 + kernel/syscall.h | 1 + kernel/sysinfo.h | 1 + 4 files changed, 5 insertions(+) \u8981\u6bd4\u8f83\u5176\u4ed6\u5206\u652f\uff0c\u5c06\u7b2c\u4e8c\u6761\u6307\u4ee4\u4e2d\u7684 syscall \u6539\u4e3a\u5bf9\u5e94\u5206\u652f\u540d\u5373\u53ef\u3002 \u8bf7\u5148\u5728\u672c\u5730\u5207\u6362\u5230\u5bf9\u5e94\u5206\u652f\uff01 \u5728\u6bd4\u8f83\u7684\u65f6\u5019\uff0c\u4f60\u9700\u8981\u5c06\u672c\u5730\u5206\u652f\u4e0e\u4e0a\u6e38\u5bf9\u5e94\u5206\u652f\u8fdb\u884c\u6bd4\u8f83\u3002\u4e3e\u4f8b\u800c\u8a00\uff0c\u4f60\u4e0d\u4f1a\u60f3\u6bd4\u8f83\u672c\u5730\u7684 util \u5206\u652f\u548c\u8fdc\u7a0b\u7684 syscall \u5206\u652f\uff0c\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u4e0d\u662f\u4e00\u4e2a\u5b9e\u9a8c\u7684\u3002\u8bf7\u5148\u4f7f\u7528 git checkout \u5206\u652f\u540d \u4ee5\u5207\u6362\u5230\u5bf9\u5e94\u5206\u652f\uff0c\u5e76\u5728\u4f7f\u7528 git diff --stat upstream/\u5206\u652f\u540d * \u65f6\u6307\u5b9a \u540c\u4e00\u4e2a \u4e0a\u6e38\u5206\u652f\u3002 \u672a\u8bbe\u7f6e\u4e0a\u6e38\u4ed3\u5e93\uff1f \u5982\u679cgit\u62a5\u544a\u201c fatal: ambiguous argument 'upstream/\u5206\u652f\u540d': unknown revision or path not in the working tree. \u201d\uff0c\u8bf4\u660e\u4f60\u5c1a\u672a\u8bbe\u7f6e\u4e0a\u6e38\u4ed3\u5e93\u3002\u8bf7\u5148\u6309\u672c\u6307\u5357\u4e2d\u7684 3.1-\u540c\u6b65\u4e0a\u6e38\u4ed3\u5e93 \u4e00\u8282\u5b8c\u6210\u4e0a\u6e38\u4ed3\u5e93\u7684\u8bbe\u7f6e\u4e0e\u540c\u6b65\uff0c\u518d\u8fdb\u884c\u6bd4\u8f83\u3002 5.3 \u4e3a\u4ec0\u4e48\u6211\u4e0d\u80fd\u5207\u6362\u5206\u652f\uff08checkout\uff09\uff1f \u00b6 \u901a\u5e38\u800c\u8a00\uff0c\u4e0d\u80fd\u5207\u6362\u5206\u652f\u7684\u4e3b\u8981\u539f\u56e0\u662f\u4f60\u5f53\u524d\u6709\u5c1a\u672a\u4fdd\u5b58\u7684\u4fee\u6539\uff0c\u6b64\u65f6checkout\u7684\u8bdd\u4f1a\u89e6\u53d1\u4ee5\u4e0b\u9519\u8bef\uff1a lgz_admin@OSLabExecNode0: ~/git_demo/xv6-labs-2020$ git checkout util \u2500\u256f error: Your local changes to the following files would be overwritten by checkout: Makefile Please commit your changes or stash them before you switch branches. Aborting \u901a\u8fc7 git status \u6307\u4ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u68c0\u67e5\u5f53\u524dgit\u7684\u72b6\u6001\u3002\u5982\u679c\u4f60\u7684\u8f93\u51fa\u5982\u4e0b\u6240\u793a\uff1a lgz_admin@OSLabExecNode0: ~/git_demo/xv6-labs-2020$ git status On branch syscall Your branch is up to date with 'origin/syscall'. Changes not staged for commit: (use \"git add <file>...\" to update what will be committed) (use \"git restore <file>...\" to discard changes in working directory) modified: Makefile no changes added to commit (use \"git add\" and/or \"git commit -a\") \u8fd9\u8bf4\u660e\u5f53\u524d\u4f60\u7684\u5de5\u4f5c\u533a\u6709\u5c1a\u672a\u4fdd\u5b58\u7684\u66f4\u6539\u3002\u8bf7\u53c2\u8003 3.3.1 \u4f7f\u7528\u547d\u4ee4\u884c\u5b8c\u6210\u64cd\u4f5c \u6216\u8005 3.3.2 \u4f7f\u7528VS Code\u5185\u5efa\u7684\u56fe\u5f62\u5316\u754c\u9762\u5b8c\u6210\u64cd\u4f5c \u8282\uff0c\u5b8c\u6210commit\u64cd\u4f5c\u3002 \u6216\u8005\uff0c\u5982\u679c\u4f60\u5e0c\u671b\u76f4\u63a5\u653e\u5f03\u6389\u4e0a\u4e00\u6b21commit\u540e\u7684 \u6240\u6709\u66f4\u6539 \uff0c\u90a3\u4e48\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 -f \u9009\u9879\u5f3a\u5236\u5207\u6362\u5206\u652f\uff0c\u4f8b\u5982 git checkout -f syscall \u3002","title":"\u5b9e\u9a8c\u73af\u5883\u95ee\u9898"},{"location":"faq/faq-env/#_1","text":"","title":"\u5b9e\u9a8c\u73af\u5883\u95ee\u9898"},{"location":"faq/faq-env/#1","text":"","title":"1. \u9ad8\u7248\u672c\u5de5\u5177\u517c\u5bb9\u95ee\u9898"},{"location":"faq/faq-env/#11-xv6qemu600","text":"\u5177\u4f53\u89e3\u51b3\u65b9\u6848\u8be6\u89c1piazza \uff1a https://piazza.com/class/l7fs47nofoc4pm/post/8 Patch\u6587\u4ef6\uff1a pmp.patch \u8be5\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u6765\u81ea20\u7ea7\u67d0\u4f4d\u5927\u4f6c\u7684\u5206\u4eab\uff0c\u975e\u5e38\u611f\u8c22\u8fd9\u4f4d\u5927\u4f6c\u7684\u8d21\u732e~~","title":"1.1 xv6\u5982\u4f55\u5728QEMU&gt;=6.0.0\u4e0a\u542f\u52a8\uff1f"},{"location":"faq/faq-env/#12-gcc-12","text":"\u5177\u4f53\u89e3\u51b3\u65b9\u6848\u8be6\u89c1piazza \uff1a https://piazza.com/class/l7fs47nofoc4pm/post/22","title":"1.2 \u4f7f\u7528\u9ad8\u7248\u672cgcc (\u226512)\u51fa\u73b0\u62a5\u9519"},{"location":"faq/faq-env/#2-vscode","text":"","title":"2. VSCode\u65e0\u6cd5\u8fde\u63a5\u5b9e\u9a8c\u5e73\u53f0"},{"location":"faq/faq-env/#21-vs-codessh-connect-to-host-102491298-port-22-connection-timed-out","text":"\u7aef\u53e3\u53f7\u5199\u9519\u4e86\uff0c\u8bf7\u53c2\u8003\u5b9e\u9a8c\u6307\u5bfc\u4e66\u8981\u6c42\u6765\u8fde\u63a5\u3002 https://hitsz-cslab.gitee.io/os-labs/remote_env/ \u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0IP\u5730\u5740\uff1a 10.249.12.98 \uff0c\u7aef\u53e3\u53f7\uff1a 6666","title":"2.1  VS Code\u8fde\u63a5\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u65f6\u63d0\u793assh: connect to host 10.249.12.98 port 22: Connection timed out\uff1f"},{"location":"faq/faq-env/#22-vs-codebad-owner-or-permission","text":"\u89e3\u51b3\u65b9\u6cd5\uff1a\u8fdb\u5165\u8def\u5f84 C:\\Users\\\u7528\u6237\u540d\\.ssh \uff0c\u53f3\u51fbconfig\u6587\u4ef6\u8fdb\u5165\u5c5e\u6027\u4e2d\u9ad8\u7ea7\u5b89\u5168\u7ba1\u7406\uff0c\u9009\u62e9\u7981\u6b62\u7ee7\u627f\uff0c\u5e76\u4e14\u5220\u9664\u6240\u6709\u6b64\u5bf9\u8c61\u4e2d\u7ee7\u627f\u7684\u6743\u9650\u3002 \u5177\u4f53\u53ef\u4ee5\u67e5\u770b\uff1a https://www.cnblogs.com/Akkuman/p/11187776.html","title":"2.2 VS Code\u8fde\u63a5\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u65f6\u51fa\u73b0bad owner or permission\u62a5\u9519\uff1f"},{"location":"faq/faq-env/#23-clone-xv6-labs-2020","text":"\u5982\u56fe\uff1a \u539f\u56e0\uff1a \u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u7ed9\u6bcf\u4f4d\u540c\u5b66\u505a\u4e86\u8d44\u6e90\u9650\u989d\u7ba1\u7406\uff0c\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u7684\u540c\u5b66\uff0c\u6709\u53ef\u80fd\u662f\u4e4b\u524d\u7684\u300a\u8ba1\u7b97\u673a\u8bbe\u8ba1\u4e0e\u5b9e\u8df5\u300b\u5b9e\u9a8c\u5305 cdp-tests \u5360\u7528\u4e86\u592a\u591a\u7a7a\u95f4\uff0c\u4f60\u9700\u8981\u5220\u9664 cdp-tests/waveform \u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6ce2\u5f62\u56fe\u6587\u4ef6\uff08\u4e3b\u8981\u662f\u6ce2\u5f62\u56fe\u6587\u4ef6\u592a\u5927\u4e86\uff09\u3002 \u4f7f\u7528mobaxterm\u767b\u5f55\uff0c\u8f93\u5165\u5982\u4e0b\u547d\u4ee4\uff1a \u4f7f\u7528 rm -rf * \u5220\u9664\u540e\uff0c\u5e94\u8be5\u5c31\u80fdclone xv6-labs-2020\u3002","title":"2.3 \u5728\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u4e0aclone xv6-labs-2020\u5931\u8d25\uff1f"},{"location":"faq/faq-env/#24-vs-codemkdir-cannot-create-directory-homestudentsxxx","text":"\u5982\u56fe\uff1a \u539f\u56e0\uff1a \u4e0e\u4e0a\u8ff0\u95ee\u9898\u4e00\u6837\uff0c\u4e5f\u662f\u56e0\u4e3a\u8d44\u6e90\u9650\u989d\u7684\u95ee\u9898\u3002\u4e4b\u524d\u7684\u300a\u8ba1\u7b97\u673a\u8bbe\u8ba1\u4e0e\u5b9e\u8df5\u300b\u5b9e\u9a8c\u5305 cdp-tests \u5360\u7528\u4e86\u592a\u591a\u7a7a\u95f4\uff0c\u4f60\u9700\u8981\u5220\u9664 cdp-tests/waveform \u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6ce2\u5f62\u56fe\u6587\u4ef6\uff08\u4e3b\u8981\u662f\u6ce2\u5f62\u56fe\u6587\u4ef6\u592a\u5927\u4e86\uff09\u3002 \u4f7f\u7528mobaxterm\u767b\u5f55\uff0c\u8f93\u5165\u5982\u4e0b\u547d\u4ee4\uff1a","title":"2.4 VS Code\u8fde\u63a5\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u65f6\u63d0\u793amkdir: cannot create directory '/home/students/XXX'"},{"location":"faq/faq-env/#3-vscodegdb","text":"","title":"3. VSCode\u65e0\u6cd5\u7528GDB\u56fe\u5f62\u5316\u8c03\u8bd5"},{"location":"faq/faq-env/#31-failed-to-attach-remote-communication-error","text":"VSCode\u8fdc\u7a0b\u8c03\u8bd5\u65f6\uff0c\u63d0\u793a\u5982\u4e0b\u9519\u8bef\uff1a \u5177\u4f53\u89e3\u51b3\u65b9\u6848\u8be6\u89c1piazza \uff1a https://piazza.com/class/l7fs47nofoc4pm/post/20 \u6253\u5f00xv6\u5de5\u4f5c\u76ee\u5f55\u4e0b\u7684.gdbint\u6587\u4ef6\uff0c\u5c06\u7b2c\u4e09\u884c target remote 127.0.0.1:*** \u7528 # \u6ce8\u91ca\u6389\u3002","title":"3.1 \u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u56fe\u5f62\u5316\u65e0\u6cd5\u8c03\u8bd5Failed to attach: Remote communication error\uff1f"},{"location":"faq/faq-env/#32-vscodefailed-to-attach-127001xxx-connection-timed-out-from-target-select-remote-1270011xxx","text":"\u5982\u56fe\uff1a \u539f\u56e0\uff1a \u6ca1\u6709\u5728\u7ec8\u7aef\u8f93\u5165make qemu-gdb\uff0c\u76f4\u63a5\u70b9\u4e86VSCode\u7684debug\u7684\u4e09\u89d2\u5f62\u7b26\u53f7\u8fdb\u884c\u8c03\u8bd5\u3002 \u6216\u8005\uff0c\u8bf7\u68c0\u67e5launch.json\u7684GDB\u7aef\u53e3\u53f7\u662f\u5426\u5199\u5bf9\uff1f","title":"3.2 \u8fdc\u7a0b\u5e73\u53f0\u8c03\u8bd5\u65f6VSCode\u62a5\u9519Failed to attach: 127.0.0.1:XXX: Connection timed out. (from target-select remote 127.0.0.11:XXX)?"},{"location":"faq/faq-env/#33-vscodefailed-to-attach-truncated-register-37-in-remote-g-packet","text":"\u5982\u56fe\uff1a \u539f\u56e0\uff1a VSCode\u5de5\u4f5c\u533a\u8def\u5f84\u4e0d\u662fXV6\u8def\u5f84\uff0c\u5d4c\u5957\u4e86\u5916\u9762\u4e00\u5c42\u6587\u4ef6\u5939\u3002 \u89e3\u51b3\u65b9\u6cd5\uff1a \u9996\u5148 \u786e\u8ba4\u4f60\u7684VS Code\u5de5\u4f5c\u533a\u8def\u5f84\u662f\u5426\u662f\u4f60\u7684xv6\u8def\u5f84\uff0c\u6ca1\u6709\u989d\u5916\u5d4c\u5957\u4e00\u5c42\u6587\u4ef6\u5939 \u3002\u6309\u4e0b Ctrl+` \uff0c\u547c\u51fa\u7ec8\u7aef\uff0c\u8f93\u5165 ls \u3002\u4f60\u5e94\u8be5\u4f1a\u770b\u5230\u5982\u4e0b\u60c5\u666f\uff1a ldap_example@OSLabExecNode0:~/xv6-labs-2020$ ls conf fs.img grade-lab-util gradelib.py gradelib.pyc kernel LICENSE Makefile mkfs README user \u5982\u679c\u4e0d\u662f\uff0c\u6253\u5f00\u65b0\u7684\u5de5\u4f5c\u533a\uff0c\u9009\u62e9xv6\u6240\u5728\u7684\u6587\u4ef6\u5939\u6253\u5f00\u5373\u53ef\u3002\u6b63\u786e\u7684\u5de5\u4f5c\u533a\u5e94\u8be5\u5982\u4e0b\u663e\u793a\uff1a","title":"3.3 \u8fdc\u7a0b\u5e73\u53f0\u8c03\u8bd5\u65f6VSCode\u62a5\u9519Failed to attach: Truncated register 37 in remote 'g' packet?"},{"location":"faq/faq-env/#4-xv6","text":"","title":"4 xv6\u8fd0\u884c\u62a5\u9519"},{"location":"faq/faq-env/#41-make-qemuis-another-process-using-the-image-fsimg","text":"\u5982\u56fe\uff1a \u7528ps\u6216top\u547d\u4ee4\u67e5\u770b\u4e00\u4e0b\u662f\u4e0d\u662f\u5df2\u7ecf\u5f00\u542f\u4e86qemu\uff1f\u5982\u679cqemu\u5df2\u7ecf\u5728\u8fd0\u884c\uff0c\u8bf7\u5148\u7ed3\u675f\u8be5\u8fdb\u7a0b\u3002 \u5177\u4f53\u89e3\u51b3\u65b9\u6848\u8be6\u89c1piazza \uff1a https://piazza.com/class/l7fs47nofoc4pm/post/23 \u53e6\u5916\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\uff1a\u8f93\u5165\u5728xv6-labs-2020\u76ee\u5f55\u4e0b\u8f93\u5165 make clean \u6e05\u9664fs.img\uff0c\u7136\u540e\u518d\u8fd0\u884c make qemu","title":"4.1 \u8fdc\u7a0b\u5e73\u53f0make qemu\u62a5\u9519Is another process using the image [fs.img]?"},{"location":"faq/faq-env/#5-git","text":"","title":"5 git\u5e38\u89c1\u95ee\u9898"},{"location":"faq/faq-env/#51","text":"\u5982\u679c\u4f60\u5c1d\u8bd5\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u6216\u8005\u4ece\u8fdc\u7a0b\u4ed3\u5e93\u62c9\u53d6\uff0c\u4f46\u662fgit\u5374\u663e\u793a\u51fa\u8fd9\u6837\u7684\u9519\u8bef\uff1a git@gitee.com: Permission denied (publickey). fatal: Could not read from remote repository. Please make sure you have the correct access rights and the repository exists \u8fd9\u8868\u660e\u4f60\u6ca1\u6709\u6743\u9650\u63a8\u9001\u5230\u8fd9\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\u3002\u4e00\u822c\u800c\u8a00\uff0c\u8fd9\u662f\u7531\u4e8e\u4f60\u6ca1\u6709\u8bbe\u7f6e\u597d\u81ea\u5df1\u7684ssh\u5bc6\u94a5\u9020\u6210\u7684\u3002\u8bf7\u53c2\u7167 3.4\u8282 ssh\u5bc6\u94a5\u8bbe\u7f6e \uff0c\u8bbe\u7f6e\u81ea\u5df1\u7684ssh\u5bc6\u94a5\u3002","title":"5.1 \u65e0\u6cd5\u63a8\u9001\u600e\u4e48\u529e\uff1f"},{"location":"faq/faq-env/#52","text":"\u901a\u5e38\u800c\u8a00\uff0c\u5b9e\u9a8c\u8981\u6c42\u540c\u5b66\u4eec\u63d0\u4ea4 \u6240\u6709 \u88ab\u4fee\u6539\u8fc7\u7684\u6587\u4ef6\u3002\u901a\u8fc7\u5c06\u5f53\u524d\u5de5\u4f5c\u8def\u5f84\u4e0e\u4e0a\u6e38\u4ed3\u5e93\uff08\u8bfe\u7a0b\u5b9e\u9a8c\u63d0\u4f9b\u7684\u4ed3\u5e93\uff09\u5bf9\u5e94\u5206\u652f\u7684\u5185\u5bb9\u76f8\u6bd4\u8f83\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u77e5\u9053\u81ea\u5df1\u66fe\u7ecf\u4fee\u6539\u8fc7\u54ea\u4e9b\u6587\u4ef6\uff0c\u5e76\u6253\u5305\u63d0\u4ea4\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5f53\u524d\u5206\u652f\u4e0e\u4e0a\u6e38\u4ed3\u5e93\u7684 syscall \u5206\u652f\u76f8\u6bd4\u8f83\uff1a lgz_admin@OSLabExecNode0:~/git_demo/xv6-labs-2020$ git fetch --all Fetching origin Fetching upstream lgz_admin@OSLabExecNode0:~/git_demo/xv6-labs-2020$ git diff --stat upstream/syscall * kernel/kalloc.c | 2 ++ kernel/syscall.c | 1 + kernel/syscall.h | 1 + kernel/sysinfo.h | 1 + 4 files changed, 5 insertions(+) \u8981\u6bd4\u8f83\u5176\u4ed6\u5206\u652f\uff0c\u5c06\u7b2c\u4e8c\u6761\u6307\u4ee4\u4e2d\u7684 syscall \u6539\u4e3a\u5bf9\u5e94\u5206\u652f\u540d\u5373\u53ef\u3002 \u8bf7\u5148\u5728\u672c\u5730\u5207\u6362\u5230\u5bf9\u5e94\u5206\u652f\uff01 \u5728\u6bd4\u8f83\u7684\u65f6\u5019\uff0c\u4f60\u9700\u8981\u5c06\u672c\u5730\u5206\u652f\u4e0e\u4e0a\u6e38\u5bf9\u5e94\u5206\u652f\u8fdb\u884c\u6bd4\u8f83\u3002\u4e3e\u4f8b\u800c\u8a00\uff0c\u4f60\u4e0d\u4f1a\u60f3\u6bd4\u8f83\u672c\u5730\u7684 util \u5206\u652f\u548c\u8fdc\u7a0b\u7684 syscall \u5206\u652f\uff0c\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u4e0d\u662f\u4e00\u4e2a\u5b9e\u9a8c\u7684\u3002\u8bf7\u5148\u4f7f\u7528 git checkout \u5206\u652f\u540d \u4ee5\u5207\u6362\u5230\u5bf9\u5e94\u5206\u652f\uff0c\u5e76\u5728\u4f7f\u7528 git diff --stat upstream/\u5206\u652f\u540d * \u65f6\u6307\u5b9a \u540c\u4e00\u4e2a \u4e0a\u6e38\u5206\u652f\u3002 \u672a\u8bbe\u7f6e\u4e0a\u6e38\u4ed3\u5e93\uff1f \u5982\u679cgit\u62a5\u544a\u201c fatal: ambiguous argument 'upstream/\u5206\u652f\u540d': unknown revision or path not in the working tree. \u201d\uff0c\u8bf4\u660e\u4f60\u5c1a\u672a\u8bbe\u7f6e\u4e0a\u6e38\u4ed3\u5e93\u3002\u8bf7\u5148\u6309\u672c\u6307\u5357\u4e2d\u7684 3.1-\u540c\u6b65\u4e0a\u6e38\u4ed3\u5e93 \u4e00\u8282\u5b8c\u6210\u4e0a\u6e38\u4ed3\u5e93\u7684\u8bbe\u7f6e\u4e0e\u540c\u6b65\uff0c\u518d\u8fdb\u884c\u6bd4\u8f83\u3002","title":"5.2 \u6211\u600e\u4e48\u77e5\u9053\u6211\u4fee\u6539\u4e86\u54ea\u4e9b\u6587\u4ef6\uff1f"},{"location":"faq/faq-env/#53-checkout","text":"\u901a\u5e38\u800c\u8a00\uff0c\u4e0d\u80fd\u5207\u6362\u5206\u652f\u7684\u4e3b\u8981\u539f\u56e0\u662f\u4f60\u5f53\u524d\u6709\u5c1a\u672a\u4fdd\u5b58\u7684\u4fee\u6539\uff0c\u6b64\u65f6checkout\u7684\u8bdd\u4f1a\u89e6\u53d1\u4ee5\u4e0b\u9519\u8bef\uff1a lgz_admin@OSLabExecNode0: ~/git_demo/xv6-labs-2020$ git checkout util \u2500\u256f error: Your local changes to the following files would be overwritten by checkout: Makefile Please commit your changes or stash them before you switch branches. Aborting \u901a\u8fc7 git status \u6307\u4ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u68c0\u67e5\u5f53\u524dgit\u7684\u72b6\u6001\u3002\u5982\u679c\u4f60\u7684\u8f93\u51fa\u5982\u4e0b\u6240\u793a\uff1a lgz_admin@OSLabExecNode0: ~/git_demo/xv6-labs-2020$ git status On branch syscall Your branch is up to date with 'origin/syscall'. Changes not staged for commit: (use \"git add <file>...\" to update what will be committed) (use \"git restore <file>...\" to discard changes in working directory) modified: Makefile no changes added to commit (use \"git add\" and/or \"git commit -a\") \u8fd9\u8bf4\u660e\u5f53\u524d\u4f60\u7684\u5de5\u4f5c\u533a\u6709\u5c1a\u672a\u4fdd\u5b58\u7684\u66f4\u6539\u3002\u8bf7\u53c2\u8003 3.3.1 \u4f7f\u7528\u547d\u4ee4\u884c\u5b8c\u6210\u64cd\u4f5c \u6216\u8005 3.3.2 \u4f7f\u7528VS Code\u5185\u5efa\u7684\u56fe\u5f62\u5316\u754c\u9762\u5b8c\u6210\u64cd\u4f5c \u8282\uff0c\u5b8c\u6210commit\u64cd\u4f5c\u3002 \u6216\u8005\uff0c\u5982\u679c\u4f60\u5e0c\u671b\u76f4\u63a5\u653e\u5f03\u6389\u4e0a\u4e00\u6b21commit\u540e\u7684 \u6240\u6709\u66f4\u6539 \uff0c\u90a3\u4e48\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 -f \u9009\u9879\u5f3a\u5236\u5207\u6362\u5206\u652f\uff0c\u4f8b\u5982 git checkout -f syscall \u3002","title":"5.3 \u4e3a\u4ec0\u4e48\u6211\u4e0d\u80fd\u5207\u6362\u5206\u652f\uff08checkout\uff09\uff1f"},{"location":"faq/lab1/","text":"Lab1\u5e38\u89c1\u95ee\u9898 \u00b6 1. sleep \u00b6 1.1 \u6267\u884csleep\u62a5\u9519 \u00b6 \u68c0\u67e5\u4e00\u4e0b\u662f\u5426\u4fee\u6539Makefile 2. pingpong \u00b6 2.1 \u68c0\u9a8cpingpong\u65f6\u51fa\u73b0\u5982\u4e0b\u62a5\u9519 \u00b6 \u89e3\u51b3\u65b9\u6848\uff1a 2.2 pingpong\u51fa\u73b0\u5982\u4e0b\u62a5\u9519usertrap() \u00b6 \u89e3\u51b3\u65b9\u6848\uff1a 3. primes \u00b6 3.1 primes\u8f93\u51fa\u53d1\u751f\u5947\u602a\u7684\u9519\u8bef \u00b6 \u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u7b2c\u4e8c\u4e2a\u8f93\u51fa\u5e26\u7740\u5947\u602a\u7684$\u7b26\u53f7 \u89e3\u51b3\u65b9\u6848\uff1a 3.2 prime \u5185\u6838\u4e2d\u8f93\u51fa\u6b63\u786e\uff0c\u4f46\u662f\u6d4b\u8bd5\u65f6\u4e0d\u901a\u8fc7\uff1f \u00b6 \u89e3\u51b3\u65b9\u6848\uff1a","title":"Lab1\u95ee\u9898"},{"location":"faq/lab1/#lab1","text":"","title":"Lab1\u5e38\u89c1\u95ee\u9898"},{"location":"faq/lab1/#1-sleep","text":"","title":"1. sleep"},{"location":"faq/lab1/#11-sleep","text":"\u68c0\u67e5\u4e00\u4e0b\u662f\u5426\u4fee\u6539Makefile","title":"1.1 \u6267\u884csleep\u62a5\u9519"},{"location":"faq/lab1/#2-pingpong","text":"","title":"2. pingpong"},{"location":"faq/lab1/#21-pingpong","text":"\u89e3\u51b3\u65b9\u6848\uff1a","title":"2.1 \u68c0\u9a8cpingpong\u65f6\u51fa\u73b0\u5982\u4e0b\u62a5\u9519"},{"location":"faq/lab1/#22-pingpongusertrap","text":"\u89e3\u51b3\u65b9\u6848\uff1a","title":"2.2 pingpong\u51fa\u73b0\u5982\u4e0b\u62a5\u9519usertrap()"},{"location":"faq/lab1/#3-primes","text":"","title":"3. primes"},{"location":"faq/lab1/#31-primes","text":"\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u7b2c\u4e8c\u4e2a\u8f93\u51fa\u5e26\u7740\u5947\u602a\u7684$\u7b26\u53f7 \u89e3\u51b3\u65b9\u6848\uff1a","title":"3.1 primes\u8f93\u51fa\u53d1\u751f\u5947\u602a\u7684\u9519\u8bef"},{"location":"faq/lab1/#32-prime","text":"\u89e3\u51b3\u65b9\u6848\uff1a","title":"3.2 prime \u5185\u6838\u4e2d\u8f93\u51fa\u6b63\u786e\uff0c\u4f46\u662f\u6d4b\u8bd5\u65f6\u4e0d\u901a\u8fc7\uff1f"},{"location":"faq/lab3/","text":"Lab3\u5e38\u89c1\u95ee\u9898 \u00b6 \u672c\u8282\u603b\u7ed3\u4e86\u4e00\u4e9b\u76ee\u524d\u9047\u5230\u7684\u95ee\u9898\u4f9b\u5927\u5bb6\u53c2\u8003\uff1a 1. \u95ee\u9898\uff1apanic init exiting \u00b6 \u5185\u5b58\u5206\u914d\u51fa\u95ee\u9898\uff0c\u5bfc\u81f4\u7b2c\u4e00\u4e2a\u7528\u6237\u8fdb\u7a0b\u5d29\u6e83 (1)\u53ef\u80fd\u662fkinit\u4fee\u6539\u9519\u8bef\uff0c\u5bfc\u81f4\u540c\u4e00\u4e2a\u7a7a\u95f2\u7269\u7406\u9875\u91cd\u590d\u51fa\u73b0\u5728freelist\uff1b (2)\u4e5f\u53ef\u80fd\u662f\u6ca1\u80fd\u7406\u89e3kalloc\u7684\u542b\u4e49\uff0c\u8fd4\u56de\u503c\u9519\u8bef\u6216\u8005\u94fe\u8868\u64cd\u4f5c\u9519\u8bef\u3002 2. \u95ee\u9898\uff1apanic freeing free block\" \u00b6 \u5f88\u53ef\u80fd\u662fbget\u51fd\u6570\u9501\u7684\u4f7f\u7528\u4e0d\u6b63\u786e\uff0c\u4e00\u5b9a\u9700\u8981\u4fdd\u8bc1bget\u51fd\u6570\u7684\u539f\u5b50\u6027(\u6307\u5bfc\u4e66\u6709\u63d0\u53ca)\uff0c\u5426\u5219\u540c\u4e00\u78c1\u76d8\u5757\u53ef\u80fd\u5728\u7f13\u5b58\u91cd\u590d\u51fa\u73b0\uff0c\u9020\u6210\u4e8c\u6b21\u91ca\u653e\u3002","title":"Lab3\u95ee\u9898"},{"location":"faq/lab3/#lab3","text":"\u672c\u8282\u603b\u7ed3\u4e86\u4e00\u4e9b\u76ee\u524d\u9047\u5230\u7684\u95ee\u9898\u4f9b\u5927\u5bb6\u53c2\u8003\uff1a","title":"Lab3\u5e38\u89c1\u95ee\u9898"},{"location":"faq/lab3/#1-panic-init-exiting","text":"\u5185\u5b58\u5206\u914d\u51fa\u95ee\u9898\uff0c\u5bfc\u81f4\u7b2c\u4e00\u4e2a\u7528\u6237\u8fdb\u7a0b\u5d29\u6e83 (1)\u53ef\u80fd\u662fkinit\u4fee\u6539\u9519\u8bef\uff0c\u5bfc\u81f4\u540c\u4e00\u4e2a\u7a7a\u95f2\u7269\u7406\u9875\u91cd\u590d\u51fa\u73b0\u5728freelist\uff1b (2)\u4e5f\u53ef\u80fd\u662f\u6ca1\u80fd\u7406\u89e3kalloc\u7684\u542b\u4e49\uff0c\u8fd4\u56de\u503c\u9519\u8bef\u6216\u8005\u94fe\u8868\u64cd\u4f5c\u9519\u8bef\u3002","title":"1. \u95ee\u9898\uff1apanic init exiting"},{"location":"faq/lab3/#2-panic-freeing-free-block","text":"\u5f88\u53ef\u80fd\u662fbget\u51fd\u6570\u9501\u7684\u4f7f\u7528\u4e0d\u6b63\u786e\uff0c\u4e00\u5b9a\u9700\u8981\u4fdd\u8bc1bget\u51fd\u6570\u7684\u539f\u5b50\u6027(\u6307\u5bfc\u4e66\u6709\u63d0\u53ca)\uff0c\u5426\u5219\u540c\u4e00\u78c1\u76d8\u5757\u53ef\u80fd\u5728\u7f13\u5b58\u91cd\u590d\u51fa\u73b0\uff0c\u9020\u6210\u4e8c\u6b21\u91ca\u653e\u3002","title":"2. \u95ee\u9898\uff1apanic freeing free block\""},{"location":"lab1/part1/","text":"\u5b9e\u9a8c\u6982\u8ff0 \u00b6 \u5173\u4e8e Academic Intergrity \u6240\u6709\u8bfe\u7a0b\u5b9e\u9a8c\u90fd\u9700\u8981 \u72ec\u7acb\u5b8c\u6210 \u3002\u4f60\u5e94\u5f53 \u4e3b\u52a8\u907f\u514d\u9605\u8bfb\u3001\u4f7f\u7528\u4efb\u4f55\u4eba/\u4e92\u8054\u7f51\u4e0a\u7684XV6\u5b9e\u9a8c\u4ee3\u7801 \u3002\u5728\u5b9e\u9a8c\u4e2d\u78b0\u5230\u95ee\u9898\u5f88\u6b63\u5e38\uff0c\u53d1\u73b0\u95ee\u9898\u65f6\u9700\u6c89\u7740\u51b7\u9759\uff0c\u8ba4\u771f\u9605\u8bfb\u5b9e\u9a8c\u6307\u5bfc\u4e66\uff0c\u67e5\u9605MIT 6.S081\u7684\u5b98\u65b9\u7f51\u7ad9\u4ee5\u53caXV6 book\uff0c\u5c1d\u8bd5\u81ea\u5df1\u8c03\u8bd5\u89e3\u51b3\uff0c\u4e5f\u53ef\u4ee5\u5411\u540c\u5b66/\u52a9\u6559/\u8001\u5e08\u8bf7\u6559\u8c03\u8bd5\u7684\u6280\u5de7\u3002\u53ea\u6709\u8fd9\u6837\uff0c\u4f60\u624d\u80fd\u591f\u5f97\u5230\u771f\u6b63\u7684\u8bad\u7ec3\u4e0e\u6536\u83b7\uff01 \u5173\u4e8e\u7b2c\u4e00\u6b21\u5b9e\u9a8c\u8bfe\u8003\u6838 \u6211\u4eec\u9009\u62e9\u57fa\u4e8eLinux\u7cfb\u7edf\u7684XV6\u4f5c\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u9a8c\u7684\u6559\u5b66\u5e73\u53f0\uff0c\u56e0\u4e3a\u5b83\u5f00\u6e90\u3001\u81ea\u7531\uff0c\u4e5f\u6709\u4e30\u5bcc\u7684\u6587\u6863/\u8bfe\u7a0b\u8d44\u6e90\uff08\u80fd\u8ba9\u6211\u4eec\u4e86\u89e3\u5b83\u5185\u90e8\u7684\u5b9e\u73b0\uff09\u3002\u5728\u505a\u5b9e\u9a8c\u4e4b\u524d\uff0c\u9996\u5148\u5fc5\u4e0d\u53ef\u5c11\u5730\u662f\u5b9e\u9645\u52a8\u624b\u64cd\u4f5cLinux\u7cfb\u7edf\u3002\u4e3a\u4e86\u6fc0\u53d1\u540c\u5b66\u4eec\u7684\u5b66\u4e60\u70ed\uff08\u538b\uff09\u60c5\uff08\u529b\uff09\uff0c\u6211\u4eec\u5c06 \u5728\u7b2c\u4e00\u6b21\u5b9e\u9a8c\u8bfe\u4e0a\u8fdb\u884cLinux\u7cfb\u7edf\u57fa\u7840\u77e5\u8bc6\u7684\u8003\u6838 \uff08\u52a9\u6559\u4f1a\u4e00\u5bf9\u4e00\u5730\u95ee\u4e00\u4e9b\u7b80\u5355\u7684\u95ee\u9898\u6765\u786e\u4fdd\u540c\u5b66\u4eec\u771f\u6b63\u4e86\u89e3\u4e86\uff0c\u867d\u7136\u8003\u6838\u5206\u6570\u4e0d\u591a\uff0c\u4e5f\u8bf7\u5927\u5bb6\u8ba4\u771f\u5bf9\u5f85\uff09\uff0c\u8981\u6c42\u540c\u5b66\u4eec\u80fd\u63d0\u524d\u5b66\u4e60\u5982\u4e0b\u5185\u5bb9\uff1a \uff081\uff09 \u8bf7\u8ba4\u771f\u9605\u8bfb \u5b9e\u9a8c\u6982\u8ff0 \u4e2d\u7684\u5185\u5bb9\uff0c\u638c\u63e1\u5b9e\u9a8c\u5e73\u53f0/\u5de5\u5177\u7684\u4f7f\u7528\u3001Linux\u5f00\u53d1\u73af\u5883\u57fa\u7840\u77e5\u8bc6\uff1b \uff082\uff09 \u8bf7\u8ba4\u771f\u9605\u8bfb\u5b9e\u9a8c\u4e00\u4e2d\u7684\u5185\u5bb9\uff0c\u4e86\u89e3xv6\u6e90\u7801\u7684\u8fd0\u884c\u73af\u5883\uff0c\u505a\u597d\u5b9e\u9a8c\u524d\u7684 \u51c6\u5907\u5de5\u4f5c \u3002 \u9047\u5230\u51e1\uff08\u8003\uff09\u4e8b\uff08\u6838\uff09\u4e0d\u8981\u614c\uff0c\u5f53\u4f60\u80fd\u5b8c\u6210\u4e0a\u8ff0\u8981\u6c42\u65f6\uff0c\u76f8\u4fe1\u4e00\u5b9a\u80fd\u901a\u8fc7\u672c\u6b21\u8003\u6838! \u5b9e\u9a8c\u8bf4\u660e \u8be5\u90e8\u5206\u8bf4\u660e\u4e86\u8be5\u5b9e\u9a8c\u9700\u8981\u5b8c\u6210\u7684\u4efb\u52a1\uff0c\u4ee5\u53ca\u8981\u6c42\u8fbe\u5230\u600e\u6837\u7684\u76ee\u6807\u3002\u9700\u8981\u6ce8\u610f\uff0c\u672c\u7ae0\u5b9e\u9a8c\u4e0a\u624b\u5f88\u96be\uff0c\u4f46\u662f\u5185\u5bb9\u7b80\u5355\uff0c\u5927\u5bb6\u9700\u8981 \u8010\u5fc3\u7406\u6e05\u695a \u5b9e\u9a8c\u6307\u5bfc\u4e66\u7684\u8109\u7edc\u3002 \u7279\u522b\u63a8\u8350\u540c\u5b66\u4eec\u89c2\u770bB\u7ad9\u4e0a\u7684 MIT 6.S081/Fall 2020\u8bfe\u7a0b\u89c6\u9891 \uff0c\u901a\u8fc7\u5b66\u4e60\u8fd9\u95e8\u8bfe\u7a0b\u53ef\u4ee5\u8ba9\u4f60\u5bf9xv6\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e00\u4e2a\u5168\u9762\u7684\u8ba4\u8bc6\u3002 1. \u5b9e\u9a8c\u76ee\u7684 \u00b6 \u8ba4\u8bc6xv6\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5e76\u719f\u6089\u5176\u8fd0\u884c\u73af\u5883\u3002 \u590d\u4e60\u5e76\u5de9\u56fa\u7cfb\u7edf\u8c03\u7528\u3001\u8fdb\u7a0b\u7b49\u7406\u8bba\u77e5\u8bc6\uff0c\u638c\u63e1\u5728xv6\u4e0a\u7f16\u5199\u7528\u6237\u7a0b\u5e8f\u7684\u65b9\u6cd5\u3002 2. \u5b9e\u9a8c\u5b66\u65f6 \u00b6 \u672c\u5b9e\u9a8c\u4e3a4\u5b66\u65f6\u3002 3. \u5b9e\u9a8c\u5185\u5bb9 \u00b6 \u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u5b9e\u73b05\u4e2aUnix\u5b9e\u7528\u7a0b\u5e8f\u3002\u8fd9\u91cc\u5c55\u793a\u7684\u662f\u7a0b\u5e8f\u529f\u80fd\u548c\u5b9e\u9a8c\u6d4b\u8bd5\u7684\u6700\u7ec8\u6548\u679c\uff0c\u66f4\u591a\u8be6\u7ec6\u7684\u4ecb\u7ecd\u53ef\u5728\u540e\u7eed\u7ae0\u8282\u4e2d\u9605\u8bfb\u3002 \uff081\uff09\u4e86\u89e3xv6\u4e0a\u7528\u6237\u7a0b\u5e8fsleep\u7684\u5b9e\u73b0\u3002sleep\u7a0b\u5e8f\u4f1a\u7b49\u5f85\u7528\u6237\u6307\u5b9a\u7684\u65f6\u95f4\u3002\u8bf7\u5c06\u4ee3\u7801\u5199\u5728user/sleep.c\u6587\u4ef6\u4e2d\u3002\u8fd0\u884c\u6548\u679c\u5e94\u8be5\u5982\u4e0b\uff1a \u8f93\u5165\u547d\u4ee4\u540e\uff0c\u547d\u4ee4\u884c\u4f1a \u201d\u6682\u505c\u201c \u4e00\u6bb5\u65f6\u95f4 (10\u4e2aticks\uff0cticks\u7531\u5185\u6838\u5b9a\u4e49)\uff0c\u7136\u540e\u8f93\u51fa\"(nothing happens for a little while)\"\u3002 \u5728xv6-labs-2020\u4e2d\uff0c\u6267\u884c\u4e0b\u9762\u6307\u4ee4\uff0c\u6d4b\u8bd5\u7a0b\u5e8f \uff082\uff09\u5728xv6\u4e0a\u5b9e\u73b0pingpong\u7a0b\u5e8f\uff0c\u5373\u4e24\u4e2a\u8fdb\u7a0b\u5728\u7ba1\u9053\u4e24\u4fa7\u6765\u56de\u901a\u4fe1\u3002\u7236\u8fdb\u7a0b\u5c06\u201dping\u201d\u5199\u5165\u7ba1\u9053\uff0c\u5b50\u8fdb\u7a0b\u4ece\u7ba1\u9053\u5c06\u5176\u8bfb\u51fa\u5e76\u6253\u5370 <pid>\uff1areceived ping \uff0c\u5176\u4e2d <pid> \u662f\u5b50\u8fdb\u7a0b\u7684\u8fdb\u7a0bID\u3002\u5b50\u8fdb\u7a0b\u4ece\u7236\u8fdb\u7a0b\u6536\u5230\u5b57\u7b26\u4e32\u540e\uff0c\u5c06\u201dpong\u201c\u5199\u5165\u53e6\u4e00\u4e2a\u7ba1\u9053\uff0c\u7136\u540e\u7531\u7236\u8fdb\u7a0b\u4ece\u8be5\u7ba1\u9053\u8bfb\u53d6\u5e76\u6253\u5370 <pid>\uff1areceived pong \uff0c\u5176\u4e2d <pid> \u662f\u7236\u8fdb\u7a0b\u7684\u8fdb\u7a0bID\u3002\u8bf7\u5c06\u4ee3\u7801\u5199\u5728user/pingpong.c\u6587\u4ef6\u4e2d\u3002\u8fd0\u884c\u6548\u679c\u5e94\u8be5\u5982\u4e0b\uff1a \u5728xv6-labs-2020\u4e2d\uff0c\u6267\u884c\u4e0b\u9762\u6307\u4ee4\uff0c\u6d4b\u8bd5\u7a0b\u5e8f \uff083\uff09\u5728xv6\u4e0a\u4f7f\u7528\u7ba1\u9053\u5b9e\u73b0\u201c\u8d28\u6570\u7b5b\u9009\u201d, \u8f93\u51fa2~35\u4e4b\u95f4\u7684\u800c\u6240\u6709\u8d28\u6570\u3002\u8bf7\u5c06\u4ee3\u7801\u5199\u5728user/primes.c\u6587\u4ef6\u4e2d\u3002\u8fd0\u884c\u6548\u679c\u5e94\u8be5\u5982\u4e0b\uff1a \u5728xv6-labs-2020\u4e2d\uff0c\u6267\u884c\u4e0b\u9762\u6307\u4ee4\uff0c\u6d4b\u8bd5\u7a0b\u5e8f \uff084\uff09\u5728xv6\u4e0a\u5b9e\u73b0\u7528\u6237\u7a0b\u5e8ffind\uff0c\u5373\u5728\u76ee\u5f55\u6811\u4e2d\u67e5\u627e\u540d\u79f0\u4e0e\u5b57\u7b26\u4e32\u5339\u914d\u7684\u6240\u6709\u6587\u4ef6\uff0c\u8f93\u51fa\u6587\u4ef6\u7684\u76f8\u5bf9\u8def\u5f84\u3002\u8be5\u7a0b\u5e8f\u7684 \u547d\u4ee4\u683c\u5f0f\u4e3a\u201cfind path file_name\u201d \u3002\u8bf7\u5c06\u4ee3\u7801\u5199\u5728user/find.c\u6587\u4ef6\u4e2d\u3002\u5f53\u6587\u4ef6\u7cfb\u7edf\u5305\u542b\u6587\u4ef6b\u548ca/b\u65f6\uff0c\u8f93\u51fa\u6548\u679c\u5e94\u8be5\u5982\u4e0b\uff1a \u5728xv6-labs-2020\u4e2d\uff0c\u6267\u884c\u4e0b\u9762\u6307\u4ee4\uff0c\u6d4b\u8bd5\u7a0b\u5e8f \uff085\uff09\u5728xv6\u4e0a\u5b9e\u73b0\u7528\u6237\u7a0b\u5e8fxargs\uff0c\u5373\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6\u884c\u5e76 \u4e3a\u6bcf\u884c\u8fd0\u884c\u4e00\u6b21 \u6307\u5b9a\u7684\u547d\u4ee4\uff0c\u4e14\u5c06\u8be5\u884c\u4f5c\u4e3a\u547d\u4ee4\u7684\u53c2\u6570\u63d0\u4f9b\u3002\u8bf7\u5c06\u4ee3\u7801\u5199\u5728user/xargs.c\u4e2d\u3002\u8fd0\u884c\u6548\u679c\u5e94\u8be5\u5982\u4e0b\uff1a \u4e0b\u5217\u662fxargs\u7684\u7528\u6cd5\u3002 echo 1 2 \uff0c\u9644\u52a0\u53c2\u6570\u662f 3 4 \uff0c\u5373 echo 1 2 3 4 \u8f93\u51fa 1 2 3 4 \u3002 $ make qemu ... $ echo 3 4 | xargs echo 1 2 1 2 3 4 $ \u5728xv6-labs-2020\u4e2d\uff0c\u6267\u884c\u4e0b\u9762\u6307\u4ee4\uff0c\u6d4b\u8bd5\u7a0b\u5e8f \uff086\uff09\u5b8c\u6210\u4e0a\u8ff05\u4e2a\u5c0f\u5b9e\u9a8c\u540e\uff0c\u5728xv6-labs-2020\u76ee\u5f55\u4e0b\uff0c\u65b0\u5efatime.txt\u6587\u4ef6\uff0c\u5728\u8be5\u6587\u4ef6\u4e2d\u5199\u5165\u4f60\u505a\u5b8c\u8fd9\u4e2a\u5b9e\u9a8c\u6240\u82b1\u8d39\u7684\u65f6\u95f4\uff08\u4f30\u7b97\u4e00\u4e0b\u5c31\u884c\uff0c\u5355\u4f4d\u662f\u5c0f\u65f6\uff09\uff0c\u53ea\u9700\u8981\u5199\u4e00\u4e2a\u6574\u6570\u5373\u53ef\u3002 \u5982\u679c\u4e0a\u8ff05\u4e2a\u7a0b\u5e8f\u90fd\u80fd\u6b63\u5e38\u8fd0\u884c\uff0c\u53ef\u4ee5\u7528\u5982\u4e0b\u6307\u4ee4\u6d4b\u8bd55\u4e2a\u7a0b\u5e8f\uff1a","title":"\u5b9e\u9a8c\u6982\u8ff0"},{"location":"lab1/part1/#_1","text":"\u5173\u4e8e Academic Intergrity \u6240\u6709\u8bfe\u7a0b\u5b9e\u9a8c\u90fd\u9700\u8981 \u72ec\u7acb\u5b8c\u6210 \u3002\u4f60\u5e94\u5f53 \u4e3b\u52a8\u907f\u514d\u9605\u8bfb\u3001\u4f7f\u7528\u4efb\u4f55\u4eba/\u4e92\u8054\u7f51\u4e0a\u7684XV6\u5b9e\u9a8c\u4ee3\u7801 \u3002\u5728\u5b9e\u9a8c\u4e2d\u78b0\u5230\u95ee\u9898\u5f88\u6b63\u5e38\uff0c\u53d1\u73b0\u95ee\u9898\u65f6\u9700\u6c89\u7740\u51b7\u9759\uff0c\u8ba4\u771f\u9605\u8bfb\u5b9e\u9a8c\u6307\u5bfc\u4e66\uff0c\u67e5\u9605MIT 6.S081\u7684\u5b98\u65b9\u7f51\u7ad9\u4ee5\u53caXV6 book\uff0c\u5c1d\u8bd5\u81ea\u5df1\u8c03\u8bd5\u89e3\u51b3\uff0c\u4e5f\u53ef\u4ee5\u5411\u540c\u5b66/\u52a9\u6559/\u8001\u5e08\u8bf7\u6559\u8c03\u8bd5\u7684\u6280\u5de7\u3002\u53ea\u6709\u8fd9\u6837\uff0c\u4f60\u624d\u80fd\u591f\u5f97\u5230\u771f\u6b63\u7684\u8bad\u7ec3\u4e0e\u6536\u83b7\uff01 \u5173\u4e8e\u7b2c\u4e00\u6b21\u5b9e\u9a8c\u8bfe\u8003\u6838 \u6211\u4eec\u9009\u62e9\u57fa\u4e8eLinux\u7cfb\u7edf\u7684XV6\u4f5c\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u9a8c\u7684\u6559\u5b66\u5e73\u53f0\uff0c\u56e0\u4e3a\u5b83\u5f00\u6e90\u3001\u81ea\u7531\uff0c\u4e5f\u6709\u4e30\u5bcc\u7684\u6587\u6863/\u8bfe\u7a0b\u8d44\u6e90\uff08\u80fd\u8ba9\u6211\u4eec\u4e86\u89e3\u5b83\u5185\u90e8\u7684\u5b9e\u73b0\uff09\u3002\u5728\u505a\u5b9e\u9a8c\u4e4b\u524d\uff0c\u9996\u5148\u5fc5\u4e0d\u53ef\u5c11\u5730\u662f\u5b9e\u9645\u52a8\u624b\u64cd\u4f5cLinux\u7cfb\u7edf\u3002\u4e3a\u4e86\u6fc0\u53d1\u540c\u5b66\u4eec\u7684\u5b66\u4e60\u70ed\uff08\u538b\uff09\u60c5\uff08\u529b\uff09\uff0c\u6211\u4eec\u5c06 \u5728\u7b2c\u4e00\u6b21\u5b9e\u9a8c\u8bfe\u4e0a\u8fdb\u884cLinux\u7cfb\u7edf\u57fa\u7840\u77e5\u8bc6\u7684\u8003\u6838 \uff08\u52a9\u6559\u4f1a\u4e00\u5bf9\u4e00\u5730\u95ee\u4e00\u4e9b\u7b80\u5355\u7684\u95ee\u9898\u6765\u786e\u4fdd\u540c\u5b66\u4eec\u771f\u6b63\u4e86\u89e3\u4e86\uff0c\u867d\u7136\u8003\u6838\u5206\u6570\u4e0d\u591a\uff0c\u4e5f\u8bf7\u5927\u5bb6\u8ba4\u771f\u5bf9\u5f85\uff09\uff0c\u8981\u6c42\u540c\u5b66\u4eec\u80fd\u63d0\u524d\u5b66\u4e60\u5982\u4e0b\u5185\u5bb9\uff1a \uff081\uff09 \u8bf7\u8ba4\u771f\u9605\u8bfb \u5b9e\u9a8c\u6982\u8ff0 \u4e2d\u7684\u5185\u5bb9\uff0c\u638c\u63e1\u5b9e\u9a8c\u5e73\u53f0/\u5de5\u5177\u7684\u4f7f\u7528\u3001Linux\u5f00\u53d1\u73af\u5883\u57fa\u7840\u77e5\u8bc6\uff1b \uff082\uff09 \u8bf7\u8ba4\u771f\u9605\u8bfb\u5b9e\u9a8c\u4e00\u4e2d\u7684\u5185\u5bb9\uff0c\u4e86\u89e3xv6\u6e90\u7801\u7684\u8fd0\u884c\u73af\u5883\uff0c\u505a\u597d\u5b9e\u9a8c\u524d\u7684 \u51c6\u5907\u5de5\u4f5c \u3002 \u9047\u5230\u51e1\uff08\u8003\uff09\u4e8b\uff08\u6838\uff09\u4e0d\u8981\u614c\uff0c\u5f53\u4f60\u80fd\u5b8c\u6210\u4e0a\u8ff0\u8981\u6c42\u65f6\uff0c\u76f8\u4fe1\u4e00\u5b9a\u80fd\u901a\u8fc7\u672c\u6b21\u8003\u6838! \u5b9e\u9a8c\u8bf4\u660e \u8be5\u90e8\u5206\u8bf4\u660e\u4e86\u8be5\u5b9e\u9a8c\u9700\u8981\u5b8c\u6210\u7684\u4efb\u52a1\uff0c\u4ee5\u53ca\u8981\u6c42\u8fbe\u5230\u600e\u6837\u7684\u76ee\u6807\u3002\u9700\u8981\u6ce8\u610f\uff0c\u672c\u7ae0\u5b9e\u9a8c\u4e0a\u624b\u5f88\u96be\uff0c\u4f46\u662f\u5185\u5bb9\u7b80\u5355\uff0c\u5927\u5bb6\u9700\u8981 \u8010\u5fc3\u7406\u6e05\u695a \u5b9e\u9a8c\u6307\u5bfc\u4e66\u7684\u8109\u7edc\u3002 \u7279\u522b\u63a8\u8350\u540c\u5b66\u4eec\u89c2\u770bB\u7ad9\u4e0a\u7684 MIT 6.S081/Fall 2020\u8bfe\u7a0b\u89c6\u9891 \uff0c\u901a\u8fc7\u5b66\u4e60\u8fd9\u95e8\u8bfe\u7a0b\u53ef\u4ee5\u8ba9\u4f60\u5bf9xv6\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e00\u4e2a\u5168\u9762\u7684\u8ba4\u8bc6\u3002","title":"\u5b9e\u9a8c\u6982\u8ff0"},{"location":"lab1/part1/#1","text":"\u8ba4\u8bc6xv6\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5e76\u719f\u6089\u5176\u8fd0\u884c\u73af\u5883\u3002 \u590d\u4e60\u5e76\u5de9\u56fa\u7cfb\u7edf\u8c03\u7528\u3001\u8fdb\u7a0b\u7b49\u7406\u8bba\u77e5\u8bc6\uff0c\u638c\u63e1\u5728xv6\u4e0a\u7f16\u5199\u7528\u6237\u7a0b\u5e8f\u7684\u65b9\u6cd5\u3002","title":"1.  \u5b9e\u9a8c\u76ee\u7684"},{"location":"lab1/part1/#2","text":"\u672c\u5b9e\u9a8c\u4e3a4\u5b66\u65f6\u3002","title":"2.  \u5b9e\u9a8c\u5b66\u65f6"},{"location":"lab1/part1/#3","text":"\u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u5b9e\u73b05\u4e2aUnix\u5b9e\u7528\u7a0b\u5e8f\u3002\u8fd9\u91cc\u5c55\u793a\u7684\u662f\u7a0b\u5e8f\u529f\u80fd\u548c\u5b9e\u9a8c\u6d4b\u8bd5\u7684\u6700\u7ec8\u6548\u679c\uff0c\u66f4\u591a\u8be6\u7ec6\u7684\u4ecb\u7ecd\u53ef\u5728\u540e\u7eed\u7ae0\u8282\u4e2d\u9605\u8bfb\u3002 \uff081\uff09\u4e86\u89e3xv6\u4e0a\u7528\u6237\u7a0b\u5e8fsleep\u7684\u5b9e\u73b0\u3002sleep\u7a0b\u5e8f\u4f1a\u7b49\u5f85\u7528\u6237\u6307\u5b9a\u7684\u65f6\u95f4\u3002\u8bf7\u5c06\u4ee3\u7801\u5199\u5728user/sleep.c\u6587\u4ef6\u4e2d\u3002\u8fd0\u884c\u6548\u679c\u5e94\u8be5\u5982\u4e0b\uff1a \u8f93\u5165\u547d\u4ee4\u540e\uff0c\u547d\u4ee4\u884c\u4f1a \u201d\u6682\u505c\u201c \u4e00\u6bb5\u65f6\u95f4 (10\u4e2aticks\uff0cticks\u7531\u5185\u6838\u5b9a\u4e49)\uff0c\u7136\u540e\u8f93\u51fa\"(nothing happens for a little while)\"\u3002 \u5728xv6-labs-2020\u4e2d\uff0c\u6267\u884c\u4e0b\u9762\u6307\u4ee4\uff0c\u6d4b\u8bd5\u7a0b\u5e8f \uff082\uff09\u5728xv6\u4e0a\u5b9e\u73b0pingpong\u7a0b\u5e8f\uff0c\u5373\u4e24\u4e2a\u8fdb\u7a0b\u5728\u7ba1\u9053\u4e24\u4fa7\u6765\u56de\u901a\u4fe1\u3002\u7236\u8fdb\u7a0b\u5c06\u201dping\u201d\u5199\u5165\u7ba1\u9053\uff0c\u5b50\u8fdb\u7a0b\u4ece\u7ba1\u9053\u5c06\u5176\u8bfb\u51fa\u5e76\u6253\u5370 <pid>\uff1areceived ping \uff0c\u5176\u4e2d <pid> \u662f\u5b50\u8fdb\u7a0b\u7684\u8fdb\u7a0bID\u3002\u5b50\u8fdb\u7a0b\u4ece\u7236\u8fdb\u7a0b\u6536\u5230\u5b57\u7b26\u4e32\u540e\uff0c\u5c06\u201dpong\u201c\u5199\u5165\u53e6\u4e00\u4e2a\u7ba1\u9053\uff0c\u7136\u540e\u7531\u7236\u8fdb\u7a0b\u4ece\u8be5\u7ba1\u9053\u8bfb\u53d6\u5e76\u6253\u5370 <pid>\uff1areceived pong \uff0c\u5176\u4e2d <pid> \u662f\u7236\u8fdb\u7a0b\u7684\u8fdb\u7a0bID\u3002\u8bf7\u5c06\u4ee3\u7801\u5199\u5728user/pingpong.c\u6587\u4ef6\u4e2d\u3002\u8fd0\u884c\u6548\u679c\u5e94\u8be5\u5982\u4e0b\uff1a \u5728xv6-labs-2020\u4e2d\uff0c\u6267\u884c\u4e0b\u9762\u6307\u4ee4\uff0c\u6d4b\u8bd5\u7a0b\u5e8f \uff083\uff09\u5728xv6\u4e0a\u4f7f\u7528\u7ba1\u9053\u5b9e\u73b0\u201c\u8d28\u6570\u7b5b\u9009\u201d, \u8f93\u51fa2~35\u4e4b\u95f4\u7684\u800c\u6240\u6709\u8d28\u6570\u3002\u8bf7\u5c06\u4ee3\u7801\u5199\u5728user/primes.c\u6587\u4ef6\u4e2d\u3002\u8fd0\u884c\u6548\u679c\u5e94\u8be5\u5982\u4e0b\uff1a \u5728xv6-labs-2020\u4e2d\uff0c\u6267\u884c\u4e0b\u9762\u6307\u4ee4\uff0c\u6d4b\u8bd5\u7a0b\u5e8f \uff084\uff09\u5728xv6\u4e0a\u5b9e\u73b0\u7528\u6237\u7a0b\u5e8ffind\uff0c\u5373\u5728\u76ee\u5f55\u6811\u4e2d\u67e5\u627e\u540d\u79f0\u4e0e\u5b57\u7b26\u4e32\u5339\u914d\u7684\u6240\u6709\u6587\u4ef6\uff0c\u8f93\u51fa\u6587\u4ef6\u7684\u76f8\u5bf9\u8def\u5f84\u3002\u8be5\u7a0b\u5e8f\u7684 \u547d\u4ee4\u683c\u5f0f\u4e3a\u201cfind path file_name\u201d \u3002\u8bf7\u5c06\u4ee3\u7801\u5199\u5728user/find.c\u6587\u4ef6\u4e2d\u3002\u5f53\u6587\u4ef6\u7cfb\u7edf\u5305\u542b\u6587\u4ef6b\u548ca/b\u65f6\uff0c\u8f93\u51fa\u6548\u679c\u5e94\u8be5\u5982\u4e0b\uff1a \u5728xv6-labs-2020\u4e2d\uff0c\u6267\u884c\u4e0b\u9762\u6307\u4ee4\uff0c\u6d4b\u8bd5\u7a0b\u5e8f \uff085\uff09\u5728xv6\u4e0a\u5b9e\u73b0\u7528\u6237\u7a0b\u5e8fxargs\uff0c\u5373\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6\u884c\u5e76 \u4e3a\u6bcf\u884c\u8fd0\u884c\u4e00\u6b21 \u6307\u5b9a\u7684\u547d\u4ee4\uff0c\u4e14\u5c06\u8be5\u884c\u4f5c\u4e3a\u547d\u4ee4\u7684\u53c2\u6570\u63d0\u4f9b\u3002\u8bf7\u5c06\u4ee3\u7801\u5199\u5728user/xargs.c\u4e2d\u3002\u8fd0\u884c\u6548\u679c\u5e94\u8be5\u5982\u4e0b\uff1a \u4e0b\u5217\u662fxargs\u7684\u7528\u6cd5\u3002 echo 1 2 \uff0c\u9644\u52a0\u53c2\u6570\u662f 3 4 \uff0c\u5373 echo 1 2 3 4 \u8f93\u51fa 1 2 3 4 \u3002 $ make qemu ... $ echo 3 4 | xargs echo 1 2 1 2 3 4 $ \u5728xv6-labs-2020\u4e2d\uff0c\u6267\u884c\u4e0b\u9762\u6307\u4ee4\uff0c\u6d4b\u8bd5\u7a0b\u5e8f \uff086\uff09\u5b8c\u6210\u4e0a\u8ff05\u4e2a\u5c0f\u5b9e\u9a8c\u540e\uff0c\u5728xv6-labs-2020\u76ee\u5f55\u4e0b\uff0c\u65b0\u5efatime.txt\u6587\u4ef6\uff0c\u5728\u8be5\u6587\u4ef6\u4e2d\u5199\u5165\u4f60\u505a\u5b8c\u8fd9\u4e2a\u5b9e\u9a8c\u6240\u82b1\u8d39\u7684\u65f6\u95f4\uff08\u4f30\u7b97\u4e00\u4e0b\u5c31\u884c\uff0c\u5355\u4f4d\u662f\u5c0f\u65f6\uff09\uff0c\u53ea\u9700\u8981\u5199\u4e00\u4e2a\u6574\u6570\u5373\u53ef\u3002 \u5982\u679c\u4e0a\u8ff05\u4e2a\u7a0b\u5e8f\u90fd\u80fd\u6b63\u5e38\u8fd0\u884c\uff0c\u53ef\u4ee5\u7528\u5982\u4e0b\u6307\u4ee4\u6d4b\u8bd55\u4e2a\u7a0b\u5e8f\uff1a","title":"3.  \u5b9e\u9a8c\u5185\u5bb9"},{"location":"lab1/part2/","text":"\u5b9e\u9a8c\u539f\u7406 \u00b6 \u63d0\u793a \u672c\u90e8\u5206\u6211\u4eec\u5c06\u7406\u89e3\u5b9e\u9a8c\u4e2d\u7684\u64cd\u4f5c\u7cfb\u7edfxv6\u7684\u76f8\u5173\u6a21\u578b\uff0c\u8fd9\u4e9b\u6a21\u578b\u770b\u8d77\u6765\u975e\u5e38\u62bd\u8c61\uff0c\u56e0\u6b64\u5728\u4ecb\u7ecd\u5b8c\u4e4b\u540e\uff0c\u6211\u4eec\u5c06\u52a0\u5165\u4e00\u7ae0\u201d \u6211\u4eec\u9700\u8981\u6ce8\u610f\u7684 \u201c\uff0c\u6765\u5c06\u5176\u4e32\u901a\u3002 1. MIT 6.S081/2020 \u00b6 1.1 \u53c2\u8003\u8d44\u6599 \u00b6 XV6\u662f\u7531\u9ebb\u7701\u7406\u5de5\u5b66\u9662(MIT)\u5f00\u53d1\u7684\u4e00\u4e2a\u6559\u5b66\u76ee\u7684\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5b83\u662f\u5728x86\u5904\u7406\u5668\u4e0a\u7528ANSI\u6807\u51c6C\u91cd\u65b0\u5b9e\u73b0\u7684Unix\u7b2c\u516d\u7248(\u5373v6)\uff0c\u8bfe\u7a0b\u7f16\u53f7\u4e3a6.828\u30022019\u5e74\u88ab\u79fb\u690d\u5230RISC-V\u4e4b\u4e0a\uff0c\u5e76\u8bbe\u7f6e\u4e866.S081\u3002 XV6\u7684\u4e3b\u8981\u7279\u5f81\uff1a \u5f00\u6e90\uff0c\u7cbe\u7b80\uff0c\u4ee3\u7801\u4ec5\u4e24\u4e07\u884c\u5de6\u53f3\uff1b \u529f\u80fd\u5b8c\u5584\uff0c\u53ef\u5168\u9762\u7406\u89e3\u64cd\u4f5c\u7cfb\u7edf\u7684\u539f\u7406\u53ca\u5b9e\u73b0\uff1b \u57fa\u4e8eRISC-V\u3001X86\u7b49\u67b6\u6784\uff0c\u6709\u5229\u4e8e\u6df1\u5165\u7406\u89e3\u4f53\u7cfb\u7ed3\u6784\uff1b \u7c7bUnix\u7cfb\u7edf\uff0c\u53ef\u5ef6\u4f38\u5b66\u4e60\u5176\u4ed6\u5e38\u89c1\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4f8b\u5982Linux\u3001MacOS\u7b49\u3002 1) \u5b98\u65b9\u7f51\u7ad9\uff1a https://pdos.csail.mit.edu/6.828/2020/index.html 2) xv6 book\uff1a https://pdos.csail.mit.edu/6.828/2020/xv6/book-riscv-rev1.pdf \u8fd9\u4efd\u5b98\u65b9\u6587\u6863\uff0c\u662f\u9605\u8bfbxv6\u6e90\u7801\u8fc7\u7a0b\u4e2d\u6700\u597d\u7684\u53c2\u8003\u8d44\u6599\uff0c\u5728\u5b8c\u6210\u6240\u6709xv6\u76f8\u5173\u5b9e\u9a8c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u82e5\u5bf9\u6e90\u7801\u6709\u4efb\u4f55\u7684\u7591\u95ee\uff0c\u53ef\u968f\u65f6\u67e5\u770b\u8fd9\u4efd\u6587\u6863\u8fdb\u884c\u5b66\u4e60\u3002 3) 6.S081\u6240\u6709\u5b9e\u9a8c\u9879\u76ee\uff08\u9488\u5bf9\u6bcf\u4e2a\u5b9e\u9a8c\uff0c\u90fd\u6709\u8be6\u7ec6\u7684\u6307\u5bfc\u548c\u63d0\u793a\uff09\uff1a 1.2 XV6\u603b\u7edf\u67b6\u6784\u7b80\u4ecb \u00b6 \u4e0e\u5927\u591a\u6570Unix\u64cd\u4f5c\u7cfb\u7edf\u4e00\u6837\uff0cXV6\u91c7\u7528\u5b8f\u5185\u6838\u7ed3\u6784\uff0c\u5b83\u5305\u542b\u64cd\u4f5c\u7cfb\u7edf\u4e00\u4e9b\u6700\u57fa\u672c\u7684\u8981\u7d20\uff0c\u5305\u62ec\u7cfb\u7edf\u8c03\u7528\u3001\u8fdb\u7a0b\u8c03\u5ea6\u3001\u5185\u5b58\u7ba1\u7406\u3001\u4e2d\u65ad\u5904\u7406\u548c\u6587\u4ef6\u7cfb\u7edf\u7b49\u3002XV6\u533a\u5206\u5185\u6838\u6001\u548c\u7528\u6237\u6001\uff0c\u4ee3\u8868\u5e94\u7528\u7a0b\u5e8f\u7684\u7528\u6237\u6001\u8fdb\u7a0b\u8fd0\u884c\u5728CPU\u7684\u7528\u6237\u6001\uff08\u53c8\u79f0\u975e\u7279\u6743\u6a21\u5f0f\uff0c\u7528\u6237\u6a21\u5f0f\uff09\uff0c\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u7cfb\u7edf\u786c\u4ef6\u548c\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u7cfb\u7edf\u6570\u636e\uff0c\u800c\u64cd\u4f5c\u7cfb\u7edf\u8fd0\u884c\u5728CPU\u7684\u6838\u5fc3\u6001\uff08\u53c8\u79f0\u7279\u6743\u6a21\u5f0f\uff0c\u5185\u6838\u6a21\u5f0f\uff09\uff0c\u53ef\u4ee5\u8bbf\u95ee\u7cfb\u7edf\u786c\u4ef6\u548c\u6838\u5fc3\u6570\u636e\u3002 2. \u7528\u6237\u7a0b\u5e8f \u00b6 2.1 \u7528\u6237\u7a0b\u5e8f\u7684\u4f7f\u7528 \u00b6 \u6211\u4eec\u4e00\u822c\u901a\u8fc7 \u547d\u4ee4\u884c \uff08shell\uff09\u6765\u4f7f\u7528\u6ca1\u6709\u56fe\u5f62\u5316\u754c\u9762\u7684\u64cd\u4f5c\u7cfb\u7edf\uff08\u5982Linux\uff09\u3002\u5f53\u6211\u4eec\u5411shell\u8f93\u5165\u547d\u4ee4\u65f6\uff0cshell\u4f1a\u89e3\u91ca\u547d\u4ee4\u5e76\u6267\u884c\u5bf9\u5e94\u7684 \u7528\u6237\u7a0b\u5e8f \u3002\u5b9e\u9645\u4e0a\uff0c\u8f93\u5165\u547d\u4ee4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7528\u4e8e\u6307\u793a\u6211\u4eec\u5e0c\u671b\u6267\u884c\u7684\u7528\u6237\u7a0b\u5e8f\uff0c\u800c\u540e\u7eed\u7684\u5b57\u7b26\u5219\u4e3a\u6211\u4eec\u5e0c\u671b\u4f20\u9012\u7ed9\u7528\u6237\u7a0b\u5e8f\u7684\u53c2\u6570\u3002\u4f8b\u5982\u5728Linux\u7684shell\u4e2d\u8f93\u5165\u5982\u4e0b\u547d\u4ee4\uff1a $ cp file_a file_b \u5176\u4e2d\"cp\"\u8868\u793a\u6211\u4eec\u5e0c\u671b\u6267\u884c\u76ee\u5f55/usr/bin\u4e0b\u7684\u7528\u6237\u7a0b\u5e8fcp\uff0c\u8be5\u7a0b\u5e8f\u7528\u4e8e\u590d\u5236\u6587\u4ef6\u3002\u800c\"file_a\"\u548c\"file_b\"\u5c06\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u7a0b\u5e8fcp\uff0c\u7528\u4ee5\u544a\u77e5\u590d\u5236\u7684\u6e90\u6587\u4ef6\u548c\u76ee\u7684\u6587\u4ef6\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b9e\u9645\u4e0a\u4ee3\u8868\u53ef\u6267\u884c\u6587\u4ef6\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u5373\u8be5\u547d\u4ee4\u548c\u547d\u4ee4\"/usr/bin/cp file_a file_b\"\u662f\u5b8c\u5168\u7b49\u4ef7\u7684\u3002\u56e0\u4e3a\u76ee\u5f55\"/usr/bin\"\u5728 \u73af\u5883\u53d8\u91cf PATH\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7b80\u5199\u4e3a\"cp\"\uff0c\u4ea4\u7531\u64cd\u4f5c\u7cfb\u7edf\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u5bfb\u627e\u53ef\u6267\u884c\u6587\u4ef6\u3002 2.2 \u7528\u6237\u7a0b\u5e8f\u7684\u5b9e\u73b0 \u00b6 \u7528\u6237\u7a0b\u5e8f\u76f8\u5f53\u4e8e\u7528\u6237\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u7684\u6865\u6881\uff0c\u7528\u6237\u901a\u8fc7\u547d\u4ee4\u884c\u6267\u884c\u7528\u6237\u7a0b\u5e8f\uff0c\u7528\u6237\u7a0b\u5e8f\u5219\u4f7f\u7528\u7cfb\u7edf\u63d0\u4f9b\u7684\u4e00\u7cfb\u5217\u670d\u52a1\u5b8c\u6210\u6211\u4eec\u60f3\u8981\u7684\u529f\u80fd\u3002\u8fd9\u91cc\u201d\u7cfb\u7edf\u63d0\u4f9b\u7684\u670d\u52a1\u201c\u5373\u6240\u8c13\u7684 \u7cfb\u7edf\u8c03\u7528 \uff08syscall\uff09\u3002\u672c\u6b21\u5b9e\u9a8c\u5c31\u9700\u8981\u5229\u7528xv6\u63d0\u4f9b\u7684\u7cfb\u7edf\u8c03\u7528\u5b9e\u73b0\u4e00\u4e9b\u5b9e\u7528\u7684\u7528\u6237\u7a0b\u5e8f\u3002 \u7528\u6237\u7a0b\u5e8f\u5728\u6267\u884c\u524d\u901a\u5e38\u9700\u8981\u63a5\u6536\u4e00\u4e9b\u53c2\u6570\uff0c\u5982\u4e0a\u6587\u63d0\u53ca\u7684\u201cfile_a\u201d\u548c\u201cfile_b\u201d\u3002\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0cC\u8bed\u8a00\u4e2dmain\u51fd\u6570\u7684\u5b9a\u4e49\u4e3a\uff1a int main ( int argc , char * argv []); \u5176\u4e2dargc\u5c31\u8868\u793a\u53c2\u6570\u7684\u6570\u91cf\uff0cargv\u5219\u4e3a\u5b58\u50a8\u53c2\u6570\u6240\u5728\u5730\u5740\u7684\u6570\u7ec4\u3002\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165\u7684\u53c2\u6570\u5c06\u4f5c\u4e3a \u5b57\u7b26\u4e32 \u5b58\u50a8\u4e8e\u7528\u6237\u6808\uff0c\u800cargv\u5b58\u50a8\u7684\u5b57\u7b26\u4e32\u6307\u9488\u5219\u5206\u522b\u6307\u5411\u8fd9\u4e9b\u53c2\u6570\u3002 \u4f8b\u5982\u5728\u6267\u884c\u547d\u4ee4\u201ccp file_a file_b\u201d\u65f6\uff0c\u7a0b\u5e8fcp\u7684main\u51fd\u6570\u63a5\u6536\u5230\u7684\u53c2\u6570\u4e3a\uff1aargc=3\uff0cargv=[\"cp\", \"file_a\", \"file_b\"\uff0cnull]\u3002 argv\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5fc5\u987b\u4e3a\u7a7a\u6307\u9488\uff08\u5373\u6570\u503c0\uff09\uff0c\u7528\u4ee5\u6807\u5fd7\u53c2\u6570\u7684\u7ed3\u675f\u3002argv\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5219\u4e3a\u9700\u8981\u6267\u884c\u7684\u7a0b\u5e8f\u3002 3. xv6\u7684\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3 \u00b6 \u7cfb\u7edf\u8c03\u7528\u88ab\u5c01\u88c5\u4e3a\u51fd\u6570\u4ee5\u5411\u7528\u6237\u63d0\u4f9b\u63a5\u53e3\uff0c\u7528\u6237\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u51fd\u6570\u8c03\u7528\u7684\u65b9\u5f0f\u8bf7\u6c42\u64cd\u4f5c\u7cfb\u7edf\u7684\u670d\u52a1\uff0c\u5e38\u89c1\u7684\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u5b9a\u4e49\u5982\u4e0b\uff1a\uff08\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u5934\u6587\u4ef6user/user.h\uff09 \u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u540d \u63cf\u8ff0 int fork(void) Create a process, return child\u2019s PID. int exit(int status) Terminate the current process; status reported to wait(). No return. int wait(int *status) Wait for a child to exit; exit status in *status; returns child PID. int kill(int pid) Terminate process PID. Returns 0, or -1 for error. int getpid(void) Return the current process\u2019s PID. int sleep(int n) Pause for n clock ticks. int exec(char *filename,char *argv[]) Load a file and execute it with arguments; only returns if error. char* sbrk(int n) Grow process\u2019s memory by n bytes. Returns start of new memory. int open(char* filename, int flags) Open a file; flags indicate read/write; returns an fd (file descriptor). int read(int fd, void* buf, int n) Read n bytes into buf; returns number read; or 0 if end of file. int write(int fd, void* buf, int n) Write n bytes from buf to file descriptor fd; returns n. int close(int fd) Release open file fd. int dup(int fd) Return a new file descriptor referring to the same file as fd. int pipe(int p[]) Create a pipe, put read/write file descriptors in p[0] and p[1]. int chdir(char *dirname) Change the current directory. int mkdir(char *dirname) Create a new directory. int mknod(char *name, short major, short minor) Create a device file. int fstat(int fd, struct stat *st) Place info about an open file into *st. int link(char *f1, char*f2) Create another name (file2) for the file file1. int unlink(char* filename) Remove a file. \u56fe\u8868\u6458\u81ea\u300axv6 book\u300bP11\uff0c\u5177\u4f53\u4fe1\u606f\u53ef\u4ee5\u53c2\u9605\u3002 4.\u7ba1\u9053 \u00b6 \u7ba1\u9053\u673a\u5236\u7b80\u4ecb \u7ba1\u9053\u662f\u4e00\u79cd\u7236\u5b50\u8fdb\u7a0b\u95f4\u6216\u5b50\u5b50\u8fdb\u7a0b\u95f4\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\u673a\u5236\uff0c\u5b83\u7531xv6\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\uff0c\u5e76\u53ef\u901a\u8fc7\u76f4\u63a5\u7f16\u7a0b\u6216\u5728shell\u7a0b\u5e8f\u4e0b\u8f7b\u677e\u628a\u4e0d\u540c\u8fdb\u7a0b\u7684\u8f93\u5165\u548c\u8f93\u51fa\u8fde\u63a5\u8d77\u6765\u3002 \u76f4\u63a5\u7f16\u7a0b\u65b9\u5f0f\uff1axv6\u63d0\u4f9b\u4e86pipe\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u672c\u8282\u5b9e\u9a8c\u4e2d\u76f4\u63a5\u4f7f\u7528\u3002 shell\u547d\u4ee4\u65b9\u5f0f\uff1a\u201c|\u201d\u662f\u7ba1\u9053\u7b26\u53f7\uff0c\u5373\u4e24\u4e2a\u547d\u4ee4\u4e4b\u95f4\u7684\u4e00\u9053\u7ad6\u6760\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ba1\u9053\u7b26\u53f7\u7ec4\u5408\u7684\u547d\u4ee4\uff0c\u5b9e\u73b0\u4e0d\u540c\u8fdb\u7a0b\uff08\u7236\u5b50\u8fdb\u7a0b\u95f4\u6216\u5b50\u5b50\u8fdb\u7a0b\u95f4\uff09\u7684\u901a\u4fe1\uff0c\u4ece\u800c\u5728\u4e0d\u6539\u53d8\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\uff0c\u8ba9\u64cd\u4f5c\u7cfb\u7edf\u5177\u6709\u8fdb\u7a0b\u95f4\u4fe1\u606f\u4ea4\u4e92\u548c\u529f\u80fd\u7ec4\u5408\u7684\u80fd\u529b\u3002\u8be6\u89c1 \u7ba1\u9053 \u7ba1\u9053\uff08pipe\uff09\u662f\u4e00\u79cd\u6700\u57fa\u672c\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\u673a\u5236\u3002\u7ba1\u9053\u5206\u4e3a \u8bfb\u51fa\u7aef \u548c \u5199\u5165\u7aef \u4e24\u4e2a\u90e8\u5206\uff0c\u8fdb\u7a0b\u53ef\u4ee5\u5411\u5199\u7aef\u5199\u5165\u6570\u636e\uff0c\u4e5f\u53ef\u4ee5\u4ece\u8bfb\u7aef\u8bfb\u51fa\u6570\u636e\u3002\u901a\u8fc7pipe\u7cfb\u7edf\u8c03\u7528\uff0c\u5185\u6838\u4f1a\u4e3a\u7528\u6237\u8fdb\u7a0b\u521b\u5efa\u7ba1\u9053\uff0c\u540c\u65f6\u8fd4\u56de\u4e24\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u7528\u4ee5\u63cf\u8ff0\u7ba1\u9053\u7684\u8bfb\u5199\u7aef\uff0c\u4f8b\u5982\uff1a int p [ 2 ]; int ret ; ret = pipe ( p ); /*\u6b63\u5e38\u521b\u5efa\u540e\uff0cp[1]\u4e3a\u7ba1\u9053\u5199\u5165\u7aef\uff0cp[0]\u4e3a\u7ba1\u9053\u8bfb\u51fa\u7aef*/ \u901a\u8fc7\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u6309\u8bfb\u5199\u6587\u4ef6\u7684\u5f62\u5f0f\u8bfb\u5199\u7ba1\u9053\uff0c\u4f8b\u5982\uff1a int w_len = write ( p [ 1 ], buffer , n ); int r_len = read ( p [ 0 ], buffer , n ); \u6587\u4ef6\u63cf\u8ff0\u7b26 Unix/Linux\u4e2d\u4e00\u5207\u7686\u6587\u4ef6\uff0c\u5305\u62ec\u6807\u51c6\u8f93\u5165\u8bbe\u5907\uff08\u952e\u76d8\uff09\u548c\u6807\u51c6\u8f93\u51fa\u8bbe\u5907\uff08\u663e\u793a\u5668\uff09\u5728\u5185\u7684\u6240\u6709\u8ba1\u7b97\u673a\u786c\u4ef6\u90fd\u662f\u6587\u4ef6\u3002\u540c\u6837\u5730\uff0cxv6\u4e5f\u4f1a\u7ed9\u6bcf\u4e2a\u6587\u4ef6\u5206\u914d\u4e00\u4e2a\u6574\u6570\u7684ID\uff0c\u4e5f\u5c31\u662f\u6587\u4ef6\u63cf\u8ff0\u7b26\uff08File Descriptor\uff09\uff0c\u5b83\u4ee3\u8868\u4e86\u4e00\u4e2a\u5185\u6838\u7ba1\u7406\u7684\u5bf9\u8c61\uff0c\u8fdb\u7a0b\u53ef\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u3002\u6587\u4ef6\u63cf\u8ff0\u7b26\u90fd\u662f\u4ece0\u5f00\u59cb\u8ba1\u6570\uff0c\u6309\u7167\u7ea6\u5b9a\uff0c\u5176\u4e2d0\u662f\u6807\u51c6\u8f93\u5165\uff0c1\u662f\u6807\u51c6\u8f93\u51fa\uff0c2\u662f\u6807\u51c6\u9519\u8bef\u8f93\u51fa\u3002shell\u7a0b\u5e8f\u4e2d\u59cb\u7ec8\u6253\u5f00\u4e86\u8fd9\u4e09\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u4f5c\u4e3a\u63a7\u5236\u53f0\u7684\u9ed8\u8ba4\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 \u6587\u4ef6\u63cf\u8ff0\u7b26 \u6587\u4ef6\u540d \u7c7b\u578b \u786c\u4ef6 0 stdin \u6807\u51c6\u8f93\u5165\u6587\u4ef6 \u952e\u76d8 1 stdout \u6807\u51c6\u8f93\u51fa\u6587\u4ef6 \u663e\u793a\u5668 2 stderr \u6807\u51c6\u9519\u8bef\u8f93\u51fa\u6587\u4ef6 \u663e\u793a\u5668 \u7ba1\u9053\u5b9e\u9645\u4e0a\u662f\u5185\u6838\u5f00\u8f9f\u7684\u4e00\u6bb5\u957f\u5ea6\u6709\u9650\u7684\u7f13\u51b2\u533a\uff0c\u7ba1\u9053\u7684\u8bfb\u5199\u5c31\u662f\u5bf9\u7f13\u51b2\u533a\u7684\u8bfb\u5199\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7ba1\u9053\u7684\u8bfb\u53d6\u662f\u963b\u585e\u7684\uff1a\u5982\u679c\u7ba1\u9053\u7684\u5199\u5165\u7aef\u4e00\u76f4\u672a\u5199\u5165\u6570\u636e\uff0c\u90a3\u4e48\u8c03\u7528read\u65f6\u8fdb\u7a0b\u4f1a\u4e00\u76f4\u7b49\u5f85\uff0c\u76f4\u81f3\u7ba1\u9053\u5185\u6709\u6570\u636e\u53ef\u8bfb\u65f6\u624d\u4f1a\u5b8c\u6210\u8bfb\u53d6\u5e76\u8fd4\u56de\u8bfb\u53d6\u7684\u957f\u5ea6\u3002\u540c\u6837\uff0c\u7ba1\u9053\u7684\u5199\u5165\u4e5f\u662f\u963b\u585e\u7684\uff1a\u5982\u679c\u7ba1\u9053\u88ab\u5199\u6ee1\uff0c\u90a3\u4e48\u8c03\u7528write\u65f6\u8fdb\u7a0b\u4e5f\u4f1a\u9677\u5165\u7b49\u5f85\uff0c\u76f4\u81f3\u6570\u636e\u88ab\u8bfb\u51fa\u7aef\u8bfb\u51fa\u3002\u5f53\u7136\uff0c\u8bfb\u5199\u7ba1\u9053\u4e0d\u4f1a\u6c38\u8fdc\u5730\u963b\u585e\uff0c\u5982\u679c\u8bfb\u7ba1\u9053\u65f6\u53d1\u73b0 \u6240\u6709 \u5199\u5165\u7aef\u5df2\u7ecf\u5173\u95ed\uff0c\u90a3\u4e48\u8bfb\u51fd\u6570\u5c06\u4e0d\u4f1a\u7b49\u5f85\uff0c\u800c\u662f\u76f4\u63a5\u8fd4\u56de\u3002\u5199\u7ba1\u9053\u65f6\u4e5f\u5177\u5907\u7c7b\u4f3c\u7684\u6027\u8d28\u3002 \u8fdb\u7a0b\u901a\u5e38\u53ea\u6301\u6709\u67d0\u4e2a\u7ba1\u9053\u7684\u8bfb\u51fa\u7aef\u6216\u8005\u5199\u5165\u7aef\uff0c\u56e0\u6b64\u4f7f\u7528\u7684\u65f6\u5019\u9700\u8981\u5c06\u53e6\u4e00\u7aef\u5173\u95ed\uff0c\u4f8b\u5982\uff1a /* \u5b50\u8fdb\u7a0b\u8bfb\u7ba1\u9053\uff0c\u7236\u8fdb\u7a0b\u5199\u7ba1\u9053 */ int ret = fork (); if ( ret == 0 ) { /* \u5b50\u8fdb\u7a0b */ close ( p [ 1 ]); // \u5173\u95ed\u5199\u7aef ... read (...); ... close ( p [ 0 ]); // \u8bfb\u53d6\u5b8c\u6210\uff0c\u5173\u95ed\u8bfb\u7aef } else if ( ret > 0 ) { /* \u7236\u8fdb\u7a0b */ close ( p [ 0 ]); // \u5173\u95ed\u8bfb\u7aef ... write (...); ... close ( p [ 1 ]); // \u5199\u5165\u5b8c\u6210\uff0c\u5173\u95ed\u5199\u7aef } \u7ba1\u9053\u8be6\u7ec6\u4fe1\u606f\u53ef\u4ee5\u53c2\u9605\u300axv6 book\u300bP15~P17\u3002 5. \u8d28\u6570\u7b5b\u9009\u7684\u6a21\u578b \u00b6 \u5229\u7528\u8fdb\u7a0b\u7ba1\u9053\u5b9e\u73b0\uff0c\u5176\u903b\u8f91\u4f2a\u7801\u4e3a\uff1a p = get a number from left neighbor print p loop: n = get a number from left neighbor if (p does not divide n) send n to right neighbor \u7b5b\u9009\u601d\u8def\uff1a\u4f7f\u7528\u7cfb\u7edf\u8c03\u7528pipe\u521b\u5efa\u7ba1\u9053\uff0c\u4f7f\u7528\u7cfb\u7edf\u8c03\u7528fork\u521b\u5efa\u5b50\u8fdb\u7a0b\u3002\u4e3b\u8fdb\u7a0b\u5c06\u6240\u6709\u6570\u636e\uff08\u4f8b2~11\uff09\u8f93\u5165\u5230\u7ba1\u9053\u7684\u5de6\u4fa7\uff0c\u7b2c\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u4ece\u7ba1\u9053\u8bfb\u51fa\u5e76\u7b5b\u9009\u51fa2\uff0c\u6392\u9664\u63892\u7684\u500d\u6570\uff0c\u5176\u4ed6\u6570\u5b57\u518d\u5199\u5165\u4e0b\u4e00\u7ba1\u9053\uff1b\u7b2c\u4e8c\u4e2a\u5b50\u8fdb\u7a0b\u8bfb\u51fa\u5e76\u7b5b\u9009\u51fa3\uff0c\u6392\u9664\u63893\u7684\u500d\u6570\uff0c\u5176\u4ed6\u6570\u5b57\u5199\u5165\u5230\u4e0b\u4e00\u7ba1\u9053\uff1b\u7b2c\u4e09\u4e2a\u5b50\u8fdb\u7a0b\u8bfb\u51fa\u7b5b\u9009\u51fa5\uff0c\u4f9d\u6b21\u7c7b\u63a8\u2026\u2026\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u4e0a\u56fe\u4e2d\uff0c\u9996\u5148\u5c062\u7684\u6574\u6570\u500d\u7684\u6570\u53bb\u6389\uff0c\u518d\u5c063\u7684\u6574\u6570\u500d\u7684\u6570\u53bb\u6389\uff0c\u4f9d\u6b21\u7c7b\u63a8\u3002 \u4f7f\u7528\u7ba1\u9053\u7b5b\u9009\u8d28\u6570\u662f\u7531Unix\u7ba1\u9053\u7684\u53d1\u660e\u8005Doug Mcllroy\u63d0\u51fa\u6765\u7684\uff0c\u8be6\u89c1\uff1a Bell Labs and CSP Threads 6.\u6211\u4eec\u9700\u8981\u6ce8\u610f\u7684\uff1axv6\u5165\u95e8\u6307\u5357\u7684\u5165\u95e8\u6307\u5357 \u00b6 \u524d\u56db\u4e2a\u90e8\u5206\u7684\u53d9\u8ff0\u975e\u5e38\u62bd\u8c61\uff0c\u6211\u4eec\u5728\u8fd9\u4e00\u90e8\u5206\u5c06\u5176 \u878d\u4f1a\u8d2f\u901a \u8d77\u6765\uff0c\u770b\u770b\u5176\u95f4\u7684\u5173\u7cfb\u3002 xv6\u662f\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4f46\u662f\u5728\u8fd9\u4e00\u7ae0\u6211\u4eec \u4e0d\u6253\u7b97\u4fee\u6539 \u64cd\u4f5c\u7cfb\u7edf\uff0c\u800c\u662f\u7f16\u5199\u5e94\u7528\u7a0b\u5e8f\uff0c\u53bb \u4f7f\u7528 \u64cd\u4f5c\u7cfb\u7edf\u3002\u6211\u4eec\u7f16\u5199\u7684\u6700\u7b80\u5355\u7684\u5e94\u7528\u7a0b\u5e8f\u5982\u4e0b\uff1a int main (){ printf ( \"Hello world\" ); return 0 ; } \u8fd9\u6bb5\u4ee3\u7801\u5bf9\u6211\u4eec\u6765\u8bf4\u592a\u8fc7\u719f\u6089\uff0c\u4ee5\u81f3\u4e8e\u6211\u4eec\u4f1a\u4ee5\u4e3a\u8fd9\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u6beb\u65e0\u5173\u7cfb\u3002\u5b9e\u9645\u4e0a\uff0c printf \u8fd9\u4e2a\u51fd\u6570\u8c03\u7528\u4e86\u64cd\u4f5c\u7cfb\u7edf\u7684\u670d\u52a1\uff0c\u8fd9\u4e2a\u5c31\u662f\u7b2c\u4e09\u90e8\u5206\u63d0\u5230\u7684\u201d\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u201c\uff0c\u957f\u5f97\u548c\u51fd\u6570\u4e00\u6837\uff0c\u7528\u8d77\u6765\u4e5f\u548c\u51fd\u6570\u4e00\u6837\u3002 \u73b0\u5728\u6211\u4eec\u6765\u770b\u770bxv6\u91cc\u9762\u7684\u7b80\u5355\u7a0b\u5e8f\u957f\u5565\u6837\uff1a #include \"user.h\" int main ( int argc , char * argv []){ printf ( \"Hello world\" ); exit ( 0 ); } \u8fd9\u5c31\u662f\u6700\u7b80\u5355\u7684xv6\u5e94\u7528\u7a0b\u5e8f\u5566\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u4e00\u4e00\u4ecb\u7ecd\u6bcf\u4e00\u884c\u7684\u610f\u4e49\uff1a \u7b2c\u4e00\u884cinclude\u4e86xv6\u81ea\u5e26\u7684\u5e93\u51fd\u6570\uff0c\u6253\u5f00\u5b83\u4f60\u4f1a\u770b\u5230\u91cc\u9762\u6709\u4e24\u79cd\u51fd\u6570\uff0c\u4e00\u79cd\u662fsystem call\uff0c\u5373\u7b2c\u4e09\u90e8\u5206\u63d0\u5230\u7684\u201d\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u201c\uff0c\u53e6\u4e00\u79cd\u5c31\u662f\u6211\u4eec\u5e73\u5e38\u7528\u5230\u7684\u8f85\u52a9\u51fd\u6570\uff0cxv6\u5e2e\u4f60\u5199\u597d\u7684\u90a3\u79cd\uff0c\u6bd4\u5982 strlen \u3002\u4eca\u540e\u6211\u4eec\u53ef\u80fd\u4e5f\u4f1a\u7528\u5230\u522b\u7684\u5e93\uff0c\u81ea\u5df1\u5f15\u7528\u8fdb\u6765\u5c31\u597d\u3002 \u7b2c\u4e8c\u884c\uff0c\u53d1\u73b0\u600e\u4e48\u6709\u4e24\u4e2a\u53c2\u6570\u554a\uff1f\u8fd9\u5176\u5b9e\u5c31\u662f\u7b2c\u4e8c\u90e8\u5206 \u7528\u6237\u7a0b\u5e8f\u7684\u5b9e\u73b0 \u6240\u8bf4\u7684\u3002\u5f53\u6211\u4eec\u542f\u52a8\u4e00\u4e2a\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u9700\u8981\u7ed9\u5b83\u4e00\u4e9b\u4fe1\u606f\uff0c\u8fd9\u6837\u7a0b\u5e8f\u5c31\u77e5\u9053\u5b83\u88ab\u542f\u52a8\u7684\u76ee\u7684\u662f\u4ec0\u4e48\u4e86\u3002 \u7b2c\u4e09\u884c\uff0c\u8c03\u7528\u7684\u5c31\u662f\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u4e86\u3002\u5728\u4e4b\u540e\u7684\u7a0b\u5e8f\u7f16\u5199\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u64cd\u4f5c\u7cfb\u7edf\u5e2e\u5fd9\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u8981 \u4f7f\u7528\u7b2c\u4e09\u90e8\u5206\u4e2d\u7f57\u5217\u7684\u5404\u79cd\u7cfb\u7edf\u8c03\u7528\uff0c\u4ee5\u51fd\u6570\u7684\u5f62\u5f0f\u4f7f\u7528\u5b83 \u3002 \u7b2c\u56db\u884c\u7684exit\u4e00\u5b9a\u4e0d\u8981\u6f0f\u4e86\uff0c\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u4e2dlinux\u548cwindows\u90fd\u53ef\u4ee5\u7528return 0\u9000\u51fa\u7a0b\u5e8f\uff0c\u8fd9\u662f\u5b83\u8bbe\u8ba1\u7684\u597d\u7684\u7f18\u6545\uff0c\u4f46\u662fxv6\u5219 \u9700\u8981\u4f7f\u7528\u7cfb\u7edf\u8c03\u7528exit\u663e\u5f0f\u7684\u9000\u51fa\u7a0b\u5e8f \uff0c\u8981\u4e0d\u7136\u8fd9\u4e2a\u7a0b\u5e8f\u5c31\u6ca1\u5b8c\u4e86\u3002 \u77e5\u9053\u4e86\u57fa\u672c\u7a0b\u5e8f\u8be5\u5982\u4f55\u7f16\u5199\u540e\uff0c\u5404\u79cd\u5e94\u7528\u7a0b\u5e8f\u4e5f\u5c31\u53ea\u662f\u903b\u8f91\u7684\u95ee\u9898\u4e86\uff0c\u5982\u679c\u4e0d\u653e\u5fc3\uff0c\u81ea\u5df1\u7f16\u4e2a\u5e94\u7528\u7a0b\u5e8f\u8bd5\u8bd5\u770b\u5148\uff0c\u4e5f\u4e0d\u9519\u3002 \u4e0b\u9762\uff0c\u6211\u4eec\u5c31\u6b63\u5f0f\u8fdb\u5165\u5230\u5404\u5b9e\u9a8c\u7684\u7ec6\u8282\u4e2d\u3002","title":"\u5b9e\u9a8c\u539f\u7406"},{"location":"lab1/part2/#_1","text":"\u63d0\u793a \u672c\u90e8\u5206\u6211\u4eec\u5c06\u7406\u89e3\u5b9e\u9a8c\u4e2d\u7684\u64cd\u4f5c\u7cfb\u7edfxv6\u7684\u76f8\u5173\u6a21\u578b\uff0c\u8fd9\u4e9b\u6a21\u578b\u770b\u8d77\u6765\u975e\u5e38\u62bd\u8c61\uff0c\u56e0\u6b64\u5728\u4ecb\u7ecd\u5b8c\u4e4b\u540e\uff0c\u6211\u4eec\u5c06\u52a0\u5165\u4e00\u7ae0\u201d \u6211\u4eec\u9700\u8981\u6ce8\u610f\u7684 \u201c\uff0c\u6765\u5c06\u5176\u4e32\u901a\u3002","title":"\u5b9e\u9a8c\u539f\u7406"},{"location":"lab1/part2/#1-mit-6s0812020","text":"","title":"1. MIT 6.S081/2020"},{"location":"lab1/part2/#11","text":"XV6\u662f\u7531\u9ebb\u7701\u7406\u5de5\u5b66\u9662(MIT)\u5f00\u53d1\u7684\u4e00\u4e2a\u6559\u5b66\u76ee\u7684\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5b83\u662f\u5728x86\u5904\u7406\u5668\u4e0a\u7528ANSI\u6807\u51c6C\u91cd\u65b0\u5b9e\u73b0\u7684Unix\u7b2c\u516d\u7248(\u5373v6)\uff0c\u8bfe\u7a0b\u7f16\u53f7\u4e3a6.828\u30022019\u5e74\u88ab\u79fb\u690d\u5230RISC-V\u4e4b\u4e0a\uff0c\u5e76\u8bbe\u7f6e\u4e866.S081\u3002 XV6\u7684\u4e3b\u8981\u7279\u5f81\uff1a \u5f00\u6e90\uff0c\u7cbe\u7b80\uff0c\u4ee3\u7801\u4ec5\u4e24\u4e07\u884c\u5de6\u53f3\uff1b \u529f\u80fd\u5b8c\u5584\uff0c\u53ef\u5168\u9762\u7406\u89e3\u64cd\u4f5c\u7cfb\u7edf\u7684\u539f\u7406\u53ca\u5b9e\u73b0\uff1b \u57fa\u4e8eRISC-V\u3001X86\u7b49\u67b6\u6784\uff0c\u6709\u5229\u4e8e\u6df1\u5165\u7406\u89e3\u4f53\u7cfb\u7ed3\u6784\uff1b \u7c7bUnix\u7cfb\u7edf\uff0c\u53ef\u5ef6\u4f38\u5b66\u4e60\u5176\u4ed6\u5e38\u89c1\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4f8b\u5982Linux\u3001MacOS\u7b49\u3002 1) \u5b98\u65b9\u7f51\u7ad9\uff1a https://pdos.csail.mit.edu/6.828/2020/index.html 2) xv6 book\uff1a https://pdos.csail.mit.edu/6.828/2020/xv6/book-riscv-rev1.pdf \u8fd9\u4efd\u5b98\u65b9\u6587\u6863\uff0c\u662f\u9605\u8bfbxv6\u6e90\u7801\u8fc7\u7a0b\u4e2d\u6700\u597d\u7684\u53c2\u8003\u8d44\u6599\uff0c\u5728\u5b8c\u6210\u6240\u6709xv6\u76f8\u5173\u5b9e\u9a8c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u82e5\u5bf9\u6e90\u7801\u6709\u4efb\u4f55\u7684\u7591\u95ee\uff0c\u53ef\u968f\u65f6\u67e5\u770b\u8fd9\u4efd\u6587\u6863\u8fdb\u884c\u5b66\u4e60\u3002 3) 6.S081\u6240\u6709\u5b9e\u9a8c\u9879\u76ee\uff08\u9488\u5bf9\u6bcf\u4e2a\u5b9e\u9a8c\uff0c\u90fd\u6709\u8be6\u7ec6\u7684\u6307\u5bfc\u548c\u63d0\u793a\uff09\uff1a","title":"1.1 \u53c2\u8003\u8d44\u6599"},{"location":"lab1/part2/#12-xv6","text":"\u4e0e\u5927\u591a\u6570Unix\u64cd\u4f5c\u7cfb\u7edf\u4e00\u6837\uff0cXV6\u91c7\u7528\u5b8f\u5185\u6838\u7ed3\u6784\uff0c\u5b83\u5305\u542b\u64cd\u4f5c\u7cfb\u7edf\u4e00\u4e9b\u6700\u57fa\u672c\u7684\u8981\u7d20\uff0c\u5305\u62ec\u7cfb\u7edf\u8c03\u7528\u3001\u8fdb\u7a0b\u8c03\u5ea6\u3001\u5185\u5b58\u7ba1\u7406\u3001\u4e2d\u65ad\u5904\u7406\u548c\u6587\u4ef6\u7cfb\u7edf\u7b49\u3002XV6\u533a\u5206\u5185\u6838\u6001\u548c\u7528\u6237\u6001\uff0c\u4ee3\u8868\u5e94\u7528\u7a0b\u5e8f\u7684\u7528\u6237\u6001\u8fdb\u7a0b\u8fd0\u884c\u5728CPU\u7684\u7528\u6237\u6001\uff08\u53c8\u79f0\u975e\u7279\u6743\u6a21\u5f0f\uff0c\u7528\u6237\u6a21\u5f0f\uff09\uff0c\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u7cfb\u7edf\u786c\u4ef6\u548c\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u7cfb\u7edf\u6570\u636e\uff0c\u800c\u64cd\u4f5c\u7cfb\u7edf\u8fd0\u884c\u5728CPU\u7684\u6838\u5fc3\u6001\uff08\u53c8\u79f0\u7279\u6743\u6a21\u5f0f\uff0c\u5185\u6838\u6a21\u5f0f\uff09\uff0c\u53ef\u4ee5\u8bbf\u95ee\u7cfb\u7edf\u786c\u4ef6\u548c\u6838\u5fc3\u6570\u636e\u3002","title":"1.2 XV6\u603b\u7edf\u67b6\u6784\u7b80\u4ecb"},{"location":"lab1/part2/#2","text":"","title":"2. \u7528\u6237\u7a0b\u5e8f"},{"location":"lab1/part2/#21","text":"\u6211\u4eec\u4e00\u822c\u901a\u8fc7 \u547d\u4ee4\u884c \uff08shell\uff09\u6765\u4f7f\u7528\u6ca1\u6709\u56fe\u5f62\u5316\u754c\u9762\u7684\u64cd\u4f5c\u7cfb\u7edf\uff08\u5982Linux\uff09\u3002\u5f53\u6211\u4eec\u5411shell\u8f93\u5165\u547d\u4ee4\u65f6\uff0cshell\u4f1a\u89e3\u91ca\u547d\u4ee4\u5e76\u6267\u884c\u5bf9\u5e94\u7684 \u7528\u6237\u7a0b\u5e8f \u3002\u5b9e\u9645\u4e0a\uff0c\u8f93\u5165\u547d\u4ee4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7528\u4e8e\u6307\u793a\u6211\u4eec\u5e0c\u671b\u6267\u884c\u7684\u7528\u6237\u7a0b\u5e8f\uff0c\u800c\u540e\u7eed\u7684\u5b57\u7b26\u5219\u4e3a\u6211\u4eec\u5e0c\u671b\u4f20\u9012\u7ed9\u7528\u6237\u7a0b\u5e8f\u7684\u53c2\u6570\u3002\u4f8b\u5982\u5728Linux\u7684shell\u4e2d\u8f93\u5165\u5982\u4e0b\u547d\u4ee4\uff1a $ cp file_a file_b \u5176\u4e2d\"cp\"\u8868\u793a\u6211\u4eec\u5e0c\u671b\u6267\u884c\u76ee\u5f55/usr/bin\u4e0b\u7684\u7528\u6237\u7a0b\u5e8fcp\uff0c\u8be5\u7a0b\u5e8f\u7528\u4e8e\u590d\u5236\u6587\u4ef6\u3002\u800c\"file_a\"\u548c\"file_b\"\u5c06\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u7a0b\u5e8fcp\uff0c\u7528\u4ee5\u544a\u77e5\u590d\u5236\u7684\u6e90\u6587\u4ef6\u548c\u76ee\u7684\u6587\u4ef6\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b9e\u9645\u4e0a\u4ee3\u8868\u53ef\u6267\u884c\u6587\u4ef6\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u5373\u8be5\u547d\u4ee4\u548c\u547d\u4ee4\"/usr/bin/cp file_a file_b\"\u662f\u5b8c\u5168\u7b49\u4ef7\u7684\u3002\u56e0\u4e3a\u76ee\u5f55\"/usr/bin\"\u5728 \u73af\u5883\u53d8\u91cf PATH\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7b80\u5199\u4e3a\"cp\"\uff0c\u4ea4\u7531\u64cd\u4f5c\u7cfb\u7edf\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u5bfb\u627e\u53ef\u6267\u884c\u6587\u4ef6\u3002","title":"2.1 \u7528\u6237\u7a0b\u5e8f\u7684\u4f7f\u7528"},{"location":"lab1/part2/#22","text":"\u7528\u6237\u7a0b\u5e8f\u76f8\u5f53\u4e8e\u7528\u6237\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u7684\u6865\u6881\uff0c\u7528\u6237\u901a\u8fc7\u547d\u4ee4\u884c\u6267\u884c\u7528\u6237\u7a0b\u5e8f\uff0c\u7528\u6237\u7a0b\u5e8f\u5219\u4f7f\u7528\u7cfb\u7edf\u63d0\u4f9b\u7684\u4e00\u7cfb\u5217\u670d\u52a1\u5b8c\u6210\u6211\u4eec\u60f3\u8981\u7684\u529f\u80fd\u3002\u8fd9\u91cc\u201d\u7cfb\u7edf\u63d0\u4f9b\u7684\u670d\u52a1\u201c\u5373\u6240\u8c13\u7684 \u7cfb\u7edf\u8c03\u7528 \uff08syscall\uff09\u3002\u672c\u6b21\u5b9e\u9a8c\u5c31\u9700\u8981\u5229\u7528xv6\u63d0\u4f9b\u7684\u7cfb\u7edf\u8c03\u7528\u5b9e\u73b0\u4e00\u4e9b\u5b9e\u7528\u7684\u7528\u6237\u7a0b\u5e8f\u3002 \u7528\u6237\u7a0b\u5e8f\u5728\u6267\u884c\u524d\u901a\u5e38\u9700\u8981\u63a5\u6536\u4e00\u4e9b\u53c2\u6570\uff0c\u5982\u4e0a\u6587\u63d0\u53ca\u7684\u201cfile_a\u201d\u548c\u201cfile_b\u201d\u3002\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0cC\u8bed\u8a00\u4e2dmain\u51fd\u6570\u7684\u5b9a\u4e49\u4e3a\uff1a int main ( int argc , char * argv []); \u5176\u4e2dargc\u5c31\u8868\u793a\u53c2\u6570\u7684\u6570\u91cf\uff0cargv\u5219\u4e3a\u5b58\u50a8\u53c2\u6570\u6240\u5728\u5730\u5740\u7684\u6570\u7ec4\u3002\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165\u7684\u53c2\u6570\u5c06\u4f5c\u4e3a \u5b57\u7b26\u4e32 \u5b58\u50a8\u4e8e\u7528\u6237\u6808\uff0c\u800cargv\u5b58\u50a8\u7684\u5b57\u7b26\u4e32\u6307\u9488\u5219\u5206\u522b\u6307\u5411\u8fd9\u4e9b\u53c2\u6570\u3002 \u4f8b\u5982\u5728\u6267\u884c\u547d\u4ee4\u201ccp file_a file_b\u201d\u65f6\uff0c\u7a0b\u5e8fcp\u7684main\u51fd\u6570\u63a5\u6536\u5230\u7684\u53c2\u6570\u4e3a\uff1aargc=3\uff0cargv=[\"cp\", \"file_a\", \"file_b\"\uff0cnull]\u3002 argv\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5fc5\u987b\u4e3a\u7a7a\u6307\u9488\uff08\u5373\u6570\u503c0\uff09\uff0c\u7528\u4ee5\u6807\u5fd7\u53c2\u6570\u7684\u7ed3\u675f\u3002argv\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5219\u4e3a\u9700\u8981\u6267\u884c\u7684\u7a0b\u5e8f\u3002","title":"2.2 \u7528\u6237\u7a0b\u5e8f\u7684\u5b9e\u73b0"},{"location":"lab1/part2/#3-xv6","text":"\u7cfb\u7edf\u8c03\u7528\u88ab\u5c01\u88c5\u4e3a\u51fd\u6570\u4ee5\u5411\u7528\u6237\u63d0\u4f9b\u63a5\u53e3\uff0c\u7528\u6237\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u51fd\u6570\u8c03\u7528\u7684\u65b9\u5f0f\u8bf7\u6c42\u64cd\u4f5c\u7cfb\u7edf\u7684\u670d\u52a1\uff0c\u5e38\u89c1\u7684\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u5b9a\u4e49\u5982\u4e0b\uff1a\uff08\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u5934\u6587\u4ef6user/user.h\uff09 \u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u540d \u63cf\u8ff0 int fork(void) Create a process, return child\u2019s PID. int exit(int status) Terminate the current process; status reported to wait(). No return. int wait(int *status) Wait for a child to exit; exit status in *status; returns child PID. int kill(int pid) Terminate process PID. Returns 0, or -1 for error. int getpid(void) Return the current process\u2019s PID. int sleep(int n) Pause for n clock ticks. int exec(char *filename,char *argv[]) Load a file and execute it with arguments; only returns if error. char* sbrk(int n) Grow process\u2019s memory by n bytes. Returns start of new memory. int open(char* filename, int flags) Open a file; flags indicate read/write; returns an fd (file descriptor). int read(int fd, void* buf, int n) Read n bytes into buf; returns number read; or 0 if end of file. int write(int fd, void* buf, int n) Write n bytes from buf to file descriptor fd; returns n. int close(int fd) Release open file fd. int dup(int fd) Return a new file descriptor referring to the same file as fd. int pipe(int p[]) Create a pipe, put read/write file descriptors in p[0] and p[1]. int chdir(char *dirname) Change the current directory. int mkdir(char *dirname) Create a new directory. int mknod(char *name, short major, short minor) Create a device file. int fstat(int fd, struct stat *st) Place info about an open file into *st. int link(char *f1, char*f2) Create another name (file2) for the file file1. int unlink(char* filename) Remove a file. \u56fe\u8868\u6458\u81ea\u300axv6 book\u300bP11\uff0c\u5177\u4f53\u4fe1\u606f\u53ef\u4ee5\u53c2\u9605\u3002","title":"3. xv6\u7684\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3"},{"location":"lab1/part2/#4","text":"\u7ba1\u9053\u673a\u5236\u7b80\u4ecb \u7ba1\u9053\u662f\u4e00\u79cd\u7236\u5b50\u8fdb\u7a0b\u95f4\u6216\u5b50\u5b50\u8fdb\u7a0b\u95f4\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\u673a\u5236\uff0c\u5b83\u7531xv6\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\uff0c\u5e76\u53ef\u901a\u8fc7\u76f4\u63a5\u7f16\u7a0b\u6216\u5728shell\u7a0b\u5e8f\u4e0b\u8f7b\u677e\u628a\u4e0d\u540c\u8fdb\u7a0b\u7684\u8f93\u5165\u548c\u8f93\u51fa\u8fde\u63a5\u8d77\u6765\u3002 \u76f4\u63a5\u7f16\u7a0b\u65b9\u5f0f\uff1axv6\u63d0\u4f9b\u4e86pipe\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u672c\u8282\u5b9e\u9a8c\u4e2d\u76f4\u63a5\u4f7f\u7528\u3002 shell\u547d\u4ee4\u65b9\u5f0f\uff1a\u201c|\u201d\u662f\u7ba1\u9053\u7b26\u53f7\uff0c\u5373\u4e24\u4e2a\u547d\u4ee4\u4e4b\u95f4\u7684\u4e00\u9053\u7ad6\u6760\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ba1\u9053\u7b26\u53f7\u7ec4\u5408\u7684\u547d\u4ee4\uff0c\u5b9e\u73b0\u4e0d\u540c\u8fdb\u7a0b\uff08\u7236\u5b50\u8fdb\u7a0b\u95f4\u6216\u5b50\u5b50\u8fdb\u7a0b\u95f4\uff09\u7684\u901a\u4fe1\uff0c\u4ece\u800c\u5728\u4e0d\u6539\u53d8\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\uff0c\u8ba9\u64cd\u4f5c\u7cfb\u7edf\u5177\u6709\u8fdb\u7a0b\u95f4\u4fe1\u606f\u4ea4\u4e92\u548c\u529f\u80fd\u7ec4\u5408\u7684\u80fd\u529b\u3002\u8be6\u89c1 \u7ba1\u9053 \u7ba1\u9053\uff08pipe\uff09\u662f\u4e00\u79cd\u6700\u57fa\u672c\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\u673a\u5236\u3002\u7ba1\u9053\u5206\u4e3a \u8bfb\u51fa\u7aef \u548c \u5199\u5165\u7aef \u4e24\u4e2a\u90e8\u5206\uff0c\u8fdb\u7a0b\u53ef\u4ee5\u5411\u5199\u7aef\u5199\u5165\u6570\u636e\uff0c\u4e5f\u53ef\u4ee5\u4ece\u8bfb\u7aef\u8bfb\u51fa\u6570\u636e\u3002\u901a\u8fc7pipe\u7cfb\u7edf\u8c03\u7528\uff0c\u5185\u6838\u4f1a\u4e3a\u7528\u6237\u8fdb\u7a0b\u521b\u5efa\u7ba1\u9053\uff0c\u540c\u65f6\u8fd4\u56de\u4e24\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u7528\u4ee5\u63cf\u8ff0\u7ba1\u9053\u7684\u8bfb\u5199\u7aef\uff0c\u4f8b\u5982\uff1a int p [ 2 ]; int ret ; ret = pipe ( p ); /*\u6b63\u5e38\u521b\u5efa\u540e\uff0cp[1]\u4e3a\u7ba1\u9053\u5199\u5165\u7aef\uff0cp[0]\u4e3a\u7ba1\u9053\u8bfb\u51fa\u7aef*/ \u901a\u8fc7\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u6309\u8bfb\u5199\u6587\u4ef6\u7684\u5f62\u5f0f\u8bfb\u5199\u7ba1\u9053\uff0c\u4f8b\u5982\uff1a int w_len = write ( p [ 1 ], buffer , n ); int r_len = read ( p [ 0 ], buffer , n ); \u6587\u4ef6\u63cf\u8ff0\u7b26 Unix/Linux\u4e2d\u4e00\u5207\u7686\u6587\u4ef6\uff0c\u5305\u62ec\u6807\u51c6\u8f93\u5165\u8bbe\u5907\uff08\u952e\u76d8\uff09\u548c\u6807\u51c6\u8f93\u51fa\u8bbe\u5907\uff08\u663e\u793a\u5668\uff09\u5728\u5185\u7684\u6240\u6709\u8ba1\u7b97\u673a\u786c\u4ef6\u90fd\u662f\u6587\u4ef6\u3002\u540c\u6837\u5730\uff0cxv6\u4e5f\u4f1a\u7ed9\u6bcf\u4e2a\u6587\u4ef6\u5206\u914d\u4e00\u4e2a\u6574\u6570\u7684ID\uff0c\u4e5f\u5c31\u662f\u6587\u4ef6\u63cf\u8ff0\u7b26\uff08File Descriptor\uff09\uff0c\u5b83\u4ee3\u8868\u4e86\u4e00\u4e2a\u5185\u6838\u7ba1\u7406\u7684\u5bf9\u8c61\uff0c\u8fdb\u7a0b\u53ef\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u3002\u6587\u4ef6\u63cf\u8ff0\u7b26\u90fd\u662f\u4ece0\u5f00\u59cb\u8ba1\u6570\uff0c\u6309\u7167\u7ea6\u5b9a\uff0c\u5176\u4e2d0\u662f\u6807\u51c6\u8f93\u5165\uff0c1\u662f\u6807\u51c6\u8f93\u51fa\uff0c2\u662f\u6807\u51c6\u9519\u8bef\u8f93\u51fa\u3002shell\u7a0b\u5e8f\u4e2d\u59cb\u7ec8\u6253\u5f00\u4e86\u8fd9\u4e09\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u4f5c\u4e3a\u63a7\u5236\u53f0\u7684\u9ed8\u8ba4\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 \u6587\u4ef6\u63cf\u8ff0\u7b26 \u6587\u4ef6\u540d \u7c7b\u578b \u786c\u4ef6 0 stdin \u6807\u51c6\u8f93\u5165\u6587\u4ef6 \u952e\u76d8 1 stdout \u6807\u51c6\u8f93\u51fa\u6587\u4ef6 \u663e\u793a\u5668 2 stderr \u6807\u51c6\u9519\u8bef\u8f93\u51fa\u6587\u4ef6 \u663e\u793a\u5668 \u7ba1\u9053\u5b9e\u9645\u4e0a\u662f\u5185\u6838\u5f00\u8f9f\u7684\u4e00\u6bb5\u957f\u5ea6\u6709\u9650\u7684\u7f13\u51b2\u533a\uff0c\u7ba1\u9053\u7684\u8bfb\u5199\u5c31\u662f\u5bf9\u7f13\u51b2\u533a\u7684\u8bfb\u5199\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7ba1\u9053\u7684\u8bfb\u53d6\u662f\u963b\u585e\u7684\uff1a\u5982\u679c\u7ba1\u9053\u7684\u5199\u5165\u7aef\u4e00\u76f4\u672a\u5199\u5165\u6570\u636e\uff0c\u90a3\u4e48\u8c03\u7528read\u65f6\u8fdb\u7a0b\u4f1a\u4e00\u76f4\u7b49\u5f85\uff0c\u76f4\u81f3\u7ba1\u9053\u5185\u6709\u6570\u636e\u53ef\u8bfb\u65f6\u624d\u4f1a\u5b8c\u6210\u8bfb\u53d6\u5e76\u8fd4\u56de\u8bfb\u53d6\u7684\u957f\u5ea6\u3002\u540c\u6837\uff0c\u7ba1\u9053\u7684\u5199\u5165\u4e5f\u662f\u963b\u585e\u7684\uff1a\u5982\u679c\u7ba1\u9053\u88ab\u5199\u6ee1\uff0c\u90a3\u4e48\u8c03\u7528write\u65f6\u8fdb\u7a0b\u4e5f\u4f1a\u9677\u5165\u7b49\u5f85\uff0c\u76f4\u81f3\u6570\u636e\u88ab\u8bfb\u51fa\u7aef\u8bfb\u51fa\u3002\u5f53\u7136\uff0c\u8bfb\u5199\u7ba1\u9053\u4e0d\u4f1a\u6c38\u8fdc\u5730\u963b\u585e\uff0c\u5982\u679c\u8bfb\u7ba1\u9053\u65f6\u53d1\u73b0 \u6240\u6709 \u5199\u5165\u7aef\u5df2\u7ecf\u5173\u95ed\uff0c\u90a3\u4e48\u8bfb\u51fd\u6570\u5c06\u4e0d\u4f1a\u7b49\u5f85\uff0c\u800c\u662f\u76f4\u63a5\u8fd4\u56de\u3002\u5199\u7ba1\u9053\u65f6\u4e5f\u5177\u5907\u7c7b\u4f3c\u7684\u6027\u8d28\u3002 \u8fdb\u7a0b\u901a\u5e38\u53ea\u6301\u6709\u67d0\u4e2a\u7ba1\u9053\u7684\u8bfb\u51fa\u7aef\u6216\u8005\u5199\u5165\u7aef\uff0c\u56e0\u6b64\u4f7f\u7528\u7684\u65f6\u5019\u9700\u8981\u5c06\u53e6\u4e00\u7aef\u5173\u95ed\uff0c\u4f8b\u5982\uff1a /* \u5b50\u8fdb\u7a0b\u8bfb\u7ba1\u9053\uff0c\u7236\u8fdb\u7a0b\u5199\u7ba1\u9053 */ int ret = fork (); if ( ret == 0 ) { /* \u5b50\u8fdb\u7a0b */ close ( p [ 1 ]); // \u5173\u95ed\u5199\u7aef ... read (...); ... close ( p [ 0 ]); // \u8bfb\u53d6\u5b8c\u6210\uff0c\u5173\u95ed\u8bfb\u7aef } else if ( ret > 0 ) { /* \u7236\u8fdb\u7a0b */ close ( p [ 0 ]); // \u5173\u95ed\u8bfb\u7aef ... write (...); ... close ( p [ 1 ]); // \u5199\u5165\u5b8c\u6210\uff0c\u5173\u95ed\u5199\u7aef } \u7ba1\u9053\u8be6\u7ec6\u4fe1\u606f\u53ef\u4ee5\u53c2\u9605\u300axv6 book\u300bP15~P17\u3002","title":"4.\u7ba1\u9053"},{"location":"lab1/part2/#5","text":"\u5229\u7528\u8fdb\u7a0b\u7ba1\u9053\u5b9e\u73b0\uff0c\u5176\u903b\u8f91\u4f2a\u7801\u4e3a\uff1a p = get a number from left neighbor print p loop: n = get a number from left neighbor if (p does not divide n) send n to right neighbor \u7b5b\u9009\u601d\u8def\uff1a\u4f7f\u7528\u7cfb\u7edf\u8c03\u7528pipe\u521b\u5efa\u7ba1\u9053\uff0c\u4f7f\u7528\u7cfb\u7edf\u8c03\u7528fork\u521b\u5efa\u5b50\u8fdb\u7a0b\u3002\u4e3b\u8fdb\u7a0b\u5c06\u6240\u6709\u6570\u636e\uff08\u4f8b2~11\uff09\u8f93\u5165\u5230\u7ba1\u9053\u7684\u5de6\u4fa7\uff0c\u7b2c\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u4ece\u7ba1\u9053\u8bfb\u51fa\u5e76\u7b5b\u9009\u51fa2\uff0c\u6392\u9664\u63892\u7684\u500d\u6570\uff0c\u5176\u4ed6\u6570\u5b57\u518d\u5199\u5165\u4e0b\u4e00\u7ba1\u9053\uff1b\u7b2c\u4e8c\u4e2a\u5b50\u8fdb\u7a0b\u8bfb\u51fa\u5e76\u7b5b\u9009\u51fa3\uff0c\u6392\u9664\u63893\u7684\u500d\u6570\uff0c\u5176\u4ed6\u6570\u5b57\u5199\u5165\u5230\u4e0b\u4e00\u7ba1\u9053\uff1b\u7b2c\u4e09\u4e2a\u5b50\u8fdb\u7a0b\u8bfb\u51fa\u7b5b\u9009\u51fa5\uff0c\u4f9d\u6b21\u7c7b\u63a8\u2026\u2026\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u4e0a\u56fe\u4e2d\uff0c\u9996\u5148\u5c062\u7684\u6574\u6570\u500d\u7684\u6570\u53bb\u6389\uff0c\u518d\u5c063\u7684\u6574\u6570\u500d\u7684\u6570\u53bb\u6389\uff0c\u4f9d\u6b21\u7c7b\u63a8\u3002 \u4f7f\u7528\u7ba1\u9053\u7b5b\u9009\u8d28\u6570\u662f\u7531Unix\u7ba1\u9053\u7684\u53d1\u660e\u8005Doug Mcllroy\u63d0\u51fa\u6765\u7684\uff0c\u8be6\u89c1\uff1a Bell Labs and CSP Threads","title":"5. \u8d28\u6570\u7b5b\u9009\u7684\u6a21\u578b"},{"location":"lab1/part2/#6xv6","text":"\u524d\u56db\u4e2a\u90e8\u5206\u7684\u53d9\u8ff0\u975e\u5e38\u62bd\u8c61\uff0c\u6211\u4eec\u5728\u8fd9\u4e00\u90e8\u5206\u5c06\u5176 \u878d\u4f1a\u8d2f\u901a \u8d77\u6765\uff0c\u770b\u770b\u5176\u95f4\u7684\u5173\u7cfb\u3002 xv6\u662f\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4f46\u662f\u5728\u8fd9\u4e00\u7ae0\u6211\u4eec \u4e0d\u6253\u7b97\u4fee\u6539 \u64cd\u4f5c\u7cfb\u7edf\uff0c\u800c\u662f\u7f16\u5199\u5e94\u7528\u7a0b\u5e8f\uff0c\u53bb \u4f7f\u7528 \u64cd\u4f5c\u7cfb\u7edf\u3002\u6211\u4eec\u7f16\u5199\u7684\u6700\u7b80\u5355\u7684\u5e94\u7528\u7a0b\u5e8f\u5982\u4e0b\uff1a int main (){ printf ( \"Hello world\" ); return 0 ; } \u8fd9\u6bb5\u4ee3\u7801\u5bf9\u6211\u4eec\u6765\u8bf4\u592a\u8fc7\u719f\u6089\uff0c\u4ee5\u81f3\u4e8e\u6211\u4eec\u4f1a\u4ee5\u4e3a\u8fd9\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u6beb\u65e0\u5173\u7cfb\u3002\u5b9e\u9645\u4e0a\uff0c printf \u8fd9\u4e2a\u51fd\u6570\u8c03\u7528\u4e86\u64cd\u4f5c\u7cfb\u7edf\u7684\u670d\u52a1\uff0c\u8fd9\u4e2a\u5c31\u662f\u7b2c\u4e09\u90e8\u5206\u63d0\u5230\u7684\u201d\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u201c\uff0c\u957f\u5f97\u548c\u51fd\u6570\u4e00\u6837\uff0c\u7528\u8d77\u6765\u4e5f\u548c\u51fd\u6570\u4e00\u6837\u3002 \u73b0\u5728\u6211\u4eec\u6765\u770b\u770bxv6\u91cc\u9762\u7684\u7b80\u5355\u7a0b\u5e8f\u957f\u5565\u6837\uff1a #include \"user.h\" int main ( int argc , char * argv []){ printf ( \"Hello world\" ); exit ( 0 ); } \u8fd9\u5c31\u662f\u6700\u7b80\u5355\u7684xv6\u5e94\u7528\u7a0b\u5e8f\u5566\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u4e00\u4e00\u4ecb\u7ecd\u6bcf\u4e00\u884c\u7684\u610f\u4e49\uff1a \u7b2c\u4e00\u884cinclude\u4e86xv6\u81ea\u5e26\u7684\u5e93\u51fd\u6570\uff0c\u6253\u5f00\u5b83\u4f60\u4f1a\u770b\u5230\u91cc\u9762\u6709\u4e24\u79cd\u51fd\u6570\uff0c\u4e00\u79cd\u662fsystem call\uff0c\u5373\u7b2c\u4e09\u90e8\u5206\u63d0\u5230\u7684\u201d\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u201c\uff0c\u53e6\u4e00\u79cd\u5c31\u662f\u6211\u4eec\u5e73\u5e38\u7528\u5230\u7684\u8f85\u52a9\u51fd\u6570\uff0cxv6\u5e2e\u4f60\u5199\u597d\u7684\u90a3\u79cd\uff0c\u6bd4\u5982 strlen \u3002\u4eca\u540e\u6211\u4eec\u53ef\u80fd\u4e5f\u4f1a\u7528\u5230\u522b\u7684\u5e93\uff0c\u81ea\u5df1\u5f15\u7528\u8fdb\u6765\u5c31\u597d\u3002 \u7b2c\u4e8c\u884c\uff0c\u53d1\u73b0\u600e\u4e48\u6709\u4e24\u4e2a\u53c2\u6570\u554a\uff1f\u8fd9\u5176\u5b9e\u5c31\u662f\u7b2c\u4e8c\u90e8\u5206 \u7528\u6237\u7a0b\u5e8f\u7684\u5b9e\u73b0 \u6240\u8bf4\u7684\u3002\u5f53\u6211\u4eec\u542f\u52a8\u4e00\u4e2a\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u9700\u8981\u7ed9\u5b83\u4e00\u4e9b\u4fe1\u606f\uff0c\u8fd9\u6837\u7a0b\u5e8f\u5c31\u77e5\u9053\u5b83\u88ab\u542f\u52a8\u7684\u76ee\u7684\u662f\u4ec0\u4e48\u4e86\u3002 \u7b2c\u4e09\u884c\uff0c\u8c03\u7528\u7684\u5c31\u662f\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u4e86\u3002\u5728\u4e4b\u540e\u7684\u7a0b\u5e8f\u7f16\u5199\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u64cd\u4f5c\u7cfb\u7edf\u5e2e\u5fd9\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u8981 \u4f7f\u7528\u7b2c\u4e09\u90e8\u5206\u4e2d\u7f57\u5217\u7684\u5404\u79cd\u7cfb\u7edf\u8c03\u7528\uff0c\u4ee5\u51fd\u6570\u7684\u5f62\u5f0f\u4f7f\u7528\u5b83 \u3002 \u7b2c\u56db\u884c\u7684exit\u4e00\u5b9a\u4e0d\u8981\u6f0f\u4e86\uff0c\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u4e2dlinux\u548cwindows\u90fd\u53ef\u4ee5\u7528return 0\u9000\u51fa\u7a0b\u5e8f\uff0c\u8fd9\u662f\u5b83\u8bbe\u8ba1\u7684\u597d\u7684\u7f18\u6545\uff0c\u4f46\u662fxv6\u5219 \u9700\u8981\u4f7f\u7528\u7cfb\u7edf\u8c03\u7528exit\u663e\u5f0f\u7684\u9000\u51fa\u7a0b\u5e8f \uff0c\u8981\u4e0d\u7136\u8fd9\u4e2a\u7a0b\u5e8f\u5c31\u6ca1\u5b8c\u4e86\u3002 \u77e5\u9053\u4e86\u57fa\u672c\u7a0b\u5e8f\u8be5\u5982\u4f55\u7f16\u5199\u540e\uff0c\u5404\u79cd\u5e94\u7528\u7a0b\u5e8f\u4e5f\u5c31\u53ea\u662f\u903b\u8f91\u7684\u95ee\u9898\u4e86\uff0c\u5982\u679c\u4e0d\u653e\u5fc3\uff0c\u81ea\u5df1\u7f16\u4e2a\u5e94\u7528\u7a0b\u5e8f\u8bd5\u8bd5\u770b\u5148\uff0c\u4e5f\u4e0d\u9519\u3002 \u4e0b\u9762\uff0c\u6211\u4eec\u5c31\u6b63\u5f0f\u8fdb\u5165\u5230\u5404\u5b9e\u9a8c\u7684\u7ec6\u8282\u4e2d\u3002","title":"6.\u6211\u4eec\u9700\u8981\u6ce8\u610f\u7684\uff1axv6\u5165\u95e8\u6307\u5357\u7684\u5165\u95e8\u6307\u5357"},{"location":"lab1/part3/","text":"\u5b9e\u9a8c\u6b65\u9aa4 \u00b6 \u4e0b\u9762\uff0c\u6211\u4eec\u5c31\u6b63\u5f0f\u8fdb\u5165\u5230\u5404\u5b9e\u9a8c\u7684\u7ec6\u8282\u4e2d\uff0c\u5e76\u7ed9\u51fa\u5b9e\u9a8c\u5b9e\u73b0\u7684\u4e00\u4e9b\u63d0\u793a\u3002\u5927\u5bb6\u9700\u8981\u4f9d\u7167\u5b9e\u9a8c\u6307\u5bfc\u4e66\u7684 \u5b9e\u9a8c\u6982\u8ff0 \u4e2d\u63d0\u5230\u7684\u8981\u6c42\u8fdb\u884c\u5b9e\u73b0\u3002\u540c\u65f6\uff0c\u8fd8\u9700\u8981\u56de\u7b54\u6307\u5bfc\u4e66\u7ed9\u51fa\u7684 \u95ee\u9898 \u3002 1. \u90e8\u7f72\u5b9e\u9a8c\u73af\u5883 \u00b6 \u5b9e\u9a8c\u73af\u5883\u4e3b\u8981\u5206\u4e3a\u4e09\u90e8\u5206\uff1axv6\u8fd0\u884c\u73af\u5883\u3001xv6\u6e90\u7801\u3001xv6\u7684\u7f16\u8bd1\u4e0e\u8fd0\u884c\u3002 1.1 xv6\u8fd0\u884c\u73af\u5883 \u00b6 xv6\u8fd0\u884c\u73af\u5883\u8be6\u89c1 \u5b9e\u9a8c\u5e73\u53f0\u53ca\u73af\u5883\u914d\u7f6e \u3002 1.2 xv6\u6e90\u7801 \u00b6 \u8bf7clone\u6700\u65b0\u4ee3\u7801\u5230\u672c\u5730\u8fdb\u884c\u5b9e\u9a8c\uff1a $ git clone https://gitee.com/hitsz-lab/xv6-labs-2020 \u6bcf\u4e2a\u5b9e\u9a8c\u9879\u76ee\u90fd\u5728\u4e0d\u540c\u7684\u5206\u652f\u4e0a\u5b8c\u6210\uff0c\u8bf7 \u6ce8\u610f\u5207\u6362\u5206\u652f \uff0c\u4f8b\u5982\uff0c\u5b9e\u9a8c\u4e00\u9700\u5207\u6362\u5230util\u5206\u652f\u540e\u8fdb\u884c\u5f00\u53d1\u3002 $ git branch -a $ git checkout util xv6\u7684\u4ee3\u7801\u7ed3\u6784\uff1a 1.3 \u7f16\u8bd1\u5e76\u8fd0\u884cxv6 \u00b6 Step1 \u5728\u4ee3\u7801\u603b\u76ee\u5f55xv6-labs-2020\u4e0b\u8f93\u5165\u201cmake qemu\u201d\uff0c \u7f16\u8bd1\u5e76\u8fd0\u884cxv6; Step2 \u5f53\u53ef\u4ee5\u770b\u5230\u201cinit: starting sh\u201d\u7684\u5b57\u6837\u8868\u793axv6\u5df2\u7ecf\u6b63\u5e38\u542f\u52a8\uff0c\u6b64\u65f6\u5728\u201c$\u201d\u63d0\u793a\u7b26\u540e\u53ef\u8f93\u5165xv6\u652f\u6301\u7684shell\u547d\u4ee4\u3002 qemu\u9000\u51fa\u65b9\u6cd5 \u5148\u6309 ctrl+a \u7ec4\u5408\u952e\uff0c\u63a5\u7740\u5b8c\u5168\u677e\u5f00, \u518d\u6309 x 2. \u51c6\u5907\u5de5\u4f5c \u00b6 \u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u7f16\u5199 \u5b9e\u9a8c\u5185\u5bb9 \u4e2d\u4ecb\u7ecd\u76845\u4e2aUnix\u5b9e\u7528\u7a0b\u5e8f\u3002\u521d\u6b21\u63a5\u89e6\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u9a8c\u7684\u4f60\u53ef\u80fd\u4f1a\u611f\u5230\u4e0d\u77e5\u6240\u63aa\uff0c\u56e0\u6b64\u4e0d\u59a8\u5148\u4f53\u9a8c\u4e00\u4e0b\u8fd9\u4e9b\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u679c\u3002\u5b9e\u9645\u4e0a\uff0cLinux\u4e2d\u5177\u5907\u672c\u6b21\u5b9e\u9a8c\u8981\u5b9e\u73b0\u7684\u4e00\u4e9b\u7a0b\u5e8f\uff0c\u4f8b\u5982sleep\u3001find\u3001xargs\u3002\u4f60\u53ef\u4ee5\u5148\u5c1d\u8bd5\u5728Linux\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u547d\u4ee4\uff0c\u5145\u5206\u4f53\u4f1a\u529f\u80fd\u540e\u518d\u5f00\u59cb\u7f16\u7a0b\u3002\u5f53\u7136\uff0cLinux\u4e2d\u547d\u4ee4\u7684\u529f\u80fd\u8f83\u4e3a\u590d\u6742\uff0c\u6211\u4eec\u4ec5\u8981\u6c42\u5b9e\u73b0\u7b80\u5316\u7248\u3002 \u5b9e\u9a8c\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec \u5f3a\u70c8\u5efa\u8bae \u4f60\u5148\u5b8c\u6210\u4ee5\u4e0b\u5de5\u4f5c\uff1a \u719f\u6089\u5e38\u89c1\u547d\u4ee4\u7684\u4f7f\u7528\uff0c\u5982 echo \u3001 xargs \u3001 find \u3002 \u4e86\u89e3\u76ee\u5f55\u7684\u4f7f\u7528\u3002\u4e86\u89e3 . \u3001 .. \u3001 / \u5206\u522b\u8868\u793a\u4ec0\u4e48\uff0c\u719f\u6089\u5e38\u89c1\u7684\u76ee\u5f55\u64cd\u4f5c\u547d\u4ee4\uff0c\u5982 mkdir \u3001 cd \u3002 \u4e86\u89e3\u91cd\u5b9a\u5411\u7684\u4f7f\u7528\uff0c\u91cd\u5b9a\u5411\u5373\u547d\u4ee4\u4e2d\u7684 < \u548c > \uff0c\u7528\u4e8e\u4fee\u6539\u53f3\u4fa7\u547d\u4ee4\u7684\u6807\u51c6\u8f93\u5165/\u8f93\u51fa\u3002\u4f8b\u5982 echo Hello world > file_a \u4f1a\u5c06\u5b57\u7b26\u4e32 Hello world \u8f93\u51fa\u81f3\u6587\u4ef6 file_a \uff0c\u800c\u4e0d\u662f\u6253\u5370\u5728\u7ec8\u7aef\u3002 \u4e86\u89e3\u7ba1\u9053\u7684\u4f7f\u7528\u3002\u7ba1\u9053\u5373\u547d\u4ee4\u4e2d\u7684 | \uff0c\u7528\u4e8e\u5c06\u5de6\u4fa7\u547d\u4ee4\u7684\u6807\u51c6\u8f93\u51fa\u4f20\u9012\u7ed9\u53f3\u4fa7\u547d\u4ee4\u7684\u6807\u51c6\u8f93\u5165\u3002 \u4e86\u89e3\u5e38\u89c1\u7cfb\u7edf\u8c03\u7528\u7684\u4f7f\u7528\u3002\u5982 fork \u3001 exit \u3001 wait \u3001 open \u3001 close \u3001 read / write \u3001 pipe \u3001 dup \u3002 3. \u7f16\u5199\u7528\u6237\u7a0b\u5e8f \u00b6 3.1 \u4ee3\u7801\u793a\u4f8b \u00b6 sleep\u7a0b\u5e8f\u5df2\u7ecf\u5b9e\u73b0\uff0c\u4f60\u9700\u8981\u7406\u89e3\u5176\u4ee3\u7801\u5e76\u6210\u529f\u5c06\u5176\u8fd0\u884c\uff1a Step1. \u9605\u8bfbuser/sleep.c\u6587\u4ef6\uff0c\u7406\u89e3\u4ee3\u7801\u548c\u6ce8\u91ca\uff1b Step2. \u7531\u4e8esleep.c\u4e3a\u65b0\u589e\u7684\u7528\u6237\u7a0b\u5e8f\u6587\u4ef6\uff0c\u8bf7\u5728Makefile\u6587\u4ef6\u4e2d\u627e\u5230UPROGS\uff0c\u5728UPROGS\u4e0a\u589e\u52a0\u4e00\u884c $U/_sleep \uff1a Step3. \u7f16\u8bd1xv6\u5e76\u8fd0\u884csleep\u3002 Step4.\u56de\u7b543.3\u4e2d\u7684 \u76f8\u5173\u95ee\u9898 \u3002 3.2 \u5b9e\u9a8c\u63d0\u793a \u00b6 1) pingpong a) \u4f7f\u7528 pipe() \u521b\u5efa\u7ba1\u9053\uff0c\u8be6\u89c1 \u5b9e\u9a8c\u539f\u7406 \uff1b b) \u4f7f\u7528 fork() \u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u6ce8\u610f\u6839\u636e\u8fd4\u56de\u503c\uff0c\u5224\u65ad\u7236\u5b50\u8fdb\u7a0b\uff1b c) \u5229\u7528 read() , write() \u51fd\u6570\u5bf9\u7ba1\u9053\u8fdb\u884c\u8bfb\u5199\u3002 d) \u8bf7\u5728 user/pingpong.c \u4e2d\u5b9e\u73b0\u3002 e) \u4fee\u6539 Makefile \uff0c\u5c06\u7a0b\u5e8f\u6dfb\u52a0\u5230 UPROGS \u3002 2) primes a) \u6839\u636e\u9700\u6c42\u5229\u7528 fork() \u521b\u5efa\u5b50\u8fdb\u7a0b; b) \u5229\u7528\u591a\u4e2a pipe() \u521b\u5efa\u7684\u7ba1\u9053\u5728\u7236\u5b50\u8fdb\u7a0b\u95f4\u8fdb\u884c\u6570\u636e\u7684\u4f20\u8f93\uff1b c) \u53ef\u4ee5\u4f7f\u7528 dup() \u590d\u5236\u6587\u4ef6\u53e5\u67c4\uff08\u7ba1\u9053\u7684\u5199\u5165\u3001\u8bfb\u51fa\u7aef\uff09\uff0c\u7528\u6765\u8282\u7701\u8d44\u6e90\uff1a \u4f8b\u5982\uff0c\u5c06\u201dhello world\u201d\u5199\u5165\u5230\u6807\u51c6\u8f93\u5165\u3002 fd = dup ( 1 ); write ( fd , \u201c hello \u201d , 6 ); write ( fd , \u201c world \\ en \u201d , 6 ); //\u6b64\u65f6fd!=1\uff0c\u4f46\u5b57\u7b26\u4e32\u4ecd\u7136\u4f1a\u5199\u5165\u6807\u51c6\u8f93\u51fa \u63d0\u793a \u7531\u4e8exv6\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u548c\u8fdb\u7a0b\u6570\u91cf\u6709\u9650\uff08\u8be6\u89c1 kernel/param.h \uff09\uff0c\u8bf7\u6ce8\u610f\u5173\u95ed\u8fdb\u7a0b\u4e0d\u9700\u8981\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5426\u5219\uff0c\u4f60\u7684\u7a0b\u5e8f\u5728xv6\u4e0a\u8fd0\u884c\u4f1a\u5728\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u5230\u8fbe35\u4e4b\u524d\u8017\u5b8c\u8d44\u6e90\u3002 // kernel/param.h #define NPROC 64 // maximum number of processes #define NOFILE 16 // open files per process #define NFILE 100 // open files per system d) \u7ba1\u9053 read \u662f\u4e00\u76f4\u963b\u585e\uff0c\u76f4\u5230\u7ba1\u9053\u6709\u6570\u636e\u5199\u5165\uff1b\u5982\u679c\u7ed1\u5b9a\u5728\u8fd9\u4e2a\u7ba1\u9053\u7684\u5199\u7aef\u53e3\u5173\u95ed\u4e86\uff0c read \u8fd4\u56de0\u3002\u6ce8\u610f\u53ca\u65f6\u5173\u95ed\u7ba1\u9053\u7684\u5199\u7aef\uff0c\u5426\u5219\u8bfb\u51fa\u7aef\u65e0\u6cd5\u5224\u65ad\u4f20\u8f93\u7684\u7ed3\u675f\u3002 e) \u8981\u786e\u4fdd\u5b50\u8fdb\u7a0b\u5148\u9000\u51fa\uff0c\u7236\u8fdb\u7a0b\u518d\u9000\u51fa\u3002\u8981\u4e0d\u7136\u5bb9\u6613\u51fa\u73b0\u5982\u4e0b\u9519\u8bef\uff0c\u5373 $ \u7b26\u53f7\u5148\u6253\u5370\u51fa\u6765\uff0c\u4f46\u662f\u5b50\u8fdb\u7a0b\u8fd8\u5728\u8fd0\u884c\u72b6\u6001\u4e2d\u3002\u5982\u4e0b\u56fe\u6240\u793a\u3002 f) \u5efa\u8bae\u76f4\u63a5\u5c0632\u4f4d\uff084\u5b57\u8282\uff09int\u5199\u5165\u7ba1\u9053\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u683c\u5f0f\u5316\u7684ASCII I/O\u3002\u5373\u5f80\u7ba1\u9053\u4e2d\u519932\u4f4d\u7684\u6574\u6570\uff0c\u65e0\u9700\u8f6c\u6362\u4f4d\u5b57\u7b26\u4e32\u3002 3) find a) \u53ef\u67e5\u770b user/ls.c \u4ee5\u4e86\u89e3\u5982\u4f55\u8bfb\u53d6\u76ee\u5f55\uff1b b) \u53ef\u53c2\u7167 user/ls.c \u7684\u903b\u8f91\u5b9e\u73b0\uff1b c) \u4f7f\u7528\u9012\u5f52\u5141\u8bb8 find \u8fdb\u5165\u5230\u5b50\u76ee\u5f55\uff1b d) \u4e0d\u8981\u9012\u5f52\u8fdb\u5165 . \u548c .. \uff1b e) \u6d4b\u8bd5\u65f6\u9700\u8981\u521b\u5efa\u65b0\u7684\u6587\u4ef6\u548c\u6587\u4ef6\u5939\uff0c\u53ef\u4f7f\u7528 make clean \u6e05\u7406\u6587\u4ef6\u7cfb\u7edf\uff0c\u5e76\u4f7f\u7528 make qemu \u518d\u7f16\u8bd1\u8fd0\u884c\u3002 4) xargs a) xv6\u4e2d\u7684 xargs \u57fa\u672c\u529f\u80fd\u6f14\u793a\uff1a \u793a\u4f8b1\uff1a $ xargs echo good # \u6307\u5b9a\u8981\u6267\u884c\u7684\u547d\u4ee4\uff1aecho\uff0c\u540c\u65f6\u8f93\u5165\u53c2\u6570'good' bye # \u6362\u884c\u540e\u7ee7\u7eed\u8f93\u5165echo\u7684\u53c2\u6570'bye' good bye # \u6267\u884c\"echo good bye\"\uff0c\u8f93\u51fa\"good bye\" hello too # \u6362\u884c\u540e\u8f93\u5165\u53c2\u6570'hello too' good hello too # \u6267\u884c\"echo good hello too\"\uff0c\u8f93\u51fa\"good hello too\" # \u901a\u8fc7ctrl+D\u7ed3\u675f\u8f93\u5165 $ echo \u547d\u4ee4\u7528\u4e8e\u5c06\u63a5\u6536\u5230\u7684\u53c2\u6570\u4f5c\u4e3a\u5b57\u7b26\u4e32\u8f93\u51fa\u3002\u793a\u4f8b\u4e2d\uff0c\u6bcf\u8f93\u5165\u4e00\u884c\u5b57\u7b26\u4e32 string \uff0c\u7a0b\u5e8f\u5c31\u4f1a\u6267\u884c\u4e00\u6b21 echo good string \u3002\u7528\u6237\u8f93\u5165 ctrl+D \u7684\u65f6\u5019\uff0c gets \u7b49\u51fd\u6570\u8fd4\u56de\u4e3a\u7a7a\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cLinux\u4e2d xargs \u5177\u5907 \"-n\" \u9009\u9879\uff0c\u7528\u4e8e\u9009\u62e9\u6bcf\u6b21\u6267\u884c\u547d\u4ee4\u9700\u8981\u63a5\u6536\u7684\u53c2\u6570\u6570\u91cf\uff0c\u4f8b\u5982\uff1a $ xargs -n2 echo good # \u8bbe\u7f6e\u9009\u9879-n\u4e3a2\uff0c\u8868\u793a\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff08\u4e24\u884c\u8f93\u5165\uff09\uff1b\u6307\u5b9a\u8981\u6267\u884c\u7684\u547d\u4ee4\uff1aecho\uff0c\u5e76\u8f93\u5165\u53c2\u6570'good' bye # \u6362\u884c\u540e\u8f93\u5165\u53c2\u6570'bye' hello too # \u6362\u884c\u540e\u7ee7\u7eed\u8f93\u5165\u53c2\u6570'hello too'\uff0c\u81f3\u6b64\u63a5\u6536\u4e24\u4e2a\u53c2\u6570 good bye hello # \u6267\u884c\"echo good bye hello too\"\uff0c\u8f93\u51fa\"good bye hello\" good too # \u901a\u8fc7ctrl+D\u7ed3\u675f\u8f93\u5165\uff0c\u8f93\u51fa\"good too\" # \u901a\u8fc7ctrl+D\u7ed3\u675f\u8f93\u5165 $ \u4e3a\u4e86\u7b80\u5316\u5b9e\u73b0\uff0c\u6211\u4eec\u4e0d\u8981\u6c42\u5b9e\u73b0\u9009\u9879 \"-n\" \uff0c\u5b9e\u73b0\u65f6\u8bf7 \u6bcf\u63a5\u6536\u4e00\u884c\u5c31\u6267\u884c\u4e00\u6b21\u6307\u5b9a\u7684\u547d\u4ee4 \u3002 \u793a\u4f8b2\uff1a $ make qemu ... $ echo 3 4 | xargs echo 1 2 1 2 3 4 $ \u672c\u793a\u4f8b\u4e2d\uff0c\u7ba1\u9053\u5de6\u4fa7 echo \u7684\u8f93\u51fa\u4e3a \"3 4\" \uff0c\u901a\u8fc7\u7ba1\u9053\u548c xargs \uff0c\u5b83\u88ab\u4f20\u9012\u7ed9\u53f3\u4fa7\u7684echo\uff0c\u5373\u53f3\u4fa7echo\u5b9e\u9645\u5f97\u5230\u7684\u53c2\u6570\u4e3a\"1\"\u3001\"2\"\u3001\"3\"\u3001\"4\"\u3002\u6700\u7ec8\u7ed3\u679c\u7b49\u4ef7\u4e8e\u6267\u884c\u547d\u4ee4 \"echo 1 2 3 4\" \u3002\u5b9e\u9a8c\u4e2d\u4f60\u4e0d\u5fc5\u8003\u8651\u7ba1\u9053\u7684\u5b9e\u73b0\u4e0e\u4f7f\u7528\uff0c\u4f60\u7684\u7a0b\u5e8f\u53ef\u4ee5\u76f4\u63a5\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6\u7ba1\u9053\u4f20\u9012\u7ed9\u4f60\u7684\u5b57\u7b26\u4e32\u3002 b) \u4f7f\u7528 fork() \u548c exec() \u7cfb\u7edf\u5bf9\u6bcf\u4e00\u884c\u8f93\u5165\u8c03\u7528\u547d\u4ee4\uff1bexec\u63a5\u6536\u7684\u4e8c\u7ef4\u53c2\u6570\u6570\u7ec4argv\uff0c argv[0] \u5fc5\u987b\u662f\u8be5\u547d\u4ee4\u672c\u8eab\uff0c\u6700\u540e\u4e00\u4e2a\u53c2\u6570 argv[size-1] \u5fc5\u987b\u4e3a0\uff0c\u5426\u5219\u5c06\u6267\u884c\u5931\u8d25\u3002 c) \u4f7f\u7528 wait() \u7b49\u5f85\u5b50\u8fdb\u7a0b\u8fd0\u884c\u5b8c\u547d\u4ee4\uff1b d) \u53ef\u4ee5\u4f7f\u7528 kernel/param.h \u4e2d\u5b9a\u4e49\u7684 MAXARG \u6765\u58f0\u660e argv \u7684\u957f\u5ea6\uff1b e) \u53ef\u4f7f\u7528 make clean \u548c make qemu \u6e05\u7406\u6587\u4ef6\u7cfb\u7edf\u5e76\u91cd\u65b0\u8fd0\u884c\u3002 \u63d0\u793a\uff1a 1) \u5173\u4e8e\u4ee5\u4e0a5\u4e2aUnix\u5b9e\u7528\u7a0b\u5e8f\u7684\u5b9e\u73b0\u4ea6\u53ef\u53c2\u8003MIT\u5b98\u65b9\u7684\u5b9e\u9a8c\u6307\u5bfc\u5b8c\u6210\u5b9e\u9a8c Lab: Xv6 and Unix utilities 2) \u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u7684\u793a\u4f8b\u53ef\u67e5\u9605\u300axv6 book\u300bchapter 1\u7684\u5185\u5bb9\uff0c \u5c24\u5176\u662f1.2\u30011.3\u8282\u7684\u5185\u5bb9 \u3002 3.3 \u56de\u7b54\u95ee\u9898 \u00b6 \u4e00\u3001\u9605\u8bfbsleep.c\uff0c\u56de\u7b54\u4e0b\u5217\u95ee\u9898 1) \u5f53\u7528\u6237\u5728xv6\u7684shell\u4e2d\uff0c\u8f93\u5165\u4e86\u547d\u4ee4 sleep hello world\\n \uff0c\u8bf7\u95eeargc\u7684\u503c\u662f\u591a\u5c11\uff0cargv\u6570\u7ec4\u5927\u5c0f\u662f\u591a\u5c11\u3002 2) \u8bf7\u63cf\u8ff0main\u51fd\u6570\u53c2\u6570argv\u4e2d\u7684\u6307\u9488\u6307\u5411\u4e86\u54ea\u4e9b\u5b57\u7b26\u4e32\uff0c\u4ed6\u4eec\u7684\u542b\u4e49\u662f\u4ec0\u4e48\u3002 3) \u54ea\u4e9b\u4ee3\u7801\u8c03\u7528\u4e86\u7cfb\u7edf\u8c03\u7528\u4e3a\u7a0b\u5e8fsleep\u63d0\u4f9b\u4e86\u670d\u52a1\uff1f \u4e8c\u3001\u4e86\u89e3\u7ba1\u9053\u6a21\u578b\uff0c\u56de\u7b54\u4e0b\u5217\u95ee\u9898 1) \u7b80\u8981\u8bf4\u660e\u4f60\u662f\u600e\u4e48\u521b\u5efa\u7ba1\u9053\u7684\uff0c\u53c8\u662f\u600e\u4e48\u4f7f\u7528\u7ba1\u9053\u4f20\u8f93\u6570\u636e\u7684\u3002 2) fork\u4e4b\u540e\uff0c\u6211\u4eec\u600e\u4e48\u7528\u7ba1\u9053\u5728\u7236\u5b50\u8fdb\u7a0b\u4f20\u8f93\u6570\u636e\uff1f 3) \u8bd5\u89e3\u91ca\uff0c\u4e3a\u4ec0\u4e48\u8981\u63d0\u524d\u5173\u95ed\u7ba1\u9053\u4e2d\u4e0d\u4f7f\u7528\u7684\u4e00\u7aef\uff1f\uff08\u63d0\u793a\uff1a\u7ed3\u5408\u7ba1\u9053\u7684\u963b\u585e\u673a\u5236\uff09","title":"\u5b9e\u9a8c\u6b65\u9aa4"},{"location":"lab1/part3/#_1","text":"\u4e0b\u9762\uff0c\u6211\u4eec\u5c31\u6b63\u5f0f\u8fdb\u5165\u5230\u5404\u5b9e\u9a8c\u7684\u7ec6\u8282\u4e2d\uff0c\u5e76\u7ed9\u51fa\u5b9e\u9a8c\u5b9e\u73b0\u7684\u4e00\u4e9b\u63d0\u793a\u3002\u5927\u5bb6\u9700\u8981\u4f9d\u7167\u5b9e\u9a8c\u6307\u5bfc\u4e66\u7684 \u5b9e\u9a8c\u6982\u8ff0 \u4e2d\u63d0\u5230\u7684\u8981\u6c42\u8fdb\u884c\u5b9e\u73b0\u3002\u540c\u65f6\uff0c\u8fd8\u9700\u8981\u56de\u7b54\u6307\u5bfc\u4e66\u7ed9\u51fa\u7684 \u95ee\u9898 \u3002","title":"\u5b9e\u9a8c\u6b65\u9aa4"},{"location":"lab1/part3/#1","text":"\u5b9e\u9a8c\u73af\u5883\u4e3b\u8981\u5206\u4e3a\u4e09\u90e8\u5206\uff1axv6\u8fd0\u884c\u73af\u5883\u3001xv6\u6e90\u7801\u3001xv6\u7684\u7f16\u8bd1\u4e0e\u8fd0\u884c\u3002","title":"1. \u90e8\u7f72\u5b9e\u9a8c\u73af\u5883"},{"location":"lab1/part3/#11-xv6","text":"xv6\u8fd0\u884c\u73af\u5883\u8be6\u89c1 \u5b9e\u9a8c\u5e73\u53f0\u53ca\u73af\u5883\u914d\u7f6e \u3002","title":"1.1  xv6\u8fd0\u884c\u73af\u5883"},{"location":"lab1/part3/#12-xv6","text":"\u8bf7clone\u6700\u65b0\u4ee3\u7801\u5230\u672c\u5730\u8fdb\u884c\u5b9e\u9a8c\uff1a $ git clone https://gitee.com/hitsz-lab/xv6-labs-2020 \u6bcf\u4e2a\u5b9e\u9a8c\u9879\u76ee\u90fd\u5728\u4e0d\u540c\u7684\u5206\u652f\u4e0a\u5b8c\u6210\uff0c\u8bf7 \u6ce8\u610f\u5207\u6362\u5206\u652f \uff0c\u4f8b\u5982\uff0c\u5b9e\u9a8c\u4e00\u9700\u5207\u6362\u5230util\u5206\u652f\u540e\u8fdb\u884c\u5f00\u53d1\u3002 $ git branch -a $ git checkout util xv6\u7684\u4ee3\u7801\u7ed3\u6784\uff1a","title":"1.2  xv6\u6e90\u7801"},{"location":"lab1/part3/#13-xv6","text":"Step1 \u5728\u4ee3\u7801\u603b\u76ee\u5f55xv6-labs-2020\u4e0b\u8f93\u5165\u201cmake qemu\u201d\uff0c \u7f16\u8bd1\u5e76\u8fd0\u884cxv6; Step2 \u5f53\u53ef\u4ee5\u770b\u5230\u201cinit: starting sh\u201d\u7684\u5b57\u6837\u8868\u793axv6\u5df2\u7ecf\u6b63\u5e38\u542f\u52a8\uff0c\u6b64\u65f6\u5728\u201c$\u201d\u63d0\u793a\u7b26\u540e\u53ef\u8f93\u5165xv6\u652f\u6301\u7684shell\u547d\u4ee4\u3002 qemu\u9000\u51fa\u65b9\u6cd5 \u5148\u6309 ctrl+a \u7ec4\u5408\u952e\uff0c\u63a5\u7740\u5b8c\u5168\u677e\u5f00, \u518d\u6309 x","title":"1.3  \u7f16\u8bd1\u5e76\u8fd0\u884cxv6"},{"location":"lab1/part3/#2","text":"\u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u7f16\u5199 \u5b9e\u9a8c\u5185\u5bb9 \u4e2d\u4ecb\u7ecd\u76845\u4e2aUnix\u5b9e\u7528\u7a0b\u5e8f\u3002\u521d\u6b21\u63a5\u89e6\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u9a8c\u7684\u4f60\u53ef\u80fd\u4f1a\u611f\u5230\u4e0d\u77e5\u6240\u63aa\uff0c\u56e0\u6b64\u4e0d\u59a8\u5148\u4f53\u9a8c\u4e00\u4e0b\u8fd9\u4e9b\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u679c\u3002\u5b9e\u9645\u4e0a\uff0cLinux\u4e2d\u5177\u5907\u672c\u6b21\u5b9e\u9a8c\u8981\u5b9e\u73b0\u7684\u4e00\u4e9b\u7a0b\u5e8f\uff0c\u4f8b\u5982sleep\u3001find\u3001xargs\u3002\u4f60\u53ef\u4ee5\u5148\u5c1d\u8bd5\u5728Linux\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u547d\u4ee4\uff0c\u5145\u5206\u4f53\u4f1a\u529f\u80fd\u540e\u518d\u5f00\u59cb\u7f16\u7a0b\u3002\u5f53\u7136\uff0cLinux\u4e2d\u547d\u4ee4\u7684\u529f\u80fd\u8f83\u4e3a\u590d\u6742\uff0c\u6211\u4eec\u4ec5\u8981\u6c42\u5b9e\u73b0\u7b80\u5316\u7248\u3002 \u5b9e\u9a8c\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec \u5f3a\u70c8\u5efa\u8bae \u4f60\u5148\u5b8c\u6210\u4ee5\u4e0b\u5de5\u4f5c\uff1a \u719f\u6089\u5e38\u89c1\u547d\u4ee4\u7684\u4f7f\u7528\uff0c\u5982 echo \u3001 xargs \u3001 find \u3002 \u4e86\u89e3\u76ee\u5f55\u7684\u4f7f\u7528\u3002\u4e86\u89e3 . \u3001 .. \u3001 / \u5206\u522b\u8868\u793a\u4ec0\u4e48\uff0c\u719f\u6089\u5e38\u89c1\u7684\u76ee\u5f55\u64cd\u4f5c\u547d\u4ee4\uff0c\u5982 mkdir \u3001 cd \u3002 \u4e86\u89e3\u91cd\u5b9a\u5411\u7684\u4f7f\u7528\uff0c\u91cd\u5b9a\u5411\u5373\u547d\u4ee4\u4e2d\u7684 < \u548c > \uff0c\u7528\u4e8e\u4fee\u6539\u53f3\u4fa7\u547d\u4ee4\u7684\u6807\u51c6\u8f93\u5165/\u8f93\u51fa\u3002\u4f8b\u5982 echo Hello world > file_a \u4f1a\u5c06\u5b57\u7b26\u4e32 Hello world \u8f93\u51fa\u81f3\u6587\u4ef6 file_a \uff0c\u800c\u4e0d\u662f\u6253\u5370\u5728\u7ec8\u7aef\u3002 \u4e86\u89e3\u7ba1\u9053\u7684\u4f7f\u7528\u3002\u7ba1\u9053\u5373\u547d\u4ee4\u4e2d\u7684 | \uff0c\u7528\u4e8e\u5c06\u5de6\u4fa7\u547d\u4ee4\u7684\u6807\u51c6\u8f93\u51fa\u4f20\u9012\u7ed9\u53f3\u4fa7\u547d\u4ee4\u7684\u6807\u51c6\u8f93\u5165\u3002 \u4e86\u89e3\u5e38\u89c1\u7cfb\u7edf\u8c03\u7528\u7684\u4f7f\u7528\u3002\u5982 fork \u3001 exit \u3001 wait \u3001 open \u3001 close \u3001 read / write \u3001 pipe \u3001 dup \u3002","title":"2.  \u51c6\u5907\u5de5\u4f5c"},{"location":"lab1/part3/#3","text":"","title":"3.  \u7f16\u5199\u7528\u6237\u7a0b\u5e8f"},{"location":"lab1/part3/#31","text":"sleep\u7a0b\u5e8f\u5df2\u7ecf\u5b9e\u73b0\uff0c\u4f60\u9700\u8981\u7406\u89e3\u5176\u4ee3\u7801\u5e76\u6210\u529f\u5c06\u5176\u8fd0\u884c\uff1a Step1. \u9605\u8bfbuser/sleep.c\u6587\u4ef6\uff0c\u7406\u89e3\u4ee3\u7801\u548c\u6ce8\u91ca\uff1b Step2. \u7531\u4e8esleep.c\u4e3a\u65b0\u589e\u7684\u7528\u6237\u7a0b\u5e8f\u6587\u4ef6\uff0c\u8bf7\u5728Makefile\u6587\u4ef6\u4e2d\u627e\u5230UPROGS\uff0c\u5728UPROGS\u4e0a\u589e\u52a0\u4e00\u884c $U/_sleep \uff1a Step3. \u7f16\u8bd1xv6\u5e76\u8fd0\u884csleep\u3002 Step4.\u56de\u7b543.3\u4e2d\u7684 \u76f8\u5173\u95ee\u9898 \u3002","title":"3.1  \u4ee3\u7801\u793a\u4f8b"},{"location":"lab1/part3/#32","text":"1) pingpong a) \u4f7f\u7528 pipe() \u521b\u5efa\u7ba1\u9053\uff0c\u8be6\u89c1 \u5b9e\u9a8c\u539f\u7406 \uff1b b) \u4f7f\u7528 fork() \u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u6ce8\u610f\u6839\u636e\u8fd4\u56de\u503c\uff0c\u5224\u65ad\u7236\u5b50\u8fdb\u7a0b\uff1b c) \u5229\u7528 read() , write() \u51fd\u6570\u5bf9\u7ba1\u9053\u8fdb\u884c\u8bfb\u5199\u3002 d) \u8bf7\u5728 user/pingpong.c \u4e2d\u5b9e\u73b0\u3002 e) \u4fee\u6539 Makefile \uff0c\u5c06\u7a0b\u5e8f\u6dfb\u52a0\u5230 UPROGS \u3002 2) primes a) \u6839\u636e\u9700\u6c42\u5229\u7528 fork() \u521b\u5efa\u5b50\u8fdb\u7a0b; b) \u5229\u7528\u591a\u4e2a pipe() \u521b\u5efa\u7684\u7ba1\u9053\u5728\u7236\u5b50\u8fdb\u7a0b\u95f4\u8fdb\u884c\u6570\u636e\u7684\u4f20\u8f93\uff1b c) \u53ef\u4ee5\u4f7f\u7528 dup() \u590d\u5236\u6587\u4ef6\u53e5\u67c4\uff08\u7ba1\u9053\u7684\u5199\u5165\u3001\u8bfb\u51fa\u7aef\uff09\uff0c\u7528\u6765\u8282\u7701\u8d44\u6e90\uff1a \u4f8b\u5982\uff0c\u5c06\u201dhello world\u201d\u5199\u5165\u5230\u6807\u51c6\u8f93\u5165\u3002 fd = dup ( 1 ); write ( fd , \u201c hello \u201d , 6 ); write ( fd , \u201c world \\ en \u201d , 6 ); //\u6b64\u65f6fd!=1\uff0c\u4f46\u5b57\u7b26\u4e32\u4ecd\u7136\u4f1a\u5199\u5165\u6807\u51c6\u8f93\u51fa \u63d0\u793a \u7531\u4e8exv6\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u548c\u8fdb\u7a0b\u6570\u91cf\u6709\u9650\uff08\u8be6\u89c1 kernel/param.h \uff09\uff0c\u8bf7\u6ce8\u610f\u5173\u95ed\u8fdb\u7a0b\u4e0d\u9700\u8981\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5426\u5219\uff0c\u4f60\u7684\u7a0b\u5e8f\u5728xv6\u4e0a\u8fd0\u884c\u4f1a\u5728\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u5230\u8fbe35\u4e4b\u524d\u8017\u5b8c\u8d44\u6e90\u3002 // kernel/param.h #define NPROC 64 // maximum number of processes #define NOFILE 16 // open files per process #define NFILE 100 // open files per system d) \u7ba1\u9053 read \u662f\u4e00\u76f4\u963b\u585e\uff0c\u76f4\u5230\u7ba1\u9053\u6709\u6570\u636e\u5199\u5165\uff1b\u5982\u679c\u7ed1\u5b9a\u5728\u8fd9\u4e2a\u7ba1\u9053\u7684\u5199\u7aef\u53e3\u5173\u95ed\u4e86\uff0c read \u8fd4\u56de0\u3002\u6ce8\u610f\u53ca\u65f6\u5173\u95ed\u7ba1\u9053\u7684\u5199\u7aef\uff0c\u5426\u5219\u8bfb\u51fa\u7aef\u65e0\u6cd5\u5224\u65ad\u4f20\u8f93\u7684\u7ed3\u675f\u3002 e) \u8981\u786e\u4fdd\u5b50\u8fdb\u7a0b\u5148\u9000\u51fa\uff0c\u7236\u8fdb\u7a0b\u518d\u9000\u51fa\u3002\u8981\u4e0d\u7136\u5bb9\u6613\u51fa\u73b0\u5982\u4e0b\u9519\u8bef\uff0c\u5373 $ \u7b26\u53f7\u5148\u6253\u5370\u51fa\u6765\uff0c\u4f46\u662f\u5b50\u8fdb\u7a0b\u8fd8\u5728\u8fd0\u884c\u72b6\u6001\u4e2d\u3002\u5982\u4e0b\u56fe\u6240\u793a\u3002 f) \u5efa\u8bae\u76f4\u63a5\u5c0632\u4f4d\uff084\u5b57\u8282\uff09int\u5199\u5165\u7ba1\u9053\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u683c\u5f0f\u5316\u7684ASCII I/O\u3002\u5373\u5f80\u7ba1\u9053\u4e2d\u519932\u4f4d\u7684\u6574\u6570\uff0c\u65e0\u9700\u8f6c\u6362\u4f4d\u5b57\u7b26\u4e32\u3002 3) find a) \u53ef\u67e5\u770b user/ls.c \u4ee5\u4e86\u89e3\u5982\u4f55\u8bfb\u53d6\u76ee\u5f55\uff1b b) \u53ef\u53c2\u7167 user/ls.c \u7684\u903b\u8f91\u5b9e\u73b0\uff1b c) \u4f7f\u7528\u9012\u5f52\u5141\u8bb8 find \u8fdb\u5165\u5230\u5b50\u76ee\u5f55\uff1b d) \u4e0d\u8981\u9012\u5f52\u8fdb\u5165 . \u548c .. \uff1b e) \u6d4b\u8bd5\u65f6\u9700\u8981\u521b\u5efa\u65b0\u7684\u6587\u4ef6\u548c\u6587\u4ef6\u5939\uff0c\u53ef\u4f7f\u7528 make clean \u6e05\u7406\u6587\u4ef6\u7cfb\u7edf\uff0c\u5e76\u4f7f\u7528 make qemu \u518d\u7f16\u8bd1\u8fd0\u884c\u3002 4) xargs a) xv6\u4e2d\u7684 xargs \u57fa\u672c\u529f\u80fd\u6f14\u793a\uff1a \u793a\u4f8b1\uff1a $ xargs echo good # \u6307\u5b9a\u8981\u6267\u884c\u7684\u547d\u4ee4\uff1aecho\uff0c\u540c\u65f6\u8f93\u5165\u53c2\u6570'good' bye # \u6362\u884c\u540e\u7ee7\u7eed\u8f93\u5165echo\u7684\u53c2\u6570'bye' good bye # \u6267\u884c\"echo good bye\"\uff0c\u8f93\u51fa\"good bye\" hello too # \u6362\u884c\u540e\u8f93\u5165\u53c2\u6570'hello too' good hello too # \u6267\u884c\"echo good hello too\"\uff0c\u8f93\u51fa\"good hello too\" # \u901a\u8fc7ctrl+D\u7ed3\u675f\u8f93\u5165 $ echo \u547d\u4ee4\u7528\u4e8e\u5c06\u63a5\u6536\u5230\u7684\u53c2\u6570\u4f5c\u4e3a\u5b57\u7b26\u4e32\u8f93\u51fa\u3002\u793a\u4f8b\u4e2d\uff0c\u6bcf\u8f93\u5165\u4e00\u884c\u5b57\u7b26\u4e32 string \uff0c\u7a0b\u5e8f\u5c31\u4f1a\u6267\u884c\u4e00\u6b21 echo good string \u3002\u7528\u6237\u8f93\u5165 ctrl+D \u7684\u65f6\u5019\uff0c gets \u7b49\u51fd\u6570\u8fd4\u56de\u4e3a\u7a7a\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cLinux\u4e2d xargs \u5177\u5907 \"-n\" \u9009\u9879\uff0c\u7528\u4e8e\u9009\u62e9\u6bcf\u6b21\u6267\u884c\u547d\u4ee4\u9700\u8981\u63a5\u6536\u7684\u53c2\u6570\u6570\u91cf\uff0c\u4f8b\u5982\uff1a $ xargs -n2 echo good # \u8bbe\u7f6e\u9009\u9879-n\u4e3a2\uff0c\u8868\u793a\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff08\u4e24\u884c\u8f93\u5165\uff09\uff1b\u6307\u5b9a\u8981\u6267\u884c\u7684\u547d\u4ee4\uff1aecho\uff0c\u5e76\u8f93\u5165\u53c2\u6570'good' bye # \u6362\u884c\u540e\u8f93\u5165\u53c2\u6570'bye' hello too # \u6362\u884c\u540e\u7ee7\u7eed\u8f93\u5165\u53c2\u6570'hello too'\uff0c\u81f3\u6b64\u63a5\u6536\u4e24\u4e2a\u53c2\u6570 good bye hello # \u6267\u884c\"echo good bye hello too\"\uff0c\u8f93\u51fa\"good bye hello\" good too # \u901a\u8fc7ctrl+D\u7ed3\u675f\u8f93\u5165\uff0c\u8f93\u51fa\"good too\" # \u901a\u8fc7ctrl+D\u7ed3\u675f\u8f93\u5165 $ \u4e3a\u4e86\u7b80\u5316\u5b9e\u73b0\uff0c\u6211\u4eec\u4e0d\u8981\u6c42\u5b9e\u73b0\u9009\u9879 \"-n\" \uff0c\u5b9e\u73b0\u65f6\u8bf7 \u6bcf\u63a5\u6536\u4e00\u884c\u5c31\u6267\u884c\u4e00\u6b21\u6307\u5b9a\u7684\u547d\u4ee4 \u3002 \u793a\u4f8b2\uff1a $ make qemu ... $ echo 3 4 | xargs echo 1 2 1 2 3 4 $ \u672c\u793a\u4f8b\u4e2d\uff0c\u7ba1\u9053\u5de6\u4fa7 echo \u7684\u8f93\u51fa\u4e3a \"3 4\" \uff0c\u901a\u8fc7\u7ba1\u9053\u548c xargs \uff0c\u5b83\u88ab\u4f20\u9012\u7ed9\u53f3\u4fa7\u7684echo\uff0c\u5373\u53f3\u4fa7echo\u5b9e\u9645\u5f97\u5230\u7684\u53c2\u6570\u4e3a\"1\"\u3001\"2\"\u3001\"3\"\u3001\"4\"\u3002\u6700\u7ec8\u7ed3\u679c\u7b49\u4ef7\u4e8e\u6267\u884c\u547d\u4ee4 \"echo 1 2 3 4\" \u3002\u5b9e\u9a8c\u4e2d\u4f60\u4e0d\u5fc5\u8003\u8651\u7ba1\u9053\u7684\u5b9e\u73b0\u4e0e\u4f7f\u7528\uff0c\u4f60\u7684\u7a0b\u5e8f\u53ef\u4ee5\u76f4\u63a5\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6\u7ba1\u9053\u4f20\u9012\u7ed9\u4f60\u7684\u5b57\u7b26\u4e32\u3002 b) \u4f7f\u7528 fork() \u548c exec() \u7cfb\u7edf\u5bf9\u6bcf\u4e00\u884c\u8f93\u5165\u8c03\u7528\u547d\u4ee4\uff1bexec\u63a5\u6536\u7684\u4e8c\u7ef4\u53c2\u6570\u6570\u7ec4argv\uff0c argv[0] \u5fc5\u987b\u662f\u8be5\u547d\u4ee4\u672c\u8eab\uff0c\u6700\u540e\u4e00\u4e2a\u53c2\u6570 argv[size-1] \u5fc5\u987b\u4e3a0\uff0c\u5426\u5219\u5c06\u6267\u884c\u5931\u8d25\u3002 c) \u4f7f\u7528 wait() \u7b49\u5f85\u5b50\u8fdb\u7a0b\u8fd0\u884c\u5b8c\u547d\u4ee4\uff1b d) \u53ef\u4ee5\u4f7f\u7528 kernel/param.h \u4e2d\u5b9a\u4e49\u7684 MAXARG \u6765\u58f0\u660e argv \u7684\u957f\u5ea6\uff1b e) \u53ef\u4f7f\u7528 make clean \u548c make qemu \u6e05\u7406\u6587\u4ef6\u7cfb\u7edf\u5e76\u91cd\u65b0\u8fd0\u884c\u3002 \u63d0\u793a\uff1a 1) \u5173\u4e8e\u4ee5\u4e0a5\u4e2aUnix\u5b9e\u7528\u7a0b\u5e8f\u7684\u5b9e\u73b0\u4ea6\u53ef\u53c2\u8003MIT\u5b98\u65b9\u7684\u5b9e\u9a8c\u6307\u5bfc\u5b8c\u6210\u5b9e\u9a8c Lab: Xv6 and Unix utilities 2) \u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u7684\u793a\u4f8b\u53ef\u67e5\u9605\u300axv6 book\u300bchapter 1\u7684\u5185\u5bb9\uff0c \u5c24\u5176\u662f1.2\u30011.3\u8282\u7684\u5185\u5bb9 \u3002","title":"3.2  \u5b9e\u9a8c\u63d0\u793a"},{"location":"lab1/part3/#33","text":"\u4e00\u3001\u9605\u8bfbsleep.c\uff0c\u56de\u7b54\u4e0b\u5217\u95ee\u9898 1) \u5f53\u7528\u6237\u5728xv6\u7684shell\u4e2d\uff0c\u8f93\u5165\u4e86\u547d\u4ee4 sleep hello world\\n \uff0c\u8bf7\u95eeargc\u7684\u503c\u662f\u591a\u5c11\uff0cargv\u6570\u7ec4\u5927\u5c0f\u662f\u591a\u5c11\u3002 2) \u8bf7\u63cf\u8ff0main\u51fd\u6570\u53c2\u6570argv\u4e2d\u7684\u6307\u9488\u6307\u5411\u4e86\u54ea\u4e9b\u5b57\u7b26\u4e32\uff0c\u4ed6\u4eec\u7684\u542b\u4e49\u662f\u4ec0\u4e48\u3002 3) \u54ea\u4e9b\u4ee3\u7801\u8c03\u7528\u4e86\u7cfb\u7edf\u8c03\u7528\u4e3a\u7a0b\u5e8fsleep\u63d0\u4f9b\u4e86\u670d\u52a1\uff1f \u4e8c\u3001\u4e86\u89e3\u7ba1\u9053\u6a21\u578b\uff0c\u56de\u7b54\u4e0b\u5217\u95ee\u9898 1) \u7b80\u8981\u8bf4\u660e\u4f60\u662f\u600e\u4e48\u521b\u5efa\u7ba1\u9053\u7684\uff0c\u53c8\u662f\u600e\u4e48\u4f7f\u7528\u7ba1\u9053\u4f20\u8f93\u6570\u636e\u7684\u3002 2) fork\u4e4b\u540e\uff0c\u6211\u4eec\u600e\u4e48\u7528\u7ba1\u9053\u5728\u7236\u5b50\u8fdb\u7a0b\u4f20\u8f93\u6570\u636e\uff1f 3) \u8bd5\u89e3\u91ca\uff0c\u4e3a\u4ec0\u4e48\u8981\u63d0\u524d\u5173\u95ed\u7ba1\u9053\u4e2d\u4e0d\u4f7f\u7528\u7684\u4e00\u7aef\uff1f\uff08\u63d0\u793a\uff1a\u7ed3\u5408\u7ba1\u9053\u7684\u963b\u585e\u673a\u5236\uff09","title":"3.3 \u56de\u7b54\u95ee\u9898"},{"location":"lab1/part4/","text":"\u5b9e\u9a8c\u63d0\u4ea4 \u00b6 \u5b9e\u9a8c\u4e00\u63d0\u4ea4 \u5b9e\u9a8c\u8bbe\u8ba1\u62a5\u544a \u548c \u5b9e\u9a8c\u4ee3\u7801 \u3002 1 \u5b9e\u9a8c\u8bbe\u8ba1\u62a5\u544a\u4f1a\u7eb3\u5165\u8bc4\u5206\uff08\u867d\u7136\u4e0d\u591a\uff09 \u00b6 \u5b9e\u9a8c\u8bbe\u8ba1\u62a5\u544a\u8981\u6c42 \u56de\u7b54\u5b9e\u9a8c\u4e2d\u7684\u95ee\u9898 \uff0c\u5e76\u5199\u51fa\u5b9e\u9a8c\u8bbe\u8ba1\u601d\u8def\u548c\u8fd0\u884c\u7ed3\u679c \u3002 \u5b9e\u9a8c\u8bbe\u8ba1\u62a5\u544a\u4e5f\u662f\u8bc1\u660e\u5b9e\u9a8c\u662f\u72ec\u7acb\u5b8c\u6210\u7684\u91cd\u8981\u4f9d\u636e\uff0c\u6709\u5206\u6570\u8ffd\u6c42\u7684\u5927\u4f6c\uff08juanwang\uff09\u4eec\u4e0d\u8981\u53ea\u653e\u4ee3\u7801\u548c\u6307\u5bfc\u4e66\u7684\u622a\u56fe\u3002 2 \u5b9e\u9a8c\u4ee3\u7801 \u00b6 \u53ea\u9700\u8981 \u63d0\u4ea4\u6240\u6709\u4fee\u6539\u8fc7\u7684\u4ee3\u7801 \u5373\u53ef\uff0c\u6bd4\u5982pingpong\u5b9e\u9a8c\uff0c\u9700\u8981\u63d0\u4ea4pingpong.c\u548cMakfile\u3002 \u5728\u5b9e\u9a8c\u8fc7\u7a0b\u4e2d\uff0c\u5927\u5bb6\u6ce8\u610f\u4fdd\u5b58\u597d\u81ea\u5df1\u7684\u4ee3\u7801\uff0c\u4fdd\u5b58\u4ee3\u7801\u7684\u4e24\u4e2a\u65b9\u6cd5\uff1a \uff081\uff09\u628a\u6574\u4e2axv6-riscv-fall\u76ee\u5f55\u6253\u5305\uff0c\u7136\u540e\u7528scp\u6216\u8005mobaXterm\u5de5\u5177\u7684sftp\u62f7\u8d1d\u51fa\u6765\uff0c\u81ea\u884c\u4fdd\u5b58\u597d\u6574\u4e2a\u5de5\u7a0b\u6587\u4ef6\uff0c\u4ee5\u5907\u4e0b\u6b21\u5b9e\u9a8c\u4f7f\u7528\u3002 \uff082\uff09 \u5f3a\u70c8\u63a8\u8350 \u5c06\u4ee3\u7801\u63d0\u4ea4\u5230\u81ea\u5df1\u7684Github/Gitee\u7b49\u4ee3\u7801\u6258\u7ba1\u670d\u52a1\u5668\u4e0a\uff0c\u5177\u4f53\u64cd\u4f5c\u7cfb\u7edf\u8be6\u89c1 \u5c06\u4ee3\u7801\u53d1\u5e03\u81f3\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93 \u3002 3 \u4ee3\u7801\u53ca\u62a5\u544a\u63d0\u4ea4\u65b9\u5f0f \u00b6 Step1 \uff1a\u767b\u5f55 HITsz Grader \uff0c\u7528\u6237\u540d\u548c\u5bc6\u7801\u90fd\u662f\u5b66\u53f7\uff08\u82e5\u5b66\u53f7\u4e2d\u6709\u5b57\u6bcd\uff0c\u5219\u4e3a\u5927\u5199\uff09\u3002 Step2 \uff1a\u8fdb\u5165\u8bfe\u7a0b Step3 \uff1a\u8fdb\u5165\u4f5c\u4e1a\u4f5c\u7b54\u9875\u9762 Step4 \uff1a\u70b9\u51fb\u9009\u62e9\u6587\u4ef6 Step5 \uff1a\u70b9\u51fb\u63d0\u4ea4","title":"\u63d0\u4ea4\u6587\u6863"},{"location":"lab1/part4/#_1","text":"\u5b9e\u9a8c\u4e00\u63d0\u4ea4 \u5b9e\u9a8c\u8bbe\u8ba1\u62a5\u544a \u548c \u5b9e\u9a8c\u4ee3\u7801 \u3002","title":"\u5b9e\u9a8c\u63d0\u4ea4"},{"location":"lab1/part4/#1","text":"\u5b9e\u9a8c\u8bbe\u8ba1\u62a5\u544a\u8981\u6c42 \u56de\u7b54\u5b9e\u9a8c\u4e2d\u7684\u95ee\u9898 \uff0c\u5e76\u5199\u51fa\u5b9e\u9a8c\u8bbe\u8ba1\u601d\u8def\u548c\u8fd0\u884c\u7ed3\u679c \u3002 \u5b9e\u9a8c\u8bbe\u8ba1\u62a5\u544a\u4e5f\u662f\u8bc1\u660e\u5b9e\u9a8c\u662f\u72ec\u7acb\u5b8c\u6210\u7684\u91cd\u8981\u4f9d\u636e\uff0c\u6709\u5206\u6570\u8ffd\u6c42\u7684\u5927\u4f6c\uff08juanwang\uff09\u4eec\u4e0d\u8981\u53ea\u653e\u4ee3\u7801\u548c\u6307\u5bfc\u4e66\u7684\u622a\u56fe\u3002","title":"1 \u5b9e\u9a8c\u8bbe\u8ba1\u62a5\u544a\u4f1a\u7eb3\u5165\u8bc4\u5206\uff08\u867d\u7136\u4e0d\u591a\uff09"},{"location":"lab1/part4/#2","text":"\u53ea\u9700\u8981 \u63d0\u4ea4\u6240\u6709\u4fee\u6539\u8fc7\u7684\u4ee3\u7801 \u5373\u53ef\uff0c\u6bd4\u5982pingpong\u5b9e\u9a8c\uff0c\u9700\u8981\u63d0\u4ea4pingpong.c\u548cMakfile\u3002 \u5728\u5b9e\u9a8c\u8fc7\u7a0b\u4e2d\uff0c\u5927\u5bb6\u6ce8\u610f\u4fdd\u5b58\u597d\u81ea\u5df1\u7684\u4ee3\u7801\uff0c\u4fdd\u5b58\u4ee3\u7801\u7684\u4e24\u4e2a\u65b9\u6cd5\uff1a \uff081\uff09\u628a\u6574\u4e2axv6-riscv-fall\u76ee\u5f55\u6253\u5305\uff0c\u7136\u540e\u7528scp\u6216\u8005mobaXterm\u5de5\u5177\u7684sftp\u62f7\u8d1d\u51fa\u6765\uff0c\u81ea\u884c\u4fdd\u5b58\u597d\u6574\u4e2a\u5de5\u7a0b\u6587\u4ef6\uff0c\u4ee5\u5907\u4e0b\u6b21\u5b9e\u9a8c\u4f7f\u7528\u3002 \uff082\uff09 \u5f3a\u70c8\u63a8\u8350 \u5c06\u4ee3\u7801\u63d0\u4ea4\u5230\u81ea\u5df1\u7684Github/Gitee\u7b49\u4ee3\u7801\u6258\u7ba1\u670d\u52a1\u5668\u4e0a\uff0c\u5177\u4f53\u64cd\u4f5c\u7cfb\u7edf\u8be6\u89c1 \u5c06\u4ee3\u7801\u53d1\u5e03\u81f3\u81ea\u5df1\u7684\u8fdc\u7a0b\u4ed3\u5e93 \u3002","title":"2 \u5b9e\u9a8c\u4ee3\u7801"},{"location":"lab1/part4/#3","text":"Step1 \uff1a\u767b\u5f55 HITsz Grader \uff0c\u7528\u6237\u540d\u548c\u5bc6\u7801\u90fd\u662f\u5b66\u53f7\uff08\u82e5\u5b66\u53f7\u4e2d\u6709\u5b57\u6bcd\uff0c\u5219\u4e3a\u5927\u5199\uff09\u3002 Step2 \uff1a\u8fdb\u5165\u8bfe\u7a0b Step3 \uff1a\u8fdb\u5165\u4f5c\u4e1a\u4f5c\u7b54\u9875\u9762 Step4 \uff1a\u70b9\u51fb\u9009\u62e9\u6587\u4ef6 Step5 \uff1a\u70b9\u51fb\u63d0\u4ea4","title":"3 \u4ee3\u7801\u53ca\u62a5\u544a\u63d0\u4ea4\u65b9\u5f0f"},{"location":"lab2/part1/","text":"\u5b9e\u9a8c\u6982\u8ff0 \u00b6 \u6e29\uff08\u5b88\uff09\u99a8\uff08\u4f4f\uff09\u63d0\uff08\u7ea2\uff09\u793a\uff08\u7ebf\uff09 \u672c\u8bfe\u7a0b\u5b9e\u9a8c\u5df2\u5f15\u5165\u4ee3\u7801\u81ea\u52a8\u67e5\u91cd\u7cfb\u7edf\uff0c\u8bf7\u540c\u5b66\u4eec\u4fdd\u6301 \u5b66\u672f\u8bda\u4fe1 \uff01 \u63d0\u793a \u672c\u8282\u5b9e\u9a8c\u4e0e\u7406\u8bba\u8bfe\u7684 \u201c\u5bfc\u8bba\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u7ed3\u6784\u201d \u548c \u201c\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\uff1a\u8fdb\u7a0b\u201d \u8fd9\u4e24\u7ae0\u8bfe\u7a0b\u5185\u5bb9\u76f8\u5173\uff0c\u5728\u5f00\u59cb\u5b9e\u9a8c\u524d\uff0c\u8bf7\u590d\u4e60\u8fd9\u4e24\u7ae0\u8bfe\u7a0b\u5185\u5bb9\u3002 1. \u5b9e\u9a8c\u76ee\u7684 \u00b6 \u672c\u8282\u5b9e\u9a8c\u7684\u76ee\u7684\u662f\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u7684\u7cfb\u7edf\u8c03\u7528\u6a21\u5757\u8fdb\u884c\u4fee\u6539\uff0c\u5c3d\u53ef\u80fd\u5728\u771f\u6b63\u4fee\u6539\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u524d\uff0c\u5148\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e00\u5b9a\u7684\u4e86\u89e3\u3002 \u4e86\u89e3xv6\u7cfb\u7edf\u8c03\u7528\u7684\u5de5\u4f5c\u539f\u7406\u3002 \u719f\u6089xv6\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u7ed9\u7528\u6237\u7a0b\u5e8f\u63d0\u4f9b\u670d\u52a1\u7684\u673a\u5236\u3002 2. \u5b9e\u9a8c\u5b66\u65f6 \u00b6 \u672c\u5b9e\u9a8c\u4e3a4\u5b66\u65f6\u3002 3. \u5b9e\u9a8c\u5185\u5bb9\u53ca\u8981\u6c42 \u00b6 \u5b9e\u9a8c\u8981\u6c42\u53ef\u4ee5\u53c2\u8003 MIT XV6 lab2 \u63d0\u4f9b\u7684\u5b98\u65b9\u8bf4\u660e\uff1a Lab: System calls(mit.edu) \uff0c \u4f46\u8bf7\u4ee5\u6307\u5bfc\u4e66\u4e3a\u51c6\uff0c\u5426\u5219\u53ef\u80fd\u65e0\u6cd5\u901a\u8fc7\u6d4b\u8bd5\uff01 3.1 \u5207\u6362\u5206\u652f \u00b6 \u8bf7\u5148\u540c\u6b65\u4e0a\u6e38\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5e76\u6ce8\u610f\u5207\u6362\u5230syscall\u5206\u652f\u8fdb\u884c\u8bd5\u9a8c \u672c\u6b21\u5b9e\u9a8c\u57fa\u4e8esyscall\u5206\u652f\uff0c\u8bf7\u540c\u5b66\u4eec\u6ce8\u610f\u5207\u6362\u3002 Step 1. \u9996\u5148\uff0c\u4fdd\u5b58\u5b9e\u9a8c\u4e00\u7684\u4ee3\u7801\uff0c\u8bf7\u53c2\u8003\u5b9e\u9a8c\u5b9e\u7528\u5de5\u5177\u7684 3.3.1 \u4f7f\u7528\u547d\u4ee4\u884c\u5b8c\u6210\u64cd\u4f5c \u6216\u8005 3.3.2 \u4f7f\u7528VS Code\u5185\u5efa\u7684\u56fe\u5f62\u5316\u754c\u9762\u5b8c\u6210\u64cd\u4f5c \u8fd9\u4e24\u5c0f\u8282\uff0c\u5b8c\u6210commit\u64cd\u4f5c\u3002\u6216\u8005\uff0c \u5982\u679c\u4f60\u5e0c\u671b\u76f4\u63a5\u653e\u5f03\u6389\u4e0a\u4e00\u6b21commit\u540e\u7684\u6240\u6709\u66f4\u6539 \uff0c\u90a3\u4e48\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528-f\u9009\u9879\u5f3a\u5236\u5207\u6362\u5206\u652f\uff0c\u4f8b\u5982 git checkout -f syscall \u3002 Step 2. \u5207\u6362\u7684\u65b9\u6cd5\u53ef\u4ee5\u53c2\u8003\u5b9e\u9a8c -> \u5b9e\u9a8c\u5b9e\u7528\u5de5\u5177 -> 3.1\u540c\u6b65\u4e0a\u6e38\u4ed3\u5e93 ~ 3.3.3 \u5408\u5e76\u51b2\u7a81\u66f4\u6539 \u3002 \u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u4e3axv6\u5b9e\u73b0\u4e00\u4e9b\u5fc5\u8981\u7684\u7cfb\u7edf\u8c03\u7528\u548c\u529f\u80fd\uff0c\u5728\u5b8c\u6210\u8fd9\u4e9b\u4e4b\u540e\uff0c\u4f60\u5c31\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528 trace \u7a0b\u5e8f\u548c sysinfotest \u6d4b\u8bd5\u7a0b\u5e8f\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u672c\u5b9e\u9a8c\u6709\u4e24\u90e8\u5206\uff1a 3.2 \u4efb\u52a1\u4e00\uff1a\u7cfb\u7edf\u8c03\u7528\u4fe1\u606f\u6253\u5370 \u00b6 \u5728\u8be5\u4efb\u52a1\u4e2d\uff0c\u4f60\u9700\u8981\u5728xv6\u52a0\u5165\u5177\u6709\u8ddf\u8e2a\u529f\u80fd\u7684 trace \u7cfb\u7edf\u8c03\u7528\uff0c\u5b83\u53ef\u4ee5\u6253\u5370\u7cfb\u7edf\u8c03\u7528\u4fe1\u606f\uff0c\u6765\u5e2e\u52a9\u4f60\u5728\u4e4b\u540e\u7684\u5b9e\u9a8c\u4e2d\u8fdb\u884cdebug\u3002 \u5177\u4f53\u8981\u6c42\uff1a\u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3a trace \u7684\u7cfb\u7edf\u8c03\u7528\u3002 3.2.1 \u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u5b9a\u4e49 \u00b6 int trace(int mask) \u53c2\u6570 mask \uff1a\u6bcf\u4e00\u4f4d\u5bf9\u5e94\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\uff0c\u4f4d\u7684\u6bd4\u7279\u503c\u4e0e\u7cfb\u7edf\u8c03\u7528\u7f16\u53f7\u76f8\u5bf9\u5e94\uff0c\u6307\u793a\u662f\u5426\u9700\u8981\u8ffd\u8e2a\u5176\u5bf9\u5e94\u7684\u7cfb\u7edf\u8c03\u7528\u3002 \uff081\uff09\u5982\u8c03\u7528 trace(1 << SYS_fork) \uff0c\u5219\u4ee3\u8868\u53ea\u8ffd\u8e2a\u7cfb\u7edf\u8c03\u7528fork\uff0c\u5176\u4e2dSYS_fork\u662f\u5728kernel/syscall.h\u4e2d\u5b9a\u4e49\u7684fork\u7cfb\u7edf\u8c03\u7528\u7684\u7f16\u53f7\u3002 \uff082\uff09\u5982\u8c03\u7528 trace(0xffffffff) \uff0c\u5219\u4ee3\u8868\u8ffd\u8e2a\u6240\u6709\u7cfb\u7edf\u8c03\u7528\u3002 \u8fd4\u56de\u503c \uff1a\u6b63\u5e38\u6267\u884c\u8fd4\u56de0\uff0c\u5f02\u5e38\u8fd4\u56de-1\u3002 \u529f\u80fd \uff1a\u8bbe\u7f6e\u8be5\u7a0b\u5e8f\u7684 mask \u3002 \uff081\uff09\u8bbe\u7f6emask\u4e4b\u540e\uff0c\u5185\u6838\u6bcf \u5904\u7406\u5b8c\u4e00\u6b21\u7cfb\u7edf\u8c03\u7528\u540e \uff0c\u5373\u7cfb\u7edf\u8c03\u7528\u8fd4\u56de\u524d\uff0c\u82e5mask\u6307\u793a\u4e86\u8be5\u7cfb\u7edf\u8c03\u7528\uff0c\u5219\u6253\u5370\u5bf9\u5e94\u4fe1\u606f\u3002 \uff082\uff09\u6253\u5370\u683c\u5f0f\uff1a PID: sys_$name(arg0) -> return_value \u5176\u4e2d $name \u4e3a\u9700\u8981\u8ffd\u8e2a\u7684\u7cfb\u7edf\u8c03\u7528\u7684\u540d\u79f0\uff1b arg0 \u4e3a\u9700\u8981\u8ffd\u8e2a\u7684\u7cfb\u7edf\u8c03\u7528\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c return_value \u4e3a\u9700\u8981\u8ffd\u8e2a\u7684\u7cfb\u7edf\u8c03\u7528\u7684\u8fd4\u56de\u503c\uff0c\u4ee5\u5341\u8fdb\u5236\u578b\u6253\u5370\u3002 3.2.2 \u8fd0\u884c\u7ed3\u679c \u00b6 \u5b9e\u9a8c\u63d0\u4f9b\u4e86\u4e00\u4e2atrace\uff08\u89c1 user/trace.c \uff09\u7528\u6237\u7ea7\u5e94\u7528\u7a0b\u5e8f\uff0c\u8be5\u7a0b\u5e8f\u9996\u5148\u901a\u8fc7trace\u7cfb\u7edf\u8c03\u7528\u8bbe\u7f6e\u9700\u8981\u8ddf\u8e2a\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u7136\u540e\u518d\u542f\u52a8\u53e6\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u6253\u5370\u51fa\u8be5\u7a0b\u5e8f\u6267\u884c\u6307\u5b9a\u7cfb\u7edf\u8c03\u7528\u7684\u60c5\u51b5\u3002 \u63d0\u793a \u5927\u5bb6\u4e0d\u8981\u4fee\u6539 user/trace.c \u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u53ea\u662f\u7528\u4e8e\u6d4b\u8bd5 3.2.1 \u65b0\u589e\u7684trace\u7cfb\u7edf\u8c03\u7528 \u3002 \u5728\u4f60\u6dfb\u52a0\u5b8c\u8be5\u7cfb\u7edf\u8c03\u7528\u4e4b\u540e\uff0c\u8fd0\u884c\u7528\u6237\u7a0b\u5e8f trace\u8fd0\u884c\u6b63\u786e\u7684\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u4ee5\u4e0b\u8f93\u51fa\uff1a [ cs@localhost xv6-labs-2020 ] $ make qemu /* \u4e00\u5927\u6ce2\u8f93\u51fa \u2026\u2026 */ xv6 kernel is booting hart 2 starting hart 1 starting init: starting sh $ /* \u4f8b\u5b501\uff0c\u624b\u52a8\u8f93\u5165:trace 32 grep hello README */ $ trace 32 grep hello README 3 : sys_read ( 3 ) -> 1023 3 : sys_read ( 3 ) -> 966 3 : sys_read ( 3 ) -> 70 3 : sys_read ( 3 ) -> 0 $ /* \u4f8b\u5b502\uff0c\u624b\u52a8\u8f93\u5165:trace 2147483647 grep hello README */ $ trace 2147483647 grep hello README 4 : sys_trace ( 2147483647 ) -> 0 4 : sys_exec ( 12240 ) -> 3 4 : sys_open ( 12240 ) -> 3 4 : sys_read ( 3 ) -> 1023 4 : sys_read ( 3 ) -> 966 4 : sys_read ( 3 ) -> 70 4 : sys_read ( 3 ) -> 0 4 : sys_close ( 3 ) -> 0 $ /* \u4f8b\u5b503\uff0c\u624b\u52a8\u8f93\u5165:grep hello README */ $ grep hello README $ /* \u4f8b\u5b504\uff0c\u624b\u52a8\u8f93\u5165:trace 2 usertests forkforkfork */ $ trace 2 usertests forkforkfork usertests starting test forkforkfork: 407 : syscall fork -> 408 408 : sys_fork ( -1 ) -> 409 409 : sys_fork ( -1 ) -> 410 410 : sys_fork ( -1 ) -> 411 409 : sys_fork ( -1 ) -> 412 410 : sys_fork ( -1 ) -> 413 409 : sys_fork ( -1 ) -> 414 411 : sys_fork ( -1 ) -> 415 ... $ \u6211\u4eec\u5148\u4e0d\u7740\u6025\u52a8\u624b\uff0c\u5148\u770b\u770b\u7ed3\u679c\u957f\u4ec0\u4e48\u6837\u3002 \u5728 \u7b2c\u4e00\u4e2a\u4f8b\u5b50 \u4e2d\uff0c trace 32 grep hello README \uff0c\u5176\u4e2d\uff0ctrace\u8868\u793a\u6211\u4eec\u5e0c\u671b\u6267\u884c\u7528\u6237\u6001\u5e94\u7528\u7a0b\u5e8ftrace\uff08\u89c1user/trace.c\uff09\uff0c\u540e\u9762\u5219\u662ftrace\u5e94\u7528\u7a0b\u5e8f\u9644\u5e26\u7684\u5165\u53c2\uff1a 32 \u662f\"1 << SYS_read\"\uff0c\u8868\u793a\u53ea\u8ffd\u8e2a\u7cfb\u7edf\u8c03\u7528read\uff1b grep \u662ftrace\u5e94\u7528\u7a0b\u5e8f\u4e2d\u901a\u8fc7\"exec\"\u542f\u52a8\u7684\u53e6\u4e00\u4e2a\u7a0b\u5e8f\uff08\u89c1 user/grep. c\uff09\uff1b hello README \u5219\u662fgrep\u7a0b\u5e8f\u7684\u5165\u53c2\uff1b \u8be5\u547d\u4ee4\u7684\u4f5c\u7528\u662f\u4f7f\u7528grep\u7a0b\u5e8f\u67e5\u627eREADME\u6587\u4ef6\u4e2d\u5339\u914d\"hello\"\u7684\u884c\uff0c\u5e76\u5c06\u5176\u6240\u4f7f\u7528\u5230\u7684read\u7cfb\u7edf\u8c03\u7528\u7684\u4fe1\u606f\u6253\u5370\u51fa\u6765\uff0c\u6253\u5370\u7684\u683c\u5f0f\u4e3a\uff1a PID: sys_read(read\u7cfb\u7edf\u8c03\u7528\u7684arg0) -> read\u7cfb\u7edf\u8c03\u7528\u7684return_value \u3002 \u5728 \u7b2c\u4e8c\u4e2a\u4f8b\u5b50 \u4e2d\uff0ctrace\u4e5f\u662f\u542f\u52a8\u4e86 grep \u7a0b\u5e8f\uff0c\u540c\u65f6\u8ffd\u8e2a\u6240\u6709\u7684\u7cfb\u7edf\u8c03\u7528\u5176\u4e2d 2147583647 \u662f 31 \u4f4dbit\u5168\u7f6e\u4e00\u7684\u5341\u8fdb\u5236\u6574\u578b\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u6253\u7684\u7b2c\u4e00\u6761\u4fe1\u606f\u5c31\u662f\u7cfb\u7edf\u8c03\u7528trace\uff0c\u5176\u7b2c\u4e00\u4e2a\u53c2\u6570\u5373\u547d\u4ee4\u884c\u4e2d\u8f93\u51652147583647\u3002 \u5728 \u7b2c\u4e09\u4e2a\u4f8b\u5b50 \u4e2d\uff0c\u542f\u52a8\u4e86 grep \u7a0b\u5e8f\uff0c\u4f46\u662f\u6ca1\u6709\u4f7f\u7528trace\uff0c\u6240\u4ee5\u4ec0\u4e48trace\u90fd\u4e0d\u4f1a\u51fa\u73b0\u3002 \u5728 \u7b2c\u56db\u4e2a\u4f8b\u5b50 \u4e2d\uff0ctrace\u542f\u52a8\u4e86 usertests \u7a0b\u5e8f\u4e2d forkforkfork \uff08\u89c1 user/usertests.c\uff09\uff0c\u8ffd\u8e2a\u7cfb\u7edf\u8c03\u7528\u4e86fork\uff0c\u6bcf\u6b21fork\u540e\u4ee3\u90fd\u4f1a\u6253\u5370\u5bf9\u7684\u8fdb\u7a0bid\u3002 \u8be5\u4f8b\u4e2d\u7684fork\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u53c2\u6570\uff0c\u65b9\u4fbf\u8d77\u89c1\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u6253\u5370\u7528\u4e8e\u4f20\u8be5\u53c2\u6570\u7684\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u5b83\u53ef\u80fd\u662f\u4efb\u610f\u503c\u3002 forkforkfork \u4f1a\u4e00\u76f4\u4e0d\u505c\u7684fork\u5b50\u8fdb\u7a0b\uff0c\u76f4\u5230\u8fdb\u7a0b\u6570\u8d85\u8fc7 NPROC \uff0c\u5176\u5b9a\u4e49\u89c1kernel/param.h\u3002 usertests\u662f\u5b9e\u9a8c\u63d0\u4f9b\u7684\u7528\u4e8e\u6d4b\u8bd5xv6\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u8be6\u89c1user/usertests.c\u3002 /* user/usertest.c */ //Tests xv6 system calls. usertests without arguments runs them all // and usertests <name> runs <name> test. The test runner creates for // each test a process and based on the exit status of the process, // the test runner reports \"OK\" or \"FAILED\". Some tests result in // kernel printing usertrap messages, which can be ignored if test // prints \"OK\". 3.3 \u4efb\u52a1\u4e8c\uff1a\u6dfb\u52a0\u7cfb\u7edf\u8c03\u7528sysinfo \u00b6 \u5728\u8be5\u4efb\u52a1\u4e2d\uff0c\u4f60\u9700\u8981\u52a0\u5165\u4e00\u6761\u65b0\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u53eb\u505a sysinfo \u3002\u8be5\u7cfb\u7edf\u8c03\u7528\u5c06\u6536\u96c6xv6\u8fd0\u884c\u7684\u4e00\u4e9b\u4fe1\u606f\u3002 sysinfo\u53ea\u9700\u8981\u4e00\u4e2a\u53c2\u6570\uff0c\u8fd9\u4e2a\u53c2\u6570\u662f\u7ed3\u6784\u4f53 sysinfo \u7684\u6307\u9488\uff0c \u8fd9\u4e2a\u7ed3\u6784\u4f53\u5728kernel/sysinfo.h \u53ef\u4ee5\u627e\u5230\u3002xv6\u5185\u6838\u7684\u5de5\u4f5c\u5c31\u662f\u628a\u8fd9\u4e2a\u7ed3\u6784\u4f53\u586b\u4e0a\u5e94\u6709\u7684\u6570\u503c\u3002\u4e0b\u9762\u4ecb\u7ecd\u7ed3\u6784\u4f53\u6bcf\u4e2a\u6210\u5458\u7684\u542b\u4e49 1 struct sysinfo { 2 uint64 freemem ; // amount of free memory (bytes) 3 uint64 nproc ; // number of process 4 uint64 freefd ; // number of free file descriptor 5 }; freemem \uff1a\u5f53\u524d\u5269\u4f59\u7684\u5185\u5b58 \u5b57\u8282 \u6570 nproc \uff1a \u72b6\u6001\u4e3aUNUSED \u7684\u8fdb\u7a0b\u4e2a\u6570 freefd \uff1a\u5f53\u524d\u8fdb\u7a0b\u53ef\u7528\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u6570\u91cf\uff0c\u5373 \u5c1a\u672a\u4f7f\u7528 \u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u6570\u91cf \u5b9e\u9a8c\u63d0\u4f9b\u4e86\u4e00\u4e2a sysinfotest \u7528\u6237\u7ea7\u5e94\u7528\u7a0b\u5e8f\uff08\u89c1 user/sysinfotest.c \uff09\uff0c\u4f9d\u6b21\u6d4b\u8bd5\u5269\u4f59\u7684\u5185\u5b58\u5b57\u8282\u6570\u3001UNUSED\u7684\u8fdb\u7a0b\u4e2a\u6570\u3001\u672a\u88ab\u4f7f\u7528\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u6570\u91cf\u3002 \u5b8c\u6210\u4efb\u52a1\u540e\uff0c\u4f60\u53ef\u4ee5\u5728xv6\u4e2d\u8fd0\u884c sysinfotest \u7a0b\u5e8f\uff0c\u901a\u8fc7\u6d4b\u8bd5\u4f1a\u663e\u793a\u5982\u4e0b\u5185\u5bb9\uff1a 3.4 \u6d4b\u8bd5 \u00b6 \u5f53\u5b8c\u6210\u4e0a\u8ff0\u7684\u4e24\u4e2a\u4efb\u52a1\u540e\uff0c\u4e0eLab1\u4e00\u6837\uff0c\u4f60\u4e5f\u9700\u8981\u5728\u5728xv6-labs-2020\u76ee\u5f55\u4e0b\uff0c\u65b0\u5efatime.txt\u6587\u4ef6\uff0c\u5728\u8be5\u6587\u4ef6\u4e2d\u5199\u5165\u4f60\u505a\u5b8c\u8fd9\u4e2a\u5b9e\u9a8c\u6240\u82b1\u8d39\u7684\u65f6\u95f4\uff08\u4f30\u7b97\u4e00\u4e0b\u5c31\u884c\uff0c\u5355\u4f4d\u662f\u5c0f\u65f6\uff09\uff0c\u53ea\u9700\u8981\u5199\u4e00\u4e2a\u6574\u6570\u5373\u53ef\u3002 \u6700\u540e\uff0c\u5728\u547d\u4ee4\u884c\u8f93\u5165 make grade \u8fdb\u884c\u6d4b\u8bd5\u3002\u5982\u679c\u901a\u8fc7\u6d4b\u8bd5\uff0c\u4f1a\u663e\u793a\u5982\u4e0b\u5185\u5bb9\uff1a","title":"\u5b9e\u9a8c\u6982\u8ff0"},{"location":"lab2/part1/#_1","text":"\u6e29\uff08\u5b88\uff09\u99a8\uff08\u4f4f\uff09\u63d0\uff08\u7ea2\uff09\u793a\uff08\u7ebf\uff09 \u672c\u8bfe\u7a0b\u5b9e\u9a8c\u5df2\u5f15\u5165\u4ee3\u7801\u81ea\u52a8\u67e5\u91cd\u7cfb\u7edf\uff0c\u8bf7\u540c\u5b66\u4eec\u4fdd\u6301 \u5b66\u672f\u8bda\u4fe1 \uff01 \u63d0\u793a \u672c\u8282\u5b9e\u9a8c\u4e0e\u7406\u8bba\u8bfe\u7684 \u201c\u5bfc\u8bba\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u7ed3\u6784\u201d \u548c \u201c\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\uff1a\u8fdb\u7a0b\u201d \u8fd9\u4e24\u7ae0\u8bfe\u7a0b\u5185\u5bb9\u76f8\u5173\uff0c\u5728\u5f00\u59cb\u5b9e\u9a8c\u524d\uff0c\u8bf7\u590d\u4e60\u8fd9\u4e24\u7ae0\u8bfe\u7a0b\u5185\u5bb9\u3002","title":"\u5b9e\u9a8c\u6982\u8ff0"},{"location":"lab2/part1/#1","text":"\u672c\u8282\u5b9e\u9a8c\u7684\u76ee\u7684\u662f\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u7684\u7cfb\u7edf\u8c03\u7528\u6a21\u5757\u8fdb\u884c\u4fee\u6539\uff0c\u5c3d\u53ef\u80fd\u5728\u771f\u6b63\u4fee\u6539\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u524d\uff0c\u5148\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e00\u5b9a\u7684\u4e86\u89e3\u3002 \u4e86\u89e3xv6\u7cfb\u7edf\u8c03\u7528\u7684\u5de5\u4f5c\u539f\u7406\u3002 \u719f\u6089xv6\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u7ed9\u7528\u6237\u7a0b\u5e8f\u63d0\u4f9b\u670d\u52a1\u7684\u673a\u5236\u3002","title":"1.  \u5b9e\u9a8c\u76ee\u7684"},{"location":"lab2/part1/#2","text":"\u672c\u5b9e\u9a8c\u4e3a4\u5b66\u65f6\u3002","title":"2.  \u5b9e\u9a8c\u5b66\u65f6"},{"location":"lab2/part1/#3","text":"\u5b9e\u9a8c\u8981\u6c42\u53ef\u4ee5\u53c2\u8003 MIT XV6 lab2 \u63d0\u4f9b\u7684\u5b98\u65b9\u8bf4\u660e\uff1a Lab: System calls(mit.edu) \uff0c \u4f46\u8bf7\u4ee5\u6307\u5bfc\u4e66\u4e3a\u51c6\uff0c\u5426\u5219\u53ef\u80fd\u65e0\u6cd5\u901a\u8fc7\u6d4b\u8bd5\uff01","title":"3.  \u5b9e\u9a8c\u5185\u5bb9\u53ca\u8981\u6c42"},{"location":"lab2/part1/#31","text":"\u8bf7\u5148\u540c\u6b65\u4e0a\u6e38\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5e76\u6ce8\u610f\u5207\u6362\u5230syscall\u5206\u652f\u8fdb\u884c\u8bd5\u9a8c \u672c\u6b21\u5b9e\u9a8c\u57fa\u4e8esyscall\u5206\u652f\uff0c\u8bf7\u540c\u5b66\u4eec\u6ce8\u610f\u5207\u6362\u3002 Step 1. \u9996\u5148\uff0c\u4fdd\u5b58\u5b9e\u9a8c\u4e00\u7684\u4ee3\u7801\uff0c\u8bf7\u53c2\u8003\u5b9e\u9a8c\u5b9e\u7528\u5de5\u5177\u7684 3.3.1 \u4f7f\u7528\u547d\u4ee4\u884c\u5b8c\u6210\u64cd\u4f5c \u6216\u8005 3.3.2 \u4f7f\u7528VS Code\u5185\u5efa\u7684\u56fe\u5f62\u5316\u754c\u9762\u5b8c\u6210\u64cd\u4f5c \u8fd9\u4e24\u5c0f\u8282\uff0c\u5b8c\u6210commit\u64cd\u4f5c\u3002\u6216\u8005\uff0c \u5982\u679c\u4f60\u5e0c\u671b\u76f4\u63a5\u653e\u5f03\u6389\u4e0a\u4e00\u6b21commit\u540e\u7684\u6240\u6709\u66f4\u6539 \uff0c\u90a3\u4e48\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528-f\u9009\u9879\u5f3a\u5236\u5207\u6362\u5206\u652f\uff0c\u4f8b\u5982 git checkout -f syscall \u3002 Step 2. \u5207\u6362\u7684\u65b9\u6cd5\u53ef\u4ee5\u53c2\u8003\u5b9e\u9a8c -> \u5b9e\u9a8c\u5b9e\u7528\u5de5\u5177 -> 3.1\u540c\u6b65\u4e0a\u6e38\u4ed3\u5e93 ~ 3.3.3 \u5408\u5e76\u51b2\u7a81\u66f4\u6539 \u3002 \u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u4e3axv6\u5b9e\u73b0\u4e00\u4e9b\u5fc5\u8981\u7684\u7cfb\u7edf\u8c03\u7528\u548c\u529f\u80fd\uff0c\u5728\u5b8c\u6210\u8fd9\u4e9b\u4e4b\u540e\uff0c\u4f60\u5c31\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528 trace \u7a0b\u5e8f\u548c sysinfotest \u6d4b\u8bd5\u7a0b\u5e8f\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u672c\u5b9e\u9a8c\u6709\u4e24\u90e8\u5206\uff1a","title":"3.1 \u5207\u6362\u5206\u652f"},{"location":"lab2/part1/#32","text":"\u5728\u8be5\u4efb\u52a1\u4e2d\uff0c\u4f60\u9700\u8981\u5728xv6\u52a0\u5165\u5177\u6709\u8ddf\u8e2a\u529f\u80fd\u7684 trace \u7cfb\u7edf\u8c03\u7528\uff0c\u5b83\u53ef\u4ee5\u6253\u5370\u7cfb\u7edf\u8c03\u7528\u4fe1\u606f\uff0c\u6765\u5e2e\u52a9\u4f60\u5728\u4e4b\u540e\u7684\u5b9e\u9a8c\u4e2d\u8fdb\u884cdebug\u3002 \u5177\u4f53\u8981\u6c42\uff1a\u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3a trace \u7684\u7cfb\u7edf\u8c03\u7528\u3002","title":"3.2 \u4efb\u52a1\u4e00\uff1a\u7cfb\u7edf\u8c03\u7528\u4fe1\u606f\u6253\u5370"},{"location":"lab2/part1/#321","text":"int trace(int mask) \u53c2\u6570 mask \uff1a\u6bcf\u4e00\u4f4d\u5bf9\u5e94\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\uff0c\u4f4d\u7684\u6bd4\u7279\u503c\u4e0e\u7cfb\u7edf\u8c03\u7528\u7f16\u53f7\u76f8\u5bf9\u5e94\uff0c\u6307\u793a\u662f\u5426\u9700\u8981\u8ffd\u8e2a\u5176\u5bf9\u5e94\u7684\u7cfb\u7edf\u8c03\u7528\u3002 \uff081\uff09\u5982\u8c03\u7528 trace(1 << SYS_fork) \uff0c\u5219\u4ee3\u8868\u53ea\u8ffd\u8e2a\u7cfb\u7edf\u8c03\u7528fork\uff0c\u5176\u4e2dSYS_fork\u662f\u5728kernel/syscall.h\u4e2d\u5b9a\u4e49\u7684fork\u7cfb\u7edf\u8c03\u7528\u7684\u7f16\u53f7\u3002 \uff082\uff09\u5982\u8c03\u7528 trace(0xffffffff) \uff0c\u5219\u4ee3\u8868\u8ffd\u8e2a\u6240\u6709\u7cfb\u7edf\u8c03\u7528\u3002 \u8fd4\u56de\u503c \uff1a\u6b63\u5e38\u6267\u884c\u8fd4\u56de0\uff0c\u5f02\u5e38\u8fd4\u56de-1\u3002 \u529f\u80fd \uff1a\u8bbe\u7f6e\u8be5\u7a0b\u5e8f\u7684 mask \u3002 \uff081\uff09\u8bbe\u7f6emask\u4e4b\u540e\uff0c\u5185\u6838\u6bcf \u5904\u7406\u5b8c\u4e00\u6b21\u7cfb\u7edf\u8c03\u7528\u540e \uff0c\u5373\u7cfb\u7edf\u8c03\u7528\u8fd4\u56de\u524d\uff0c\u82e5mask\u6307\u793a\u4e86\u8be5\u7cfb\u7edf\u8c03\u7528\uff0c\u5219\u6253\u5370\u5bf9\u5e94\u4fe1\u606f\u3002 \uff082\uff09\u6253\u5370\u683c\u5f0f\uff1a PID: sys_$name(arg0) -> return_value \u5176\u4e2d $name \u4e3a\u9700\u8981\u8ffd\u8e2a\u7684\u7cfb\u7edf\u8c03\u7528\u7684\u540d\u79f0\uff1b arg0 \u4e3a\u9700\u8981\u8ffd\u8e2a\u7684\u7cfb\u7edf\u8c03\u7528\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c return_value \u4e3a\u9700\u8981\u8ffd\u8e2a\u7684\u7cfb\u7edf\u8c03\u7528\u7684\u8fd4\u56de\u503c\uff0c\u4ee5\u5341\u8fdb\u5236\u578b\u6253\u5370\u3002","title":"3.2.1 \u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u5b9a\u4e49"},{"location":"lab2/part1/#322","text":"\u5b9e\u9a8c\u63d0\u4f9b\u4e86\u4e00\u4e2atrace\uff08\u89c1 user/trace.c \uff09\u7528\u6237\u7ea7\u5e94\u7528\u7a0b\u5e8f\uff0c\u8be5\u7a0b\u5e8f\u9996\u5148\u901a\u8fc7trace\u7cfb\u7edf\u8c03\u7528\u8bbe\u7f6e\u9700\u8981\u8ddf\u8e2a\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u7136\u540e\u518d\u542f\u52a8\u53e6\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u6253\u5370\u51fa\u8be5\u7a0b\u5e8f\u6267\u884c\u6307\u5b9a\u7cfb\u7edf\u8c03\u7528\u7684\u60c5\u51b5\u3002 \u63d0\u793a \u5927\u5bb6\u4e0d\u8981\u4fee\u6539 user/trace.c \u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u53ea\u662f\u7528\u4e8e\u6d4b\u8bd5 3.2.1 \u65b0\u589e\u7684trace\u7cfb\u7edf\u8c03\u7528 \u3002 \u5728\u4f60\u6dfb\u52a0\u5b8c\u8be5\u7cfb\u7edf\u8c03\u7528\u4e4b\u540e\uff0c\u8fd0\u884c\u7528\u6237\u7a0b\u5e8f trace\u8fd0\u884c\u6b63\u786e\u7684\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u4ee5\u4e0b\u8f93\u51fa\uff1a [ cs@localhost xv6-labs-2020 ] $ make qemu /* \u4e00\u5927\u6ce2\u8f93\u51fa \u2026\u2026 */ xv6 kernel is booting hart 2 starting hart 1 starting init: starting sh $ /* \u4f8b\u5b501\uff0c\u624b\u52a8\u8f93\u5165:trace 32 grep hello README */ $ trace 32 grep hello README 3 : sys_read ( 3 ) -> 1023 3 : sys_read ( 3 ) -> 966 3 : sys_read ( 3 ) -> 70 3 : sys_read ( 3 ) -> 0 $ /* \u4f8b\u5b502\uff0c\u624b\u52a8\u8f93\u5165:trace 2147483647 grep hello README */ $ trace 2147483647 grep hello README 4 : sys_trace ( 2147483647 ) -> 0 4 : sys_exec ( 12240 ) -> 3 4 : sys_open ( 12240 ) -> 3 4 : sys_read ( 3 ) -> 1023 4 : sys_read ( 3 ) -> 966 4 : sys_read ( 3 ) -> 70 4 : sys_read ( 3 ) -> 0 4 : sys_close ( 3 ) -> 0 $ /* \u4f8b\u5b503\uff0c\u624b\u52a8\u8f93\u5165:grep hello README */ $ grep hello README $ /* \u4f8b\u5b504\uff0c\u624b\u52a8\u8f93\u5165:trace 2 usertests forkforkfork */ $ trace 2 usertests forkforkfork usertests starting test forkforkfork: 407 : syscall fork -> 408 408 : sys_fork ( -1 ) -> 409 409 : sys_fork ( -1 ) -> 410 410 : sys_fork ( -1 ) -> 411 409 : sys_fork ( -1 ) -> 412 410 : sys_fork ( -1 ) -> 413 409 : sys_fork ( -1 ) -> 414 411 : sys_fork ( -1 ) -> 415 ... $ \u6211\u4eec\u5148\u4e0d\u7740\u6025\u52a8\u624b\uff0c\u5148\u770b\u770b\u7ed3\u679c\u957f\u4ec0\u4e48\u6837\u3002 \u5728 \u7b2c\u4e00\u4e2a\u4f8b\u5b50 \u4e2d\uff0c trace 32 grep hello README \uff0c\u5176\u4e2d\uff0ctrace\u8868\u793a\u6211\u4eec\u5e0c\u671b\u6267\u884c\u7528\u6237\u6001\u5e94\u7528\u7a0b\u5e8ftrace\uff08\u89c1user/trace.c\uff09\uff0c\u540e\u9762\u5219\u662ftrace\u5e94\u7528\u7a0b\u5e8f\u9644\u5e26\u7684\u5165\u53c2\uff1a 32 \u662f\"1 << SYS_read\"\uff0c\u8868\u793a\u53ea\u8ffd\u8e2a\u7cfb\u7edf\u8c03\u7528read\uff1b grep \u662ftrace\u5e94\u7528\u7a0b\u5e8f\u4e2d\u901a\u8fc7\"exec\"\u542f\u52a8\u7684\u53e6\u4e00\u4e2a\u7a0b\u5e8f\uff08\u89c1 user/grep. c\uff09\uff1b hello README \u5219\u662fgrep\u7a0b\u5e8f\u7684\u5165\u53c2\uff1b \u8be5\u547d\u4ee4\u7684\u4f5c\u7528\u662f\u4f7f\u7528grep\u7a0b\u5e8f\u67e5\u627eREADME\u6587\u4ef6\u4e2d\u5339\u914d\"hello\"\u7684\u884c\uff0c\u5e76\u5c06\u5176\u6240\u4f7f\u7528\u5230\u7684read\u7cfb\u7edf\u8c03\u7528\u7684\u4fe1\u606f\u6253\u5370\u51fa\u6765\uff0c\u6253\u5370\u7684\u683c\u5f0f\u4e3a\uff1a PID: sys_read(read\u7cfb\u7edf\u8c03\u7528\u7684arg0) -> read\u7cfb\u7edf\u8c03\u7528\u7684return_value \u3002 \u5728 \u7b2c\u4e8c\u4e2a\u4f8b\u5b50 \u4e2d\uff0ctrace\u4e5f\u662f\u542f\u52a8\u4e86 grep \u7a0b\u5e8f\uff0c\u540c\u65f6\u8ffd\u8e2a\u6240\u6709\u7684\u7cfb\u7edf\u8c03\u7528\u5176\u4e2d 2147583647 \u662f 31 \u4f4dbit\u5168\u7f6e\u4e00\u7684\u5341\u8fdb\u5236\u6574\u578b\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u6253\u7684\u7b2c\u4e00\u6761\u4fe1\u606f\u5c31\u662f\u7cfb\u7edf\u8c03\u7528trace\uff0c\u5176\u7b2c\u4e00\u4e2a\u53c2\u6570\u5373\u547d\u4ee4\u884c\u4e2d\u8f93\u51652147583647\u3002 \u5728 \u7b2c\u4e09\u4e2a\u4f8b\u5b50 \u4e2d\uff0c\u542f\u52a8\u4e86 grep \u7a0b\u5e8f\uff0c\u4f46\u662f\u6ca1\u6709\u4f7f\u7528trace\uff0c\u6240\u4ee5\u4ec0\u4e48trace\u90fd\u4e0d\u4f1a\u51fa\u73b0\u3002 \u5728 \u7b2c\u56db\u4e2a\u4f8b\u5b50 \u4e2d\uff0ctrace\u542f\u52a8\u4e86 usertests \u7a0b\u5e8f\u4e2d forkforkfork \uff08\u89c1 user/usertests.c\uff09\uff0c\u8ffd\u8e2a\u7cfb\u7edf\u8c03\u7528\u4e86fork\uff0c\u6bcf\u6b21fork\u540e\u4ee3\u90fd\u4f1a\u6253\u5370\u5bf9\u7684\u8fdb\u7a0bid\u3002 \u8be5\u4f8b\u4e2d\u7684fork\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u53c2\u6570\uff0c\u65b9\u4fbf\u8d77\u89c1\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u6253\u5370\u7528\u4e8e\u4f20\u8be5\u53c2\u6570\u7684\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u5b83\u53ef\u80fd\u662f\u4efb\u610f\u503c\u3002 forkforkfork \u4f1a\u4e00\u76f4\u4e0d\u505c\u7684fork\u5b50\u8fdb\u7a0b\uff0c\u76f4\u5230\u8fdb\u7a0b\u6570\u8d85\u8fc7 NPROC \uff0c\u5176\u5b9a\u4e49\u89c1kernel/param.h\u3002 usertests\u662f\u5b9e\u9a8c\u63d0\u4f9b\u7684\u7528\u4e8e\u6d4b\u8bd5xv6\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u8be6\u89c1user/usertests.c\u3002 /* user/usertest.c */ //Tests xv6 system calls. usertests without arguments runs them all // and usertests <name> runs <name> test. The test runner creates for // each test a process and based on the exit status of the process, // the test runner reports \"OK\" or \"FAILED\". Some tests result in // kernel printing usertrap messages, which can be ignored if test // prints \"OK\".","title":"3.2.2 \u8fd0\u884c\u7ed3\u679c"},{"location":"lab2/part1/#33-sysinfo","text":"\u5728\u8be5\u4efb\u52a1\u4e2d\uff0c\u4f60\u9700\u8981\u52a0\u5165\u4e00\u6761\u65b0\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u53eb\u505a sysinfo \u3002\u8be5\u7cfb\u7edf\u8c03\u7528\u5c06\u6536\u96c6xv6\u8fd0\u884c\u7684\u4e00\u4e9b\u4fe1\u606f\u3002 sysinfo\u53ea\u9700\u8981\u4e00\u4e2a\u53c2\u6570\uff0c\u8fd9\u4e2a\u53c2\u6570\u662f\u7ed3\u6784\u4f53 sysinfo \u7684\u6307\u9488\uff0c \u8fd9\u4e2a\u7ed3\u6784\u4f53\u5728kernel/sysinfo.h \u53ef\u4ee5\u627e\u5230\u3002xv6\u5185\u6838\u7684\u5de5\u4f5c\u5c31\u662f\u628a\u8fd9\u4e2a\u7ed3\u6784\u4f53\u586b\u4e0a\u5e94\u6709\u7684\u6570\u503c\u3002\u4e0b\u9762\u4ecb\u7ecd\u7ed3\u6784\u4f53\u6bcf\u4e2a\u6210\u5458\u7684\u542b\u4e49 1 struct sysinfo { 2 uint64 freemem ; // amount of free memory (bytes) 3 uint64 nproc ; // number of process 4 uint64 freefd ; // number of free file descriptor 5 }; freemem \uff1a\u5f53\u524d\u5269\u4f59\u7684\u5185\u5b58 \u5b57\u8282 \u6570 nproc \uff1a \u72b6\u6001\u4e3aUNUSED \u7684\u8fdb\u7a0b\u4e2a\u6570 freefd \uff1a\u5f53\u524d\u8fdb\u7a0b\u53ef\u7528\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u6570\u91cf\uff0c\u5373 \u5c1a\u672a\u4f7f\u7528 \u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u6570\u91cf \u5b9e\u9a8c\u63d0\u4f9b\u4e86\u4e00\u4e2a sysinfotest \u7528\u6237\u7ea7\u5e94\u7528\u7a0b\u5e8f\uff08\u89c1 user/sysinfotest.c \uff09\uff0c\u4f9d\u6b21\u6d4b\u8bd5\u5269\u4f59\u7684\u5185\u5b58\u5b57\u8282\u6570\u3001UNUSED\u7684\u8fdb\u7a0b\u4e2a\u6570\u3001\u672a\u88ab\u4f7f\u7528\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u6570\u91cf\u3002 \u5b8c\u6210\u4efb\u52a1\u540e\uff0c\u4f60\u53ef\u4ee5\u5728xv6\u4e2d\u8fd0\u884c sysinfotest \u7a0b\u5e8f\uff0c\u901a\u8fc7\u6d4b\u8bd5\u4f1a\u663e\u793a\u5982\u4e0b\u5185\u5bb9\uff1a","title":"3.3 \u4efb\u52a1\u4e8c\uff1a\u6dfb\u52a0\u7cfb\u7edf\u8c03\u7528sysinfo"},{"location":"lab2/part1/#34","text":"\u5f53\u5b8c\u6210\u4e0a\u8ff0\u7684\u4e24\u4e2a\u4efb\u52a1\u540e\uff0c\u4e0eLab1\u4e00\u6837\uff0c\u4f60\u4e5f\u9700\u8981\u5728\u5728xv6-labs-2020\u76ee\u5f55\u4e0b\uff0c\u65b0\u5efatime.txt\u6587\u4ef6\uff0c\u5728\u8be5\u6587\u4ef6\u4e2d\u5199\u5165\u4f60\u505a\u5b8c\u8fd9\u4e2a\u5b9e\u9a8c\u6240\u82b1\u8d39\u7684\u65f6\u95f4\uff08\u4f30\u7b97\u4e00\u4e0b\u5c31\u884c\uff0c\u5355\u4f4d\u662f\u5c0f\u65f6\uff09\uff0c\u53ea\u9700\u8981\u5199\u4e00\u4e2a\u6574\u6570\u5373\u53ef\u3002 \u6700\u540e\uff0c\u5728\u547d\u4ee4\u884c\u8f93\u5165 make grade \u8fdb\u884c\u6d4b\u8bd5\u3002\u5982\u679c\u901a\u8fc7\u6d4b\u8bd5\uff0c\u4f1a\u663e\u793a\u5982\u4e0b\u5185\u5bb9\uff1a","title":"3.4 \u6d4b\u8bd5"},{"location":"lab2/part2/","text":"\u5b9e\u9a8c\u539f\u7406 \u00b6 \u63d0\u793a \u8fd9\u4e00\u7ae0\u8bb2\u8ff0\u672c\u6b21\u5b9e\u9a8c\u7684\u5b9e\u9a8c\u539f\u7406\uff0c\u4ee5\u4e0b\u77e5\u8bc6\u4f1a\u5927\u5927\u5e2e\u52a9\u4f60\u7406\u89e3xv6\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u4f46\u662f\u4f60\u9700\u8981\u52a0\u4ee5\u601d\u8003\uff0c\u5e76\u4e14\u5c06\u5176\u4e00\u4e2a\u4e00\u4e2a\u4e32\u63a5\u8d77\u6765\uff0c\u4ee5\u5f62\u6210\u4e00\u4e2a\u6574\u4f53\u7684\u601d\u7ef4\u3002 1. \u7cfb\u7edf\u8c03\u7528 \u00b6 \u7cfb\u7edf\u8c03\u7528\u5c31\u662f\u8c03\u7528\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u4e00\u7cfb\u5217\u5185\u6838\u51fd\u6570\u3002\u7531\u4e8e\u7528\u6237\u7a0b\u5e8f\u8fd0\u884c\u5728CPU\u7684\u7528\u6237\u6001\uff08\u53c8\u79f0\u975e\u7279\u6743\u6a21\u5f0f\uff0c\u7528\u6237\u6a21\u5f0f\uff09\uff0c\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u7cfb\u7edf\u786c\u4ef6\u548c\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u7cfb\u7edf\u6570\u636e\uff0c\u7528\u6237\u7a0b\u5e8f\u53ea\u80fd\u53d1\u51fa\u8bf7\u6c42\uff0c\u7136\u540e\u7531\u5185\u6838\u8c03\u7528\u76f8\u5e94\u7684\u5185\u6838\u51fd\u6570\u6765\u5e2e\u7740\u5904\u7406\uff0c\u6700\u540e\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9\u5e94\u7528\u7a0b\u5e8f\u3002 1.1 \u7cfb\u7edf\u8c03\u7528\u7684\u4f7f\u7528\uff1a\u7528\u6237\u7684\u6743\u529b \u00b6 \u5728\u7b2c\u4e00\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u5c06\u7cfb\u7edf\u8c03\u7528\u548cC\u8bed\u8a00\u7684\u51fd\u6570\u653e\u5728\u4e00\u8d77\u505a\u4e86\u4e00\u5b9a\u7684\u8bf4\u660e\u3002 \u201c\u7cfb\u7edf\u8c03\u7528\u88ab \u5c01\u88c5 \u4e3a\u51fd\u6570\u4ee5\u5411\u7528\u6237\u63d0\u4f9b\u63a5\u53e3\uff0c\u7528\u6237\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u51fd\u6570\u8c03\u7528\u7684\u65b9\u5f0f\u8bf7\u6c42\u64cd\u4f5c\u7cfb\u7edf\u7684\u670d\u52a1\u201d\u3002\u4ece\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u6ce8\u610f\uff0c\u867d\u7136\u4e24\u8005\u770b\u8d77\u6765\u4e00\u6837\uff0c\u4f46\u662f\u8fd9\u662f\u56e0\u4e3a\u5c01\u88c5\u7684\u7ed3\u679c\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u7b80\u8981\u4ecb\u7ecdxv6\u662f\u600e\u6837\u5c01\u88c5\u7684\u3002 \u9996\u5148\u770b user/user.h \u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5bf9\u5e94\u6709\u8bb8\u591a\u7684\u51fd\u6570\u63a5\u53e3\uff0c\u5176\u4e2d\u6807\u8bc6\u4e86\u7cfb\u7edf\u8c03\u7528\u548c\u7528\u6237\u5e93\uff08 ulib \uff09\u3002\u4f46\u662f\u6211\u4eec\u53ea\u770b\u5230\u4e86\u5c01\u88c5\u7684\u63a5\u53e3\uff0c\u90a3\u4e48\u5b9e\u9645\u4e0a\u7cfb\u7edf\u8c03\u7528\u7684\u5b9e\u73b0\u662f\u4ec0\u4e48\u6837\u7684\u5462\uff1f 1.2 \u7cfb\u7edf\u8c03\u7528\u7684\u63a5\u53e3\uff1a\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u548c\u7528\u6237\u7a0b\u5e8f\u7684\u4e2d\u95f4\u4f53 \u00b6 \u73b0\u5728\u6211\u4eec\u770b\u5230 user/usys.pl \u6587\u4ef6\uff0c\u8be5\u811a\u672c\u6587\u4ef6\u4f1a\u5728\u7f16\u8bd1\u671f\u95f4\u88ab\u6267\u884c\uff0c\u751f\u6210\u4e00\u4e2a\u6c47\u7f16\u6587\u4ef6 usys.S \u3002\u5176\u5bf9\u6bcf\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u62bd\u8c61\u63a5\u53e3\u90fd\u751f\u6210\u4e86\u4e00\u4e2a\u5177\u4f53\u7684\u5b9e\u73b0\uff0c\u53eb\u505a entry \u3002 1 #!/usr/bin/perl -w 2 3 # Generate usys.S, the stubs for syscalls. 4 5 print \"# generated by usys.pl - do not edit\\n\" ; 6 7 print \"#include \\\"kernel/syscall.h\\\"\\n\" ; 8 9 sub entry { 10 my $name = shift ; 11 print \".global $name\\n\" ; 12 print \"${name}:\\n\" ; 13 print \" li a7, SYS_${name}\\n\" ; 14 print \" ecall\\n\" ; 15 print \" ret\\n\" ; 16 } 17 18 entry ( \"fork\" ); 19 entry ( \"exit\" ); \u2026\u2026 \u8fd9\u6bb5\u811a\u672c\u4e2d\u7684print\u7684\u5185\u5bb9\u5b9e\u9645\u5c31\u662fRISC-V\u6307\u4ee4\u96c6\u7684\u6c47\u7f16\u8bed\u8a00\u3002 $name \u5c31\u662f\u7cfb\u7edf\u8c03\u7528\u7684\u540d\u5b57\uff0c\u5982fork\uff0cexit\u7b49\uff0c\u5f53\u811a\u672c\u6267\u884c\u65f6\uff0c18\u884c\u4e4b\u540eentry\u7684\u5185\u5b57\u7b26\u4e32\u4f1a\u88ab\u586b\u5165 $name \u3002 \u7cfb\u7edf\u8c03\u7528\u6b65\u9aa4\u5305\u62ec\u4ee5\u4e0b\u51e0\u6b65\uff1a li a7, SYS_${name}\\n \uff1a\u5c06\u7cfb\u7edf\u8c03\u7528\u53f7 SYS_${name} \uff08\u6765\u81ea kernel/syscall.h \uff09\u4f20\u7ed9RISC-V CPU\u4e0a\u7684 a7 \u5bc4\u5b58\u5668\uff0c\u8fd9\u6837\u5185\u6838\u5c31\u53ef\u4ee5\u901a\u8fc7 a7 \u5bc4\u5b58\u5668\u77e5\u9053\u73b0\u5728\u8981\u5904\u7406\u7684\u662f\u4ec0\u4e48\u7cfb\u7edf\u8c03\u7528\u3002 ecall \uff1a\u7279\u6b8a\u6307\u4ee4\uff0c\u7528\u6765\u8f6c\u5165\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\uff08 \u5173\u952e \u6307\u4ee4\uff09\u3002 ret \uff1a\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u6267\u884c\u5b8c\u540e\u4f1a\u8fd4\u56de\u5230\u8fd9\u91cc\uff0c\u6267\u884cret\u5c31\u7ed3\u675f\u4e86\u7528\u6237\u770b\u5230\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u8fd4\u56de\u81f3\u7528\u6237\u7a0b\u5e8f\u3002 \u4f60\u53ef\u4ee5\u5728\u7f16\u8bd1\u540e\u9605\u8bfb user/usys.S \uff0c\u5c06\u5176\u4e0e\u4e0a\u8ff0\u811a\u672c\u5bf9\u5e94\u4ee5\u4fbf\u66f4\u597d\u5730\u7406\u89e3\u3002 \u62d3\u5c55 \u5728RISC-V\u6307\u4ee4\u96c6\u67b6\u6784\u4e2d\uff0c\u5904\u7406\u5668\u901a\u5e38\u5206\u4e3aM ( Machine )\u3001S ( Supervisor )\u3001U ( User ) \u4e09\u79cd\u5de5\u4f5c\u6a21\u5f0f\uff0c\u8fd9\u88ab\u79f0\u4e3a \u7279\u6743\u7ea7 \u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u7a0b\u5e8f\u8fd0\u884c\u5728U\u6a21\u5f0f\uff0c\u800c\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u8fd0\u884c\u5728S\u6a21\u5f0f\u3002\u4e0a\u6587\u4e2d\u7684 ecall (Environment Call) \u547d\u4ee4\u5c31\u662f\u4e0d\u540c\u7279\u6743\u7ea7\u4e4b\u95f4\u7684\u6865\u6881\uff0c\u4f8b\u5982\u7528\u6237\u7a0b\u5e8f\u6267\u884c ecall \u540e\uff0cCPU\u4f1a\u5207\u6362\u81f3S\u6a21\u5f0f\uff0c\u540c\u65f6\u5c06PC\u7684\u503c\u7f6e\u4e3a\u4e00\u4e2a\u7531\u5185\u6838\u9884\u8bbe\u7684\u5730\u5740\uff0c\u8fdb\u800c\u5207\u6362\u81f3\u5185\u6838\u7684\u6267\u884c\u6d41\u3002 ecall \u5b9e\u9645\u4e0a\u662f\u9677\u5165( trap )\u7684\u4e00\u79cd\uff0c\u60f3\u8981\u4e86\u89e3\u66f4\u591a\u7ec6\u8282\u53ef\u4ee5\u81ea\u884c\u9605\u8bfbRISC-V\u624b\u518c\uff08\u8bf7\u5230\u6821\u5185\u7f51 \u5b9e\u9a8c\u5de5\u5177 \u4e0b\u8f7d\uff09 1.3 \u7cfb\u7edf\u8c03\u7528\u7684\u53c2\u6570\uff1a\u5bc4\u5b58\u5668\u4f20\u53c2 \u00b6 \u8fd9\u91cc\u6211\u4eec\u8fd8\u5ffd\u7565\u4e86\u4e00\u70b9\uff0c\u90a3\u5c31\u662f\u7cfb\u7edf\u8c03\u7528\u8fd8\u9700\u8981\u4f20\u9012\u53c2\u6570\u3002\u5b9e\u9645\u4e0a\uff0c\u4ece\u6c47\u7f16\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5f53\u6211\u4eec\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u7684\u65f6\u5019\uff0c\u4f20\u5165\u7684\u53c2\u6570\u4e00\u822c\u4f1a\u6309\u7167\u4f4d\u7f6e\u4f9d\u6b21\u653e\u5728 a0 , a1 , a2 \u7b49\u4ee5\u6b64\u7c7b\u63a8\u7684\u5bc4\u5b58\u5668\u4e2d\u3002\u60f3\u8981\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u51fd\u6570\u53c2\u6570\u7684\u7ec6\u8282\u53ef\u4ee5\u81ea\u884c\u9605\u8bfb RISC-V\u624b\u518c \u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u8c03\u7528 user/user.h \u4e2d\u7684\u51fd\u6570\u63a5\u53e3\u540e\uff0c\u53c2\u6570\u5df2\u7ecf\u5b58\u50a8\u4e8e\u5bc4\u5b58\u5668\u4e86\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u539f\u5c01\u4e0d\u52a8\u5730\u7ee7\u7eed\u8c03\u7528 ecall \uff0c\u64cd\u4f5c\u7cfb\u7edf\u5c31\u53ef\u4ee5\u901a\u8fc7a0, a1, a2\u7b49\u5bc4\u5b58\u5668\u6765\u83b7\u53d6\u53c2\u6570\u4e86\u3002\u6b64\u5916\uff0c\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e00\u822c\u5b58\u50a8\u4e8ea0\u5bc4\u5b58\u5668\u3002 \u63d0\u793a \u6839\u636eRISC-V\u6807\u51c6\u89c4\u5b9a\uff0c\u51fd\u6570\u8c03\u7528\u901a\u8fc7\u5bc4\u5b58\u5668\u4f20\u9012\u53c2\u6570\u3002\u5728\u5185\u6838\u4e2d\u53ef\u4ee5\u901a\u8fc7argint\u3001argaddr\u7b49\u51fd\u6570\u83b7\u53d6\u7cfb\u7edf\u8c03\u7528\u7684\u53c2\u6570\uff0c\u5206\u522b\u5bf9\u5e94\u6574\u6570\u548c\u6307\u9488\uff0c\u5b83\u4eec\u90fd\u8c03\u7528argraw\u6765\u8bfb\u53d6\u5df2\u4fdd\u5b58\u7684\u5bc4\u5b58\u5668\u3002\u6bd4\u5982\uff0c kernel/sycall.c \u4e2d line 34-54\u4e2d argraw \u51fd\u6570\u6240\u63cf\u8ff0\u7684\u5c31\u662f\u53d6\u51fa\u53c2\u6570\u7684\u8fc7\u7a0b\u3002\u5176\u4e2d trapframe\u5c31\u662f\u7528\u6237\u8fdb\u7a0b\u7684\u5bc4\u5b58\u5668\u72b6\u6001 \uff08\u4e0a\u4e0b\u6587\uff09\u3002 1.4 \u7cfb\u7edf\u8c03\u7528\u7684\u5206\u53d1\u548c\u5b9e\u73b0\uff1a\u89e3\u8026\u5408 \u00b6 \u6309\u7167\u4e4b\u524d\u6240\u8ff0\uff0c\u5b9a\u4e49\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u5b9e\u9645\u4e0a\u5f88\u7b80\u5355\uff1a\u5c06\u7cfb\u7edf\u8c03\u7528\u53f7\u7684\u5b8f\u5b9a\u4e49 SYS_${name} \u6dfb\u52a0\u5728 kernel/syscall.h \uff0c\u6bcf\u6b21\u7cfb\u7edf\u8c03\u7528\u65f6\u6839\u636e a7 \u5bc4\u5b58\u5668\u4f20\u5165\u7684\u503c\u5224\u5b9a\u5177\u4f53\u7684\u7cfb\u7edf\u8c03\u7528\u7c7b\u578b\u5373\u53ef\u3002 \u90a3\u4e48\u63a5\u4e0b\u6765\u6211\u4eec\u9762\u4e34\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898\u662f\uff1a\u5185\u6838\u600e\u4e48\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u53f7\uff08\u5b58\u5728 a7 \uff09\u6765\u6267\u884c\u4e0d\u540c\u7684\u7cfb\u7edf\u8c03\u7528\u51fd\u6570\u3002 \u63d0\u793a \u6211\u4eec\u9700\u8981\u5173\u6ce8 kernel/syscall.c \u4e2d\u7684\u4ee3\u7801\uff0c line 86-130 \u5b9a\u4e49\u4e86\u4e00\u5927\u6bb5\u770b\u8d77\u6765\u5c31\u548c\u7cfb\u7edf\u8c03\u7528\u6709\u5173\u7684\u90e8\u5206\u3002\u8fd9\u91cc\u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u4e00\u4e2a\u662f extern \u8fdb\u884c\u6807\u8bc6\u7684\u51fd\u6570\u63a5\u53e3\uff0c\u53e6\u4e00\u4e2a\u662f\u4ee5 syscall \u4e3a\u540d\u7684\u6570\u7ec4\u3002 \u524d\u8005\u5b9e\u9645\u4e0a\u58f0\u660e\u4e86\u8fd9\u4e9b\u51fd\u6570\uff0c\u8fd9\u4e9b\u51fd\u6570\u7684\u5b9e\u73b0\u4e0d\u5fc5\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\uff0c\u800c\u662f\u5206\u5e03\u5728\u5404\u4e2a\u76f8\u5173\u7684\u4ee3\u7801\u6587\u4ef6\u4e2d\uff08\u4e00\u822c\u653e\u5728 sys \u5f00\u5934\u7684\u6587\u4ef6\u4e2d\uff0c\u5305\u62ec sysproc.c \u4e0e sysfile.c \uff09\uff0c\u6211\u4eec\u5728\u8fd9\u4e9b\u4ee3\u7801\u6587\u4ef6\u4e2d\u5b9e\u73b0\u597d\u5bf9\u5e94\u7684\u51fd\u6570\uff0c\u6700\u540e\u5c31\u53ef\u4ee5\u7f16\u8bd1\u51fa\u5bf9\u5e94\u540d\u5b57\u7684\u6c47\u7f16\u4ee3\u7801\u51fd\u6570\uff0c extern \u5c31\u4f1a\u627e\u5230\u5bf9\u5e94\u7684\u51fd\u6570\u5b9e\u73b0\u4e86\u3002 \u540e\u8005\u5219\u662f\u5c06\u8fd9\u4e9b\u51fd\u6570\u7684\u6307\u9488\u90fd\u653e\u5728\u7edf\u4e00\u7684\u6570\u7ec4\u91cc\uff0c\u5e76\u4e14\u6570\u7ec4\u4e0b\u6807\u5c31\u662f\u7cfb\u7edf\u8c03\u7528\u53f7\uff0c\u8fd9\u6837\u6211\u4eec\u5728\u5206\u8fa8\u4e0d\u540c\u7cfb\u7edf\u8c03\u7528\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u7528\u6570\u7ec4\u6765\u8fdb\u884c\u64cd\u4f5c\u4e86\u3002 kernel/syscall.c \u4e2d\u7684 syscall() \u51fd\u6570\u5c31\u6839\u636e\u8fd9\u4e00\u65b9\u6cd5\u5b9e\u73b0\u4e86\u7cfb\u7edf\u8c03\u7528\u7684\u5206\u53d1\uff08\u901a\u8fc7\u4e0d\u540c\u7cfb\u7edf\u8c03\u7528\u53f7\u8c03\u7528\u4e0d\u540c\u7cfb\u7edf\u8c03\u7528\u51fd\u6570\uff09\uff0c\u8bf7\u4ed4\u7ec6\u9605\u8bfb\u5e76\u5c1d\u8bd5\u7406\u89e3\u3002 \u5c06\u4e24\u8005\u5408\u8d77\u6765\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u5f97\u7cfb\u7edf\u8c03\u7528\u7684 \u5b9e\u73b0 \u548c\u7cfb\u7edf\u8c03\u7528\u7684 \u5206\u53d1 \u5f7c\u6b64 \u5206\u79bb \uff0c\u8fd9\u5bf9\u51fd\u6570\u7f16\u5199\u8005\u975e\u5e38\u53cb\u597d\uff0c\u4f46\u662f\u4f1a\u8ba9\u521d\u5b66\u8005\u6709\u4e9b\u8ff7\u60d1\uff0c\u8fd9\u662f\u9700\u8981\u6ce8\u610f\u7684\u3002 2. \u4e3e\u4f8b\uff1a\u7cfb\u7edf\u8c03\u7528\u7684\u5b9e\u73b0 \u00b6 \u73b0\u5728\u6211\u4eec\u4ee5\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\uff0c\u6765\u770b\u770bxv6\u662f\u600e\u4e48\u5b9e\u73b0\u7cfb\u7edf\u8c03\u7528\u7684\u3002\u6211\u4eec\u51c6\u5907\u6311\u9009\u770b\u8d77\u6765\u6734\u5b9e\u65e0\u534e\u7684\u7cfb\u7edf\u8c03\u7528 sleep \uff0c\u56e0\u4e3a\u5b83\u5b9e\u9645\u4e0a\u6697\u85cf\u51f6\u9669\u3002 \u5148\u6765\u770b\u5f20\u603b\u56fe\u628a\u63e1\u4e00\u4e0b\u6574\u4f53\u6d41\u7a0b\uff1a \u4ee5\u4e0b\u53ea\u5bf9\u7cfb\u7edf\u8c03\u7528\u8fc7\u7a0b\u67d0\u51e0\u4e2a\u5173\u952e\u70b9\u8fdb\u884c\u5206\u6790\uff0c\u5176\u4ed6\u76f8\u5173\u4ee3\u7801/\u6d41\u7a0b\u9700\u8981\u5927\u5bb6\u81ea\u884c\u67e5\u9605\u4ee3\u7801\uff1a 2.1 \u7528\u6237\u7a0b\u5e8f\u8c03\u7528 \u00b6 xv6\u5173\u4e8esleep\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u7684\u58f0\u660e\u5728user/user.h\u3002 /* user/user.h */ int sleep ( int ); 2.2 usys.S\u6c47\u7f16 \u00b6 \u7136\u800c\uff0cuser/user.h\u53ea\u662f\u5bf9\u51fd\u6570\u539f\u578b\u8fdb\u884c\u4e86\u58f0\u660e\u3002\u5177\u4f53\u505a\u4e86\u4ec0\u4e48\u4e8b\u5462\uff1f\u8fd9\u4e2a\u5b9a\u4e49\u662f\u5728usys.S\u4e2d\uff0c\u8be6\u89c11.2\u5c0f\u8282\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cusys.S\u6c47\u7f16\u662f\u7531usys.pl\uff08perl\u811a\u672c\uff09\u81ea\u52a8\u751f\u6210\u7684\u3002\u4e5f\u5c31\u662f\uff0c\u5f53\u4f60\u8981\u589e\u52a0\u65b0\u7684\u7cfb\u7edf\u8c03\u7528\u65f6\uff0c\u4e0d\u8981\u4fee\u6539usys.S\uff0c\u800c\u662f\u53c2\u8003\u5176\u4ed6\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u6765\u4fee\u6539usys.pl\u3002 2.3 uservec\u6c47\u7f16 \u00b6 \u5f53\u6267\u884cecall\u6307\u4ee4\u540e\uff0c\u5185\u6838\u4f1a\u5207\u6362\u5230supervisor mode\u3002\u63a5\u7740\uff0c\u5185\u6838\u6267\u884c\u7684\u7b2c\u4e00\u4e2a\u6307\u4ee4\u662f\u6765\u81eatrampoline.S\u6587\u4ef6\u7684uservec\u6c47\u7f16\u51fd\u6570\u3002 2.4 usertrap \u00b6 \u4e4b\u540e\uff0c\u4ee3\u7801\u8df3\u8f6c\u5230\u4e86\u7531C\u8bed\u8a00\u5b9e\u73b0\u7684usertrap\u51fd\u6570\u4e2d\uff08trap.c\uff09\uff0c\u5224\u65ad\u5982\u679c\u662f\u6765\u81ea\u7528\u6237\u7684\u7cfb\u7edf\u8c03\u7528\u5219\u6267\u884csyscall\u51fd\u6570\u3002 \u63d0\u793a \u4e00\u822c\u8fdb\u5165usertrap\u51fd\u6570\u6709\u4e09\u79cd\u60c5\u51b5\uff1a 1. syscall\u7cfb\u7edf\u8c03\u7528\uff0c\u662f\u7531\u7528\u6237\u8fdb\u7a0b\u4e3b\u52a8\u8c03\u7528ecall\u6307\u4ee4\u6765\u5b9e\u73b0\u7684\u3002 2. exception\u5f02\u5e38\uff0c\u662f\u7528\u6237\u8fdb\u7a0b\u6216\u5185\u6838\u7a0b\u5e8f\u7684illegal instruction\u5bfc\u81f4\u7684\uff0c\u6bd4\u5982\uff1a\u96640\u9519\u8bef\uff0c\u6216\u5f15\u7528\u65e0\u6548\u7684\u865a\u62df\u5730\u5740\u3002 3. device interrupt\u8bbe\u5907\u4e2d\u65ad\uff0c\u6bd4\u5982\uff1a\u78c1\u76d8\u8bbe\u5907\u5b8c\u6210\u4e86\u8bfb\u5199\u8bf7\u6c42\u64cd\u4f5c\u3002 2.5 syscall \u00b6 syscall\u51fd\u6570\u91cc\u6709\u4e00\u4e2a\u8868\u5355\uff0c\u6839\u636e\u4f20\u5165\u7684\u4ee3\u8868\u7cfb\u7edf\u8c03\u7528\u7684\u6570\u5b57\u8fdb\u884c\u67e5\u627e\uff0c\u5e76\u6267\u884c\u5177\u4f53\u5b9e\u73b0\u7cfb\u7edf\u8c03\u7528\u529f\u80fd\u7684\u51fd\u6570\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u4f8b\u5b50\u6765\u8bf4\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c31\u662fsys_sleep\u3002 2.6 sys_sleep \u00b6 \u5176\u4ee3\u7801\u53ef\u89c1 kernel/sysproc.c line55-74\uff1a 55 uint64 56 sys_sleep ( void ) 57 { 58 int n ; 59 uint ticks0 ; 60 61 if ( argint ( 0 , & n ) < 0 ) 62 return -1 ; 63 acquire ( & tickslock ); 64 ticks0 = ticks ; 65 while ( ticks - ticks0 < n ){ 66 if ( myproc () -> killed ){ 67 release ( & tickslock ); 68 return -1 ; 69 } 70 sleep ( & ticks , & tickslock ); 71 } 72 release ( & tickslock ); 73 return 0 ; 74 } \u53c2\u6570\uff1a\u7cfb\u7edf\u8c03\u7528 sleep \u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u7528\u6765\u544a\u77e5\u64cd\u4f5c\u7cfb\u7edf sleep \u7684\u6301\u7eed\u65f6\u95f4\u3002\u4f46\u662f\u8fd9\u91cc\u600e\u4e48\u662f void \uff1f \u8fd9\u662f\u56e0\u4e3axv6\u53c8\u8fdb\u884c\u4e86\u4e00\u6b21\u89e3\u8026\u5408\uff0c\u901a\u8fc7\u4e00\u4e2a\u989d\u5916\u7684\u51fd\u6570\u83b7\u53d6\u53c2\u6570\uff0c\u4ed6\u4eec\u4ee5 arg \u5f00\u5934\uff0c\u5177\u4f53\u89c1 kernel/syscall.c \u3002 \u83b7\u5f97\u8fdb\u7a0b\u7684\u72b6\u6001\uff1a\u6267\u884c\u7cfb\u7edf\u8c03\u7528\u7684\u65f6\u5019\uff0c\u53c2\u6570\u4e0d\u4f1a\u544a\u8bc9xv6\u81ea\u5df1\u5230\u5e95\u662f\u4ec0\u4e48\u7a0b\u5e8f\u3002\u56e0\u6b64\uff0cxv6\u9700\u8981\u989d\u5916\u7684\u8c03\u7528\u6765\u5f04\u6e05\u695a\uff0c\u73b0\u5728\u5230\u5e95\u662f\u4ec0\u4e48\u7a0b\u5e8f\u6b63\u5728\u8fd0\u884c\uff1f \u5173\u952e\u7684\u51fd\u6570\u662f myproc() \uff0c\u8fd9\u4e2a\u51fd\u6570\u5c06\u8fd4\u56de\u6307\u5411\u5f53\u524d\u8fdb\u7a0b\u7684PCB\uff08\u4e5f\u5c31\u662f\u8fdb\u7a0b\u63a7\u5236\u5757\uff09\u7684\u6307\u9488\uff08 struct proc * \uff09\uff0c\u91cc\u9762\u6709\u7a0b\u5e8f\u7684\u5404\u79cd\u4fe1\u606f\u3002 sleep \u7684\u5b9e\u73b0\u903b\u8f91\uff1a\u8fd9\u91cc\uff0c\u4e3b\u8981\u5c31\u662f\u6839\u636e\u5404\u4e2a\u4e0d\u540c\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u5b9e\u73b0\u81ea\u8eab\u5e94\u7684\u903b\u8f91\u5373\u53ef\u3002\u73b0\u5728\u7b80\u8981\u4ecb\u7ecd sleep \u903b\u8f91\u3002 line 61\uff1a\u83b7\u53d6\u53c2\u6570 line 63\uff1a\u7ed9\u65f6\u949f\u52a0\u9501\uff0c\u83b7\u53d6\u5f53\u524d\u7684\u65f6\u95f4 line 65\uff1a\u6bd4\u8f83\u662f\u5426\u5230\u4e86 sleep \u7ed3\u675f\u7684\u65f6\u95f4 line 66-69\uff1a\u8fdb\u7a0b\u7ed3\u675f\u4e86\u5c31\u9000\u51fa\uff0c\u4ec0\u4e48\u4e5f\u4e0d\u505a line 70\uff1a\u5426\u5219\u7ee7\u7eed\u7761\u7720 line 72-73\uff1a\u5230\u65f6\u95f4\u4e86\u5219\u91ca\u653e\u65f6\u95f4\u7684\u9501\uff0c\u8fd4\u56de\u7a0b\u5e8f\uff0c sleep \u7ed3\u675f\u3002 2.7 \u6267\u884c\u5b8c\u540e\u8fd4\u56de\u7528\u6237\u7a7a\u95f4 \u00b6 \u5f53sleep\u5b8c\u6210\u4e4b\u540e\uff0c\u8fd4\u56de\u81f3syscall\u51fd\u6570\u3002\u5728syscall\u51fd\u6570\u4e2d\u8c03\u7528usertrapret\uff0c\u7528\u4e8e\u5b8c\u6210\u90e8\u5206\u65b9\u4fbf\u5728C\u4ee3\u7801\u5b9e\u73b0\u7684\u8fd4\u56de\u7528\u6237\u7a7a\u95f4\u7684\u5de5\u4f5c\u3002\u8fd8\u6709\u4e00\u4e9b\u5de5\u4f5c\u53ea\u80fd\u5728\u6c47\u7f16\u8bed\u8a00\u5b8c\u6210\uff0c\u5373trampoline.s\u4e2d\u7684userret\u51fd\u6570\u3002\u6700\u540e\uff0c\u8fd9\u4e2a\u51fd\u6570\u6267\u884csret\u6307\u4ee4\uff0c\u5207\u56de\u7528\u6237\u7a7a\u95f4\uff0c\u6267\u884c\u7528\u6237\u7a7a\u95f4ecall\u7684\u4e0b\u4e00\u6761\u6307\u4ee4ret\u3002\u5f53ret\u6267\u884c\u5b8c\u540e\uff0c\u8fd4\u56de\u8c03\u7528\u51fd\u6570\u7684\u4f4d\u7f6e\uff0c\u6267\u884c\u7528\u6237\u7a0b\u5e8f\u7684\u4e0b\u4e00\u6761\u8bed\u53e5\u3002 \u4ee5\u4e0a\uff0c\u5373\u662f\u7cfb\u7edf\u8c03\u7528\u8fc7\u7a0b\u4e2d\u5927\u81f4\u7684\u4ee3\u7801\u6267\u884c\u6d41\u7a0b\u3002 3. \u5185\u6838\u7a7a\u95f4\u548c\u7528\u6237\u7a7a\u95f4\u4ea4\u6362\u6570\u636e \u00b6 \u4e00\u4e9b\u7cfb\u7edf\u8c03\u7528\u4f20\u9012\u7684\u53c2\u6570\u662f\u6307\u9488\uff0c\u5185\u6838\u9700\u8981\u4f7f\u7528\u8fd9\u4e9b\u6307\u9488\u6765\u8bfb\u5199\u7528\u6237\u7a7a\u95f4\u3002\u4f46\u7531\u4e8e\u5185\u6838\u9875\u8868\u7684\u6620\u5c04\u548c\u7528\u6237\u9875\u8868\u7684\u6620\u5c04\u4e0d\u4e00\u6837\uff0c\u5185\u6838\u4e0d\u80fd\u4f7f\u7528\u666e\u901a\u7684\u6307\u4ee4\u8bbf\u95ee\u7528\u6237\u7a7a\u95f4\uff0c\u8fd9\u6837\u5c31\u6d89\u53ca\u5230\u5185\u6838\u7a7a\u95f4\u548c\u7528\u6237\u7a7a\u95f4\u7684\u5730\u5740\u8f6c\u6362\u95ee\u9898\u3002\u5728xv6\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 copyout / copyin \u8fd9\u4e24\u4e2a\u51fd\u6570\u5206\u522b\u5b8c\u6210\u5185\u6838\u7a7a\u95f4\u5230\u7528\u6237\u7a7a\u95f4\u3001\u7528\u6237\u7a7a\u95f4\u5230\u5185\u6838\u7a7a\u95f4\u7684\u6570\u636e\u62f7\u8d1d\u3002\u5177\u4f53\u53ef\u4ee5\u67e5\u770bcopyout/copyin\u7684\u5b9e\u73b0\u7ec6\u8282\uff08kernel/vm.c\uff09\u3002 \u4f8b\u5982\uff0c\u5f53shell\u6267\u884cls\u547d\u4ee4\u65f6\uff0c\u8c03\u7528 fstat \u7cfb\u7edf\u8c03\u7528\uff08user/ls.c\uff09\u83b7\u53d6\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u4fe1\u606f\u3002 fstat\u7cfb\u7edf\u8c03\u7528\u9677\u5165\u5185\u6838\u8c03\u7528 sys_fstat \uff0c\u6700\u7ec8\u6267\u884c filestat \u51fd\u6570\uff0c\u5176\u4e2d st \u662f\u4ece\u7528\u6237\u7a7a\u95f4\u4f20\u8fdb\u6765\u7684\u5165\u53c2\uff08\u6307\u9488\uff09\u3002 \u5728filestat\u51fd\u6570\u4e2d\uff0c\u901a\u8fc7 stati \u51fd\u6570\u83b7\u53d6\u5230inode\u8282\u70b9\u4fe1\u606f\uff0c\u518d\u8c03\u7528 copyout \u5c06\u83b7\u53d6\u5230\u7684\u4fe1\u606f\u62f7\u8d1d\u7ed9\u8d77\u59cb\u5730\u5740\u4e3afilestat\u51fd\u6570\u7684\u5165\u53c2addr\uff0c\u5927\u5c0f\u4e3asizeof(st)\u7684\u7528\u6237\u7a7a\u95f4\u3002 \u4e4b\u540e\uff0c\u8fd4\u56de sys_fstat \uff0c\u5373\u53ef\u5c06\u5185\u6838\u7a7a\u95f4\u7684\u6570\u636e\u4f20\u9012\u81f3\u7528\u6237\u7a7a\u95f4\u3002 4. \u53c2\u8003\u8d44\u6599 \u00b6 [1] xv6 book, Sections 4.3 and 4.4 of Chapter 4 [2] Related source files: The user-space code for systems calls is in user/user.h and user/usys.pl . The kernel-space code is kernel/syscall.h , kernel/syscall.c . The process-related code is kernel/proc.h and kernel/proc.c . \u200b","title":"\u5b9e\u9a8c\u539f\u7406"},{"location":"lab2/part2/#_1","text":"\u63d0\u793a \u8fd9\u4e00\u7ae0\u8bb2\u8ff0\u672c\u6b21\u5b9e\u9a8c\u7684\u5b9e\u9a8c\u539f\u7406\uff0c\u4ee5\u4e0b\u77e5\u8bc6\u4f1a\u5927\u5927\u5e2e\u52a9\u4f60\u7406\u89e3xv6\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u4f46\u662f\u4f60\u9700\u8981\u52a0\u4ee5\u601d\u8003\uff0c\u5e76\u4e14\u5c06\u5176\u4e00\u4e2a\u4e00\u4e2a\u4e32\u63a5\u8d77\u6765\uff0c\u4ee5\u5f62\u6210\u4e00\u4e2a\u6574\u4f53\u7684\u601d\u7ef4\u3002","title":"\u5b9e\u9a8c\u539f\u7406"},{"location":"lab2/part2/#1","text":"\u7cfb\u7edf\u8c03\u7528\u5c31\u662f\u8c03\u7528\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u4e00\u7cfb\u5217\u5185\u6838\u51fd\u6570\u3002\u7531\u4e8e\u7528\u6237\u7a0b\u5e8f\u8fd0\u884c\u5728CPU\u7684\u7528\u6237\u6001\uff08\u53c8\u79f0\u975e\u7279\u6743\u6a21\u5f0f\uff0c\u7528\u6237\u6a21\u5f0f\uff09\uff0c\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u7cfb\u7edf\u786c\u4ef6\u548c\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u7cfb\u7edf\u6570\u636e\uff0c\u7528\u6237\u7a0b\u5e8f\u53ea\u80fd\u53d1\u51fa\u8bf7\u6c42\uff0c\u7136\u540e\u7531\u5185\u6838\u8c03\u7528\u76f8\u5e94\u7684\u5185\u6838\u51fd\u6570\u6765\u5e2e\u7740\u5904\u7406\uff0c\u6700\u540e\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9\u5e94\u7528\u7a0b\u5e8f\u3002","title":"1. \u7cfb\u7edf\u8c03\u7528"},{"location":"lab2/part2/#11","text":"\u5728\u7b2c\u4e00\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u5c06\u7cfb\u7edf\u8c03\u7528\u548cC\u8bed\u8a00\u7684\u51fd\u6570\u653e\u5728\u4e00\u8d77\u505a\u4e86\u4e00\u5b9a\u7684\u8bf4\u660e\u3002 \u201c\u7cfb\u7edf\u8c03\u7528\u88ab \u5c01\u88c5 \u4e3a\u51fd\u6570\u4ee5\u5411\u7528\u6237\u63d0\u4f9b\u63a5\u53e3\uff0c\u7528\u6237\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u51fd\u6570\u8c03\u7528\u7684\u65b9\u5f0f\u8bf7\u6c42\u64cd\u4f5c\u7cfb\u7edf\u7684\u670d\u52a1\u201d\u3002\u4ece\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u6ce8\u610f\uff0c\u867d\u7136\u4e24\u8005\u770b\u8d77\u6765\u4e00\u6837\uff0c\u4f46\u662f\u8fd9\u662f\u56e0\u4e3a\u5c01\u88c5\u7684\u7ed3\u679c\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u7b80\u8981\u4ecb\u7ecdxv6\u662f\u600e\u6837\u5c01\u88c5\u7684\u3002 \u9996\u5148\u770b user/user.h \u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5bf9\u5e94\u6709\u8bb8\u591a\u7684\u51fd\u6570\u63a5\u53e3\uff0c\u5176\u4e2d\u6807\u8bc6\u4e86\u7cfb\u7edf\u8c03\u7528\u548c\u7528\u6237\u5e93\uff08 ulib \uff09\u3002\u4f46\u662f\u6211\u4eec\u53ea\u770b\u5230\u4e86\u5c01\u88c5\u7684\u63a5\u53e3\uff0c\u90a3\u4e48\u5b9e\u9645\u4e0a\u7cfb\u7edf\u8c03\u7528\u7684\u5b9e\u73b0\u662f\u4ec0\u4e48\u6837\u7684\u5462\uff1f","title":"1.1 \u7cfb\u7edf\u8c03\u7528\u7684\u4f7f\u7528\uff1a\u7528\u6237\u7684\u6743\u529b"},{"location":"lab2/part2/#12","text":"\u73b0\u5728\u6211\u4eec\u770b\u5230 user/usys.pl \u6587\u4ef6\uff0c\u8be5\u811a\u672c\u6587\u4ef6\u4f1a\u5728\u7f16\u8bd1\u671f\u95f4\u88ab\u6267\u884c\uff0c\u751f\u6210\u4e00\u4e2a\u6c47\u7f16\u6587\u4ef6 usys.S \u3002\u5176\u5bf9\u6bcf\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u62bd\u8c61\u63a5\u53e3\u90fd\u751f\u6210\u4e86\u4e00\u4e2a\u5177\u4f53\u7684\u5b9e\u73b0\uff0c\u53eb\u505a entry \u3002 1 #!/usr/bin/perl -w 2 3 # Generate usys.S, the stubs for syscalls. 4 5 print \"# generated by usys.pl - do not edit\\n\" ; 6 7 print \"#include \\\"kernel/syscall.h\\\"\\n\" ; 8 9 sub entry { 10 my $name = shift ; 11 print \".global $name\\n\" ; 12 print \"${name}:\\n\" ; 13 print \" li a7, SYS_${name}\\n\" ; 14 print \" ecall\\n\" ; 15 print \" ret\\n\" ; 16 } 17 18 entry ( \"fork\" ); 19 entry ( \"exit\" ); \u2026\u2026 \u8fd9\u6bb5\u811a\u672c\u4e2d\u7684print\u7684\u5185\u5bb9\u5b9e\u9645\u5c31\u662fRISC-V\u6307\u4ee4\u96c6\u7684\u6c47\u7f16\u8bed\u8a00\u3002 $name \u5c31\u662f\u7cfb\u7edf\u8c03\u7528\u7684\u540d\u5b57\uff0c\u5982fork\uff0cexit\u7b49\uff0c\u5f53\u811a\u672c\u6267\u884c\u65f6\uff0c18\u884c\u4e4b\u540eentry\u7684\u5185\u5b57\u7b26\u4e32\u4f1a\u88ab\u586b\u5165 $name \u3002 \u7cfb\u7edf\u8c03\u7528\u6b65\u9aa4\u5305\u62ec\u4ee5\u4e0b\u51e0\u6b65\uff1a li a7, SYS_${name}\\n \uff1a\u5c06\u7cfb\u7edf\u8c03\u7528\u53f7 SYS_${name} \uff08\u6765\u81ea kernel/syscall.h \uff09\u4f20\u7ed9RISC-V CPU\u4e0a\u7684 a7 \u5bc4\u5b58\u5668\uff0c\u8fd9\u6837\u5185\u6838\u5c31\u53ef\u4ee5\u901a\u8fc7 a7 \u5bc4\u5b58\u5668\u77e5\u9053\u73b0\u5728\u8981\u5904\u7406\u7684\u662f\u4ec0\u4e48\u7cfb\u7edf\u8c03\u7528\u3002 ecall \uff1a\u7279\u6b8a\u6307\u4ee4\uff0c\u7528\u6765\u8f6c\u5165\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\uff08 \u5173\u952e \u6307\u4ee4\uff09\u3002 ret \uff1a\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u6267\u884c\u5b8c\u540e\u4f1a\u8fd4\u56de\u5230\u8fd9\u91cc\uff0c\u6267\u884cret\u5c31\u7ed3\u675f\u4e86\u7528\u6237\u770b\u5230\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u8fd4\u56de\u81f3\u7528\u6237\u7a0b\u5e8f\u3002 \u4f60\u53ef\u4ee5\u5728\u7f16\u8bd1\u540e\u9605\u8bfb user/usys.S \uff0c\u5c06\u5176\u4e0e\u4e0a\u8ff0\u811a\u672c\u5bf9\u5e94\u4ee5\u4fbf\u66f4\u597d\u5730\u7406\u89e3\u3002 \u62d3\u5c55 \u5728RISC-V\u6307\u4ee4\u96c6\u67b6\u6784\u4e2d\uff0c\u5904\u7406\u5668\u901a\u5e38\u5206\u4e3aM ( Machine )\u3001S ( Supervisor )\u3001U ( User ) \u4e09\u79cd\u5de5\u4f5c\u6a21\u5f0f\uff0c\u8fd9\u88ab\u79f0\u4e3a \u7279\u6743\u7ea7 \u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u7a0b\u5e8f\u8fd0\u884c\u5728U\u6a21\u5f0f\uff0c\u800c\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u8fd0\u884c\u5728S\u6a21\u5f0f\u3002\u4e0a\u6587\u4e2d\u7684 ecall (Environment Call) \u547d\u4ee4\u5c31\u662f\u4e0d\u540c\u7279\u6743\u7ea7\u4e4b\u95f4\u7684\u6865\u6881\uff0c\u4f8b\u5982\u7528\u6237\u7a0b\u5e8f\u6267\u884c ecall \u540e\uff0cCPU\u4f1a\u5207\u6362\u81f3S\u6a21\u5f0f\uff0c\u540c\u65f6\u5c06PC\u7684\u503c\u7f6e\u4e3a\u4e00\u4e2a\u7531\u5185\u6838\u9884\u8bbe\u7684\u5730\u5740\uff0c\u8fdb\u800c\u5207\u6362\u81f3\u5185\u6838\u7684\u6267\u884c\u6d41\u3002 ecall \u5b9e\u9645\u4e0a\u662f\u9677\u5165( trap )\u7684\u4e00\u79cd\uff0c\u60f3\u8981\u4e86\u89e3\u66f4\u591a\u7ec6\u8282\u53ef\u4ee5\u81ea\u884c\u9605\u8bfbRISC-V\u624b\u518c\uff08\u8bf7\u5230\u6821\u5185\u7f51 \u5b9e\u9a8c\u5de5\u5177 \u4e0b\u8f7d\uff09","title":"1.2 \u7cfb\u7edf\u8c03\u7528\u7684\u63a5\u53e3\uff1a\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u548c\u7528\u6237\u7a0b\u5e8f\u7684\u4e2d\u95f4\u4f53"},{"location":"lab2/part2/#13","text":"\u8fd9\u91cc\u6211\u4eec\u8fd8\u5ffd\u7565\u4e86\u4e00\u70b9\uff0c\u90a3\u5c31\u662f\u7cfb\u7edf\u8c03\u7528\u8fd8\u9700\u8981\u4f20\u9012\u53c2\u6570\u3002\u5b9e\u9645\u4e0a\uff0c\u4ece\u6c47\u7f16\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5f53\u6211\u4eec\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u7684\u65f6\u5019\uff0c\u4f20\u5165\u7684\u53c2\u6570\u4e00\u822c\u4f1a\u6309\u7167\u4f4d\u7f6e\u4f9d\u6b21\u653e\u5728 a0 , a1 , a2 \u7b49\u4ee5\u6b64\u7c7b\u63a8\u7684\u5bc4\u5b58\u5668\u4e2d\u3002\u60f3\u8981\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u51fd\u6570\u53c2\u6570\u7684\u7ec6\u8282\u53ef\u4ee5\u81ea\u884c\u9605\u8bfb RISC-V\u624b\u518c \u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u8c03\u7528 user/user.h \u4e2d\u7684\u51fd\u6570\u63a5\u53e3\u540e\uff0c\u53c2\u6570\u5df2\u7ecf\u5b58\u50a8\u4e8e\u5bc4\u5b58\u5668\u4e86\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u539f\u5c01\u4e0d\u52a8\u5730\u7ee7\u7eed\u8c03\u7528 ecall \uff0c\u64cd\u4f5c\u7cfb\u7edf\u5c31\u53ef\u4ee5\u901a\u8fc7a0, a1, a2\u7b49\u5bc4\u5b58\u5668\u6765\u83b7\u53d6\u53c2\u6570\u4e86\u3002\u6b64\u5916\uff0c\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e00\u822c\u5b58\u50a8\u4e8ea0\u5bc4\u5b58\u5668\u3002 \u63d0\u793a \u6839\u636eRISC-V\u6807\u51c6\u89c4\u5b9a\uff0c\u51fd\u6570\u8c03\u7528\u901a\u8fc7\u5bc4\u5b58\u5668\u4f20\u9012\u53c2\u6570\u3002\u5728\u5185\u6838\u4e2d\u53ef\u4ee5\u901a\u8fc7argint\u3001argaddr\u7b49\u51fd\u6570\u83b7\u53d6\u7cfb\u7edf\u8c03\u7528\u7684\u53c2\u6570\uff0c\u5206\u522b\u5bf9\u5e94\u6574\u6570\u548c\u6307\u9488\uff0c\u5b83\u4eec\u90fd\u8c03\u7528argraw\u6765\u8bfb\u53d6\u5df2\u4fdd\u5b58\u7684\u5bc4\u5b58\u5668\u3002\u6bd4\u5982\uff0c kernel/sycall.c \u4e2d line 34-54\u4e2d argraw \u51fd\u6570\u6240\u63cf\u8ff0\u7684\u5c31\u662f\u53d6\u51fa\u53c2\u6570\u7684\u8fc7\u7a0b\u3002\u5176\u4e2d trapframe\u5c31\u662f\u7528\u6237\u8fdb\u7a0b\u7684\u5bc4\u5b58\u5668\u72b6\u6001 \uff08\u4e0a\u4e0b\u6587\uff09\u3002","title":"1.3 \u7cfb\u7edf\u8c03\u7528\u7684\u53c2\u6570\uff1a\u5bc4\u5b58\u5668\u4f20\u53c2"},{"location":"lab2/part2/#14","text":"\u6309\u7167\u4e4b\u524d\u6240\u8ff0\uff0c\u5b9a\u4e49\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u5b9e\u9645\u4e0a\u5f88\u7b80\u5355\uff1a\u5c06\u7cfb\u7edf\u8c03\u7528\u53f7\u7684\u5b8f\u5b9a\u4e49 SYS_${name} \u6dfb\u52a0\u5728 kernel/syscall.h \uff0c\u6bcf\u6b21\u7cfb\u7edf\u8c03\u7528\u65f6\u6839\u636e a7 \u5bc4\u5b58\u5668\u4f20\u5165\u7684\u503c\u5224\u5b9a\u5177\u4f53\u7684\u7cfb\u7edf\u8c03\u7528\u7c7b\u578b\u5373\u53ef\u3002 \u90a3\u4e48\u63a5\u4e0b\u6765\u6211\u4eec\u9762\u4e34\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898\u662f\uff1a\u5185\u6838\u600e\u4e48\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u53f7\uff08\u5b58\u5728 a7 \uff09\u6765\u6267\u884c\u4e0d\u540c\u7684\u7cfb\u7edf\u8c03\u7528\u51fd\u6570\u3002 \u63d0\u793a \u6211\u4eec\u9700\u8981\u5173\u6ce8 kernel/syscall.c \u4e2d\u7684\u4ee3\u7801\uff0c line 86-130 \u5b9a\u4e49\u4e86\u4e00\u5927\u6bb5\u770b\u8d77\u6765\u5c31\u548c\u7cfb\u7edf\u8c03\u7528\u6709\u5173\u7684\u90e8\u5206\u3002\u8fd9\u91cc\u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u4e00\u4e2a\u662f extern \u8fdb\u884c\u6807\u8bc6\u7684\u51fd\u6570\u63a5\u53e3\uff0c\u53e6\u4e00\u4e2a\u662f\u4ee5 syscall \u4e3a\u540d\u7684\u6570\u7ec4\u3002 \u524d\u8005\u5b9e\u9645\u4e0a\u58f0\u660e\u4e86\u8fd9\u4e9b\u51fd\u6570\uff0c\u8fd9\u4e9b\u51fd\u6570\u7684\u5b9e\u73b0\u4e0d\u5fc5\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\uff0c\u800c\u662f\u5206\u5e03\u5728\u5404\u4e2a\u76f8\u5173\u7684\u4ee3\u7801\u6587\u4ef6\u4e2d\uff08\u4e00\u822c\u653e\u5728 sys \u5f00\u5934\u7684\u6587\u4ef6\u4e2d\uff0c\u5305\u62ec sysproc.c \u4e0e sysfile.c \uff09\uff0c\u6211\u4eec\u5728\u8fd9\u4e9b\u4ee3\u7801\u6587\u4ef6\u4e2d\u5b9e\u73b0\u597d\u5bf9\u5e94\u7684\u51fd\u6570\uff0c\u6700\u540e\u5c31\u53ef\u4ee5\u7f16\u8bd1\u51fa\u5bf9\u5e94\u540d\u5b57\u7684\u6c47\u7f16\u4ee3\u7801\u51fd\u6570\uff0c extern \u5c31\u4f1a\u627e\u5230\u5bf9\u5e94\u7684\u51fd\u6570\u5b9e\u73b0\u4e86\u3002 \u540e\u8005\u5219\u662f\u5c06\u8fd9\u4e9b\u51fd\u6570\u7684\u6307\u9488\u90fd\u653e\u5728\u7edf\u4e00\u7684\u6570\u7ec4\u91cc\uff0c\u5e76\u4e14\u6570\u7ec4\u4e0b\u6807\u5c31\u662f\u7cfb\u7edf\u8c03\u7528\u53f7\uff0c\u8fd9\u6837\u6211\u4eec\u5728\u5206\u8fa8\u4e0d\u540c\u7cfb\u7edf\u8c03\u7528\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u7528\u6570\u7ec4\u6765\u8fdb\u884c\u64cd\u4f5c\u4e86\u3002 kernel/syscall.c \u4e2d\u7684 syscall() \u51fd\u6570\u5c31\u6839\u636e\u8fd9\u4e00\u65b9\u6cd5\u5b9e\u73b0\u4e86\u7cfb\u7edf\u8c03\u7528\u7684\u5206\u53d1\uff08\u901a\u8fc7\u4e0d\u540c\u7cfb\u7edf\u8c03\u7528\u53f7\u8c03\u7528\u4e0d\u540c\u7cfb\u7edf\u8c03\u7528\u51fd\u6570\uff09\uff0c\u8bf7\u4ed4\u7ec6\u9605\u8bfb\u5e76\u5c1d\u8bd5\u7406\u89e3\u3002 \u5c06\u4e24\u8005\u5408\u8d77\u6765\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u5f97\u7cfb\u7edf\u8c03\u7528\u7684 \u5b9e\u73b0 \u548c\u7cfb\u7edf\u8c03\u7528\u7684 \u5206\u53d1 \u5f7c\u6b64 \u5206\u79bb \uff0c\u8fd9\u5bf9\u51fd\u6570\u7f16\u5199\u8005\u975e\u5e38\u53cb\u597d\uff0c\u4f46\u662f\u4f1a\u8ba9\u521d\u5b66\u8005\u6709\u4e9b\u8ff7\u60d1\uff0c\u8fd9\u662f\u9700\u8981\u6ce8\u610f\u7684\u3002","title":"1.4 \u7cfb\u7edf\u8c03\u7528\u7684\u5206\u53d1\u548c\u5b9e\u73b0\uff1a\u89e3\u8026\u5408"},{"location":"lab2/part2/#2","text":"\u73b0\u5728\u6211\u4eec\u4ee5\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\uff0c\u6765\u770b\u770bxv6\u662f\u600e\u4e48\u5b9e\u73b0\u7cfb\u7edf\u8c03\u7528\u7684\u3002\u6211\u4eec\u51c6\u5907\u6311\u9009\u770b\u8d77\u6765\u6734\u5b9e\u65e0\u534e\u7684\u7cfb\u7edf\u8c03\u7528 sleep \uff0c\u56e0\u4e3a\u5b83\u5b9e\u9645\u4e0a\u6697\u85cf\u51f6\u9669\u3002 \u5148\u6765\u770b\u5f20\u603b\u56fe\u628a\u63e1\u4e00\u4e0b\u6574\u4f53\u6d41\u7a0b\uff1a \u4ee5\u4e0b\u53ea\u5bf9\u7cfb\u7edf\u8c03\u7528\u8fc7\u7a0b\u67d0\u51e0\u4e2a\u5173\u952e\u70b9\u8fdb\u884c\u5206\u6790\uff0c\u5176\u4ed6\u76f8\u5173\u4ee3\u7801/\u6d41\u7a0b\u9700\u8981\u5927\u5bb6\u81ea\u884c\u67e5\u9605\u4ee3\u7801\uff1a","title":"2. \u4e3e\u4f8b\uff1a\u7cfb\u7edf\u8c03\u7528\u7684\u5b9e\u73b0"},{"location":"lab2/part2/#21","text":"xv6\u5173\u4e8esleep\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u7684\u58f0\u660e\u5728user/user.h\u3002 /* user/user.h */ int sleep ( int );","title":"2.1 \u7528\u6237\u7a0b\u5e8f\u8c03\u7528"},{"location":"lab2/part2/#22-usyss","text":"\u7136\u800c\uff0cuser/user.h\u53ea\u662f\u5bf9\u51fd\u6570\u539f\u578b\u8fdb\u884c\u4e86\u58f0\u660e\u3002\u5177\u4f53\u505a\u4e86\u4ec0\u4e48\u4e8b\u5462\uff1f\u8fd9\u4e2a\u5b9a\u4e49\u662f\u5728usys.S\u4e2d\uff0c\u8be6\u89c11.2\u5c0f\u8282\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cusys.S\u6c47\u7f16\u662f\u7531usys.pl\uff08perl\u811a\u672c\uff09\u81ea\u52a8\u751f\u6210\u7684\u3002\u4e5f\u5c31\u662f\uff0c\u5f53\u4f60\u8981\u589e\u52a0\u65b0\u7684\u7cfb\u7edf\u8c03\u7528\u65f6\uff0c\u4e0d\u8981\u4fee\u6539usys.S\uff0c\u800c\u662f\u53c2\u8003\u5176\u4ed6\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u6765\u4fee\u6539usys.pl\u3002","title":"2.2 usys.S\u6c47\u7f16"},{"location":"lab2/part2/#23-uservec","text":"\u5f53\u6267\u884cecall\u6307\u4ee4\u540e\uff0c\u5185\u6838\u4f1a\u5207\u6362\u5230supervisor mode\u3002\u63a5\u7740\uff0c\u5185\u6838\u6267\u884c\u7684\u7b2c\u4e00\u4e2a\u6307\u4ee4\u662f\u6765\u81eatrampoline.S\u6587\u4ef6\u7684uservec\u6c47\u7f16\u51fd\u6570\u3002","title":"2.3 uservec\u6c47\u7f16"},{"location":"lab2/part2/#24-usertrap","text":"\u4e4b\u540e\uff0c\u4ee3\u7801\u8df3\u8f6c\u5230\u4e86\u7531C\u8bed\u8a00\u5b9e\u73b0\u7684usertrap\u51fd\u6570\u4e2d\uff08trap.c\uff09\uff0c\u5224\u65ad\u5982\u679c\u662f\u6765\u81ea\u7528\u6237\u7684\u7cfb\u7edf\u8c03\u7528\u5219\u6267\u884csyscall\u51fd\u6570\u3002 \u63d0\u793a \u4e00\u822c\u8fdb\u5165usertrap\u51fd\u6570\u6709\u4e09\u79cd\u60c5\u51b5\uff1a 1. syscall\u7cfb\u7edf\u8c03\u7528\uff0c\u662f\u7531\u7528\u6237\u8fdb\u7a0b\u4e3b\u52a8\u8c03\u7528ecall\u6307\u4ee4\u6765\u5b9e\u73b0\u7684\u3002 2. exception\u5f02\u5e38\uff0c\u662f\u7528\u6237\u8fdb\u7a0b\u6216\u5185\u6838\u7a0b\u5e8f\u7684illegal instruction\u5bfc\u81f4\u7684\uff0c\u6bd4\u5982\uff1a\u96640\u9519\u8bef\uff0c\u6216\u5f15\u7528\u65e0\u6548\u7684\u865a\u62df\u5730\u5740\u3002 3. device interrupt\u8bbe\u5907\u4e2d\u65ad\uff0c\u6bd4\u5982\uff1a\u78c1\u76d8\u8bbe\u5907\u5b8c\u6210\u4e86\u8bfb\u5199\u8bf7\u6c42\u64cd\u4f5c\u3002","title":"2.4 usertrap"},{"location":"lab2/part2/#25-syscall","text":"syscall\u51fd\u6570\u91cc\u6709\u4e00\u4e2a\u8868\u5355\uff0c\u6839\u636e\u4f20\u5165\u7684\u4ee3\u8868\u7cfb\u7edf\u8c03\u7528\u7684\u6570\u5b57\u8fdb\u884c\u67e5\u627e\uff0c\u5e76\u6267\u884c\u5177\u4f53\u5b9e\u73b0\u7cfb\u7edf\u8c03\u7528\u529f\u80fd\u7684\u51fd\u6570\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u4f8b\u5b50\u6765\u8bf4\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c31\u662fsys_sleep\u3002","title":"2.5 syscall"},{"location":"lab2/part2/#26-sys_sleep","text":"\u5176\u4ee3\u7801\u53ef\u89c1 kernel/sysproc.c line55-74\uff1a 55 uint64 56 sys_sleep ( void ) 57 { 58 int n ; 59 uint ticks0 ; 60 61 if ( argint ( 0 , & n ) < 0 ) 62 return -1 ; 63 acquire ( & tickslock ); 64 ticks0 = ticks ; 65 while ( ticks - ticks0 < n ){ 66 if ( myproc () -> killed ){ 67 release ( & tickslock ); 68 return -1 ; 69 } 70 sleep ( & ticks , & tickslock ); 71 } 72 release ( & tickslock ); 73 return 0 ; 74 } \u53c2\u6570\uff1a\u7cfb\u7edf\u8c03\u7528 sleep \u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u7528\u6765\u544a\u77e5\u64cd\u4f5c\u7cfb\u7edf sleep \u7684\u6301\u7eed\u65f6\u95f4\u3002\u4f46\u662f\u8fd9\u91cc\u600e\u4e48\u662f void \uff1f \u8fd9\u662f\u56e0\u4e3axv6\u53c8\u8fdb\u884c\u4e86\u4e00\u6b21\u89e3\u8026\u5408\uff0c\u901a\u8fc7\u4e00\u4e2a\u989d\u5916\u7684\u51fd\u6570\u83b7\u53d6\u53c2\u6570\uff0c\u4ed6\u4eec\u4ee5 arg \u5f00\u5934\uff0c\u5177\u4f53\u89c1 kernel/syscall.c \u3002 \u83b7\u5f97\u8fdb\u7a0b\u7684\u72b6\u6001\uff1a\u6267\u884c\u7cfb\u7edf\u8c03\u7528\u7684\u65f6\u5019\uff0c\u53c2\u6570\u4e0d\u4f1a\u544a\u8bc9xv6\u81ea\u5df1\u5230\u5e95\u662f\u4ec0\u4e48\u7a0b\u5e8f\u3002\u56e0\u6b64\uff0cxv6\u9700\u8981\u989d\u5916\u7684\u8c03\u7528\u6765\u5f04\u6e05\u695a\uff0c\u73b0\u5728\u5230\u5e95\u662f\u4ec0\u4e48\u7a0b\u5e8f\u6b63\u5728\u8fd0\u884c\uff1f \u5173\u952e\u7684\u51fd\u6570\u662f myproc() \uff0c\u8fd9\u4e2a\u51fd\u6570\u5c06\u8fd4\u56de\u6307\u5411\u5f53\u524d\u8fdb\u7a0b\u7684PCB\uff08\u4e5f\u5c31\u662f\u8fdb\u7a0b\u63a7\u5236\u5757\uff09\u7684\u6307\u9488\uff08 struct proc * \uff09\uff0c\u91cc\u9762\u6709\u7a0b\u5e8f\u7684\u5404\u79cd\u4fe1\u606f\u3002 sleep \u7684\u5b9e\u73b0\u903b\u8f91\uff1a\u8fd9\u91cc\uff0c\u4e3b\u8981\u5c31\u662f\u6839\u636e\u5404\u4e2a\u4e0d\u540c\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u5b9e\u73b0\u81ea\u8eab\u5e94\u7684\u903b\u8f91\u5373\u53ef\u3002\u73b0\u5728\u7b80\u8981\u4ecb\u7ecd sleep \u903b\u8f91\u3002 line 61\uff1a\u83b7\u53d6\u53c2\u6570 line 63\uff1a\u7ed9\u65f6\u949f\u52a0\u9501\uff0c\u83b7\u53d6\u5f53\u524d\u7684\u65f6\u95f4 line 65\uff1a\u6bd4\u8f83\u662f\u5426\u5230\u4e86 sleep \u7ed3\u675f\u7684\u65f6\u95f4 line 66-69\uff1a\u8fdb\u7a0b\u7ed3\u675f\u4e86\u5c31\u9000\u51fa\uff0c\u4ec0\u4e48\u4e5f\u4e0d\u505a line 70\uff1a\u5426\u5219\u7ee7\u7eed\u7761\u7720 line 72-73\uff1a\u5230\u65f6\u95f4\u4e86\u5219\u91ca\u653e\u65f6\u95f4\u7684\u9501\uff0c\u8fd4\u56de\u7a0b\u5e8f\uff0c sleep \u7ed3\u675f\u3002","title":"2.6 sys_sleep"},{"location":"lab2/part2/#27","text":"\u5f53sleep\u5b8c\u6210\u4e4b\u540e\uff0c\u8fd4\u56de\u81f3syscall\u51fd\u6570\u3002\u5728syscall\u51fd\u6570\u4e2d\u8c03\u7528usertrapret\uff0c\u7528\u4e8e\u5b8c\u6210\u90e8\u5206\u65b9\u4fbf\u5728C\u4ee3\u7801\u5b9e\u73b0\u7684\u8fd4\u56de\u7528\u6237\u7a7a\u95f4\u7684\u5de5\u4f5c\u3002\u8fd8\u6709\u4e00\u4e9b\u5de5\u4f5c\u53ea\u80fd\u5728\u6c47\u7f16\u8bed\u8a00\u5b8c\u6210\uff0c\u5373trampoline.s\u4e2d\u7684userret\u51fd\u6570\u3002\u6700\u540e\uff0c\u8fd9\u4e2a\u51fd\u6570\u6267\u884csret\u6307\u4ee4\uff0c\u5207\u56de\u7528\u6237\u7a7a\u95f4\uff0c\u6267\u884c\u7528\u6237\u7a7a\u95f4ecall\u7684\u4e0b\u4e00\u6761\u6307\u4ee4ret\u3002\u5f53ret\u6267\u884c\u5b8c\u540e\uff0c\u8fd4\u56de\u8c03\u7528\u51fd\u6570\u7684\u4f4d\u7f6e\uff0c\u6267\u884c\u7528\u6237\u7a0b\u5e8f\u7684\u4e0b\u4e00\u6761\u8bed\u53e5\u3002 \u4ee5\u4e0a\uff0c\u5373\u662f\u7cfb\u7edf\u8c03\u7528\u8fc7\u7a0b\u4e2d\u5927\u81f4\u7684\u4ee3\u7801\u6267\u884c\u6d41\u7a0b\u3002","title":"2.7 \u6267\u884c\u5b8c\u540e\u8fd4\u56de\u7528\u6237\u7a7a\u95f4"},{"location":"lab2/part2/#3","text":"\u4e00\u4e9b\u7cfb\u7edf\u8c03\u7528\u4f20\u9012\u7684\u53c2\u6570\u662f\u6307\u9488\uff0c\u5185\u6838\u9700\u8981\u4f7f\u7528\u8fd9\u4e9b\u6307\u9488\u6765\u8bfb\u5199\u7528\u6237\u7a7a\u95f4\u3002\u4f46\u7531\u4e8e\u5185\u6838\u9875\u8868\u7684\u6620\u5c04\u548c\u7528\u6237\u9875\u8868\u7684\u6620\u5c04\u4e0d\u4e00\u6837\uff0c\u5185\u6838\u4e0d\u80fd\u4f7f\u7528\u666e\u901a\u7684\u6307\u4ee4\u8bbf\u95ee\u7528\u6237\u7a7a\u95f4\uff0c\u8fd9\u6837\u5c31\u6d89\u53ca\u5230\u5185\u6838\u7a7a\u95f4\u548c\u7528\u6237\u7a7a\u95f4\u7684\u5730\u5740\u8f6c\u6362\u95ee\u9898\u3002\u5728xv6\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 copyout / copyin \u8fd9\u4e24\u4e2a\u51fd\u6570\u5206\u522b\u5b8c\u6210\u5185\u6838\u7a7a\u95f4\u5230\u7528\u6237\u7a7a\u95f4\u3001\u7528\u6237\u7a7a\u95f4\u5230\u5185\u6838\u7a7a\u95f4\u7684\u6570\u636e\u62f7\u8d1d\u3002\u5177\u4f53\u53ef\u4ee5\u67e5\u770bcopyout/copyin\u7684\u5b9e\u73b0\u7ec6\u8282\uff08kernel/vm.c\uff09\u3002 \u4f8b\u5982\uff0c\u5f53shell\u6267\u884cls\u547d\u4ee4\u65f6\uff0c\u8c03\u7528 fstat \u7cfb\u7edf\u8c03\u7528\uff08user/ls.c\uff09\u83b7\u53d6\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u4fe1\u606f\u3002 fstat\u7cfb\u7edf\u8c03\u7528\u9677\u5165\u5185\u6838\u8c03\u7528 sys_fstat \uff0c\u6700\u7ec8\u6267\u884c filestat \u51fd\u6570\uff0c\u5176\u4e2d st \u662f\u4ece\u7528\u6237\u7a7a\u95f4\u4f20\u8fdb\u6765\u7684\u5165\u53c2\uff08\u6307\u9488\uff09\u3002 \u5728filestat\u51fd\u6570\u4e2d\uff0c\u901a\u8fc7 stati \u51fd\u6570\u83b7\u53d6\u5230inode\u8282\u70b9\u4fe1\u606f\uff0c\u518d\u8c03\u7528 copyout \u5c06\u83b7\u53d6\u5230\u7684\u4fe1\u606f\u62f7\u8d1d\u7ed9\u8d77\u59cb\u5730\u5740\u4e3afilestat\u51fd\u6570\u7684\u5165\u53c2addr\uff0c\u5927\u5c0f\u4e3asizeof(st)\u7684\u7528\u6237\u7a7a\u95f4\u3002 \u4e4b\u540e\uff0c\u8fd4\u56de sys_fstat \uff0c\u5373\u53ef\u5c06\u5185\u6838\u7a7a\u95f4\u7684\u6570\u636e\u4f20\u9012\u81f3\u7528\u6237\u7a7a\u95f4\u3002","title":"3. \u5185\u6838\u7a7a\u95f4\u548c\u7528\u6237\u7a7a\u95f4\u4ea4\u6362\u6570\u636e"},{"location":"lab2/part2/#4","text":"[1] xv6 book, Sections 4.3 and 4.4 of Chapter 4 [2] Related source files: The user-space code for systems calls is in user/user.h and user/usys.pl . The kernel-space code is kernel/syscall.h , kernel/syscall.c . The process-related code is kernel/proc.h and kernel/proc.c . \u200b","title":"4. \u53c2\u8003\u8d44\u6599"},{"location":"lab2/part3/","text":"\u5b9e\u9a8c\u5b9e\u73b0 \u00b6 \u63d0\u793a \u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5bf9\u4e00\u4e9b\u5b9e\u73b0\u7684\u7ec6\u8282\u505a\u4e00\u5b9a\u63d0\u9192\uff0c\u4f46\u662f\u5b8c\u6574\u7684\u6d41\u7a0b\u9700\u8981\u81ea\u5df1\u628a\u63e1\uff0c\u6211\u4eec \u4e0d\u4f1a\u7ed9\u51fa\u6bcf\u4e00\u6b65\u5b9e\u73b0\u6b65\u9aa4 \u3002\u56e0\u6b64\uff0c\u6700\u91cd\u8981\u7684\u8fd8\u662f\u9605\u8bfb \u5b9e\u9a8c\u539f\u7406 \u5185\u5bb9\uff0c\u5f97\u51fa\u81ea\u5df1\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u7136\u540e\u53c2\u8003\"\u5b9e\u9a8c\u5b9e\u73b0\"\u8fd9\u90e8\u5206\u7684\u5185\u5bb9\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cxv6\u7684\u4ee3\u7801\u5f88\u503c\u5f97\u53c2\u8003\uff0c\u53ef\u4ee5\u770b\u770b\u5176\u4ed6\u7cfb\u7edf\u8c03\u7528\u548c\u529f\u80fd\u662f\u600e\u4e48\u5b9e\u73b0\u7684\u3002\u540c\u65f6\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 printf \u6216\u8005 gdb \u7b49\u65b9\u6cd5\u67e5\u770b\u5177\u4f53\u7684\u6267\u884c\u60c5\u51b5\u3002\u6b64\u5916\uff0c\u8fd8\u53ef\u4ee5\u9605\u8bfb xv6 \u6307\u5bfc\u4e66\uff0c\u770b\u770b\u80cc\u540e\u7684\u8bbe\u8ba1\u673a\u7406\u3002 \u5982\u679c\u5728\u5b9e\u73b0\u8fc7\u7a0b\u4e2d\u9047\u5230\u56f0\u96be\uff0c\u53ef\u4ee5 \u5148\u5c1d\u8bd5\u56de\u7b54\u4efb\u52a1\u4e09 \u63d0\u51fa\u7684\u95ee\u9898\uff0c\u5b83\u4eec\u6216\u8bb8\u53ef\u4ee5\u5e2e\u52a9\u4f60\u66f4\u597d\u5730\u7406\u89e3\u3002 1. \u4efb\u52a1\u4e00\uff1a\u7cfb\u7edf\u8c03\u7528\u4fe1\u606f\u6253\u5370 \u00b6 \u5177\u4f53\u8981\u6c42\uff1a\u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3a trace \u7684\u7cfb\u7edf\u8c03\u7528\u3002 1.1 \u6d41\u7a0b \u00b6 \u5728\u7528\u6237\u90e8\u5206\uff1a \u53c2\u8003 \u8fd9\u4e2a\u6307\u5357 \uff0c\u5207\u6362\u5230syscall\u5206\u652f\u5e76\u540c\u6b65\u4e0a\u6e38\u4ed3\u5e93\uff1b \u8bb0\u5f97\u5728Makefile\u4e2d\u7ed9 UPROGS \u52a0 $U/_trace \u3002 \u7136\u540e make qemu \u4f1a\u53d1\u73b0\u65e0\u6cd5\u7f16\u8bd1 user/trace.c\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u5728\u7528\u6237\u6001\u5305\u88c5\u597d trace() \uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u6309\u7167 \u201d\u5b9e\u9a8c\u539f\u7406\u201c \u4e2d\u6240\u8ff0\uff0c\u6162\u6162\u6dfb\u52a0\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u63a5\u53e3\u3002 \u5728 user/user.h \u52a0\u5165\u51fd\u6570\u5b9a\u4e49\uff1b \u5728 user/usys.pl \u52a0\u5165\u7528\u6237\u7cfb\u7edf\u8c03\u7528\u540d\u79f0\uff08\u4e5f\u5c31\u662f\u4e4b\u524d\u6240\u8bf4\u7684entry\uff09\uff1b \u5728 kernel/syscall.h \u52a0\u5165\u7cfb\u7edf\u8c03\u7528\u53f7SYS_trace\uff0c\u4ee5\u7ed9trace\u505a\u4e00\u4e2a\u6807\u8bc6\uff0c\u8be5\u8c03\u7528\u53f7\u7684\u53d6\u503c\u53ef\u81ea\u884c\u51b3\u5b9a\u3002 \u7136\u540e\u542f\u52a8xv6\uff0c\u5728shell\u8f93\u5165 trace 32 grep hello README \uff0c\u4f1a\u53d1\u73b0xv6\u5d29\u6e83\u4e86\uff0c\u56e0\u4e3a\u8fd9\u6761\u7cfb\u7edf\u8c03\u7528\u6ca1\u6709\u5728\u5185\u6838\u4e2d\u5b9e\u73b0\u3002 \u5728\u5185\u6838\u90e8\u5206\uff1a \u5728 kernel/sysproc.c \u4e2d\u6dfb\u52a0 sys_trace() \u3002 \u5728 kernel/syscall.c \u4e2d\u52a0\u5165\u5bf9\u5e94\u7684\u7cfb\u7edf\u8c03\u7528\u5206\u53d1\u903b\u8f91\u3002 \u5f00\u59cb\u5b9e\u73b0 sys_trace() \u5bf9\u5e94\u7684\u903b\u8f91\uff0c\u540c\u65f6\u8be5\u7cfb\u7edf\u8c03\u7528\u8fd8\u9700\u8981\u4fee\u6539\u5176\u4ed6\u51fd\u6570\u7684\u903b\u8f91\u3002 1.2 \u5b9e\u73b0\u63d0\u793a \u00b6 \u8fdb\u7a0b\u542f\u52a8 trace \u540e\uff0c\u5982\u679cfork\uff0c\u5b50\u8fdb\u7a0b\u4e5f\u5e94\u8be5\u5f00\u542ftrace\uff0c\u5e76\u4e14\u7ee7\u627f\u7236\u8fdb\u7a0b\u7684 mask \uff0c\u4e5f\u5c31\u662ftrace\u7cfb\u7edf\u8c03\u7528\u7684\u5165\u53c2\u3002\uff08\u8fd9\u9700\u8981\u6ce8\u610f\u4fee\u6539 kernel/proc.c \u4e2dfork()\u7684\u4ee3\u7801\uff09 \u53ef\u4ee5\u5728PCB \uff08 struct proc \uff09\u4e2d\u6dfb\u52a0\u6210\u5458 int mask \uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u8bb0\u4f4ftrace\u544a\u77e5\u8fdb\u7a0b\u7684mask\u3002PCB\u5b9a\u4e49\u4e8e kernel/proc.h \u3002 \u4e3a\u4e86\u8ba9\u6bcf\u4e2a\u7cfb\u7edf\u8c03\u7528\u90fd\u53ef\u4ee5\u8f93\u51fa\u4fe1\u606f\uff0c\u6211\u4eec\u5e94\u8be5\u5728 kernel/syscall.c \u4e2d\u7684 syscall() \u6dfb\u52a0\u76f8\u5e94\u903b\u8f91\u3002\uff08\u6dfb\u52a0\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u5bf9\u5e94\u540d\u5b57\u7684\u6570\u7ec4\uff0c\u597d\u50cf\u53ef\u4ee5\u5927\u5927\u7b80\u5316\u5b9e\u73b0\u5662\uff01\uff09 \u5176\u4ed6\u7684\u7cfb\u7edf\u8c03\u7528\u5b9e\u73b0\u53ef\u4ee5\u53c2\u8003\uff0c\u8be6\u89c1 kernel/sysproc.c \u3002 2. \u4efb\u52a1\u4e8c\uff1a\u6dfb\u52a0\u7cfb\u7edf\u8c03\u7528sysinfo \u00b6 \u5177\u4f53\u8981\u6c42\uff1a\u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3a sysinfo \u7684\u7cfb\u7edf\u8c03\u7528\u3002 2.1 \u6d41\u7a0b \u00b6 \u5728\u7528\u6237\u90e8\u5206\uff1a \u5207\u81f3 syscall git\u5206\u652f \u8bb0\u5f97\u5728 Makefile \u4e2d\u7ed9 UPROGS \u52a0 $U/_sysinfotest \u7136\u540e make qemu \u4f1a\u53d1\u73b0\u65e0\u6cd5\u7f16\u8bd1 user/sysinfotest.c \uff0c\u95ee\u9898\u548c\u524d\u9762\u4e00\u6837\uff0c\u4e00\u987f\u64cd\u4f5c\u731b\u5982\u864e\u3002 /* \u4f60\u9700\u8981\u5728user/user.h\u6dfb\u52a0\u5982\u4e0b\u5b9a\u4e49 */ struct sysinfo ; // \u9700\u8981\u9884\u5148\u58f0\u660e\u7ed3\u6784\u4f53\uff0c\u53c2\u8003fstat\u7684\u53c2\u6570stat int sysinfo ( struct sysinfo * ); \u5728\u5185\u6838\u90e8\u5206\uff1a \u8bf7\u53c2\u8003\u4e4b\u524d\u7684\u6d41\u7a0b\u81ea\u884c\u5b8c\u6210\u8bbe\u8ba1\u3002 2.2 \u5b9e\u73b0\u63d0\u793a \u00b6 sysinfo \u9700\u8981\u5728\u5185\u6838\u5730\u5740\u7a7a\u95f4\u4e2d\u586b\u5199\u7ed3\u6784\u4f53\uff0c\u7136\u540e\u5c06\u5176\u590d\u5236\u5230\u7528\u6237\u5730\u5740\u7a7a\u95f4\u3002\u53ef\u4ee5\u53c2\u8003 kernel/file.c fstat() \u4ee5\u53ca kernel/sysfile.csys_fstat() \u4e2d\u901a\u8fc7 copyout() \u51fd\u6570\u5bf9\u8be5\u8fc7\u7a0b\u7684\u5b9e\u73b0\u3002 \u8ba1\u7b97\u5269\u4f59\u7684\u5185\u5b58\u7a7a\u95f4\u7684\u51fd\u6570\u4ee3\u7801\uff0c\u6700\u597d\u5199\u5728\u6587\u4ef6 kernel/kalloc.c \u91cc\u3002 \u8ba1\u7b97\u7a7a\u95f2\u8fdb\u7a0b\u6570\u91cf\u7684\u51fd\u6570\u4ee3\u7801\uff0c\u6700\u597d\u5199\u5728\u6587\u4ef6 kernel/proc.c \u91cc\u3002 \u8ba1\u7b97\u53ef\u7528\u6587\u4ef6\u63cf\u8ff0\u7b26\u6570\u91cf\u7684\u4ee3\u7801\uff0c\u6700\u597d\u5199\u5728\u6587\u4ef6 kernel/proc.c \u91cc\u3002 \u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u503c\u5b9e\u9645\u4e0a\u5c31\u662f PCB \u6210\u5458 ofile \u7684\u4e0b\u6807\uff08\u89c1 kernel/proc.h \uff09\u3002 \u5728\u6dfb\u52a0\u4e0a\u8ff0\u4e24\u4e2a\u51fd\u6570\u540e\uff0c\u53ef\u4ee5\u5728 kernel/defs.h \u4e2d\u58f0\u660e\uff0c\u4ee5\u4fbf\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\u8c03\u7528\u8fd9\u4e9b\u51fd\u6570\u3002 \u67e5\u9605\u300axv6 book\u300b chapter1 \u548c chapter2 \u4e2d\u76f8\u5173\u7684\u5185\u5bb9\u3002 \u200b 3. \u4efb\u52a1\u4e09\uff1a\u56de\u7b54\u95ee\u9898 \u00b6 \u56de\u7b54\u95ee\u9898 (1) \u9605\u8bfb kernel/syscall.c \uff0c\u8bd5\u89e3\u91ca\u51fd\u6570 syscall() \u5982\u4f55\u6839\u636e\u7cfb\u7edf\u8c03\u7528\u53f7\u8c03\u7528\u5bf9\u5e94\u7684\u7cfb\u7edf\u8c03\u7528\u5904\u7406\u51fd\u6570\uff08\u4f8b\u5982 sys_fork \uff09\uff1f syscall() \u5c06\u5177\u4f53\u7cfb\u7edf\u8c03\u7528\u7684\u8fd4\u56de\u503c\u5b58\u653e\u5728\u54ea\u91cc\uff1f (2) \u9605\u8bfb kernel/syscall.c \uff0c\u54ea\u4e9b\u51fd\u6570\u7528\u4e8e\u4f20\u9012\u7cfb\u7edf\u8c03\u7528\u53c2\u6570\uff1f\u8bd5\u89e3\u91caargraw()\u51fd\u6570\u7684\u542b\u4e49\u3002 (3) \u9605\u8bfb kernel/proc.c \u548c proc.h \uff0c\u8fdb\u7a0b\u63a7\u5236\u5757\u5b58\u50a8\u5728\u54ea\u4e2a\u6570\u7ec4\u4e2d\uff1f\u8fdb\u7a0b\u63a7\u5236\u5757\u4e2d\u54ea\u4e2a\u6210\u5458\u6307\u793a\u4e86\u8fdb\u7a0b\u7684\u72b6\u6001\uff1f\u4e00\u5171\u6709\u54ea\u4e9b\u72b6\u6001\uff1f (4) \u9605\u8bfb kernel/kalloc.c \uff0c\u54ea\u4e2a\u7ed3\u6784\u4f53\u4e2d\u7684\u54ea\u4e2a\u6210\u5458\u53ef\u4ee5\u6307\u793a\u7a7a\u95f2\u7684\u5185\u5b58\u9875\uff1fXv6\u4e2d\u7684\u4e00\u4e2a\u9875\u6709\u591a\u5c11\u5b57\u8282\uff1f (5) \u9605\u8bfb kernel/vm.c \uff0c\u8bd5\u89e3\u91ca copyout() \u51fd\u6570\u5404\u4e2a\u53c2\u6570\u7684\u542b\u4e49\u3002 \u200b","title":"\u5b9e\u9a8c\u5b9e\u73b0"},{"location":"lab2/part3/#_1","text":"\u63d0\u793a \u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5bf9\u4e00\u4e9b\u5b9e\u73b0\u7684\u7ec6\u8282\u505a\u4e00\u5b9a\u63d0\u9192\uff0c\u4f46\u662f\u5b8c\u6574\u7684\u6d41\u7a0b\u9700\u8981\u81ea\u5df1\u628a\u63e1\uff0c\u6211\u4eec \u4e0d\u4f1a\u7ed9\u51fa\u6bcf\u4e00\u6b65\u5b9e\u73b0\u6b65\u9aa4 \u3002\u56e0\u6b64\uff0c\u6700\u91cd\u8981\u7684\u8fd8\u662f\u9605\u8bfb \u5b9e\u9a8c\u539f\u7406 \u5185\u5bb9\uff0c\u5f97\u51fa\u81ea\u5df1\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u7136\u540e\u53c2\u8003\"\u5b9e\u9a8c\u5b9e\u73b0\"\u8fd9\u90e8\u5206\u7684\u5185\u5bb9\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cxv6\u7684\u4ee3\u7801\u5f88\u503c\u5f97\u53c2\u8003\uff0c\u53ef\u4ee5\u770b\u770b\u5176\u4ed6\u7cfb\u7edf\u8c03\u7528\u548c\u529f\u80fd\u662f\u600e\u4e48\u5b9e\u73b0\u7684\u3002\u540c\u65f6\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 printf \u6216\u8005 gdb \u7b49\u65b9\u6cd5\u67e5\u770b\u5177\u4f53\u7684\u6267\u884c\u60c5\u51b5\u3002\u6b64\u5916\uff0c\u8fd8\u53ef\u4ee5\u9605\u8bfb xv6 \u6307\u5bfc\u4e66\uff0c\u770b\u770b\u80cc\u540e\u7684\u8bbe\u8ba1\u673a\u7406\u3002 \u5982\u679c\u5728\u5b9e\u73b0\u8fc7\u7a0b\u4e2d\u9047\u5230\u56f0\u96be\uff0c\u53ef\u4ee5 \u5148\u5c1d\u8bd5\u56de\u7b54\u4efb\u52a1\u4e09 \u63d0\u51fa\u7684\u95ee\u9898\uff0c\u5b83\u4eec\u6216\u8bb8\u53ef\u4ee5\u5e2e\u52a9\u4f60\u66f4\u597d\u5730\u7406\u89e3\u3002","title":"\u5b9e\u9a8c\u5b9e\u73b0"},{"location":"lab2/part3/#1","text":"\u5177\u4f53\u8981\u6c42\uff1a\u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3a trace \u7684\u7cfb\u7edf\u8c03\u7528\u3002","title":"1. \u4efb\u52a1\u4e00\uff1a\u7cfb\u7edf\u8c03\u7528\u4fe1\u606f\u6253\u5370"},{"location":"lab2/part3/#11","text":"\u5728\u7528\u6237\u90e8\u5206\uff1a \u53c2\u8003 \u8fd9\u4e2a\u6307\u5357 \uff0c\u5207\u6362\u5230syscall\u5206\u652f\u5e76\u540c\u6b65\u4e0a\u6e38\u4ed3\u5e93\uff1b \u8bb0\u5f97\u5728Makefile\u4e2d\u7ed9 UPROGS \u52a0 $U/_trace \u3002 \u7136\u540e make qemu \u4f1a\u53d1\u73b0\u65e0\u6cd5\u7f16\u8bd1 user/trace.c\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u5728\u7528\u6237\u6001\u5305\u88c5\u597d trace() \uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u6309\u7167 \u201d\u5b9e\u9a8c\u539f\u7406\u201c \u4e2d\u6240\u8ff0\uff0c\u6162\u6162\u6dfb\u52a0\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u63a5\u53e3\u3002 \u5728 user/user.h \u52a0\u5165\u51fd\u6570\u5b9a\u4e49\uff1b \u5728 user/usys.pl \u52a0\u5165\u7528\u6237\u7cfb\u7edf\u8c03\u7528\u540d\u79f0\uff08\u4e5f\u5c31\u662f\u4e4b\u524d\u6240\u8bf4\u7684entry\uff09\uff1b \u5728 kernel/syscall.h \u52a0\u5165\u7cfb\u7edf\u8c03\u7528\u53f7SYS_trace\uff0c\u4ee5\u7ed9trace\u505a\u4e00\u4e2a\u6807\u8bc6\uff0c\u8be5\u8c03\u7528\u53f7\u7684\u53d6\u503c\u53ef\u81ea\u884c\u51b3\u5b9a\u3002 \u7136\u540e\u542f\u52a8xv6\uff0c\u5728shell\u8f93\u5165 trace 32 grep hello README \uff0c\u4f1a\u53d1\u73b0xv6\u5d29\u6e83\u4e86\uff0c\u56e0\u4e3a\u8fd9\u6761\u7cfb\u7edf\u8c03\u7528\u6ca1\u6709\u5728\u5185\u6838\u4e2d\u5b9e\u73b0\u3002 \u5728\u5185\u6838\u90e8\u5206\uff1a \u5728 kernel/sysproc.c \u4e2d\u6dfb\u52a0 sys_trace() \u3002 \u5728 kernel/syscall.c \u4e2d\u52a0\u5165\u5bf9\u5e94\u7684\u7cfb\u7edf\u8c03\u7528\u5206\u53d1\u903b\u8f91\u3002 \u5f00\u59cb\u5b9e\u73b0 sys_trace() \u5bf9\u5e94\u7684\u903b\u8f91\uff0c\u540c\u65f6\u8be5\u7cfb\u7edf\u8c03\u7528\u8fd8\u9700\u8981\u4fee\u6539\u5176\u4ed6\u51fd\u6570\u7684\u903b\u8f91\u3002","title":"1.1 \u6d41\u7a0b"},{"location":"lab2/part3/#12","text":"\u8fdb\u7a0b\u542f\u52a8 trace \u540e\uff0c\u5982\u679cfork\uff0c\u5b50\u8fdb\u7a0b\u4e5f\u5e94\u8be5\u5f00\u542ftrace\uff0c\u5e76\u4e14\u7ee7\u627f\u7236\u8fdb\u7a0b\u7684 mask \uff0c\u4e5f\u5c31\u662ftrace\u7cfb\u7edf\u8c03\u7528\u7684\u5165\u53c2\u3002\uff08\u8fd9\u9700\u8981\u6ce8\u610f\u4fee\u6539 kernel/proc.c \u4e2dfork()\u7684\u4ee3\u7801\uff09 \u53ef\u4ee5\u5728PCB \uff08 struct proc \uff09\u4e2d\u6dfb\u52a0\u6210\u5458 int mask \uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u8bb0\u4f4ftrace\u544a\u77e5\u8fdb\u7a0b\u7684mask\u3002PCB\u5b9a\u4e49\u4e8e kernel/proc.h \u3002 \u4e3a\u4e86\u8ba9\u6bcf\u4e2a\u7cfb\u7edf\u8c03\u7528\u90fd\u53ef\u4ee5\u8f93\u51fa\u4fe1\u606f\uff0c\u6211\u4eec\u5e94\u8be5\u5728 kernel/syscall.c \u4e2d\u7684 syscall() \u6dfb\u52a0\u76f8\u5e94\u903b\u8f91\u3002\uff08\u6dfb\u52a0\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u5bf9\u5e94\u540d\u5b57\u7684\u6570\u7ec4\uff0c\u597d\u50cf\u53ef\u4ee5\u5927\u5927\u7b80\u5316\u5b9e\u73b0\u5662\uff01\uff09 \u5176\u4ed6\u7684\u7cfb\u7edf\u8c03\u7528\u5b9e\u73b0\u53ef\u4ee5\u53c2\u8003\uff0c\u8be6\u89c1 kernel/sysproc.c \u3002","title":"1.2 \u5b9e\u73b0\u63d0\u793a"},{"location":"lab2/part3/#2-sysinfo","text":"\u5177\u4f53\u8981\u6c42\uff1a\u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3a sysinfo \u7684\u7cfb\u7edf\u8c03\u7528\u3002","title":"2. \u4efb\u52a1\u4e8c\uff1a\u6dfb\u52a0\u7cfb\u7edf\u8c03\u7528sysinfo"},{"location":"lab2/part3/#21","text":"\u5728\u7528\u6237\u90e8\u5206\uff1a \u5207\u81f3 syscall git\u5206\u652f \u8bb0\u5f97\u5728 Makefile \u4e2d\u7ed9 UPROGS \u52a0 $U/_sysinfotest \u7136\u540e make qemu \u4f1a\u53d1\u73b0\u65e0\u6cd5\u7f16\u8bd1 user/sysinfotest.c \uff0c\u95ee\u9898\u548c\u524d\u9762\u4e00\u6837\uff0c\u4e00\u987f\u64cd\u4f5c\u731b\u5982\u864e\u3002 /* \u4f60\u9700\u8981\u5728user/user.h\u6dfb\u52a0\u5982\u4e0b\u5b9a\u4e49 */ struct sysinfo ; // \u9700\u8981\u9884\u5148\u58f0\u660e\u7ed3\u6784\u4f53\uff0c\u53c2\u8003fstat\u7684\u53c2\u6570stat int sysinfo ( struct sysinfo * ); \u5728\u5185\u6838\u90e8\u5206\uff1a \u8bf7\u53c2\u8003\u4e4b\u524d\u7684\u6d41\u7a0b\u81ea\u884c\u5b8c\u6210\u8bbe\u8ba1\u3002","title":"2.1 \u6d41\u7a0b"},{"location":"lab2/part3/#22","text":"sysinfo \u9700\u8981\u5728\u5185\u6838\u5730\u5740\u7a7a\u95f4\u4e2d\u586b\u5199\u7ed3\u6784\u4f53\uff0c\u7136\u540e\u5c06\u5176\u590d\u5236\u5230\u7528\u6237\u5730\u5740\u7a7a\u95f4\u3002\u53ef\u4ee5\u53c2\u8003 kernel/file.c fstat() \u4ee5\u53ca kernel/sysfile.csys_fstat() \u4e2d\u901a\u8fc7 copyout() \u51fd\u6570\u5bf9\u8be5\u8fc7\u7a0b\u7684\u5b9e\u73b0\u3002 \u8ba1\u7b97\u5269\u4f59\u7684\u5185\u5b58\u7a7a\u95f4\u7684\u51fd\u6570\u4ee3\u7801\uff0c\u6700\u597d\u5199\u5728\u6587\u4ef6 kernel/kalloc.c \u91cc\u3002 \u8ba1\u7b97\u7a7a\u95f2\u8fdb\u7a0b\u6570\u91cf\u7684\u51fd\u6570\u4ee3\u7801\uff0c\u6700\u597d\u5199\u5728\u6587\u4ef6 kernel/proc.c \u91cc\u3002 \u8ba1\u7b97\u53ef\u7528\u6587\u4ef6\u63cf\u8ff0\u7b26\u6570\u91cf\u7684\u4ee3\u7801\uff0c\u6700\u597d\u5199\u5728\u6587\u4ef6 kernel/proc.c \u91cc\u3002 \u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u503c\u5b9e\u9645\u4e0a\u5c31\u662f PCB \u6210\u5458 ofile \u7684\u4e0b\u6807\uff08\u89c1 kernel/proc.h \uff09\u3002 \u5728\u6dfb\u52a0\u4e0a\u8ff0\u4e24\u4e2a\u51fd\u6570\u540e\uff0c\u53ef\u4ee5\u5728 kernel/defs.h \u4e2d\u58f0\u660e\uff0c\u4ee5\u4fbf\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\u8c03\u7528\u8fd9\u4e9b\u51fd\u6570\u3002 \u67e5\u9605\u300axv6 book\u300b chapter1 \u548c chapter2 \u4e2d\u76f8\u5173\u7684\u5185\u5bb9\u3002 \u200b","title":"2.2 \u5b9e\u73b0\u63d0\u793a"},{"location":"lab2/part3/#3","text":"\u56de\u7b54\u95ee\u9898 (1) \u9605\u8bfb kernel/syscall.c \uff0c\u8bd5\u89e3\u91ca\u51fd\u6570 syscall() \u5982\u4f55\u6839\u636e\u7cfb\u7edf\u8c03\u7528\u53f7\u8c03\u7528\u5bf9\u5e94\u7684\u7cfb\u7edf\u8c03\u7528\u5904\u7406\u51fd\u6570\uff08\u4f8b\u5982 sys_fork \uff09\uff1f syscall() \u5c06\u5177\u4f53\u7cfb\u7edf\u8c03\u7528\u7684\u8fd4\u56de\u503c\u5b58\u653e\u5728\u54ea\u91cc\uff1f (2) \u9605\u8bfb kernel/syscall.c \uff0c\u54ea\u4e9b\u51fd\u6570\u7528\u4e8e\u4f20\u9012\u7cfb\u7edf\u8c03\u7528\u53c2\u6570\uff1f\u8bd5\u89e3\u91caargraw()\u51fd\u6570\u7684\u542b\u4e49\u3002 (3) \u9605\u8bfb kernel/proc.c \u548c proc.h \uff0c\u8fdb\u7a0b\u63a7\u5236\u5757\u5b58\u50a8\u5728\u54ea\u4e2a\u6570\u7ec4\u4e2d\uff1f\u8fdb\u7a0b\u63a7\u5236\u5757\u4e2d\u54ea\u4e2a\u6210\u5458\u6307\u793a\u4e86\u8fdb\u7a0b\u7684\u72b6\u6001\uff1f\u4e00\u5171\u6709\u54ea\u4e9b\u72b6\u6001\uff1f (4) \u9605\u8bfb kernel/kalloc.c \uff0c\u54ea\u4e2a\u7ed3\u6784\u4f53\u4e2d\u7684\u54ea\u4e2a\u6210\u5458\u53ef\u4ee5\u6307\u793a\u7a7a\u95f2\u7684\u5185\u5b58\u9875\uff1fXv6\u4e2d\u7684\u4e00\u4e2a\u9875\u6709\u591a\u5c11\u5b57\u8282\uff1f (5) \u9605\u8bfb kernel/vm.c \uff0c\u8bd5\u89e3\u91ca copyout() \u51fd\u6570\u5404\u4e2a\u53c2\u6570\u7684\u542b\u4e49\u3002 \u200b","title":"3. \u4efb\u52a1\u4e09\uff1a\u56de\u7b54\u95ee\u9898"},{"location":"lab2/part4/","text":"\u63d0\u4ea4\u5185\u5bb9 \u00b6 \u9700\u8981\u63d0\u4ea4\u7684\u6587\u4ef6 \u00b6 \u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u63d0\u4ea4\uff1a \u6240\u6709\u4f60\u66fe\u5bf9xv6\u8fdb\u884c\u7684\u66f4\u6539\uff1b \u4e00\u4e2a\u5b9e\u9a8c\u62a5\u544a\u3002\u4efb\u52a1\u4e09\u7684\u95ee\u7b54\u9898\u7b54\u6848\u8bf7\u5199\u5728\u5b9e\u9a8c\u62a5\u544a\u5185\u3002 \u5982\u4f55\u5f97\u77e5\u81ea\u5df1\u66fe\u5bf9xv6\u8fdb\u884c\u8fc7\u90a3\u4e9b\u66f4\u6539\uff1f \u53c2\u7167 \u5b9e\u9a8c\u5b9e\u7528\u5de5\u5177-3.5.2\u8282 \uff0c\u53ef\u4ee5\u4f7f\u7528 git diff \u547d\u4ee4\u68c0\u67e5\u81ea\u5df1\u66fe\u7ecf\u4fee\u6539\u8fc7\u54ea\u4e9b\u6587\u4ef6\u3002 \u63d0\u4ea4\u683c\u5f0f\u8981\u6c42 \u00b6 \u88ab\u4fee\u6539\u7684\u6587\u4ef6\u5982\u679c\u66fe\u7ecf\u4f4d\u4e8e kernel \u6587\u4ef6\u5939\uff0c\u90a3\u4e48\u8bf7\u5728\u63d0\u4ea4\u5305\u4e2d\u521b\u5efa\u4e00\u4e2a kernel \u6587\u4ef6\u5939\uff0c\u5e76\u5c06\u5bf9\u5e94\u4ee3\u7801\u6587\u4ef6\u653e\u7f6e\u4e8e\u8be5\u6587\u4ef6\u5939\u5185\u3002 \u540c\u7406\uff0c\u5982\u679c\u4f60\u66fe\u7ecf\u4fee\u6539\u8fc7 user \u6587\u4ef6\u5939\u7684\u6587\u4ef6\uff0c\u8bf7\u5c06\u5176\u653e\u7f6e\u4e8e\u63d0\u4ea4\u5305\u7684 user \u6587\u4ef6\u5939\u4e2d\u3002 \u6700\u597d\u4e0d\u8981\u5d4c\u5957\u538b\u7f29\u5305\u3002 \u4f60\u7684\u5b9e\u9a8c\u62a5\u544a\u5e94\u5f53\u4f7f\u7528pdf\u683c\u5f0f\uff0c\u5e76\u88ab\u547d\u540d\u4e3a \u5b9e\u9a8c\u62a5\u544a.pdf \u3002 \u4e3a\u4f55\u547d\u540d\u548c\u683c\u5f0f\u5982\u6b64\u91cd\u8981\uff1f \u6211\u4eec\u4f7f\u7528\u81ea\u52a8\u8bc4\u6d4b\u811a\u672c\u6765\u8bc4\u6d4b\u5927\u5bb6\u7684\u63d0\u4ea4\u3002\u5982\u679c\u4f60\u6240\u63d0\u4ea4\u7684\u6587\u4ef6\u540d\u5b57\u6216\u8005\u683c\u5f0f\u4e0d\u5bf9\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u81ea\u52a8\u8bc4\u6d4b\u811a\u672c\u627e\u4e0d\u5230\u5bf9\u5e94\u7684\u6587\u4ef6\uff0c\u8fdb\u800c\u5bfc\u81f4\u7f16\u8bd1\u5931\u8d25\u3001\u8bc4\u6d4b0\u5206\u3002 \u90e8\u5206\u4fee\u6539\u4e0d\u4f1a\u88ab\u63a5\u53d7 \u4e00\u90e8\u5206\u4ee3\u7801\u6587\u4ef6\uff0c\u6bd4\u5982 sysinfotest.c \u7b49\uff0c\u4e3a\u4e86\u8bc4\u6d4b\u73af\u5883\u516c\u5e73\uff0c\u4e0d\u5141\u8bb8\u540c\u5b66\u4eec\u4fee\u6539\u3002\u5982\u679c\u4f60\u7684\u4ee3\u7801\u4f9d\u9760\u4fee\u6539\u8fd9\u4e9b\u8bc4\u6d4b\u7a0b\u5e8f\u4ee5\u901a\u8fc7\u8bc4\u6d4b\uff0c\u8bf7\u91cd\u65b0\u5ba1\u89c6\u4e00\u4e0b\u81ea\u5df1\u7684\u4ee3\u7801\u3002 \u4e00\u4e2a\u53ef\u80fd\u7684\u63d0\u4ea4\u5305\u6587\u4ef6\u7ed3\u6784 \u00b6 \u5982\u4e0b\u56fe\u6240\u793a\u3002\u8fd9\u4f4d\u540c\u5b66\u5c06\u4ee3\u7801\u7edf\u4e00\u653e\u5728\u4e86\u4e00\u4e2a \u4ee3\u7801 \u6587\u4ef6\u5939\u4e2d\u3002 kalloc.c \u7b49\u539f\u672c\u4f4d\u4e8e kernel \u6587\u4ef6\u5939\u4e2d\u7684\u6587\u4ef6\uff0c\u73b0\u5728\u4e5f\u88ab\u653e\u7f6e\u4e8e kernel \u6587\u4ef6\u5939\u4e0b\uff1b\u8fd9\u4f4d\u540c\u5b66\u81ea\u5df1\u5199\u4e86\u4e00\u4e2a my_custom_command.c \uff0c\u5e76\u4e3a\u5176\u4fee\u6539\u8fc7 Makefile \uff0c\u4e3a\u9632\u6b62\u7f16\u8bd1\u4e0d\u901a\u8fc7\uff0c\u8be5\u6587\u4ef6\u4e5f\u53ef\u4ee5\u88ab\u63d0\u4ea4\uff1b\u4f4d\u4e8e\u6839\u76ee\u5f55\u4e0b\u7684 Makefile \u7b49\u6587\u4ef6\u5219\u88ab\u540c\u6837\u653e\u7f6e\u5728\u4e86 \u4ee3\u7801 \u6587\u4ef6\u5939\u7684\u6839\u76ee\u5f55\u4e0b\u3002 \u5982\u679c\u4e0d\u60f3\u521b\u5efa \u4ee3\u7801 \u6587\u4ef6\u5939\uff0c\u53ef\u4ee5\u5c06 kernel \u6587\u4ef6\u5939\u7b49\u76f4\u63a5\u653e\u5728\u63d0\u4ea4\u5305\u7684\u6839\u76ee\u5f55\uff1b\u4e3a\u5176\u66f4\u6362\u540d\u5b57\u3001\u6216\u8005\u5728\u5916\u9762\u518d\u5957\u51e0\u5c42\u6587\u4ef6\u5939\u4e5f\u662f\u53ef\u4ee5\u7684\u3002\u4e0d\u8fc7\uff0c\u6211\u4eec\u5efa\u8bae\u4f7f\u7528\u7c7b\u4f3c\u7684\u63d0\u4ea4\u5305\u7ed3\u6784\uff0c\u8fd9\u6837\u53ef\u4ee5\u663e\u5f97\u66f4\u6e05\u6670\u6613\u8bfb\u3002 200xxxxxx-\u67d0\u67d0\u7532-file.zip \u251c\u2500\u2500 \u4ee3\u7801 \u2502 \u251c\u2500\u2500 Makefile \u2502 \u251c\u2500\u2500 kernel \u2502 \u2502 \u251c\u2500\u2500 kalloc.c \u2502 \u2502 \u251c\u2500\u2500 syscall.c \u2502 \u2502 \u251c\u2500\u2500 syscall.h \u2502 \u2502 \u2514\u2500\u2500 sysinfo.h \u2502 \u251c\u2500\u2500 user \u2502 \u2502 \u251c\u2500\u2500 my_custom_command.c \u2502 | \u2514\u2500\u2500 usys.pl | \u2514\u2500\u2500 time.txt \u2514\u2500\u2500 \u5b9e\u9a8c\u62a5\u544a.pdf","title":"\u63d0\u4ea4\u6587\u6863"},{"location":"lab2/part4/#_1","text":"","title":"\u63d0\u4ea4\u5185\u5bb9"},{"location":"lab2/part4/#_2","text":"\u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u63d0\u4ea4\uff1a \u6240\u6709\u4f60\u66fe\u5bf9xv6\u8fdb\u884c\u7684\u66f4\u6539\uff1b \u4e00\u4e2a\u5b9e\u9a8c\u62a5\u544a\u3002\u4efb\u52a1\u4e09\u7684\u95ee\u7b54\u9898\u7b54\u6848\u8bf7\u5199\u5728\u5b9e\u9a8c\u62a5\u544a\u5185\u3002 \u5982\u4f55\u5f97\u77e5\u81ea\u5df1\u66fe\u5bf9xv6\u8fdb\u884c\u8fc7\u90a3\u4e9b\u66f4\u6539\uff1f \u53c2\u7167 \u5b9e\u9a8c\u5b9e\u7528\u5de5\u5177-3.5.2\u8282 \uff0c\u53ef\u4ee5\u4f7f\u7528 git diff \u547d\u4ee4\u68c0\u67e5\u81ea\u5df1\u66fe\u7ecf\u4fee\u6539\u8fc7\u54ea\u4e9b\u6587\u4ef6\u3002","title":"\u9700\u8981\u63d0\u4ea4\u7684\u6587\u4ef6"},{"location":"lab2/part4/#_3","text":"\u88ab\u4fee\u6539\u7684\u6587\u4ef6\u5982\u679c\u66fe\u7ecf\u4f4d\u4e8e kernel \u6587\u4ef6\u5939\uff0c\u90a3\u4e48\u8bf7\u5728\u63d0\u4ea4\u5305\u4e2d\u521b\u5efa\u4e00\u4e2a kernel \u6587\u4ef6\u5939\uff0c\u5e76\u5c06\u5bf9\u5e94\u4ee3\u7801\u6587\u4ef6\u653e\u7f6e\u4e8e\u8be5\u6587\u4ef6\u5939\u5185\u3002 \u540c\u7406\uff0c\u5982\u679c\u4f60\u66fe\u7ecf\u4fee\u6539\u8fc7 user \u6587\u4ef6\u5939\u7684\u6587\u4ef6\uff0c\u8bf7\u5c06\u5176\u653e\u7f6e\u4e8e\u63d0\u4ea4\u5305\u7684 user \u6587\u4ef6\u5939\u4e2d\u3002 \u6700\u597d\u4e0d\u8981\u5d4c\u5957\u538b\u7f29\u5305\u3002 \u4f60\u7684\u5b9e\u9a8c\u62a5\u544a\u5e94\u5f53\u4f7f\u7528pdf\u683c\u5f0f\uff0c\u5e76\u88ab\u547d\u540d\u4e3a \u5b9e\u9a8c\u62a5\u544a.pdf \u3002 \u4e3a\u4f55\u547d\u540d\u548c\u683c\u5f0f\u5982\u6b64\u91cd\u8981\uff1f \u6211\u4eec\u4f7f\u7528\u81ea\u52a8\u8bc4\u6d4b\u811a\u672c\u6765\u8bc4\u6d4b\u5927\u5bb6\u7684\u63d0\u4ea4\u3002\u5982\u679c\u4f60\u6240\u63d0\u4ea4\u7684\u6587\u4ef6\u540d\u5b57\u6216\u8005\u683c\u5f0f\u4e0d\u5bf9\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u81ea\u52a8\u8bc4\u6d4b\u811a\u672c\u627e\u4e0d\u5230\u5bf9\u5e94\u7684\u6587\u4ef6\uff0c\u8fdb\u800c\u5bfc\u81f4\u7f16\u8bd1\u5931\u8d25\u3001\u8bc4\u6d4b0\u5206\u3002 \u90e8\u5206\u4fee\u6539\u4e0d\u4f1a\u88ab\u63a5\u53d7 \u4e00\u90e8\u5206\u4ee3\u7801\u6587\u4ef6\uff0c\u6bd4\u5982 sysinfotest.c \u7b49\uff0c\u4e3a\u4e86\u8bc4\u6d4b\u73af\u5883\u516c\u5e73\uff0c\u4e0d\u5141\u8bb8\u540c\u5b66\u4eec\u4fee\u6539\u3002\u5982\u679c\u4f60\u7684\u4ee3\u7801\u4f9d\u9760\u4fee\u6539\u8fd9\u4e9b\u8bc4\u6d4b\u7a0b\u5e8f\u4ee5\u901a\u8fc7\u8bc4\u6d4b\uff0c\u8bf7\u91cd\u65b0\u5ba1\u89c6\u4e00\u4e0b\u81ea\u5df1\u7684\u4ee3\u7801\u3002","title":"\u63d0\u4ea4\u683c\u5f0f\u8981\u6c42"},{"location":"lab2/part4/#_4","text":"\u5982\u4e0b\u56fe\u6240\u793a\u3002\u8fd9\u4f4d\u540c\u5b66\u5c06\u4ee3\u7801\u7edf\u4e00\u653e\u5728\u4e86\u4e00\u4e2a \u4ee3\u7801 \u6587\u4ef6\u5939\u4e2d\u3002 kalloc.c \u7b49\u539f\u672c\u4f4d\u4e8e kernel \u6587\u4ef6\u5939\u4e2d\u7684\u6587\u4ef6\uff0c\u73b0\u5728\u4e5f\u88ab\u653e\u7f6e\u4e8e kernel \u6587\u4ef6\u5939\u4e0b\uff1b\u8fd9\u4f4d\u540c\u5b66\u81ea\u5df1\u5199\u4e86\u4e00\u4e2a my_custom_command.c \uff0c\u5e76\u4e3a\u5176\u4fee\u6539\u8fc7 Makefile \uff0c\u4e3a\u9632\u6b62\u7f16\u8bd1\u4e0d\u901a\u8fc7\uff0c\u8be5\u6587\u4ef6\u4e5f\u53ef\u4ee5\u88ab\u63d0\u4ea4\uff1b\u4f4d\u4e8e\u6839\u76ee\u5f55\u4e0b\u7684 Makefile \u7b49\u6587\u4ef6\u5219\u88ab\u540c\u6837\u653e\u7f6e\u5728\u4e86 \u4ee3\u7801 \u6587\u4ef6\u5939\u7684\u6839\u76ee\u5f55\u4e0b\u3002 \u5982\u679c\u4e0d\u60f3\u521b\u5efa \u4ee3\u7801 \u6587\u4ef6\u5939\uff0c\u53ef\u4ee5\u5c06 kernel \u6587\u4ef6\u5939\u7b49\u76f4\u63a5\u653e\u5728\u63d0\u4ea4\u5305\u7684\u6839\u76ee\u5f55\uff1b\u4e3a\u5176\u66f4\u6362\u540d\u5b57\u3001\u6216\u8005\u5728\u5916\u9762\u518d\u5957\u51e0\u5c42\u6587\u4ef6\u5939\u4e5f\u662f\u53ef\u4ee5\u7684\u3002\u4e0d\u8fc7\uff0c\u6211\u4eec\u5efa\u8bae\u4f7f\u7528\u7c7b\u4f3c\u7684\u63d0\u4ea4\u5305\u7ed3\u6784\uff0c\u8fd9\u6837\u53ef\u4ee5\u663e\u5f97\u66f4\u6e05\u6670\u6613\u8bfb\u3002 200xxxxxx-\u67d0\u67d0\u7532-file.zip \u251c\u2500\u2500 \u4ee3\u7801 \u2502 \u251c\u2500\u2500 Makefile \u2502 \u251c\u2500\u2500 kernel \u2502 \u2502 \u251c\u2500\u2500 kalloc.c \u2502 \u2502 \u251c\u2500\u2500 syscall.c \u2502 \u2502 \u251c\u2500\u2500 syscall.h \u2502 \u2502 \u2514\u2500\u2500 sysinfo.h \u2502 \u251c\u2500\u2500 user \u2502 \u2502 \u251c\u2500\u2500 my_custom_command.c \u2502 | \u2514\u2500\u2500 usys.pl | \u2514\u2500\u2500 time.txt \u2514\u2500\u2500 \u5b9e\u9a8c\u62a5\u544a.pdf","title":"\u4e00\u4e2a\u53ef\u80fd\u7684\u63d0\u4ea4\u5305\u6587\u4ef6\u7ed3\u6784"},{"location":"lab2/part5/","text":"GDB\u8c03\u8bd5\u7cfb\u7edf\u8c03\u7528\uff08\u8865\u5145\u8bf4\u660e\uff09 \u00b6 \u8fd9\u90e8\u5206\u6df1\u5165\u4ecb\u7ecd\u4e86VS Code\u56fe\u5f62\u5316\u754c\u9762GDB\u8c03\u8bd5\u7cfb\u7edf\u8c03\u7528\u7684\u8fc7\u7a0b\uff0c\u6d89\u53ca\u5230\u4e86page table\u7684\u90e8\u5206\u5185\u5bb9\u4ee5\u53ca\u6c47\u7f16\u4ee3\u7801\uff0c\u867d\u7136\u6709\u4e9b\u6666\u6da9\u96be\u61c2\uff0c\u4f46\u5982\u679c\u60f3\u8981\u6df1\u5165\u4e86\u89e3\u6574\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u8fc7\u7a0b\uff0c\u8fd9\u4e9b\u90fd\u662f\u8981\u638c\u63e1\u7684\u5fc5\u4e0d\u53ef\u5c11\u7684\u77e5\u8bc6\u70b9\u3002\u4e0b\u9762\u4ee5ls.c\u6587\u4ef6\u4e2d\u7684 fstat \u7cfb\u7edf\u8c03\u7528\u6267\u884c\u8fc7\u7a0b\u4e3a\u4f8b\uff0c\u91c7\u7528GDB\u8c03\u8bd5\u5206\u6790 ecall \u6307\u4ee4\u524d\u540e\u7684\u7cfb\u7edf\u8c03\u7528\u8fc7\u7a0b\uff0c\u4f9b\u540c\u5b66\u4eec\u8fdb\u884c\u53c2\u8003\u3002 \u4e3a\u4e86\u7ed9\u540c\u5b66\u4eec\u6f14\u793a\u5982\u4f55\u7528VSCode\u56fe\u5f62\u5316\u8c03\u8bd5XV6\u7cfb\u7edf\u8c03\u7528\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u5f55\u5236\u4e86\u4e24\u4e2a\u6f14\u793a\u89c6\u9891\uff1a VSCode\u8c03\u8bd5\u7cfb\u7edf\u8c03\u7528\u8fc7\u7a0b\uff08\u5305\u542bpagetable\u548c\u6c47\u7f16\uff09\uff1a VSCode\u8c03\u8bd5\u7cfb\u7edf\u8c03\u7528\u2014\u2014\u4ece\u5185\u6838\u5230\u7528\u6237\uff0c\u518d\u4ece\u7528\u6237\u8fd4\u56de\u5185\u6838\uff1a \u5982\u679c\u89c6\u9891\u4e0d\u592a\u6e05\u6670\uff0c\u5efa\u8bae\u5230bilibili\u4e0a\u89c2\u770b\u3002 \u30101. VSCode\u8c03\u8bd5xv6\u5185\u6838\u4ee3\u7801\u3011 https://www.bilibili.com/video/BV1ZB4y1E7X5?share_source=copy_web&vd_source=a822dcda3537564ccdd0bb45aa0afe33 \u30102. VSCode\u8c03\u8bd5xv6\u7528\u6237\u4ee3\u7801\u3011 https://www.bilibili.com/video/BV1i14y1Y7ZZ?share_source=copy_web&vd_source=a822dcda3537564ccdd0bb45aa0afe33 \u30103. VSCode\u8c03\u8bd5\u7cfb\u7edf\u8c03\u7528\u8fc7\u7a0b\uff08\u5305\u542bpagetable\u548c\u6c47\u7f16\uff09\u3011 https://www.bilibili.com/video/BV12P411J7xq?share_source=copy_web&vd_source=a822dcda3537564ccdd0bb45aa0afe33 \u30104. VSCode\u8c03\u8bd5\u7cfb\u7edf\u8c03\u7528\u2014\u2014\u4ece\u5185\u6838\u5230\u7528\u6237\uff0c\u518d\u4ece\u7528\u6237\u8fd4\u56de\u5185\u6838\u3011 https://www.bilibili.com/video/BV1ug411m7ir?share_source=copy_web&vd_source=a822dcda3537564ccdd0bb45aa0afe33vd_source=a822dcda3537564ccdd0bb45aa0afe33 1. ECALL\u6307\u4ee4\u4e4b\u524d\u7684\u72b6\u6001 \u00b6 \u9996\u5148\uff0c\u53c2\u8003 \u7528\u6237\u6001\u7a0b\u5e8f\u8c03\u8bd5 \u4ece\u5185\u6838\u8fdb\u5165\u7528\u6237\u7a7a\u95f4\u7684user/ls.c\u3002 \u5728\u7b2c38\u884c\u6253\u4e0a\u65ad\u70b9\u3002 \u70b9\u51fb\u201c\u8fd0\u884c\u201d\uff0c\u7a0b\u5e8f\u5c06\u81ea\u52a8\u8fd0\u884c\u5230\u7b2c38\u884c\u5e76\u505c\u6b62\uff1a \u5728\u8c03\u8bd5\u63a7\u5236\u53f0\u8f93\u5165 display/10i $pc \uff0c\u8ba9gdb\u6301\u7eed\u81ea\u52a8\u663e\u793a\u4ecepc\u8d77\u768410\u6761\u6307\u4ee4\u3002 \u5728user/ls.asm\u53cd\u6c47\u7f16\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230ecall\u6307\u4ee4\u6c47\u7f16\u5730\u5740\u662f0x59c\u3002 \u63a5\u7740\uff0c\u8f93\u5165 b *0x59c \u5728ecall\u6307\u4ee4\u4e0a\u6253\u65ad\u70b9\u3002\u518d\u70b9\u51fb\u201c\u8fd0\u884c\u201d\uff0c\u7a0b\u5e8f\u81ea\u52a8\u505c\u5728\u4e86ecall\u6307\u4ee4\u90a3\u4e00\u884c\u4e0a\u3002 \u6216\u8005\uff0c\u4e5f\u53ef\u4ee5\u8fde\u7eed\u591a\u6b21\u8f93\u5165 si \uff08stepi\u547d\u4ee4\uff09\uff0c\u5355\u6b65\u6267\u884c\u6bcf\u4e00\u6761\u6c47\u7f16\u6307\u4ee4\uff0c\u76f4\u5230\u7a0b\u5e8f\u505c\u6b62ecall\u6307\u4ee4\u5904\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u8f93\u5165 info reg \u6253\u5370\u5168\u90e832\u4e2a\u5bc4\u5b58\u5668\u7684\u503c \u6211\u4eec\u9700\u8981\u5173\u5fc3\u7684\u662fa0\u3001a1\u5bc4\u5b58\u5668\uff0cls\u7a0b\u5e8f\u4f20\u9012\u7ed9fstat\u7cfb\u7edf\u8c03\u7528\u7684\u53c2\u6570\u3002\u5176\u4e2d\uff0ca0\u662f fd \u6587\u4ef6\u63cf\u8ff0\u7b26\uff0ca1\u662f\u8981\u83b7\u53d6stat\u7ed3\u6784\u4f53\u4fe1\u606f\u7684\u6307\u9488\u3002 \u6b64\u65f6\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8f93\u5165 print/x $satp \u6216\u8005 p/x $satp \u67e5\u770bsatp\u5bc4\u5b58\u5668\uff08\u9875\u8868\u6240\u5728\u7684\u7269\u7406\u5730\u5740\uff09\u3002 satp\u5bc4\u5b58\u5668\u7ed9\u51fa\u7684\u7269\u7406\u5185\u5b58\u5730\u5740\u662f0x8000000000087f48\u3002 \u5982\u679c\u60f3\u8fdb\u4e00\u6b65\u67e5\u770bpage table\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u5728QEMU\u754c\u9762\u4e2d\uff08\u6ce8\u610f\uff0c\u662f\u5728 \u7ec8\u7aef \uff0c\u4e0d\u662f\u5728\u8c03\u8bd5\u63a7\u5236\u53f0\uff09\uff0c\u8f93\u5165 ctrl a + c \u5c31\u53ef\u4ee5\u8fdb\u5165QEMU\u7684console\uff0c\u4e4b\u540e\u518d\u8f93\u5165 info mem \u3002 \u4e0a\u9762\u6253\u5370\u51fa\u6765\u7684\u662f\u7528\u6237\u7a0b\u5e8f ls \u7684page table\uff0c\u975e\u5e38\u5c0f\uff0c\u53ea\u5305\u542b\u4e865\u6761\u6620\u5c04\u5173\u7cfb\u3002 page table\u62d3\u5c55\u77e5\u8bc6 \u5728\u4e0a\u56fe\u4e2d\uff0c attr \u662fPTE\uff08\u9875\u8868\uff0cPage Table Entry\uff09\u7684\u6807\u5fd7\u4f4d\u3002 r \uff1aReadable\uff0c\u53ef\u8bfb w \uff1aWritable\uff0c\u53ef\u5199 x \uff1aExecutable\uff0c\u53ef\u6267\u884c u \uff1aUser\uff0c\u8868\u660ePTE_u\u6807\u5fd7\u4f4d\u662f\u5426\u88ab\u8bbe\u7f6e\uff0c\u7528\u6237\u4ee3\u7801\u53ea\u80fd\u8bbf\u95eeu\u6807\u5fd7\u4f4d\u8bbe\u7f6e\u4e86\u7684PTE\u3002\u4e5f\u5c31\u662f\u5982\u679c\u6709\u8fd9\u4e2a\u6807\u5fd7\u4f4d\uff0c\u5219\u8bf4\u660e\u8fd9\u4e2apage\u53ef\u4ee5\u88ab\u8fd0\u884c\u5728\u7528\u6237\u7a7a\u95f4\u7684\u8fdb\u7a0b\u8bbf\u95ee\u3002 a \uff1aAccessed\uff0c\u8868\u660e\u8fd9\u6761PTE\u662f\u5426\u88ab\u4f7f\u7528\u8fc7\u3002 g \uff1aGlobal d \uff1aDirty\uff0c\u8868\u660e\u8fd9\u6761PTE\u662f\u5426\u88ab\u5199\u8fc7\u3002 \u6700\u540e\u4e24\u6761PTE\u7684\u865a\u62df\u5730\u5740\u975e\u5e38\u5927\uff08\u63a5\u8fd1\u865a\u62df\u5730\u5740\u7684\u9876\u7aef\uff09\uff0c\u5b83\u4eec\u5206\u522b\u662ftrapframe page\u548c trampoline page\uff08\u8be6\u89c1xv6 book P24-26\uff09\u3002\u8fd9\u4e24\u4e2aPTE\u6ca1\u6709u\u6807\u5fd7\u4f4d\uff0c\u7528\u6237\u4ee3\u7801\u4e0d\u80fd\u8bbf\u95ee\u5b83\u4eec\u3002\u5f53\u8fdb\u5165supervisor mode\u65f6\uff0c\u624d\u80fd\u591f\u8bbf\u95ee\u3002 \u6211\u4eec\u5728kernel/memlayout.h\u5934\u6587\u4ef6\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u770b\u5230trapframe\u7684\u5b9a\u4e49\u3002 // map the trampoline page to the highest address, // in both user and kernel space. #define TRAMPOLINE (MAXVA - PGSIZE) PGSIZE\u548cMAXVA\u7684\u5b9a\u4e49\u5728kernel/riscv.h\u3002 #define PGSIZE 4096 // bytes per page // one beyond the highest possible virtual address. // MAXVA is actually one bit less than the max allowed by // Sv39, to avoid having to sign-extend virtual addresses // that have the high bit set. #define MAXVA (1L << (9 + 9 + 9 + 12 - 1)) \u8fd9\u6837\uff0c\u5c31\u80fd\u8ba1\u7b97\u51faTRAMPOLINE\u7684\u5730\u5740\u662f 1<<38 - 4096 = 0x3ffffff000 \uff0c\u8fd9\u4e2a\u5730\u5740\u548c\u4e0a\u9762\u7528 info mem \u547d\u4ee4\u67e5\u5230\u7684\u6700\u540e\u4e00\u6761PTE\u662f\u4e00\u6837\u7684\u3002\u4e5f\u5c31\u662f\uff0c\u6700\u540e\u4e00\u6761PTE\u6b63\u662fTRAMPOLINE\u3002 2. ECALL\u6307\u4ee4\u4e4b\u540e\u7684\u72b6\u6001 \u00b6 \u4e3a\u4e86\u80fd\u591f\u8ba9\u7a0b\u5e8f\u505c\u7559\u5728trampoline.S\u7684userver\u6bb5\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 0x3ffffff000 \u5730\u5740\u4e0a\u6253\u4e0a\u65ad\u70b9\u3002 \u5728\u8c03\u8bd5\u63a7\u5236\u53f0\u4e0a\u8f93\u5165 b *0x3ffffff000 \u3002 \u70b9\u51fb\u201d\u8fd0\u884c\u201c\uff0c\u6216\u8005\u8f93\u5165 si \u5355\u6b65\u6267\u884cecall\u6307\u4ee4\u3002 \u4ece\u8fd9\u91cc\u53ef\u4ee5\u770b\u5230\uff0c\u5df2\u7ecf\u8fdb\u5165\u4e86trampoline\u3002 \u6b64\u65f6\uff0c\u6211\u4eec\u5728QEMU\u7684console\uff0c\u4e4b\u540e\u518d\u8f93\u5165 info mem \u3002 \u53ef\u4ee5\u770b\u51fa\uff0cpage table\u5e76\u6ca1\u6709\u53d1\u751f\u6539\u53d8\uff0c\u4e5f\u5c31\u662f\u8bf4ecall\u5e76\u6ca1\u6709\u5207\u6362page table\u3002 \u7ee7\u7eed\u89c2\u5bdfuservec\u6c47\u7f16\u4ee3\u7801\uff0c\u91cc\u9762\u6709\u5f88\u591asd\u6307\u4ee4\uff0c\u7528\u6765\u4fdd\u5b58\u7528\u6237\u5bc4\u5b58\u5668\uff0c\u8fd9\u4e9b\u6307\u4ee4\u6bd4\u8f83\u65e0\u8da3\uff0c\u6682\u65f6\u4e0d\u7ba1\u5b83\u4eec\uff08\u540e\u9762\u6211\u4eec\u8fd8\u4f1a\u56de\u6765\u5206\u6790\u7684:-\uff09\u3002\u6211\u4eec\u5148\u770b\u5728\u7b2c76-85\u884c\uff0c\u901a\u8fc7\u9605\u8bfb\u6ce8\u91ca\u4e86\u89e3\u5230\uff0c\u5728\u51c6\u5907\u8df3\u5165usertrap()\u4e4b\u524d\uff0c\u9700\u8981\u5148\u5207\u6362kernel page\u3002 76 # restore kernel page table from p->trapframe->kernel_satp 77 ld t1, 0(a0) 78 csrw satp, t1 79 sfence.vma zero, zero 80 81 # a0 is no longer valid, since the kernel page 82 # table does not specially map p->tf. 83 84 # jump to usertrap(), which does not return 85 jr t0 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u65ad\u70b9\u6253\u5728 0x3ffffff08e \u5730\u5740\u4e0a\uff0c\u4e5f\u5c31\u662f\u8ba9\u7a0b\u5e8f\u505c\u7559\u5728\u8df3\u5165usertrap()\u4e4b\u524d\u3002 \u5982\u4f55\u77e5\u9053\u7b2c85\u884c jr t0 \u8bed\u53e5\u7684\u5730\u5740\u662f 0x3ffffff08e \uff1f \u5728\u8c03\u8bd5\u63a7\u5236\u53f0\uff0c\u8f93\u5165 x/40i $pc \u663e\u793a\u5f53\u524dPC\u540e\u9762\u768440\u6761\u6307\u4ee4\uff0c\u5c31\u53ef\u4ee5\u770b\u5230 jr t0 \u5bf9\u5e94\u7684\u5730\u5740\u3002 \u4e5f\u53ef\u4ee5\u901a\u8fc7\u67e5\u770bkernel.asm\u53cd\u6c47\u7f16\u6587\u4ef6\uff0c\u5728 0000000080007000 <_trampoline>: \u6bb5\uff0c\u53ef\u4ee5\u770b\u5230 jr t0 \u76f8\u5bf9uservec\u7b2c\u4e00\u6761\u6307\u4ee4\u4f4d\u7f6e\u504f\u79fb\u4e86 0x8e \uff0c\u5c06 0x3ffffff000 + 0x8e \uff0c\u5c31\u662f 0x3ffffff08e \u3002 \u8f93\u5165 b *0x3ffffff08e \u70b9\u51fb\u201d\u8fd0\u884c\u201c\u3002 \u5728\u8df3\u8f6c\u5230\u5185\u6838C\u8bed\u8a00\u4ee3\u7801\u8fd0\u884c\u4e4b\u524d\uff0c\u52a0\u8f7dkernel\u7684\u8c03\u8bd5\u7b26\u53f7\uff0c\u8f93\u5165 file kernel/kernel \u63a5\u7740\uff0c\u8f93\u5165 si \u5355\u6b65\u6267\u884c\u6c47\u7f16\u6307\u4ee4\u3002 \u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u8fdb\u5165\u4e86trap.c\u7684usertrap\u51fd\u6570\u4e2d\u4e86\u3002 \u6b64\u65f6\u6211\u4eec\u518d\u89c2\u5bdfpage table\uff0c\u5728qemu\u63a7\u5236\u53f0\u8f93\u5165 info mem \u53ef\u4ee5\u770b\u51fa\u4e0e\u4e4b\u524d\u7684page table\u4e0d\u4e00\u6837\u4e86\uff0c\u5df2\u7ecf\u4eceuser page table\u5207\u6362\u5230\u4e86kernel page table\uff0c\u8bf4\u660e\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\u6267\u884c\u5185\u6838\u4e2d\u7684C\u4ee3\u7801\u4e86\u3002 trampoline \u62d3\u5c55\u77e5\u8bc6 \u6ce8\u610f\u89c2\u5bdf\u7684\u540c\u5b66\u53ef\u80fd\u5df2\u7ecf\u53d1\u73b0\u4e86\uff0cuser page table\u548ckernel page table\u7684trampoline page\u7684\u6620\u5c04\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u5207\u6362page table\u65f6\uff0c\u5bfb\u5740\u7684\u7ed3\u679c\u4e0d\u4f1a\u6539\u53d8\uff0c\u5426\u5219\u5f53trampoline\u5207\u5b8c\u9875\u8868\u5c31\u53ef\u80fd\u56e0\u627e\u4e0d\u5230\u6307\u4ee4\u800c\u5d29\u6e83\u4e86\u3002\u8fd9\u4e5f\u6b63\u662ftrampoline page\u7684\u7279\u6b8a\u4e4b\u5904\u3002 trapframe \u62d3\u5c55\u77e5\u8bc6 \u53ef\u80fd\u8fd8\u6709\u540c\u5b66\u6ce8\u610f\u5230\uff0cuser page table\u4e2d\u5012\u6570\u7b2c\u4e8c\u4e2aPTE\u7684vaddr\uff08\u865a\u62df\u5730\u5740\uff1a0x3ffffffe00\uff09\u4e5f\u662f\u6bd4\u8f83\u5927\u3002\u5b83\u662f\u7531kernel\u8bbe\u7f6e\u597d\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u7528\u4e8e\u6307\u5411\u4e00\u4e2a\u53ef\u4ee5\u7528\u6765\u5b58\u653e\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u7528\u6237\u5bc4\u5b58\u5668\u7684\u5185\u5b58\u4f4d\u7f6e\uff08\u5982\u679c\u4f60\u60f3\u67e5\u770bxv6\u5728trapframe page\u4e2d\u5b58\u653e\u4e86\u4ec0\u4e48\uff0c\u8be6\u89c1proc.h\u7684trapframe\u7ed3\u6784\u4f53\uff09\u3002\u5728\u5185\u6838\u5207\u6362\u7528\u6237\u7a7a\u95f4\u65f6\uff0c\u5185\u6838\u4f1a\u6267\u884cset sscratch\u6307\u4ee4\uff0c\u5c06\u8fd9\u4e2a\u5bc4\u5b58\u5668\u7684\u5185\u5bb9\u8bbe\u7f6e\u4e3a0x3ffffffe00\uff0c\u4e5f\u5c31\u662ftrapframe page\u7684\u865a\u62df\u5730\u5740\u3002\u5728\u8fd0\u884c\u7528\u6237\u4ee3\u7801\u65f6\uff0csscratch\u4fdd\u5b58\u7684\u5c31\u662f\u6307\u5411TRAPFRAME\u7684\u5730\u5740\u3002 \u90a3\u4e3a\u4ec0\u4e48\u5185\u6838\u8981\u4fdd\u5b58\u8fd9\u4e9b\u7528\u6237\u5bc4\u5b58\u5668\u5462\uff1f \u662f\u56e0\u4e3a\u5185\u6838\u5373\u5c06\u8981\u8fd0\u884c\u4f1a\u8986\u76d6\u8fd9\u4e9b\u5bc4\u5b58\u5668\u7684C\u4ee3\u7801\u3002\u5f53\u4ece\u5185\u6838\u518d\u6b21\u5207\u56de\u81f3\u7528\u6237\u7a7a\u95f4\u65f6\uff0c\u5982\u679c\u8981\u60f3\u6b63\u786e\u6062\u590d\u7528\u6237\u7a0b\u5e8f\uff0c\u5219\u9700\u8981\u5c06\u7528\u6237\u5bc4\u5b58\u5668\u6062\u590d\u6210\u5728ecall\u6307\u4ee4\u6267\u884c\u4e4b\u524d\u7684\u72b6\u6001\u3002\u56e0\u6b64\uff0c\u9700\u8981\u5c06\u6240\u6709\u7684\u5bc4\u5b58\u5668\u90fd\u4fdd\u5b58\u5728trapframe\u4e2d\uff0c\u8fd9\u6837\u624d\u80fd\u5728\u4e4b\u540e\u6062\u590d\u5bc4\u5b58\u5668\u7684\u503c\u3002 3. \u6c47\u7f16\u4e4b\u540e\u7684C\u4ee3\u7801 \u00b6 \u81ea\u4ece\u89c1\u5230\u4e86usertrap\uff0c\u6211\u4eec\u5c31\u5df2\u7ecf\u8fdb\u5165\u4e86C\u8bed\u8a00\u7684\u4e16\u754c\uff0c\u76f8\u6bd4\u4e0a\u8ff0\u6c47\u7f16\u4ee3\u7801\u6765\u8bf4\uff0c\u5c11\u4e86\u5f88\u591a\u6666\u6da9\u96be\u61c2\u7684\u5730\u65b9\uff0c\u662f\u4e0d\u662f\u89c9\u5f97\u751f\u6d3b\u66f4\u52a0\u7f8e\u597d\u4e86\u5462:-) \u4ece\u524d\u9762\u5b9e\u9a8c\u539f\u7406\u7684\u90e8\u5206\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\uff0c\u6709\u5f88\u591a\u539f\u56e0\u90fd\u53ef\u4ee5\u8ba9\u7a0b\u5e8f\u8fdb\u5165usertrap\u51fd\u6570\u4e2d\u6765\u3002\u5bf9\u4e8e\u672c\u5b9e\u9a8c\u6765\u8bf4\uff0c\u6211\u4eec\u66f4\u5173\u5fc3\u7684\u662f\u7cfb\u7edf\u8c03\u7528\u7684\u8fc7\u7a0b\u4ee3\u7801\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5728\u7b2c67\u884c syscall(); \u6253\u4e0a\u65ad\u70b9\uff0c\u70b9\u51fb\u201c\u8fd0\u884c\u201d\uff0c\u8ba9\u7a0b\u5e8f\u505c\u7559\u5728syscall()\u51fd\u6570\u3002\u5f53\u7136\uff0c\u559c\u6b22\u63a2\u7d22\u7684\u540c\u5b66\u4e5f\u53ef\u4ee5\u6df1\u5165\u5206\u6790usertrap()\u51fd\u6570\u7684\u6267\u884c\u6d41\u7a0b\u3002 \u63a5\u7740\u8fdb\u5165syscall.c\u6587\u4ef6\u4e2d\u7684syscall()\uff0c\u90a3\u4e48\u540c\u5b66\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u8fdb\u884c\u8c03\u8bd5\u5206\u6790\u540e\u9762\u7684\u4ee3\u7801\u5427\u3002 4. \u4e00\u4e2a\u7b80\u5355\u7684\u4ece\u7528\u6237\u5230\u5185\u6838\u7a7a\u95f4\u7684\u8c03\u8bd5\u65b9\u6cd5 \u00b6 \u6709\u540c\u5b66\u53ef\u80fd\u95ee\uff0c\u80fd\u4e0d\u80fd\u8df3\u8fc7\u6c47\u7f16\u4ee3\u7801\uff0c\u76f4\u63a5\u6253\u6253\u65ad\u70b9\u5230C\u4ee3\u7801\u5462\uff1f\u7b54\u6848\u662f\u53ef\u4ee5\u7684\u3002\u4e0b\u9762\u8fd8\u662f\u4ee5ls\u4e2d\u7684fstat\u7cfb\u7edf\u8c03\u7528\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u4e00\u4e2a\u8f83\u4e3a\u7b80\u5355\u7684\u8c03\u8bd5\u6b65\u9aa4\uff1a Step1\uff1a \u5148\u5728\u7ec8\u7aef\u8f93\u5165\u201cmake qemu-gdb\u201d\u3002 \u63a5\u7740\uff0c\u6309\u4e0bF5\uff0c \u6216\u8005 \u70b9\u51fb\u5de6\u4fa7\u6309\u94ae\u8fd0\u884c\u4e0e\u8c03\u8bd5\uff0c\u5e76\u70b9\u51fb\u5de6\u4e0a\u89d2\u7eff\u8272\u4e09\u89d2\uff08Attach to gdb)\u3002 \u518d\u70b9\u51fb\u201c\u8fd0\u884c\u201d\uff0c\u8ba9xv6\u6b63\u5e38\u8fd0\u884c\uff0c\u76f4\u5230\u51fa\u73b0\u201c$\u201d\uff0c\u8868\u793a\u5df2\u7ecf\u8fdb\u5165shell\u4e2d\u3002 Step2\uff1a \u5728\u8c03\u8bd5\u63a7\u5236\u53f0\uff0c\u8f93\u5165\u201cinterrupt\u201d\u3002 Step3\uff1a \u5728kernel/trap.c:128\u5904\u6253\u65ad\u70b9\uff0c\u7ee7\u7eed\u70b9\u51fb\u201c\u8fd0\u884c\u201d\u3002 Step4\uff1a \u5728xv6\u7684shell\u4e2d\u8f93\u5165 ls \uff0c\u4ee5\u542f\u52a8 ls \u7a0b\u5e8f\uff1b\u7a0b\u5e8f\u505c\u7559\u5728 kernel/trap.c:128 \u5904\u3002 Step5\uff1a \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u5728\u8c03\u8bd5\u7a97\u53e3\u5de6\u4e0b\u89d2\u5220\u9664\u539f\u6709\u7684\u5185\u6838\u6001\u65ad\u70b9\uff0c\u5e76\u901a\u8fc7\u8c03\u8bd5\u63a7\u5236\u53f0\uff0c\u52a0\u8f7dls\u7684\u8c03\u8bd5\u7b26\u53f7\u3002\u5728\u5176\u4e2d\u8f93\u5165 file user/_ls \u3002 Step6\uff1a \u6253\u5f00user/ls.c\u6587\u4ef6\uff0c\u627e\u5230main()\u51fd\u6570\uff0c\u5728\u7b2c78\u884c\u6253\u4e0a\u65ad\u70b9\u3002\u70b9\u51fb\u201c\u8fd0\u884c\u201d\u3002 Step7\uff1a \u5728ls.c\u7b2c38\u884c\u6253\u4e0a\u65ad\u70b9\uff0c\u70b9\u51fb\u201c\u8fd0\u884c\u201d\uff0c\u8ba9\u7a0b\u5e8f\u505c\u7559\u5728\u6267\u884cfstat\u7cfb\u7edf\u8c03\u7528\u7684\u5730\u65b9\u3002 Step8\uff1a \u5728\u8c03\u8bd5\u63a7\u5236\u53f0\uff0c\u8f93\u5165 file kernel/kernel \uff0c\u52a0\u8f7dkernel\u7684\u8c03\u8bd5\u7b26\u53f7\u3002 Step9\uff1a \u5728syscall.c\u6587\u4ef6\u4e2d\u7b2c138\u884c syscall(); \u6253\u4e0a\u65ad\u70b9\uff0c\u70b9\u51fb \u201c\u8fd0\u884c\u201d \uff0c\u8ba9\u7a0b\u5e8f\u505c\u7559\u5728syscall()\u51fd\u6570\u3002 Step10\uff1a \u63a5\u4e0b\u6765\uff0c\u4f60\u5c31\u53ef\u4ee5\u6839\u636e\u9700\u8981\u6765\u8c03\u8bd5\u4f60\u60f3\u8981\u5206\u6790\u7684\u4ee3\u7801\u5427\u3002","title":"GDB\u8c03\u8bd5\u7cfb\u7edf\u8c03\u7528\uff08\u8865\u5145\u6750\u6599\uff09"},{"location":"lab2/part5/#gdb","text":"\u8fd9\u90e8\u5206\u6df1\u5165\u4ecb\u7ecd\u4e86VS Code\u56fe\u5f62\u5316\u754c\u9762GDB\u8c03\u8bd5\u7cfb\u7edf\u8c03\u7528\u7684\u8fc7\u7a0b\uff0c\u6d89\u53ca\u5230\u4e86page table\u7684\u90e8\u5206\u5185\u5bb9\u4ee5\u53ca\u6c47\u7f16\u4ee3\u7801\uff0c\u867d\u7136\u6709\u4e9b\u6666\u6da9\u96be\u61c2\uff0c\u4f46\u5982\u679c\u60f3\u8981\u6df1\u5165\u4e86\u89e3\u6574\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u8fc7\u7a0b\uff0c\u8fd9\u4e9b\u90fd\u662f\u8981\u638c\u63e1\u7684\u5fc5\u4e0d\u53ef\u5c11\u7684\u77e5\u8bc6\u70b9\u3002\u4e0b\u9762\u4ee5ls.c\u6587\u4ef6\u4e2d\u7684 fstat \u7cfb\u7edf\u8c03\u7528\u6267\u884c\u8fc7\u7a0b\u4e3a\u4f8b\uff0c\u91c7\u7528GDB\u8c03\u8bd5\u5206\u6790 ecall \u6307\u4ee4\u524d\u540e\u7684\u7cfb\u7edf\u8c03\u7528\u8fc7\u7a0b\uff0c\u4f9b\u540c\u5b66\u4eec\u8fdb\u884c\u53c2\u8003\u3002 \u4e3a\u4e86\u7ed9\u540c\u5b66\u4eec\u6f14\u793a\u5982\u4f55\u7528VSCode\u56fe\u5f62\u5316\u8c03\u8bd5XV6\u7cfb\u7edf\u8c03\u7528\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u5f55\u5236\u4e86\u4e24\u4e2a\u6f14\u793a\u89c6\u9891\uff1a VSCode\u8c03\u8bd5\u7cfb\u7edf\u8c03\u7528\u8fc7\u7a0b\uff08\u5305\u542bpagetable\u548c\u6c47\u7f16\uff09\uff1a VSCode\u8c03\u8bd5\u7cfb\u7edf\u8c03\u7528\u2014\u2014\u4ece\u5185\u6838\u5230\u7528\u6237\uff0c\u518d\u4ece\u7528\u6237\u8fd4\u56de\u5185\u6838\uff1a \u5982\u679c\u89c6\u9891\u4e0d\u592a\u6e05\u6670\uff0c\u5efa\u8bae\u5230bilibili\u4e0a\u89c2\u770b\u3002 \u30101. VSCode\u8c03\u8bd5xv6\u5185\u6838\u4ee3\u7801\u3011 https://www.bilibili.com/video/BV1ZB4y1E7X5?share_source=copy_web&vd_source=a822dcda3537564ccdd0bb45aa0afe33 \u30102. VSCode\u8c03\u8bd5xv6\u7528\u6237\u4ee3\u7801\u3011 https://www.bilibili.com/video/BV1i14y1Y7ZZ?share_source=copy_web&vd_source=a822dcda3537564ccdd0bb45aa0afe33 \u30103. VSCode\u8c03\u8bd5\u7cfb\u7edf\u8c03\u7528\u8fc7\u7a0b\uff08\u5305\u542bpagetable\u548c\u6c47\u7f16\uff09\u3011 https://www.bilibili.com/video/BV12P411J7xq?share_source=copy_web&vd_source=a822dcda3537564ccdd0bb45aa0afe33 \u30104. VSCode\u8c03\u8bd5\u7cfb\u7edf\u8c03\u7528\u2014\u2014\u4ece\u5185\u6838\u5230\u7528\u6237\uff0c\u518d\u4ece\u7528\u6237\u8fd4\u56de\u5185\u6838\u3011 https://www.bilibili.com/video/BV1ug411m7ir?share_source=copy_web&vd_source=a822dcda3537564ccdd0bb45aa0afe33vd_source=a822dcda3537564ccdd0bb45aa0afe33","title":"GDB\u8c03\u8bd5\u7cfb\u7edf\u8c03\u7528\uff08\u8865\u5145\u8bf4\u660e\uff09"},{"location":"lab2/part5/#1-ecall","text":"\u9996\u5148\uff0c\u53c2\u8003 \u7528\u6237\u6001\u7a0b\u5e8f\u8c03\u8bd5 \u4ece\u5185\u6838\u8fdb\u5165\u7528\u6237\u7a7a\u95f4\u7684user/ls.c\u3002 \u5728\u7b2c38\u884c\u6253\u4e0a\u65ad\u70b9\u3002 \u70b9\u51fb\u201c\u8fd0\u884c\u201d\uff0c\u7a0b\u5e8f\u5c06\u81ea\u52a8\u8fd0\u884c\u5230\u7b2c38\u884c\u5e76\u505c\u6b62\uff1a \u5728\u8c03\u8bd5\u63a7\u5236\u53f0\u8f93\u5165 display/10i $pc \uff0c\u8ba9gdb\u6301\u7eed\u81ea\u52a8\u663e\u793a\u4ecepc\u8d77\u768410\u6761\u6307\u4ee4\u3002 \u5728user/ls.asm\u53cd\u6c47\u7f16\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230ecall\u6307\u4ee4\u6c47\u7f16\u5730\u5740\u662f0x59c\u3002 \u63a5\u7740\uff0c\u8f93\u5165 b *0x59c \u5728ecall\u6307\u4ee4\u4e0a\u6253\u65ad\u70b9\u3002\u518d\u70b9\u51fb\u201c\u8fd0\u884c\u201d\uff0c\u7a0b\u5e8f\u81ea\u52a8\u505c\u5728\u4e86ecall\u6307\u4ee4\u90a3\u4e00\u884c\u4e0a\u3002 \u6216\u8005\uff0c\u4e5f\u53ef\u4ee5\u8fde\u7eed\u591a\u6b21\u8f93\u5165 si \uff08stepi\u547d\u4ee4\uff09\uff0c\u5355\u6b65\u6267\u884c\u6bcf\u4e00\u6761\u6c47\u7f16\u6307\u4ee4\uff0c\u76f4\u5230\u7a0b\u5e8f\u505c\u6b62ecall\u6307\u4ee4\u5904\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u8f93\u5165 info reg \u6253\u5370\u5168\u90e832\u4e2a\u5bc4\u5b58\u5668\u7684\u503c \u6211\u4eec\u9700\u8981\u5173\u5fc3\u7684\u662fa0\u3001a1\u5bc4\u5b58\u5668\uff0cls\u7a0b\u5e8f\u4f20\u9012\u7ed9fstat\u7cfb\u7edf\u8c03\u7528\u7684\u53c2\u6570\u3002\u5176\u4e2d\uff0ca0\u662f fd \u6587\u4ef6\u63cf\u8ff0\u7b26\uff0ca1\u662f\u8981\u83b7\u53d6stat\u7ed3\u6784\u4f53\u4fe1\u606f\u7684\u6307\u9488\u3002 \u6b64\u65f6\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8f93\u5165 print/x $satp \u6216\u8005 p/x $satp \u67e5\u770bsatp\u5bc4\u5b58\u5668\uff08\u9875\u8868\u6240\u5728\u7684\u7269\u7406\u5730\u5740\uff09\u3002 satp\u5bc4\u5b58\u5668\u7ed9\u51fa\u7684\u7269\u7406\u5185\u5b58\u5730\u5740\u662f0x8000000000087f48\u3002 \u5982\u679c\u60f3\u8fdb\u4e00\u6b65\u67e5\u770bpage table\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u5728QEMU\u754c\u9762\u4e2d\uff08\u6ce8\u610f\uff0c\u662f\u5728 \u7ec8\u7aef \uff0c\u4e0d\u662f\u5728\u8c03\u8bd5\u63a7\u5236\u53f0\uff09\uff0c\u8f93\u5165 ctrl a + c \u5c31\u53ef\u4ee5\u8fdb\u5165QEMU\u7684console\uff0c\u4e4b\u540e\u518d\u8f93\u5165 info mem \u3002 \u4e0a\u9762\u6253\u5370\u51fa\u6765\u7684\u662f\u7528\u6237\u7a0b\u5e8f ls \u7684page table\uff0c\u975e\u5e38\u5c0f\uff0c\u53ea\u5305\u542b\u4e865\u6761\u6620\u5c04\u5173\u7cfb\u3002 page table\u62d3\u5c55\u77e5\u8bc6 \u5728\u4e0a\u56fe\u4e2d\uff0c attr \u662fPTE\uff08\u9875\u8868\uff0cPage Table Entry\uff09\u7684\u6807\u5fd7\u4f4d\u3002 r \uff1aReadable\uff0c\u53ef\u8bfb w \uff1aWritable\uff0c\u53ef\u5199 x \uff1aExecutable\uff0c\u53ef\u6267\u884c u \uff1aUser\uff0c\u8868\u660ePTE_u\u6807\u5fd7\u4f4d\u662f\u5426\u88ab\u8bbe\u7f6e\uff0c\u7528\u6237\u4ee3\u7801\u53ea\u80fd\u8bbf\u95eeu\u6807\u5fd7\u4f4d\u8bbe\u7f6e\u4e86\u7684PTE\u3002\u4e5f\u5c31\u662f\u5982\u679c\u6709\u8fd9\u4e2a\u6807\u5fd7\u4f4d\uff0c\u5219\u8bf4\u660e\u8fd9\u4e2apage\u53ef\u4ee5\u88ab\u8fd0\u884c\u5728\u7528\u6237\u7a7a\u95f4\u7684\u8fdb\u7a0b\u8bbf\u95ee\u3002 a \uff1aAccessed\uff0c\u8868\u660e\u8fd9\u6761PTE\u662f\u5426\u88ab\u4f7f\u7528\u8fc7\u3002 g \uff1aGlobal d \uff1aDirty\uff0c\u8868\u660e\u8fd9\u6761PTE\u662f\u5426\u88ab\u5199\u8fc7\u3002 \u6700\u540e\u4e24\u6761PTE\u7684\u865a\u62df\u5730\u5740\u975e\u5e38\u5927\uff08\u63a5\u8fd1\u865a\u62df\u5730\u5740\u7684\u9876\u7aef\uff09\uff0c\u5b83\u4eec\u5206\u522b\u662ftrapframe page\u548c trampoline page\uff08\u8be6\u89c1xv6 book P24-26\uff09\u3002\u8fd9\u4e24\u4e2aPTE\u6ca1\u6709u\u6807\u5fd7\u4f4d\uff0c\u7528\u6237\u4ee3\u7801\u4e0d\u80fd\u8bbf\u95ee\u5b83\u4eec\u3002\u5f53\u8fdb\u5165supervisor mode\u65f6\uff0c\u624d\u80fd\u591f\u8bbf\u95ee\u3002 \u6211\u4eec\u5728kernel/memlayout.h\u5934\u6587\u4ef6\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u770b\u5230trapframe\u7684\u5b9a\u4e49\u3002 // map the trampoline page to the highest address, // in both user and kernel space. #define TRAMPOLINE (MAXVA - PGSIZE) PGSIZE\u548cMAXVA\u7684\u5b9a\u4e49\u5728kernel/riscv.h\u3002 #define PGSIZE 4096 // bytes per page // one beyond the highest possible virtual address. // MAXVA is actually one bit less than the max allowed by // Sv39, to avoid having to sign-extend virtual addresses // that have the high bit set. #define MAXVA (1L << (9 + 9 + 9 + 12 - 1)) \u8fd9\u6837\uff0c\u5c31\u80fd\u8ba1\u7b97\u51faTRAMPOLINE\u7684\u5730\u5740\u662f 1<<38 - 4096 = 0x3ffffff000 \uff0c\u8fd9\u4e2a\u5730\u5740\u548c\u4e0a\u9762\u7528 info mem \u547d\u4ee4\u67e5\u5230\u7684\u6700\u540e\u4e00\u6761PTE\u662f\u4e00\u6837\u7684\u3002\u4e5f\u5c31\u662f\uff0c\u6700\u540e\u4e00\u6761PTE\u6b63\u662fTRAMPOLINE\u3002","title":"1. ECALL\u6307\u4ee4\u4e4b\u524d\u7684\u72b6\u6001"},{"location":"lab2/part5/#2-ecall","text":"\u4e3a\u4e86\u80fd\u591f\u8ba9\u7a0b\u5e8f\u505c\u7559\u5728trampoline.S\u7684userver\u6bb5\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 0x3ffffff000 \u5730\u5740\u4e0a\u6253\u4e0a\u65ad\u70b9\u3002 \u5728\u8c03\u8bd5\u63a7\u5236\u53f0\u4e0a\u8f93\u5165 b *0x3ffffff000 \u3002 \u70b9\u51fb\u201d\u8fd0\u884c\u201c\uff0c\u6216\u8005\u8f93\u5165 si \u5355\u6b65\u6267\u884cecall\u6307\u4ee4\u3002 \u4ece\u8fd9\u91cc\u53ef\u4ee5\u770b\u5230\uff0c\u5df2\u7ecf\u8fdb\u5165\u4e86trampoline\u3002 \u6b64\u65f6\uff0c\u6211\u4eec\u5728QEMU\u7684console\uff0c\u4e4b\u540e\u518d\u8f93\u5165 info mem \u3002 \u53ef\u4ee5\u770b\u51fa\uff0cpage table\u5e76\u6ca1\u6709\u53d1\u751f\u6539\u53d8\uff0c\u4e5f\u5c31\u662f\u8bf4ecall\u5e76\u6ca1\u6709\u5207\u6362page table\u3002 \u7ee7\u7eed\u89c2\u5bdfuservec\u6c47\u7f16\u4ee3\u7801\uff0c\u91cc\u9762\u6709\u5f88\u591asd\u6307\u4ee4\uff0c\u7528\u6765\u4fdd\u5b58\u7528\u6237\u5bc4\u5b58\u5668\uff0c\u8fd9\u4e9b\u6307\u4ee4\u6bd4\u8f83\u65e0\u8da3\uff0c\u6682\u65f6\u4e0d\u7ba1\u5b83\u4eec\uff08\u540e\u9762\u6211\u4eec\u8fd8\u4f1a\u56de\u6765\u5206\u6790\u7684:-\uff09\u3002\u6211\u4eec\u5148\u770b\u5728\u7b2c76-85\u884c\uff0c\u901a\u8fc7\u9605\u8bfb\u6ce8\u91ca\u4e86\u89e3\u5230\uff0c\u5728\u51c6\u5907\u8df3\u5165usertrap()\u4e4b\u524d\uff0c\u9700\u8981\u5148\u5207\u6362kernel page\u3002 76 # restore kernel page table from p->trapframe->kernel_satp 77 ld t1, 0(a0) 78 csrw satp, t1 79 sfence.vma zero, zero 80 81 # a0 is no longer valid, since the kernel page 82 # table does not specially map p->tf. 83 84 # jump to usertrap(), which does not return 85 jr t0 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u65ad\u70b9\u6253\u5728 0x3ffffff08e \u5730\u5740\u4e0a\uff0c\u4e5f\u5c31\u662f\u8ba9\u7a0b\u5e8f\u505c\u7559\u5728\u8df3\u5165usertrap()\u4e4b\u524d\u3002 \u5982\u4f55\u77e5\u9053\u7b2c85\u884c jr t0 \u8bed\u53e5\u7684\u5730\u5740\u662f 0x3ffffff08e \uff1f \u5728\u8c03\u8bd5\u63a7\u5236\u53f0\uff0c\u8f93\u5165 x/40i $pc \u663e\u793a\u5f53\u524dPC\u540e\u9762\u768440\u6761\u6307\u4ee4\uff0c\u5c31\u53ef\u4ee5\u770b\u5230 jr t0 \u5bf9\u5e94\u7684\u5730\u5740\u3002 \u4e5f\u53ef\u4ee5\u901a\u8fc7\u67e5\u770bkernel.asm\u53cd\u6c47\u7f16\u6587\u4ef6\uff0c\u5728 0000000080007000 <_trampoline>: \u6bb5\uff0c\u53ef\u4ee5\u770b\u5230 jr t0 \u76f8\u5bf9uservec\u7b2c\u4e00\u6761\u6307\u4ee4\u4f4d\u7f6e\u504f\u79fb\u4e86 0x8e \uff0c\u5c06 0x3ffffff000 + 0x8e \uff0c\u5c31\u662f 0x3ffffff08e \u3002 \u8f93\u5165 b *0x3ffffff08e \u70b9\u51fb\u201d\u8fd0\u884c\u201c\u3002 \u5728\u8df3\u8f6c\u5230\u5185\u6838C\u8bed\u8a00\u4ee3\u7801\u8fd0\u884c\u4e4b\u524d\uff0c\u52a0\u8f7dkernel\u7684\u8c03\u8bd5\u7b26\u53f7\uff0c\u8f93\u5165 file kernel/kernel \u63a5\u7740\uff0c\u8f93\u5165 si \u5355\u6b65\u6267\u884c\u6c47\u7f16\u6307\u4ee4\u3002 \u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u8fdb\u5165\u4e86trap.c\u7684usertrap\u51fd\u6570\u4e2d\u4e86\u3002 \u6b64\u65f6\u6211\u4eec\u518d\u89c2\u5bdfpage table\uff0c\u5728qemu\u63a7\u5236\u53f0\u8f93\u5165 info mem \u53ef\u4ee5\u770b\u51fa\u4e0e\u4e4b\u524d\u7684page table\u4e0d\u4e00\u6837\u4e86\uff0c\u5df2\u7ecf\u4eceuser page table\u5207\u6362\u5230\u4e86kernel page table\uff0c\u8bf4\u660e\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\u6267\u884c\u5185\u6838\u4e2d\u7684C\u4ee3\u7801\u4e86\u3002 trampoline \u62d3\u5c55\u77e5\u8bc6 \u6ce8\u610f\u89c2\u5bdf\u7684\u540c\u5b66\u53ef\u80fd\u5df2\u7ecf\u53d1\u73b0\u4e86\uff0cuser page table\u548ckernel page table\u7684trampoline page\u7684\u6620\u5c04\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u5207\u6362page table\u65f6\uff0c\u5bfb\u5740\u7684\u7ed3\u679c\u4e0d\u4f1a\u6539\u53d8\uff0c\u5426\u5219\u5f53trampoline\u5207\u5b8c\u9875\u8868\u5c31\u53ef\u80fd\u56e0\u627e\u4e0d\u5230\u6307\u4ee4\u800c\u5d29\u6e83\u4e86\u3002\u8fd9\u4e5f\u6b63\u662ftrampoline page\u7684\u7279\u6b8a\u4e4b\u5904\u3002 trapframe \u62d3\u5c55\u77e5\u8bc6 \u53ef\u80fd\u8fd8\u6709\u540c\u5b66\u6ce8\u610f\u5230\uff0cuser page table\u4e2d\u5012\u6570\u7b2c\u4e8c\u4e2aPTE\u7684vaddr\uff08\u865a\u62df\u5730\u5740\uff1a0x3ffffffe00\uff09\u4e5f\u662f\u6bd4\u8f83\u5927\u3002\u5b83\u662f\u7531kernel\u8bbe\u7f6e\u597d\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u7528\u4e8e\u6307\u5411\u4e00\u4e2a\u53ef\u4ee5\u7528\u6765\u5b58\u653e\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u7528\u6237\u5bc4\u5b58\u5668\u7684\u5185\u5b58\u4f4d\u7f6e\uff08\u5982\u679c\u4f60\u60f3\u67e5\u770bxv6\u5728trapframe page\u4e2d\u5b58\u653e\u4e86\u4ec0\u4e48\uff0c\u8be6\u89c1proc.h\u7684trapframe\u7ed3\u6784\u4f53\uff09\u3002\u5728\u5185\u6838\u5207\u6362\u7528\u6237\u7a7a\u95f4\u65f6\uff0c\u5185\u6838\u4f1a\u6267\u884cset sscratch\u6307\u4ee4\uff0c\u5c06\u8fd9\u4e2a\u5bc4\u5b58\u5668\u7684\u5185\u5bb9\u8bbe\u7f6e\u4e3a0x3ffffffe00\uff0c\u4e5f\u5c31\u662ftrapframe page\u7684\u865a\u62df\u5730\u5740\u3002\u5728\u8fd0\u884c\u7528\u6237\u4ee3\u7801\u65f6\uff0csscratch\u4fdd\u5b58\u7684\u5c31\u662f\u6307\u5411TRAPFRAME\u7684\u5730\u5740\u3002 \u90a3\u4e3a\u4ec0\u4e48\u5185\u6838\u8981\u4fdd\u5b58\u8fd9\u4e9b\u7528\u6237\u5bc4\u5b58\u5668\u5462\uff1f \u662f\u56e0\u4e3a\u5185\u6838\u5373\u5c06\u8981\u8fd0\u884c\u4f1a\u8986\u76d6\u8fd9\u4e9b\u5bc4\u5b58\u5668\u7684C\u4ee3\u7801\u3002\u5f53\u4ece\u5185\u6838\u518d\u6b21\u5207\u56de\u81f3\u7528\u6237\u7a7a\u95f4\u65f6\uff0c\u5982\u679c\u8981\u60f3\u6b63\u786e\u6062\u590d\u7528\u6237\u7a0b\u5e8f\uff0c\u5219\u9700\u8981\u5c06\u7528\u6237\u5bc4\u5b58\u5668\u6062\u590d\u6210\u5728ecall\u6307\u4ee4\u6267\u884c\u4e4b\u524d\u7684\u72b6\u6001\u3002\u56e0\u6b64\uff0c\u9700\u8981\u5c06\u6240\u6709\u7684\u5bc4\u5b58\u5668\u90fd\u4fdd\u5b58\u5728trapframe\u4e2d\uff0c\u8fd9\u6837\u624d\u80fd\u5728\u4e4b\u540e\u6062\u590d\u5bc4\u5b58\u5668\u7684\u503c\u3002","title":"2. ECALL\u6307\u4ee4\u4e4b\u540e\u7684\u72b6\u6001"},{"location":"lab2/part5/#3-c","text":"\u81ea\u4ece\u89c1\u5230\u4e86usertrap\uff0c\u6211\u4eec\u5c31\u5df2\u7ecf\u8fdb\u5165\u4e86C\u8bed\u8a00\u7684\u4e16\u754c\uff0c\u76f8\u6bd4\u4e0a\u8ff0\u6c47\u7f16\u4ee3\u7801\u6765\u8bf4\uff0c\u5c11\u4e86\u5f88\u591a\u6666\u6da9\u96be\u61c2\u7684\u5730\u65b9\uff0c\u662f\u4e0d\u662f\u89c9\u5f97\u751f\u6d3b\u66f4\u52a0\u7f8e\u597d\u4e86\u5462:-) \u4ece\u524d\u9762\u5b9e\u9a8c\u539f\u7406\u7684\u90e8\u5206\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\uff0c\u6709\u5f88\u591a\u539f\u56e0\u90fd\u53ef\u4ee5\u8ba9\u7a0b\u5e8f\u8fdb\u5165usertrap\u51fd\u6570\u4e2d\u6765\u3002\u5bf9\u4e8e\u672c\u5b9e\u9a8c\u6765\u8bf4\uff0c\u6211\u4eec\u66f4\u5173\u5fc3\u7684\u662f\u7cfb\u7edf\u8c03\u7528\u7684\u8fc7\u7a0b\u4ee3\u7801\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5728\u7b2c67\u884c syscall(); \u6253\u4e0a\u65ad\u70b9\uff0c\u70b9\u51fb\u201c\u8fd0\u884c\u201d\uff0c\u8ba9\u7a0b\u5e8f\u505c\u7559\u5728syscall()\u51fd\u6570\u3002\u5f53\u7136\uff0c\u559c\u6b22\u63a2\u7d22\u7684\u540c\u5b66\u4e5f\u53ef\u4ee5\u6df1\u5165\u5206\u6790usertrap()\u51fd\u6570\u7684\u6267\u884c\u6d41\u7a0b\u3002 \u63a5\u7740\u8fdb\u5165syscall.c\u6587\u4ef6\u4e2d\u7684syscall()\uff0c\u90a3\u4e48\u540c\u5b66\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u8fdb\u884c\u8c03\u8bd5\u5206\u6790\u540e\u9762\u7684\u4ee3\u7801\u5427\u3002","title":"3. \u6c47\u7f16\u4e4b\u540e\u7684C\u4ee3\u7801"},{"location":"lab2/part5/#4","text":"\u6709\u540c\u5b66\u53ef\u80fd\u95ee\uff0c\u80fd\u4e0d\u80fd\u8df3\u8fc7\u6c47\u7f16\u4ee3\u7801\uff0c\u76f4\u63a5\u6253\u6253\u65ad\u70b9\u5230C\u4ee3\u7801\u5462\uff1f\u7b54\u6848\u662f\u53ef\u4ee5\u7684\u3002\u4e0b\u9762\u8fd8\u662f\u4ee5ls\u4e2d\u7684fstat\u7cfb\u7edf\u8c03\u7528\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u4e00\u4e2a\u8f83\u4e3a\u7b80\u5355\u7684\u8c03\u8bd5\u6b65\u9aa4\uff1a Step1\uff1a \u5148\u5728\u7ec8\u7aef\u8f93\u5165\u201cmake qemu-gdb\u201d\u3002 \u63a5\u7740\uff0c\u6309\u4e0bF5\uff0c \u6216\u8005 \u70b9\u51fb\u5de6\u4fa7\u6309\u94ae\u8fd0\u884c\u4e0e\u8c03\u8bd5\uff0c\u5e76\u70b9\u51fb\u5de6\u4e0a\u89d2\u7eff\u8272\u4e09\u89d2\uff08Attach to gdb)\u3002 \u518d\u70b9\u51fb\u201c\u8fd0\u884c\u201d\uff0c\u8ba9xv6\u6b63\u5e38\u8fd0\u884c\uff0c\u76f4\u5230\u51fa\u73b0\u201c$\u201d\uff0c\u8868\u793a\u5df2\u7ecf\u8fdb\u5165shell\u4e2d\u3002 Step2\uff1a \u5728\u8c03\u8bd5\u63a7\u5236\u53f0\uff0c\u8f93\u5165\u201cinterrupt\u201d\u3002 Step3\uff1a \u5728kernel/trap.c:128\u5904\u6253\u65ad\u70b9\uff0c\u7ee7\u7eed\u70b9\u51fb\u201c\u8fd0\u884c\u201d\u3002 Step4\uff1a \u5728xv6\u7684shell\u4e2d\u8f93\u5165 ls \uff0c\u4ee5\u542f\u52a8 ls \u7a0b\u5e8f\uff1b\u7a0b\u5e8f\u505c\u7559\u5728 kernel/trap.c:128 \u5904\u3002 Step5\uff1a \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u5728\u8c03\u8bd5\u7a97\u53e3\u5de6\u4e0b\u89d2\u5220\u9664\u539f\u6709\u7684\u5185\u6838\u6001\u65ad\u70b9\uff0c\u5e76\u901a\u8fc7\u8c03\u8bd5\u63a7\u5236\u53f0\uff0c\u52a0\u8f7dls\u7684\u8c03\u8bd5\u7b26\u53f7\u3002\u5728\u5176\u4e2d\u8f93\u5165 file user/_ls \u3002 Step6\uff1a \u6253\u5f00user/ls.c\u6587\u4ef6\uff0c\u627e\u5230main()\u51fd\u6570\uff0c\u5728\u7b2c78\u884c\u6253\u4e0a\u65ad\u70b9\u3002\u70b9\u51fb\u201c\u8fd0\u884c\u201d\u3002 Step7\uff1a \u5728ls.c\u7b2c38\u884c\u6253\u4e0a\u65ad\u70b9\uff0c\u70b9\u51fb\u201c\u8fd0\u884c\u201d\uff0c\u8ba9\u7a0b\u5e8f\u505c\u7559\u5728\u6267\u884cfstat\u7cfb\u7edf\u8c03\u7528\u7684\u5730\u65b9\u3002 Step8\uff1a \u5728\u8c03\u8bd5\u63a7\u5236\u53f0\uff0c\u8f93\u5165 file kernel/kernel \uff0c\u52a0\u8f7dkernel\u7684\u8c03\u8bd5\u7b26\u53f7\u3002 Step9\uff1a \u5728syscall.c\u6587\u4ef6\u4e2d\u7b2c138\u884c syscall(); \u6253\u4e0a\u65ad\u70b9\uff0c\u70b9\u51fb \u201c\u8fd0\u884c\u201d \uff0c\u8ba9\u7a0b\u5e8f\u505c\u7559\u5728syscall()\u51fd\u6570\u3002 Step10\uff1a \u63a5\u4e0b\u6765\uff0c\u4f60\u5c31\u53ef\u4ee5\u6839\u636e\u9700\u8981\u6765\u8c03\u8bd5\u4f60\u60f3\u8981\u5206\u6790\u7684\u4ee3\u7801\u5427\u3002","title":"4. \u4e00\u4e2a\u7b80\u5355\u7684\u4ece\u7528\u6237\u5230\u5185\u6838\u7a7a\u95f4\u7684\u8c03\u8bd5\u65b9\u6cd5"},{"location":"lab3/part1/","text":"\u5b9e\u9a8c\u6982\u8ff0 \u00b6 \u6e29\uff08\u5b88\uff09\u99a8\uff08\u4f4f\uff09\u63d0\uff08\u7ea2\uff09\u793a\uff08\u7ebf\uff09 \u672c\u8bfe\u7a0b\u5b9e\u9a8c\u5df2\u5f15\u5165\u4ee3\u7801\u81ea\u52a8\u67e5\u91cd\u7cfb\u7edf\uff0c\u8bf7\u540c\u5b66\u4eec\u4fdd\u6301 \u5b66\u672f\u8bda\u4fe1 \uff01 \u5173\u4e8e\u7b2c\u4e8c\u6b21\u5b9e\u9a8c\u8bfe\u8003\u6838 \u6211\u4eec\u5c06\u5728\u7b2c\u56db\u6b21\u5b9e\u9a8c\u8bfe\u8fdb\u884c\u7b2c\u4e8c\u6b21\u5b9e\u9a8c\u73b0\u573a\u9a8c\u6536\uff1a \u9a8c\u6536\u5185\u5bb9 \uff1a\u524d\u4e09\u6b21\u5b9e\u9a8c Lab1\uff1aXV6\u4e0eUnix\u5b9e\u7528\u7a0b\u5e8f Lab2\uff1a\u7cfb\u7edf\u8c03\u7528 Lab3\uff1a\u9501\u673a\u5236\u7684\u5e94\u7528 \u9a8c\u6536\u76ee\u7684 \uff1a\u8003\u5bdf\u540c\u5b66\u4eec\u662f\u5426\u662f\u81ea\u5df1\u5b8c\u6210\u7684\u5b9e\u9a8c\u4ee3\u7801\uff0c\u800c\u4e0d\u662f\u201c\u590d\u5236\u62f7\u8d1d\u201d\u3002 \u9a8c\u6536\u5f62\u5f0f \uff1a\u52a9\u6559\u4e0e\u540c\u5b66\u4eec\u8fdb\u884c\u4e00\u5bf9\u4e00\u95ee\u7b54 \u8bf7\u540c\u5b66\u4eec\u8ba4\u771f\u5bf9\u5f85\uff01 \u8bfe\u7a0b\u590d\u4e60\u548c\u9884\u4e60\u8981\u6c42 \u672c\u8282\u5b9e\u9a8c\u4e0e\u7406\u8bba\u8bfe\u7684 \u201c\u591a\u7ebf\u7a0b\u201d \u3001 \u201c\u4fe1\u53f7\u91cf\u201d \u548c \u201c\u6b7b\u9501\u201d \u8fd9\u4e09\u7ae0\u8bfe\u7a0b\u5185\u5bb9\u76f8\u5173\uff0c\u8bf7\u540c\u5b66\u4eec\u590d\u4e60\u8fd9\u4e09\u7ae0\u8bfe\u7a0b\u5185\u5bb9\u3002 \u5728\u505a\u5b9e\u9a8c\u4e4b\u524d\uff0c\u8bf7\u540c\u5b66\u4eec\u9605\u8bfb xv6\u624b\u518c \u7684\u4ee5\u4e0b\u7ae0\u8282\u53ca\u76f8\u5173\u6e90\u4ee3\u7801\uff1a [1] xv6 book, Chapter 6 Locking (\u9501) [2] xv6 book, 3.5 Code: Physical memory allocator\uff08\u7269\u7406\u5185\u5b58\u5206\u914d\u5668\uff09 [3] xv6 book, Chapter 8 File system\uff1a8.1 Overview ~ 8.3 Code: Buffer cache\uff08\u78c1\u76d8\u7f13\u5b58\uff09 \u5b9e\u9a8c\u80cc\u666f \u9501\u8d77\u5230\u4e86\u4fdd\u62a4\u4f5c\u7528\uff0c\u8ba9\u4e00\u4e9b\u5173\u952e\u7684\u6570\u636e\u7ed3\u6784\u5728\u5e76\u884c\u73af\u5883\u4e0b\u4ecd\u80fd\u4fdd\u6301\u4e00\u81f4\u6027\u3002 \u5728\u8fd9\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4e3axv6\u5185\u5b58\u5206\u914d\u5668\u548c\u78c1\u76d8\u7f13\u5b58\uff08buffer cache\uff09\u91cd\u65b0\u8bbe\u8ba1\u4ee3\u7801\u4ee5\u63d0\u9ad8\u5e76\u884c\u6027\u3002\u8fd9\u4e24\u4e2a\u5b9e\u9a8c\u5206\u522b\u7528\u5230\u4e86\u4e24\u79cd \u4e0d\u540c \u7684\u8bbe\u8ba1\u65b9\u6cd5\uff0c\u6765\u9002\u7528\u81ea\u8eab\u7684\u7ed3\u6784\uff0c\u5927\u5927\u51cf\u5c11\u9501\u4e89\u7528\uff08\u5728\u4fdd\u8bc1\u529f\u80fd\u6b63\u786e\u7684\u524d\u63d0\u4e0b\uff09\u3002 1. \u5b9e\u9a8c\u76ee\u7684 \u00b6 \u4e86\u89e3Lock\u7684\u5b9e\u73b0\u539f\u7406\uff0c\u7406\u89e3CPU\u4e3aLock\u7684\u5b9e\u73b0\u63d0\u4f9b\u7684\u652f\u6301\u3002 \u7406\u89e3xv6\u7684\u5185\u5b58\u5206\u914d\u5668kalloc\u4ee5\u53ca\u78c1\u76d8\u7f13\u5b58buffer cache\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u638c\u63e1Lock\u5728xv6\u4e2d\u5185\u5b58\u5206\u914d\u5668/\u78c1\u76d8\u7f13\u5b58\u4e2d\u7684\u4f5c\u7528\u3002 \u638c\u63e1\u9501\u7ade\u4e89\u5bf9\u7a0b\u5e8f\u5e76\u884c\u6027\u7684\u5f71\u54cd\u3002 \u5b66\u4e60\u51cf\u5c11\u9501\u7ade\u4e89\u7684\u65b9\u6cd5\u3002 2. \u5b9e\u9a8c\u5b66\u65f6 \u00b6 \u672c\u5b9e\u9a8c\u4e3a4\u5b66\u65f6\u3002 3. \u5b9e\u9a8c\u5185\u5bb9\u53ca\u8981\u6c42 \u00b6 \u8bf7\u5148\u540c\u6b65\u4e0a\u6e38\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5e76\u6ce8\u610f\u5207\u6362\u5230lock\u5206\u652f\u8fdb\u884c\u8bd5\u9a8c \u672c\u6b21\u5b9e\u9a8c\u57fa\u4e8e lock \u5206\u652f\uff0c\u8bf7\u540c\u5b66\u4eec\u6ce8\u610f\u5207\u6362\u3002 Step 1. \u9996\u5148\uff0c\u4fdd\u5b58\u5b9e\u9a8c\u4e8c\u7684\u4ee3\u7801\uff0c\u8bf7\u53c2\u8003\u5b9e\u9a8c\u5b9e\u7528\u5de5\u5177\u7684 3.3.1 \u4f7f\u7528\u547d\u4ee4\u884c\u5b8c\u6210\u64cd\u4f5c \u6216\u8005 3.3.2 \u4f7f\u7528VS Code\u5185\u5efa\u7684\u56fe\u5f62\u5316\u754c\u9762\u5b8c\u6210\u64cd\u4f5c \u8fd9\u4e24\u5c0f\u8282\uff0c\u5b8c\u6210commit\u64cd\u4f5c\u3002\u6216\u8005\uff0c \u5982\u679c\u4f60\u5e0c\u671b\u76f4\u63a5\u653e\u5f03\u6389\u4e0a\u4e00\u6b21commit\u540e\u7684\u6240\u6709\u66f4\u6539 \uff0c\u90a3\u4e48\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528-f\u9009\u9879\u5f3a\u5236\u5207\u6362\u5206\u652f\uff0c\u4f8b\u5982 git checkout -f lock \u3002 Step 2. \u5207\u6362\u7684\u65b9\u6cd5\u53ef\u4ee5\u53c2\u8003\u5b9e\u9a8c -> \u5b9e\u9a8c\u5b9e\u7528\u5de5\u5177 -> 3.1\u540c\u6b65\u4e0a\u6e38\u4ed3\u5e93 ~ 3.3.3 \u5408\u5e76\u51b2\u7a81\u66f4\u6539 \u3002 3.1 \u4efb\u52a1\u4e00\uff1a\u5185\u5b58\u5206\u914d\u5668\uff08Memory allocator\uff09 \u00b6 \u4fee\u6539\u5185\u5b58\u5206\u914d\u5668\uff08\u4e3b\u8981\u4fee\u6539kernel/kalloc.c\uff09 \uff0c\u4f7f\u6bcf\u4e2aCPU\u6838\u4f7f\u7528\u72ec\u7acb\u7684\u5185\u5b58\u94fe\u8868\uff0c\u800c\u4e0d\u662f\u73b0\u5728\u7684\u5171\u4eab\u94fe\u8868\u3002 XV6\u7684\u5185\u5b58\u5206\u914d\u5668\u53ea\u6709\u4e00\u4e2a\u5185\u5b58\u94fe\u8868\u4f9b\u591a\u4e2aCPU\u6838\u4f7f\u7528\u3002\u5728\u4f7f\u7528 kalloc() \u83b7\u53d6\u5185\u5b58\u65f6\uff0c\u7531\u4e8e\u6dfb\u52a0\u4e86\u5185\u5b58\u9501 kmem.lock \uff0c\u5176\u4ed6CPU\u5982\u679c\u8981\u5207\u6362\u8fdb\u884c\u5185\u5b58\u7533\u8bf7\u5fc5\u987b\u7b49\u5f85\u5f53\u524d\u8fdb\u7a0b\u91ca\u653e\u5185\u5b58\u9501\u3002\u8981\u6d88\u9664\u9501\u4e89\u7528\u7684\u60c5\u51b5\uff0c\u9700\u8981\u91cd\u65b0\u8bbe\u8ba1\u5185\u5b58\u94fe\u8868\u7ba1\u7406\u673a\u5236\u4ee5\u907f\u514d\u5355\u4e2a\u9501\u548c\u5355\u4e2a\u94fe\u8868\u3002\u5b9e\u9a8c\u57fa\u672c\u4efb\u52a1\u662f\u8ba9\u6bcf\u4e2aCPU\u62e5\u6709\u81ea\u5df1\u7684\u5185\u5b58\u94fe\u8868\uff0c\u6bcf\u4e2a\u94fe\u8868\u90fd\u6709\u81ea\u5df1\u7684\u9501\uff0c\u540c\u65f6\uff0c\u5f53\u4e00\u4e2aCPU\u5185\u5b58\u94fe\u8868\u4e0d\u8db3\u65f6\uff0c\u8fd8\u53ef\u4ee5\u4ece\u5176\u4ed6\u94fe\u8868 \u7a83\u53d6 \u5185\u5b58\u5757\uff0c\u8fd9\u6837\uff0c\u5c31\u4e0d\u4f1a\u8ba9\u6240\u6709\u7684CPU\u4e89\u62a2\u4e00\u4e2a\u7a7a\u95f2\u533a\u57df\uff08\u7a83\u53d6\u53ef\u80fd\u4f1a\u5f15\u53d1\u9501\u4e89\u7528\uff0c\u4f46\u8fd9\u4e5f\u662f\u4e0d\u53ef\u907f\u514d\u7684\u60c5\u51b5\uff09\u3002 \u600e\u4e48\u67e5\u770bXV6\u5f00\u542f\u4e86\u591a\u5c11\u4e2aCPU\u6838\uff1f \u5728\u8f93\u5165make qemu\u65f6\uff0c\u9ed8\u8ba4\u4f1a\u542f\u52a83\u4e2aCPU\u6838\uff0c\u5177\u4f53\u53ef\u4ee5\u67e5\u770bMakefile\u6587\u4ef6\uff1a 264 ifndef CPUS 265 CPUS : = 3 266 endif \u5982\u679c\u8981\u5f00\u542f\u5355\u4e2aCPU\uff0c\u4f7f\u7528\u547d\u4ee4 make CPUS=1 qemu \u91cd\u65b0\u7f16\u8bd1\u5373\u53ef\u3002\u5728C\u4ee3\u7801\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528kernel/param.h\u4e2d\u7684NCPU\u5b8f\u6765\u67e5\u770bCPU\u7684\u6570\u76ee\uff08maximum number of CPUs\uff09\u3002 3.1.1 \u5173\u4e8e\u6d4b\u8bc4\u7a0b\u5e8fkalloctest \u00b6 \u6d4b\u8bc4\u7a0b\u5e8f kalloctest \uff08\u89c1user/kalloctest.c\uff09\u6709\u4e24\u4e2atest\uff0c\u5206\u522b\u662ftest1\u548ctest2\u3002 1) \u5728test1\u4e2dfork\u51fa\u591a\u4e2a\u8fdb\u7a0b\uff0c\u5b83\u4eec\u5e76\u53d1\u8fd0\u884c\u4e8e\u4e0d\u540cCPU\u6838\u5fc3\uff0c\u7528 sbrk() \u8fdb\u884c\u9891\u7e41\u83b7\u53d6\u7a7a\u95f2\u5185\u5b58\uff08\u8c03\u7528 kalloc() \u5b9e\u73b0\uff09\uff0c\u7136\u540e\u53c8\u91ca\u653e\uff08\u8c03\u7528 kfree() \u5b9e\u73b0\uff09\u3002\u5728\u83b7\u53d6\u5185\u5b58\u7684\u65f6\u5019\u4e0d\u540cCPU\u6838\u5fc3\u53ef\u80fd\u4f1a\u4e89\u62a2\u9501\u3002 sbrk() \u51fd\u6570\u529f\u80fd\u8bf4\u660e sbrk()\u662fxv6\u63d0\u4f9b\u7684\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\uff0c\u5176\u5185\u6838\u6587\u4ef6\u4f4d\u7f6e\u5728kernel/sysproc.c\u3002\u4f5c\u7528\uff1a\u4e3a\u8fdb\u7a0b\u5206\u914d\u6216\u56de\u6536\u5185\u5b58\u3002\u5b83\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u4ee3\u8868\u8981\u5206\u914d\u7684\u5b57\u8282\u6570\u3002\u5b83\u8fd4\u56de\u7684\u662f\u65b0\u5206\u914d\u5185\u5b58\u7684\u5730\u5740\u3002 \u8fd9\u4e2a\u7cfb\u7edf\u8c03\u7528\u662f\u901a\u8fc7 growproc \u6765\u5b9e\u73b0\u7684\u3002\u5982\u679c\u7ed9\u7684\u53c2\u6570\u662f\u6b63\u6570\uff0c growproc \u4f7f\u7528 uvmalloc \u6765\u5206\u914d\u5185\u5b58\uff1b\u5982\u679c\u7ed9\u7684\u53c2\u6570\u662f\u8d1f\u6570\uff0c\u4f7f\u7528 uvmdealloc \u6765\u91ca\u653e\u5185\u5b58\u3002 uvmalloc \u9996\u5148\u4f7f\u7528 kalloc \u6765\u5206\u914d\u7269\u7406\u5185\u5b58\uff0c\u7136\u540e\u518d\u7528 mappages \u628aPTE\u52a0\u5230\u7528\u6237\u7684\u9875\u8868\u91cc\u3002 uvmdealloc \u8c03\u7528 uvmunmap \u5b9e\u73b0\u5176\u529f\u80fd\uff0c uvmunmap \u9996\u5148\u7528 walk \u6765\u627e\u5230\u5bf9\u5e94\u7684PTE\uff0c\u7136\u540e\u4f7f\u7528 kfree \u6765\u91ca\u653e\u76f8\u5e94\u7684\u7269\u7406\u5185\u5b58\u3002 2) \u5728test2\u4e2d\u6d4b\u8bd5\u6240\u6709\u7a7a\u95f2\u5185\u5b58\u7684\u83b7\u53d6\u548c\u91ca\u653e\uff0c\u7531\u4e8etest2\u672a\u4f7f\u7528fork\uff0c\u53ea\u5728\u5355\u8fdb\u7a0b\u4e2d\u6d4b\u8bd5\u3002 \u6d4b\u8bc4\u7a0b\u5e8fkalloctest\u6700\u7ec8\u4f1a\u6253\u5370\u51fa fetch-and-add \u7684\u6570\u76ee\uff0c\u4e5f\u5c31\u662f \u6ca1\u6709\u6210\u529f\u83b7\u53d6 \u5230kmem\u9501\u7684\u6b21\u6570\uff0c\u8fd9\u79cd\u7c97\u7565\u6d4b\u91cf\u9501\u4e89\u7528\u7684\u65b9\u5f0f\uff08\u5b9e\u9a8c\u524d\uff0c\u5373\u672a\u4fee\u6539\u524d\uff09\u5982\u4e0b\uff1a $ kalloctest start test1 test1 results: --- lock kmem/bcache stats lock: kmem: #fetch-and-add 46375 #acquire() 433016 lock: bcache: #fetch-and-add 0 #acquire() 1242 --- top 5 contended locks: lock: kmem: #fetch-and-add 46375 #acquire() 433016 lock: proc: #fetch-and-add 21429 #acquire() 170067 lock: virtio_disk: #fetch-and-add 13306 #acquire() 114 lock: proc: #fetch-and-add 6023 #acquire() 170143 lock: proc: #fetch-and-add 3661 #acquire() 170147 tot= 46375 test1 FAIL start test2 total free number of pages: 32499 (out of 32768) ..... test2 OK \u5176\u4e2d\uff0c\"kmem\"\u3001\"bcache\"\u3001\"proc\" \u7b49\u6307\u793a\u4e86\u9501\u7684\u7c7b\u578b\uff0cacquire()\u8bb0\u5f55\u4e86\u6bcf\u79cd\u9501 \u88ab\u8bf7\u6c42 \u7684\u6b21\u6570\uff0cfetch-and-add\u5c31\u662f \u8fdb\u7a0b\u6ca1\u6709\u6210\u529f\u83b7\u53d6\u5230\u6b64\u9501 \u7684\u6b21\u6570\u3002\u4f8b\u5982\uff0c lock: kmem: #fetch-and-add 46375 #acquire() 433016 \u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\uff0ckmem.lock\u8bf7\u6c42\u4e86433016\u6b21\uff0c\u4ec5\u6210\u529f\u4e86433016 - 46375 = 386641\u6b21\uff0c\u8fd9\u5c31\u662f\u53d1\u751f\u4e86\u9501\u4e89\u7528\u4e86\uff08lock contention\uff09\u3002\u8fd9\u4e9b\u8ba1\u6570\u6765\u81ea\u4e8e\u5728kalloctest\u8c03\u7528\u7684ntas()\uff0c\u5b83\u901a\u8fc7\u6267\u884cstatistics()\u51fd\u6570\uff0c\u6253\u5f00\"statistics\"\u8bbe\u5907\u6587\u4ef6\uff0c\u83b7\u53d6\u5185\u6838\u6253\u5370\u7684\u90a3\u4e9b\u9488\u5bf9kmem\u548cbcache\u9501( \u672c\u9a8c\u7684\u91cd\u70b9 )\u53ca5\u4e2a\u7ade\u4e89\u6700\u6fc0\u70c8\u7684\u9501\u7684\u8ba1\u6570\uff08\u89c1kernel/spinlock.c\u4e2d\u7684 statslock() \uff09\u3002 \u5982\u679c\u5b58\u5728\u9501\u4e89\u7528\uff0cfetch-and-add\u7684\u6570\u91cf\u5c06\u4f1a\u5f88\u9ad8\uff0c\u56e0\u4e3a\u5728acquire()\u83b7\u5f97\u9501\u4e4b\u524d\u8981\u8fdb\u884c\u8bb8\u591a\u5faa\u73af\u8fed\u4ee3\uff0c\"statistics\"\u8bbe\u5907\u6587\u4ef6\u4f1a\u8fd4\u56dekmem\u548cbcache\u9501\u7684#test-and-set\u7684\u603b\u548c\uff08\u4e5f\u5c31\u662f tot \uff09\u3002 3.1.2 \u5177\u4f53\u8981\u6c42 \u00b6 1) \u672c\u5b9e\u9a8c\u5fc5\u987b\u4f7f\u7528 \u4e13\u7528\u7a7a\u8f7d\u591a\u6838 \u7684\u73af\u5883\uff0c\u5426\u5219\u6570\u636e\u5c06\u6ca1\u6709\u610f\u4e49\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u6216\u4f60\u7684\u7b14\u8bb0\u672c\u7535\u8111\u3002 2) \u8bf7\u4f7f\u7528 initlock() \u521d\u59cb\u5316\u9501\uff0c\u5e76\u8981\u6c42\u9501\u540d\u5b57\u4ee5 kmem \u5f00\u5934\uff1b 3) \u8fd0\u884c kalloctest \u67e5\u770b\u5b9e\u73b0\u7684\u4ee3\u7801\u662f\u5426\u51cf\u5c11\u4e86\u9501\u4e89\u7528\uff08 tot \u6ca1\u6709\u83b7\u53d6\u5230\u6b64\u9501\u7684\u6b21\u6570\u5c0f\u4e8e10\u5219\u4e3a\u901a\u8fc7\uff09\uff1b 4) \u8fd0\u884c usertests sbrkmuch \u4ee5\u6d4b\u8bd5\u4fee\u6539\u4ee3\u7801\u540e\u7cfb\u7edf\u662f\u5426\u4ecd\u53ef\u4ee5\u5206\u914d\u6240\u6709\u7684\u5185\u5b58\uff1b 5) \u8fd0\u884c usertests \uff0c\u786e\u4fdd\u5176\u80fd\u80fd\u591f\u5168\u90e8\u901a\u8fc7\uff1b 6) kalloctest\u548cusertests\u7684\u8f93\u51fa\u5982\u4e0b\u56fe\uff08\u9501\u4e89\u7528\u7684\u6b21\u6570\u5927\u5927\u51cf\u5c11\uff09\uff0c\u5177\u4f53\u7684\u6570\u636e\u4f1a\u6709\u6240\u5dee\u522b\uff1a 3.2 \u4efb\u52a1\u4e8c\uff1a\u78c1\u76d8\u7f13\u5b58\uff08Buffer cache\uff09 \u00b6 \u5728\u8bbf\u95ee\u6587\u4ef6\u6570\u636e\u7684\u65f6\u5019\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5c06\u6587\u4ef6\u7684\u6570\u636e\u653e\u7f6e\u5728\u78c1\u76d8\u7f13\u5b58\u4e2d\u3002\u78c1\u76d8\u7f13\u5b58\u662f\u4e0d\u540c\u8fdb\u7a0b\u4e4b\u95f4\u7684\u5171\u4eab\u8d44\u6e90\uff0c\u56e0\u6b64\u9700\u8981\u901a\u8fc7\u9501\u786e\u4fdd\u4f7f\u7528\u7684\u6b63\u786e\u6027\u3002\u5982\u679c\u6709\u591a\u8fdb\u7a0b\u5bc6\u96c6\u5730\u4f7f\u7528\u6587\u4ef6\u7cfb\u7edf\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u7ade\u4e89\u78c1\u76d8\u7f13\u5b58\u7684 bcache.lock \u9501\u3002 \u76ee\u524d\uff0cxv6\u91c7\u7528\u5355\u4e2a\u9501\u7ba1\u7406\u78c1\u76d8\u7f13\u5b58\uff0c\u6211\u4eec\u9700\u8981 \u4fee\u6539\u78c1\u76d8\u7f13\u5b58\u5757\u5217\u8868\u7684\u7ba1\u7406\u673a\u5236\uff08\u4e3b\u8981\u4fee\u6539kernel/bio.c\uff09 \uff0c\u4f7f\u5f97\u53ef\u7528\u591a\u4e2a\u9501\u7ba1\u7406\u7f13\u5b58\u5757\uff0c\u4ece\u800c\u51cf\u5c11\u7f13\u5b58\u5757\u7ba1\u7406\u7684\u9501\u4e89\u7528\u3002 \u63d0\u793a \u5728\u4efb\u52a1\u4e00\u4e2d\u6211\u4eec\u53ef\u4ee5\u4e3a\u6bcf\u4e2aCPU\u5206\u914d\u5c5e\u4e8e\u81ea\u5df1\u7684\u5185\u5b58\u94fe\u8868\uff0c\u4f46\u5728\u4efb\u52a1\u4e8c\u4e2d\u4e0d\u80fd\u4e3a\u6bcf\u4e2aCPU\u5206\u914d\u5c5e\u4e8e\u81ea\u5df1\u7684\u78c1\u76d8\u7f13\u5b58\u533a\u3002\u4e3b\u8981\u539f\u56e0\u662f\u591a\u4e2a\u8fdb\u7a0b\u95f4\uff08\u6216\u8005\u8bf4\u591a\u4e2aCPU\u95f4\uff09\u8bbf\u95ee\u78c1\u76d8\u540c\u4e00\u5757\u533a\u57df\u65f6\u4f1a\u8bbf\u95ee\u540c\u4e00\u5757\u7f13\u5b58\u6570\u636e\u5757\uff08\u4e5f\u5c31\u662f\u7f13\u5b58\u6570\u636e\u5757\u662f\u5171\u4eab\u7684\uff09\uff0c\u6b64\u5916\uff0c\u4e00\u4e2a\u78c1\u76d8\u7f13\u5b58\u672c\u8eab\u6bd4\u8f83\u5927\uff0c\u4e3a\u6bcf\u4e2aCPU\u6838\u90fd\u5206\u914d\u4e00\u4e2a\u78c1\u76d8\u7f13\u5b58\u663e\u7136\u4f1a\u9020\u6210\u7a7a\u95f4\u6d6a\u8d39\u3002 3.2.1 \u5173\u4e8e\u6d4b\u8bc4\u7a0b\u5e8fbcachetest \u00b6 \u6d4b\u8bc4\u7a0b\u5e8fbcachetest\uff08\u89c1user/bcachetest.c\uff09\u901a\u8fc7\u521b\u5efa\u591a\u4e2a\u8fdb\u7a0b\u91cd\u590d\u53bb\u8bfb\u53d6\u4e0d\u540c\u7684\u6587\u4ef6\uff0c\u4ece\u800c\u9020\u6210bcache.lock\u9501\u4e89\u7528\u3002 \u6d4b\u8bd5\u65b9\u5f0f\u5982\u4e0b\uff1a \u5b9e\u9a8c\u524d\uff08\u5373\u672a\u4fee\u6539\u524d\uff09\uff0c\u6d4b\u8bc4\u7a0b\u5e8fbcachetest\u7684\u8f93\u51fa\u5982\u4e0b\uff1a \u53ef\u4ee5\u770b\u5230\uff0cbcache\u7684 fetch-and-add \u503c\u975e\u5e38\u5927\uff0c\u8bf4\u660e\u78c1\u76d8\u7f13\u5b58\u9501\u7684\u4e89\u7528\u975e\u5e38\u4e25\u91cd\u3002 \u4fee\u6539buffer cache\u7684\u8bbe\u8ba1\u540e\uff0c\u6240\u6709\u9501\u7684fetch-and-add\u7684\u6570\u76ee\u5e94\u5f53\u63a5\u8fd1\u4e8e0\u3002 3.2.2 \u5177\u4f53\u8981\u6c42 \u00b6 1) \u7406\u60f3\u72b6\u6001\u4e0b\uff0c bcachetest \u4e2d\u6570\u636e\u5757\u7f13\u5b58\u76f8\u5173\u7684\u6240\u6709\u9501 fetch-and-add \u7684\u603b\u548c\u5e94\u8be5\u4e3a0\uff0c\u4f46\u672c\u5b9e\u9a8c\u4e2d\u603b\u548c tot \u4e0d\u8d85\u8fc7500\u5373\u53ef\uff1b 2) \u8bf7\u4fee\u6539 bget() \u548c brelse() \uff0c\u4f7f\u5f97\u7f13\u5b58\u533a\u5e76\u53d1\u7684\u67e5\u8be2\u548c\u91ca\u653e\u4e0d\u5bb9\u6613\u53d1\u751f\u9501\u4e89\u7528\uff0c\u6bd4\u5982\uff0c\u4e0d\u662f\u6240\u6709\u6d41\u7a0b\u90fd\u5f97\u7b49bcache.lock\uff1b 3) \u540c\u6837\u8981\u6c42 usertests \u4e2d\u7684\u7528\u4f8b\u5168\u90e8\u901a\u8fc7\uff0c\u6700\u540e\u7684\u8f93\u51fa\u5982\u4e0b\uff08\u5177\u4f53\u6570\u636e\u6709\u6240\u51fa\u5165\uff09\uff1a 3.3 \u6d4b\u8bd5 \u00b6 \u5f53\u5b8c\u6210\u4e0a\u8ff0\u7684\u4e24\u4e2a\u5b9e\u9a8c\u540e\uff0c\u5728\u547d\u4ee4\u884c\u8f93\u5165 make grade \u8fdb\u884c\u6700\u7ec8\u6d4b\u8bd5\u3002","title":"\u5b9e\u9a8c\u6982\u8ff0"},{"location":"lab3/part1/#_1","text":"\u6e29\uff08\u5b88\uff09\u99a8\uff08\u4f4f\uff09\u63d0\uff08\u7ea2\uff09\u793a\uff08\u7ebf\uff09 \u672c\u8bfe\u7a0b\u5b9e\u9a8c\u5df2\u5f15\u5165\u4ee3\u7801\u81ea\u52a8\u67e5\u91cd\u7cfb\u7edf\uff0c\u8bf7\u540c\u5b66\u4eec\u4fdd\u6301 \u5b66\u672f\u8bda\u4fe1 \uff01 \u5173\u4e8e\u7b2c\u4e8c\u6b21\u5b9e\u9a8c\u8bfe\u8003\u6838 \u6211\u4eec\u5c06\u5728\u7b2c\u56db\u6b21\u5b9e\u9a8c\u8bfe\u8fdb\u884c\u7b2c\u4e8c\u6b21\u5b9e\u9a8c\u73b0\u573a\u9a8c\u6536\uff1a \u9a8c\u6536\u5185\u5bb9 \uff1a\u524d\u4e09\u6b21\u5b9e\u9a8c Lab1\uff1aXV6\u4e0eUnix\u5b9e\u7528\u7a0b\u5e8f Lab2\uff1a\u7cfb\u7edf\u8c03\u7528 Lab3\uff1a\u9501\u673a\u5236\u7684\u5e94\u7528 \u9a8c\u6536\u76ee\u7684 \uff1a\u8003\u5bdf\u540c\u5b66\u4eec\u662f\u5426\u662f\u81ea\u5df1\u5b8c\u6210\u7684\u5b9e\u9a8c\u4ee3\u7801\uff0c\u800c\u4e0d\u662f\u201c\u590d\u5236\u62f7\u8d1d\u201d\u3002 \u9a8c\u6536\u5f62\u5f0f \uff1a\u52a9\u6559\u4e0e\u540c\u5b66\u4eec\u8fdb\u884c\u4e00\u5bf9\u4e00\u95ee\u7b54 \u8bf7\u540c\u5b66\u4eec\u8ba4\u771f\u5bf9\u5f85\uff01 \u8bfe\u7a0b\u590d\u4e60\u548c\u9884\u4e60\u8981\u6c42 \u672c\u8282\u5b9e\u9a8c\u4e0e\u7406\u8bba\u8bfe\u7684 \u201c\u591a\u7ebf\u7a0b\u201d \u3001 \u201c\u4fe1\u53f7\u91cf\u201d \u548c \u201c\u6b7b\u9501\u201d \u8fd9\u4e09\u7ae0\u8bfe\u7a0b\u5185\u5bb9\u76f8\u5173\uff0c\u8bf7\u540c\u5b66\u4eec\u590d\u4e60\u8fd9\u4e09\u7ae0\u8bfe\u7a0b\u5185\u5bb9\u3002 \u5728\u505a\u5b9e\u9a8c\u4e4b\u524d\uff0c\u8bf7\u540c\u5b66\u4eec\u9605\u8bfb xv6\u624b\u518c \u7684\u4ee5\u4e0b\u7ae0\u8282\u53ca\u76f8\u5173\u6e90\u4ee3\u7801\uff1a [1] xv6 book, Chapter 6 Locking (\u9501) [2] xv6 book, 3.5 Code: Physical memory allocator\uff08\u7269\u7406\u5185\u5b58\u5206\u914d\u5668\uff09 [3] xv6 book, Chapter 8 File system\uff1a8.1 Overview ~ 8.3 Code: Buffer cache\uff08\u78c1\u76d8\u7f13\u5b58\uff09 \u5b9e\u9a8c\u80cc\u666f \u9501\u8d77\u5230\u4e86\u4fdd\u62a4\u4f5c\u7528\uff0c\u8ba9\u4e00\u4e9b\u5173\u952e\u7684\u6570\u636e\u7ed3\u6784\u5728\u5e76\u884c\u73af\u5883\u4e0b\u4ecd\u80fd\u4fdd\u6301\u4e00\u81f4\u6027\u3002 \u5728\u8fd9\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4e3axv6\u5185\u5b58\u5206\u914d\u5668\u548c\u78c1\u76d8\u7f13\u5b58\uff08buffer cache\uff09\u91cd\u65b0\u8bbe\u8ba1\u4ee3\u7801\u4ee5\u63d0\u9ad8\u5e76\u884c\u6027\u3002\u8fd9\u4e24\u4e2a\u5b9e\u9a8c\u5206\u522b\u7528\u5230\u4e86\u4e24\u79cd \u4e0d\u540c \u7684\u8bbe\u8ba1\u65b9\u6cd5\uff0c\u6765\u9002\u7528\u81ea\u8eab\u7684\u7ed3\u6784\uff0c\u5927\u5927\u51cf\u5c11\u9501\u4e89\u7528\uff08\u5728\u4fdd\u8bc1\u529f\u80fd\u6b63\u786e\u7684\u524d\u63d0\u4e0b\uff09\u3002","title":"\u5b9e\u9a8c\u6982\u8ff0"},{"location":"lab3/part1/#1","text":"\u4e86\u89e3Lock\u7684\u5b9e\u73b0\u539f\u7406\uff0c\u7406\u89e3CPU\u4e3aLock\u7684\u5b9e\u73b0\u63d0\u4f9b\u7684\u652f\u6301\u3002 \u7406\u89e3xv6\u7684\u5185\u5b58\u5206\u914d\u5668kalloc\u4ee5\u53ca\u78c1\u76d8\u7f13\u5b58buffer cache\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u638c\u63e1Lock\u5728xv6\u4e2d\u5185\u5b58\u5206\u914d\u5668/\u78c1\u76d8\u7f13\u5b58\u4e2d\u7684\u4f5c\u7528\u3002 \u638c\u63e1\u9501\u7ade\u4e89\u5bf9\u7a0b\u5e8f\u5e76\u884c\u6027\u7684\u5f71\u54cd\u3002 \u5b66\u4e60\u51cf\u5c11\u9501\u7ade\u4e89\u7684\u65b9\u6cd5\u3002","title":"1.  \u5b9e\u9a8c\u76ee\u7684"},{"location":"lab3/part1/#2","text":"\u672c\u5b9e\u9a8c\u4e3a4\u5b66\u65f6\u3002","title":"2.  \u5b9e\u9a8c\u5b66\u65f6"},{"location":"lab3/part1/#3","text":"\u8bf7\u5148\u540c\u6b65\u4e0a\u6e38\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5e76\u6ce8\u610f\u5207\u6362\u5230lock\u5206\u652f\u8fdb\u884c\u8bd5\u9a8c \u672c\u6b21\u5b9e\u9a8c\u57fa\u4e8e lock \u5206\u652f\uff0c\u8bf7\u540c\u5b66\u4eec\u6ce8\u610f\u5207\u6362\u3002 Step 1. \u9996\u5148\uff0c\u4fdd\u5b58\u5b9e\u9a8c\u4e8c\u7684\u4ee3\u7801\uff0c\u8bf7\u53c2\u8003\u5b9e\u9a8c\u5b9e\u7528\u5de5\u5177\u7684 3.3.1 \u4f7f\u7528\u547d\u4ee4\u884c\u5b8c\u6210\u64cd\u4f5c \u6216\u8005 3.3.2 \u4f7f\u7528VS Code\u5185\u5efa\u7684\u56fe\u5f62\u5316\u754c\u9762\u5b8c\u6210\u64cd\u4f5c \u8fd9\u4e24\u5c0f\u8282\uff0c\u5b8c\u6210commit\u64cd\u4f5c\u3002\u6216\u8005\uff0c \u5982\u679c\u4f60\u5e0c\u671b\u76f4\u63a5\u653e\u5f03\u6389\u4e0a\u4e00\u6b21commit\u540e\u7684\u6240\u6709\u66f4\u6539 \uff0c\u90a3\u4e48\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528-f\u9009\u9879\u5f3a\u5236\u5207\u6362\u5206\u652f\uff0c\u4f8b\u5982 git checkout -f lock \u3002 Step 2. \u5207\u6362\u7684\u65b9\u6cd5\u53ef\u4ee5\u53c2\u8003\u5b9e\u9a8c -> \u5b9e\u9a8c\u5b9e\u7528\u5de5\u5177 -> 3.1\u540c\u6b65\u4e0a\u6e38\u4ed3\u5e93 ~ 3.3.3 \u5408\u5e76\u51b2\u7a81\u66f4\u6539 \u3002","title":"3.  \u5b9e\u9a8c\u5185\u5bb9\u53ca\u8981\u6c42"},{"location":"lab3/part1/#31-memory-allocator","text":"\u4fee\u6539\u5185\u5b58\u5206\u914d\u5668\uff08\u4e3b\u8981\u4fee\u6539kernel/kalloc.c\uff09 \uff0c\u4f7f\u6bcf\u4e2aCPU\u6838\u4f7f\u7528\u72ec\u7acb\u7684\u5185\u5b58\u94fe\u8868\uff0c\u800c\u4e0d\u662f\u73b0\u5728\u7684\u5171\u4eab\u94fe\u8868\u3002 XV6\u7684\u5185\u5b58\u5206\u914d\u5668\u53ea\u6709\u4e00\u4e2a\u5185\u5b58\u94fe\u8868\u4f9b\u591a\u4e2aCPU\u6838\u4f7f\u7528\u3002\u5728\u4f7f\u7528 kalloc() \u83b7\u53d6\u5185\u5b58\u65f6\uff0c\u7531\u4e8e\u6dfb\u52a0\u4e86\u5185\u5b58\u9501 kmem.lock \uff0c\u5176\u4ed6CPU\u5982\u679c\u8981\u5207\u6362\u8fdb\u884c\u5185\u5b58\u7533\u8bf7\u5fc5\u987b\u7b49\u5f85\u5f53\u524d\u8fdb\u7a0b\u91ca\u653e\u5185\u5b58\u9501\u3002\u8981\u6d88\u9664\u9501\u4e89\u7528\u7684\u60c5\u51b5\uff0c\u9700\u8981\u91cd\u65b0\u8bbe\u8ba1\u5185\u5b58\u94fe\u8868\u7ba1\u7406\u673a\u5236\u4ee5\u907f\u514d\u5355\u4e2a\u9501\u548c\u5355\u4e2a\u94fe\u8868\u3002\u5b9e\u9a8c\u57fa\u672c\u4efb\u52a1\u662f\u8ba9\u6bcf\u4e2aCPU\u62e5\u6709\u81ea\u5df1\u7684\u5185\u5b58\u94fe\u8868\uff0c\u6bcf\u4e2a\u94fe\u8868\u90fd\u6709\u81ea\u5df1\u7684\u9501\uff0c\u540c\u65f6\uff0c\u5f53\u4e00\u4e2aCPU\u5185\u5b58\u94fe\u8868\u4e0d\u8db3\u65f6\uff0c\u8fd8\u53ef\u4ee5\u4ece\u5176\u4ed6\u94fe\u8868 \u7a83\u53d6 \u5185\u5b58\u5757\uff0c\u8fd9\u6837\uff0c\u5c31\u4e0d\u4f1a\u8ba9\u6240\u6709\u7684CPU\u4e89\u62a2\u4e00\u4e2a\u7a7a\u95f2\u533a\u57df\uff08\u7a83\u53d6\u53ef\u80fd\u4f1a\u5f15\u53d1\u9501\u4e89\u7528\uff0c\u4f46\u8fd9\u4e5f\u662f\u4e0d\u53ef\u907f\u514d\u7684\u60c5\u51b5\uff09\u3002 \u600e\u4e48\u67e5\u770bXV6\u5f00\u542f\u4e86\u591a\u5c11\u4e2aCPU\u6838\uff1f \u5728\u8f93\u5165make qemu\u65f6\uff0c\u9ed8\u8ba4\u4f1a\u542f\u52a83\u4e2aCPU\u6838\uff0c\u5177\u4f53\u53ef\u4ee5\u67e5\u770bMakefile\u6587\u4ef6\uff1a 264 ifndef CPUS 265 CPUS : = 3 266 endif \u5982\u679c\u8981\u5f00\u542f\u5355\u4e2aCPU\uff0c\u4f7f\u7528\u547d\u4ee4 make CPUS=1 qemu \u91cd\u65b0\u7f16\u8bd1\u5373\u53ef\u3002\u5728C\u4ee3\u7801\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528kernel/param.h\u4e2d\u7684NCPU\u5b8f\u6765\u67e5\u770bCPU\u7684\u6570\u76ee\uff08maximum number of CPUs\uff09\u3002","title":"3.1 \u4efb\u52a1\u4e00\uff1a\u5185\u5b58\u5206\u914d\u5668\uff08Memory allocator\uff09"},{"location":"lab3/part1/#311-kalloctest","text":"\u6d4b\u8bc4\u7a0b\u5e8f kalloctest \uff08\u89c1user/kalloctest.c\uff09\u6709\u4e24\u4e2atest\uff0c\u5206\u522b\u662ftest1\u548ctest2\u3002 1) \u5728test1\u4e2dfork\u51fa\u591a\u4e2a\u8fdb\u7a0b\uff0c\u5b83\u4eec\u5e76\u53d1\u8fd0\u884c\u4e8e\u4e0d\u540cCPU\u6838\u5fc3\uff0c\u7528 sbrk() \u8fdb\u884c\u9891\u7e41\u83b7\u53d6\u7a7a\u95f2\u5185\u5b58\uff08\u8c03\u7528 kalloc() \u5b9e\u73b0\uff09\uff0c\u7136\u540e\u53c8\u91ca\u653e\uff08\u8c03\u7528 kfree() \u5b9e\u73b0\uff09\u3002\u5728\u83b7\u53d6\u5185\u5b58\u7684\u65f6\u5019\u4e0d\u540cCPU\u6838\u5fc3\u53ef\u80fd\u4f1a\u4e89\u62a2\u9501\u3002 sbrk() \u51fd\u6570\u529f\u80fd\u8bf4\u660e sbrk()\u662fxv6\u63d0\u4f9b\u7684\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\uff0c\u5176\u5185\u6838\u6587\u4ef6\u4f4d\u7f6e\u5728kernel/sysproc.c\u3002\u4f5c\u7528\uff1a\u4e3a\u8fdb\u7a0b\u5206\u914d\u6216\u56de\u6536\u5185\u5b58\u3002\u5b83\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u4ee3\u8868\u8981\u5206\u914d\u7684\u5b57\u8282\u6570\u3002\u5b83\u8fd4\u56de\u7684\u662f\u65b0\u5206\u914d\u5185\u5b58\u7684\u5730\u5740\u3002 \u8fd9\u4e2a\u7cfb\u7edf\u8c03\u7528\u662f\u901a\u8fc7 growproc \u6765\u5b9e\u73b0\u7684\u3002\u5982\u679c\u7ed9\u7684\u53c2\u6570\u662f\u6b63\u6570\uff0c growproc \u4f7f\u7528 uvmalloc \u6765\u5206\u914d\u5185\u5b58\uff1b\u5982\u679c\u7ed9\u7684\u53c2\u6570\u662f\u8d1f\u6570\uff0c\u4f7f\u7528 uvmdealloc \u6765\u91ca\u653e\u5185\u5b58\u3002 uvmalloc \u9996\u5148\u4f7f\u7528 kalloc \u6765\u5206\u914d\u7269\u7406\u5185\u5b58\uff0c\u7136\u540e\u518d\u7528 mappages \u628aPTE\u52a0\u5230\u7528\u6237\u7684\u9875\u8868\u91cc\u3002 uvmdealloc \u8c03\u7528 uvmunmap \u5b9e\u73b0\u5176\u529f\u80fd\uff0c uvmunmap \u9996\u5148\u7528 walk \u6765\u627e\u5230\u5bf9\u5e94\u7684PTE\uff0c\u7136\u540e\u4f7f\u7528 kfree \u6765\u91ca\u653e\u76f8\u5e94\u7684\u7269\u7406\u5185\u5b58\u3002 2) \u5728test2\u4e2d\u6d4b\u8bd5\u6240\u6709\u7a7a\u95f2\u5185\u5b58\u7684\u83b7\u53d6\u548c\u91ca\u653e\uff0c\u7531\u4e8etest2\u672a\u4f7f\u7528fork\uff0c\u53ea\u5728\u5355\u8fdb\u7a0b\u4e2d\u6d4b\u8bd5\u3002 \u6d4b\u8bc4\u7a0b\u5e8fkalloctest\u6700\u7ec8\u4f1a\u6253\u5370\u51fa fetch-and-add \u7684\u6570\u76ee\uff0c\u4e5f\u5c31\u662f \u6ca1\u6709\u6210\u529f\u83b7\u53d6 \u5230kmem\u9501\u7684\u6b21\u6570\uff0c\u8fd9\u79cd\u7c97\u7565\u6d4b\u91cf\u9501\u4e89\u7528\u7684\u65b9\u5f0f\uff08\u5b9e\u9a8c\u524d\uff0c\u5373\u672a\u4fee\u6539\u524d\uff09\u5982\u4e0b\uff1a $ kalloctest start test1 test1 results: --- lock kmem/bcache stats lock: kmem: #fetch-and-add 46375 #acquire() 433016 lock: bcache: #fetch-and-add 0 #acquire() 1242 --- top 5 contended locks: lock: kmem: #fetch-and-add 46375 #acquire() 433016 lock: proc: #fetch-and-add 21429 #acquire() 170067 lock: virtio_disk: #fetch-and-add 13306 #acquire() 114 lock: proc: #fetch-and-add 6023 #acquire() 170143 lock: proc: #fetch-and-add 3661 #acquire() 170147 tot= 46375 test1 FAIL start test2 total free number of pages: 32499 (out of 32768) ..... test2 OK \u5176\u4e2d\uff0c\"kmem\"\u3001\"bcache\"\u3001\"proc\" \u7b49\u6307\u793a\u4e86\u9501\u7684\u7c7b\u578b\uff0cacquire()\u8bb0\u5f55\u4e86\u6bcf\u79cd\u9501 \u88ab\u8bf7\u6c42 \u7684\u6b21\u6570\uff0cfetch-and-add\u5c31\u662f \u8fdb\u7a0b\u6ca1\u6709\u6210\u529f\u83b7\u53d6\u5230\u6b64\u9501 \u7684\u6b21\u6570\u3002\u4f8b\u5982\uff0c lock: kmem: #fetch-and-add 46375 #acquire() 433016 \u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\uff0ckmem.lock\u8bf7\u6c42\u4e86433016\u6b21\uff0c\u4ec5\u6210\u529f\u4e86433016 - 46375 = 386641\u6b21\uff0c\u8fd9\u5c31\u662f\u53d1\u751f\u4e86\u9501\u4e89\u7528\u4e86\uff08lock contention\uff09\u3002\u8fd9\u4e9b\u8ba1\u6570\u6765\u81ea\u4e8e\u5728kalloctest\u8c03\u7528\u7684ntas()\uff0c\u5b83\u901a\u8fc7\u6267\u884cstatistics()\u51fd\u6570\uff0c\u6253\u5f00\"statistics\"\u8bbe\u5907\u6587\u4ef6\uff0c\u83b7\u53d6\u5185\u6838\u6253\u5370\u7684\u90a3\u4e9b\u9488\u5bf9kmem\u548cbcache\u9501( \u672c\u9a8c\u7684\u91cd\u70b9 )\u53ca5\u4e2a\u7ade\u4e89\u6700\u6fc0\u70c8\u7684\u9501\u7684\u8ba1\u6570\uff08\u89c1kernel/spinlock.c\u4e2d\u7684 statslock() \uff09\u3002 \u5982\u679c\u5b58\u5728\u9501\u4e89\u7528\uff0cfetch-and-add\u7684\u6570\u91cf\u5c06\u4f1a\u5f88\u9ad8\uff0c\u56e0\u4e3a\u5728acquire()\u83b7\u5f97\u9501\u4e4b\u524d\u8981\u8fdb\u884c\u8bb8\u591a\u5faa\u73af\u8fed\u4ee3\uff0c\"statistics\"\u8bbe\u5907\u6587\u4ef6\u4f1a\u8fd4\u56dekmem\u548cbcache\u9501\u7684#test-and-set\u7684\u603b\u548c\uff08\u4e5f\u5c31\u662f tot \uff09\u3002","title":"3.1.1 \u5173\u4e8e\u6d4b\u8bc4\u7a0b\u5e8fkalloctest"},{"location":"lab3/part1/#312","text":"1) \u672c\u5b9e\u9a8c\u5fc5\u987b\u4f7f\u7528 \u4e13\u7528\u7a7a\u8f7d\u591a\u6838 \u7684\u73af\u5883\uff0c\u5426\u5219\u6570\u636e\u5c06\u6ca1\u6709\u610f\u4e49\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u6216\u4f60\u7684\u7b14\u8bb0\u672c\u7535\u8111\u3002 2) \u8bf7\u4f7f\u7528 initlock() \u521d\u59cb\u5316\u9501\uff0c\u5e76\u8981\u6c42\u9501\u540d\u5b57\u4ee5 kmem \u5f00\u5934\uff1b 3) \u8fd0\u884c kalloctest \u67e5\u770b\u5b9e\u73b0\u7684\u4ee3\u7801\u662f\u5426\u51cf\u5c11\u4e86\u9501\u4e89\u7528\uff08 tot \u6ca1\u6709\u83b7\u53d6\u5230\u6b64\u9501\u7684\u6b21\u6570\u5c0f\u4e8e10\u5219\u4e3a\u901a\u8fc7\uff09\uff1b 4) \u8fd0\u884c usertests sbrkmuch \u4ee5\u6d4b\u8bd5\u4fee\u6539\u4ee3\u7801\u540e\u7cfb\u7edf\u662f\u5426\u4ecd\u53ef\u4ee5\u5206\u914d\u6240\u6709\u7684\u5185\u5b58\uff1b 5) \u8fd0\u884c usertests \uff0c\u786e\u4fdd\u5176\u80fd\u80fd\u591f\u5168\u90e8\u901a\u8fc7\uff1b 6) kalloctest\u548cusertests\u7684\u8f93\u51fa\u5982\u4e0b\u56fe\uff08\u9501\u4e89\u7528\u7684\u6b21\u6570\u5927\u5927\u51cf\u5c11\uff09\uff0c\u5177\u4f53\u7684\u6570\u636e\u4f1a\u6709\u6240\u5dee\u522b\uff1a","title":"3.1.2 \u5177\u4f53\u8981\u6c42"},{"location":"lab3/part1/#32-buffer-cache","text":"\u5728\u8bbf\u95ee\u6587\u4ef6\u6570\u636e\u7684\u65f6\u5019\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5c06\u6587\u4ef6\u7684\u6570\u636e\u653e\u7f6e\u5728\u78c1\u76d8\u7f13\u5b58\u4e2d\u3002\u78c1\u76d8\u7f13\u5b58\u662f\u4e0d\u540c\u8fdb\u7a0b\u4e4b\u95f4\u7684\u5171\u4eab\u8d44\u6e90\uff0c\u56e0\u6b64\u9700\u8981\u901a\u8fc7\u9501\u786e\u4fdd\u4f7f\u7528\u7684\u6b63\u786e\u6027\u3002\u5982\u679c\u6709\u591a\u8fdb\u7a0b\u5bc6\u96c6\u5730\u4f7f\u7528\u6587\u4ef6\u7cfb\u7edf\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u7ade\u4e89\u78c1\u76d8\u7f13\u5b58\u7684 bcache.lock \u9501\u3002 \u76ee\u524d\uff0cxv6\u91c7\u7528\u5355\u4e2a\u9501\u7ba1\u7406\u78c1\u76d8\u7f13\u5b58\uff0c\u6211\u4eec\u9700\u8981 \u4fee\u6539\u78c1\u76d8\u7f13\u5b58\u5757\u5217\u8868\u7684\u7ba1\u7406\u673a\u5236\uff08\u4e3b\u8981\u4fee\u6539kernel/bio.c\uff09 \uff0c\u4f7f\u5f97\u53ef\u7528\u591a\u4e2a\u9501\u7ba1\u7406\u7f13\u5b58\u5757\uff0c\u4ece\u800c\u51cf\u5c11\u7f13\u5b58\u5757\u7ba1\u7406\u7684\u9501\u4e89\u7528\u3002 \u63d0\u793a \u5728\u4efb\u52a1\u4e00\u4e2d\u6211\u4eec\u53ef\u4ee5\u4e3a\u6bcf\u4e2aCPU\u5206\u914d\u5c5e\u4e8e\u81ea\u5df1\u7684\u5185\u5b58\u94fe\u8868\uff0c\u4f46\u5728\u4efb\u52a1\u4e8c\u4e2d\u4e0d\u80fd\u4e3a\u6bcf\u4e2aCPU\u5206\u914d\u5c5e\u4e8e\u81ea\u5df1\u7684\u78c1\u76d8\u7f13\u5b58\u533a\u3002\u4e3b\u8981\u539f\u56e0\u662f\u591a\u4e2a\u8fdb\u7a0b\u95f4\uff08\u6216\u8005\u8bf4\u591a\u4e2aCPU\u95f4\uff09\u8bbf\u95ee\u78c1\u76d8\u540c\u4e00\u5757\u533a\u57df\u65f6\u4f1a\u8bbf\u95ee\u540c\u4e00\u5757\u7f13\u5b58\u6570\u636e\u5757\uff08\u4e5f\u5c31\u662f\u7f13\u5b58\u6570\u636e\u5757\u662f\u5171\u4eab\u7684\uff09\uff0c\u6b64\u5916\uff0c\u4e00\u4e2a\u78c1\u76d8\u7f13\u5b58\u672c\u8eab\u6bd4\u8f83\u5927\uff0c\u4e3a\u6bcf\u4e2aCPU\u6838\u90fd\u5206\u914d\u4e00\u4e2a\u78c1\u76d8\u7f13\u5b58\u663e\u7136\u4f1a\u9020\u6210\u7a7a\u95f4\u6d6a\u8d39\u3002","title":"3.2 \u4efb\u52a1\u4e8c\uff1a\u78c1\u76d8\u7f13\u5b58\uff08Buffer cache\uff09"},{"location":"lab3/part1/#321-bcachetest","text":"\u6d4b\u8bc4\u7a0b\u5e8fbcachetest\uff08\u89c1user/bcachetest.c\uff09\u901a\u8fc7\u521b\u5efa\u591a\u4e2a\u8fdb\u7a0b\u91cd\u590d\u53bb\u8bfb\u53d6\u4e0d\u540c\u7684\u6587\u4ef6\uff0c\u4ece\u800c\u9020\u6210bcache.lock\u9501\u4e89\u7528\u3002 \u6d4b\u8bd5\u65b9\u5f0f\u5982\u4e0b\uff1a \u5b9e\u9a8c\u524d\uff08\u5373\u672a\u4fee\u6539\u524d\uff09\uff0c\u6d4b\u8bc4\u7a0b\u5e8fbcachetest\u7684\u8f93\u51fa\u5982\u4e0b\uff1a \u53ef\u4ee5\u770b\u5230\uff0cbcache\u7684 fetch-and-add \u503c\u975e\u5e38\u5927\uff0c\u8bf4\u660e\u78c1\u76d8\u7f13\u5b58\u9501\u7684\u4e89\u7528\u975e\u5e38\u4e25\u91cd\u3002 \u4fee\u6539buffer cache\u7684\u8bbe\u8ba1\u540e\uff0c\u6240\u6709\u9501\u7684fetch-and-add\u7684\u6570\u76ee\u5e94\u5f53\u63a5\u8fd1\u4e8e0\u3002","title":"3.2.1 \u5173\u4e8e\u6d4b\u8bc4\u7a0b\u5e8fbcachetest"},{"location":"lab3/part1/#322","text":"1) \u7406\u60f3\u72b6\u6001\u4e0b\uff0c bcachetest \u4e2d\u6570\u636e\u5757\u7f13\u5b58\u76f8\u5173\u7684\u6240\u6709\u9501 fetch-and-add \u7684\u603b\u548c\u5e94\u8be5\u4e3a0\uff0c\u4f46\u672c\u5b9e\u9a8c\u4e2d\u603b\u548c tot \u4e0d\u8d85\u8fc7500\u5373\u53ef\uff1b 2) \u8bf7\u4fee\u6539 bget() \u548c brelse() \uff0c\u4f7f\u5f97\u7f13\u5b58\u533a\u5e76\u53d1\u7684\u67e5\u8be2\u548c\u91ca\u653e\u4e0d\u5bb9\u6613\u53d1\u751f\u9501\u4e89\u7528\uff0c\u6bd4\u5982\uff0c\u4e0d\u662f\u6240\u6709\u6d41\u7a0b\u90fd\u5f97\u7b49bcache.lock\uff1b 3) \u540c\u6837\u8981\u6c42 usertests \u4e2d\u7684\u7528\u4f8b\u5168\u90e8\u901a\u8fc7\uff0c\u6700\u540e\u7684\u8f93\u51fa\u5982\u4e0b\uff08\u5177\u4f53\u6570\u636e\u6709\u6240\u51fa\u5165\uff09\uff1a","title":"3.2.2 \u5177\u4f53\u8981\u6c42"},{"location":"lab3/part1/#33","text":"\u5f53\u5b8c\u6210\u4e0a\u8ff0\u7684\u4e24\u4e2a\u5b9e\u9a8c\u540e\uff0c\u5728\u547d\u4ee4\u884c\u8f93\u5165 make grade \u8fdb\u884c\u6700\u7ec8\u6d4b\u8bd5\u3002","title":"3.3 \u6d4b\u8bd5"},{"location":"lab3/part2/","text":"\u5b9e\u9a8c\u539f\u7406 \u00b6 \u5173\u4e8e\u9501\u7684\u4e00\u4e9b\u89e3\u91ca \u9501\u7528\u6765\u4fdd\u8bc1\u6570\u636e\u4e00\u81f4\u6027\u7684\u624b\u6bb5\u5341\u5206\u7b80\u5355\u7c97\u66b4\uff1a\u5f53\u6709\u4eba\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u4e0d\u5141\u8bb8\u5176\u4ed6\u4eba\u64cd\u4f5c\u3002 \u5728\u591a\u6838\u60c5\u51b5\u4e0b\uff0c\u8fd9\u5c31\u4f1a\u5bfc\u81f4\u5f53\u5f88\u591aCPU\u6838\u5fc3\u8981\u64cd\u4f5c\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff08\u5982kalloc\u4e2d\u7684freelist\uff09\u65f6\uff0c\u9700\u8981\u6392\u961f\uff0c\u4e00\u4e2a\u4e2a\u6765\u3002\u4e00\u4e2a\u6838\u5fc3\u5728\u5e72\u6d3b\uff0c\u5176\u4ed6\u7684\u6838\u5fc3\u53ea\u80fd\u88ab\u963b\u585e\u4f4f\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4e86\u5e76\u884c\u6027\u7684\u4e0b\u964d\u3002 \u90a3\u6211\u4eec\u628a\u9501\u5220\u4e86\uff0c\u4e0d\u963b\u585e\uff0c\u5e76\u884c\u6027\u4e0d\u5c31\u4e0a\u53bb\u4e86\u5417\uff1f\u786e\u5b9e\uff0c\u4f46\u8fd9\u6837\u529f\u80fd\u5c31\u4e0d\u80fd\u4fdd\u8bc1\u6b63\u786e\u4e86\u3002\u529f\u80fd\u6b63\u786e\u7684\u91cd\u8981\u6027\u5f80\u5f80\u6bd4\u6027\u80fd\u9ad8\u7684\u91cd\u8981\u6027\u5927\u5f97\u591a\u3002\u56e0\u6b64\u5728\u6210\u719f\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u4e00\u822c\u90fd\u4f1a\u91c7\u53d6\u9501\u7684\u673a\u5236\uff0c\u540c\u65f6\u901a\u8fc7\u51cf\u5c11\u9501\u4e89\u7528\u7684\u65b9\u6cd5\u4f18\u5316\u6027\u80fd\u3002\u8fd9\u662f\u672c\u5b9e\u9a8c\u7684 \u6839\u672c\u76ee\u7684 \uff0c\u4e4b\u540e\u7684\u7ae0\u8282\u4e3b\u8981\u8ba8\u8bba\u4f7f\u7528\u9501\u7684\u4e00\u4e9b\u90e8\u4ef6\uff0c\u6211\u4eec\u5728\u8fd9\u4e9b\u573a\u666f\u4e0b\u6765\u8fdb\u884c\u9501\u7684\u4f18\u5316\u3002 1. \u5185\u5b58\u5206\u914d\u5668\uff08Memory Allocator\uff09 \u00b6 \u6ce8\u610f \u672c\u90e8\u5206\uff0c\u4f60\u5e94\u8be5\u8981\u77e5\u9053\uff1a \u4ec0\u4e48\u662f\u5185\u5b58\u5206\u914d\u5668\uff1f \u5185\u5b58\u5206\u914d\u5668\u7684\u6570\u636e\u7ed3\u6784\u662f\u4ec0\u4e48\uff1f \u5185\u5b58\u5206\u914d\u5668\u7684\u6240\u6709\u64cd\u4f5c\u53ca\u5176\u5bf9\u6570\u636e\u7ed3\u6784\u7684\u6539\u53d8\uff1f \u6211\u4eec\u5e94\u8be5\u5982\u4f55\u4fee\u6539\u5185\u5b58\u5206\u914d\u5668\u4ee5\u8fbe\u5230\u5b9e\u9a8c\u76ee\u6807\uff1f 1.1 \u7b80\u4ecb \u00b6 \u5728xv6\u4e2d\uff0c\u8bbe\u7f6e\u4e86\u603b\u91cf\u4e3a128MB\u7684\u7269\u7406\u5185\u5b58\u7a7a\u95f4\uff0c\u89c1Makefile\u4e2d\u7684\u7f16\u8bd1\u8fd0\u884c\u9009\u9879\uff1a QEMUOPTS = -machine virt -bios none -kernel $K /kernel -m 128M -smp $( CPUS ) -nographic \u5728\u5185\u6838\u4ee3\u7801\u4e2d\uff0c\u4e5f\u7ed9\u51fa\u4e86\u5185\u5b58\u5730\u5740\u5b9a\u4e49\uff0c\u5728kernel/memlayout.h\u3002 // the kernel expects there to be RAM // for use by the kernel and user pages // from physical address 0x80000000 to PHYSTOP. #define KERNBASE 0x80000000L #define PHYSTOP (KERNBASE + 128*1024*1024) \u5728xv6 book 3.2\u5c0f\u8282\uff0c\u7ed9\u51fa\u4e86\u7269\u7406\u5730\u5740\u548c\u865a\u62df\u5730\u5740\u7684\u5206\u5e03\u53ca\u6620\u5c04\u5173\u7cfb\uff08\u89c1\u4e0b\u56fe\uff09\u3002\u4e0b\u56fe\u5de6\u8fb9\u662f\u5185\u6838\u7684\u865a\u62df\u5730\u5740\uff0c\u53f3\u8fb9\u4e0a\u534a\u90e8\u5206\u662f\u7269\u7406\u5185\u5b58\uff08DRAM\uff09\uff0c\u53f3\u8fb9\u4e0b\u534a\u90e8\u5206\u662fI/O\u8bbe\u5907\u3002\u672c\u6b21\u5b9e\u9a8c\u4e3b\u8981\u5173\u6ce8\u56fe\u4e2d\u7684\u53f3\u8fb9\u4e0a\u534a\u90e8\u5206\uff08\u6211\u4eec\u4f1a\u5728\u4e0b\u4e00\u4e2a\u5b9e\u9a8c\u4e2d\u518d\u6b21\u4ecb\u7ecd\u5de6\u8fb9\u90e8\u5206\u7684\u865a\u62df\u5730\u5740\uff1a-)\u3002\u5f53\u64cd\u4f5c\u7cfb\u7edf\u542f\u52a8\u65f6\uff0c\u4f1a\u4ece\u5730\u57400x80000000\u5f00\u59cb\u8fd0\u884c\uff0c\u8fd9\u4e2a\u5730\u5740\u5176\u5b9e\u662f\u7531\u786c\u4ef6\u8bbe\u8ba1\u8005\u51b3\u5b9a\u7684\u3002\u5728xv6\u5185\u6838\u521a\u542f\u52a8\u65f6\uff0c\u4ecekernel\u7ed3\u675f\u5730\u5740\uff08end\uff09\u4e00\u76f4\u5230PHYSTOP\u7684\u7a7a\u95f4\u90fd\u662f\u7a7a\u95f2\u7684\u3002\u5b9e\u9645\u4e0a\uff0c\u5185\u6838\u4ee3\u7801\u6bb5\uff08kernel text\uff09\u548c\u6570\u636e\u6bb5\uff08kernel data\uff09\u4f1a\u5360\u7528\u4e00\u90e8\u5206\u7a7a\u95f4\uff0c\u5bfc\u81f4\u5269\u4f59\u7684\u7a7a\u95f2\u7a7a\u95f4\u6bd4128MB\u8981\u5c0f\u3002 \u62d3\u5c55\u9605\u8bfb trampoline \uff1a\u7528\u6237\u6001-\u5185\u6838\u6001\u8df3\u677f kstack \uff1a\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u5185\u6838\u6808\u7a7a\u95f4 Guard page \uff1a\u540c\u65f6\u5728\u5185\u6838\u7a7a\u95f4\u548c\u7528\u6237\u7a7a\u95f4\u7528\u6765\u4fdd\u62a4Stack\u3002\u5982\u679ckernel stack\u8017\u5c3d\u4e86\uff0c\u5b83\u4f1a\u6ea2\u51fa\u5230Guard page\uff0c\u4f46\u662f\u56e0\u4e3aGuard page\u7684PTE\u4e2dValid\u6807\u5fd7\u4f4d\u672a\u8bbe\u7f6e\uff0c\u4f1a\u5bfc\u81f4\u7acb\u5373\u89e6\u53d1page fault\uff0c\u8fd9\u6837\u7684\u7ed3\u679c\u597d\u8fc7\u5185\u5b58\u8d8a\u754c\u4e4b\u540e\u9020\u6210\u7684\u6570\u636e\u6df7\u4e71\u3002 free memory \uff1a\u9875\u5206\u914d\u5668\u7ba1\u7406\u7684\u5730\u5740\u7a7a\u95f4 kernel data/text \uff1a\u6570\u636e\u6bb5/\u4ee3\u7801\u6bb5 KERNBASE \uff1a\u5185\u6838\u6001\u57fa\u5740 VIRTIO disk \uff1a\u78c1\u76d8IO\u64cd\u4f5c\u5730\u5740 UART0 \uff1a\u4e32\u53e3IO\u64cd\u4f5c\u5730\u5740 PLIC \uff1a\u5e73\u53f0\u7ea7\u4e2d\u65ad\u63a7\u5236\u5668\u5730\u5740 CLINT \uff1acore-local\u4e2d\u65ad\u63a7\u5236\u5668\u5730\u5740 boot ROM \uff1a\u7528\u4e8e\u542f\u52a8\u64cd\u4f5c\u7cfb\u7edf\u3002\u5f53\u4e3b\u677f\u4e0a\u7535\u540e\uff0c\u8fd0\u884c\u7684\u662f\u5b58\u50a8\u5728boot ROM\u4e2d\u7684\u4ee3\u7801\uff0c\u5f53boot\u5b8c\u6210\u4e4b\u540e\uff0c\u4f1a\u8df3\u8f6c\u5230\u5730\u57400x80000000\u3002 xv6\u5185\u5b58\u5206\u914d\u5668\u5bf9\u4e0a\u5c42\u63d0\u4f9bkalloc()\u548ckfree()\u63a5\u53e3\u6765\u7ba1\u7406\u8fd9\u6bb5\u5269\u4f59\u7684\u7a7a\u95f2\u7269\u7406\u5185\u5b58\u3002\u5728\u9700\u8981\u4f7f\u7528\u65b0\u5185\u5b58\u7a7a\u95f4\u7684\u65f6\u5019\u8c03\u7528kalloc()\uff0c\u5728\u9700\u8981\u91ca\u653e\u5185\u5b58\u7a7a\u95f4\u7684\u65f6\u5019\u8c03\u7528kfree()\u3002 \u7269\u7406\u5185\u5b58\u5206\u914d\u5668\uff08allocator\uff09\u5b9a\u4e49\u5728kernel/kalloc.c\u3002 struct run { struct run * next ; }; struct { struct spinlock lock ; struct run * freelist ; } kmem ; \u5206\u914d\u5668\u7684\u6838\u5fc3\u6570\u636e\u7ed3\u6784\u662f\u7531\u7a7a\u95f2\u7269\u7406\u9875\u7ec4\u6210\u7684\u94fe\u8868 freelist \uff0c\u8fd9\u4e2a\u7a7a\u95f2\u9875\u94fe\u8868\u5c06\u7269\u7406\u5185\u5b58\u5212\u5206\u62104KB\u5927\u5c0f\u7684\u9875\u5e27\u6765\u7ba1\u7406\uff0c\u5e76\u4f7f\u7528 \u81ea\u65cb\u9501 \uff08spinlock\uff09\u8fdb\u884c\u4fdd\u62a4\u3002\u6bcf\u4e2a\u7a7a\u95f2\u9875\u5728\u94fe\u8868\u91cc\u90fd\u662f struct run next \u6307\u5411\u4e0b\u4e00\u4e2a\u7a7a\u95f2\u7269\u7406\u9875\u3002 \u8fd9\u53ef\u80fd\u6bd4\u8f83\u96be\u7406\u89e3\uff0c\u6211\u4eec\u4e0d\u59a8\u4ece\u8fd9\u4e2a\u94fe\u8868\u7684\u6784\u5efa\u5f00\u59cb\u4e86\u89e3\u3002\u5728\u7cfb\u7edf\u542f\u52a8\u65f6\uff0c main() \u51fd\u6570\uff08\u89c1kernel/main.c\uff09\u8c03\u7528 kinit() \u6765\u521d\u59cb\u5316\u5206\u914d\u5668\uff0c\u5b83\u901a\u8fc7\u4fdd\u5b58\u6240\u6709\u7a7a\u95f2\u9875\u6765\u521d\u59cb\u5316\u94fe\u8868\u3002kinit()\u8c03\u7528 freerange() \u6765\u628a\u7a7a\u95f2\u5185\u5b58\u9875\u52a0\u5230\u94fe\u8868\u91cc\uff0cfreerange()\u5219\u662f\u901a\u8fc7\u8c03\u7528 kfree() \u628a\u6bcf\u4e2a\u7a7a\u95f2\u9875\uff08\u5730\u5740\u8303\u56f4\u4ecepa_start\u81f3pa_end\uff09\u9010\u4e00\u52a0\u5230\u94fe\u8868\u91cc\u6765\u5b9e\u73b0\u6b64\u529f\u80fd\u7684\u3002kfree() \u51fd\u6570\u7528\u4e8e\u91ca\u653e\u6307\u5b9a\u7684\u7269\u7406\u5185\u5b58\u9875\uff0c\u5c06\u5176\u6dfb\u52a0\u81f3 freelist \u4e2d\uff0c\u53c2\u6570 pa \u4e3a\u9700\u8981\u91ca\u653e\u7684\u7269\u7406\u9875\u9875\u53f7\uff0c\u5373\u7269\u7406\u9875\u7684\u9996\u5730\u5740\uff0c\u5b83\u88ab\u770b\u4f5c\u4e00\u4e2a\u6ca1\u6709\u7c7b\u578b\u7684\u6307\u9488\u3002\u5728kfree()\u4e2d\uff0cpa\u88ab \u5f3a\u5236\u8f6c\u6362 \u4e3arun\u7c7b\u578b\u7684\u6307\u9488\uff0c\u8fdb\u800c\u53ef\u4ee5\u653e\u5165freelist\u4e2d\u3002\u56e0\u4e3a\u7a7a\u95f2\u9875\u91cc\u4ec0\u4e48\u90fd\u6ca1\u6709\uff0c\u6240\u4ee5\u7ed3\u6784\u4f53 run \u7684\u6210\u5458\u53ef\u4ee5\u76f4\u63a5 \u4fdd\u5b58\u5728\u7a7a\u95f2\u9875\u81ea\u8eab\u91cc \u3002 void freerange ( void * pa_start , void * pa_end ) { char * p ; p = ( char * ) PGROUNDUP (( uint64 ) pa_start ); for (; p + PGSIZE <= ( char * ) pa_end ; p += PGSIZE ) kfree ( p ); } void kfree ( void * pa ) { ... r = ( struct run * ) pa ; acquire ( & kmem . lock ); r -> next = kmem . freelist ; kmem . freelist = r ; release ( & kmem . lock ); } 1.2 \u529f\u80fd\u4e0e\u64cd\u4f5c \u00b6 \u5173\u4e8e\u94fe\u8868\u7684\u64cd\u4f5c\u4e3b\u8981\u6709\u4e24\u4e2a\uff1a 1\u3001\u91ca\u653e\u5185\u5b58 \u91ca\u653e\u5185\u5b58\u7684\u51fd\u6570\u662f kfree(void *pa) \uff0c\u9996\u5148\u5c06 void *pa \u5f00\u59cb\u7684\u7269\u7406\u9875\u7684\u5185\u5bb9\u5168\u90e8\u7f6e\u4e3a1\uff0c\u8fd9\u662f\u4e3a\u4e86\u8ba9\u4e4b\u524d\u4f7f\u7528\u5b83\u7684\u4ee3\u7801\u4e0d\u80fd\u518d\u8bfb\u53d6\u5230\u6709\u6548\u7684\u5185\u5bb9\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u4ee3\u7801\u80fd\u5c3d\u65e9\u5d29\u6e83\u4ee5\u66b4\u9732\u95ee\u9898\u3002\u7136\u540e\u5c06\u8fd9\u7a7a\u95f2\u9875\u7269\u7406\u5185\u5b58\u52a0\u5230\u94fe\u8868\u5934\u3002 2\u3001\u7533\u8bf7\u5185\u5b58 void* kalloc(void *) \u7528\u6765\u5206\u914d\u5185\u5b58\u7269\u7406\u9875\uff0c\u529f\u80fd\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u79fb\u9664\u5e76\u8fd4\u56de\u7a7a\u95f2\u94fe\u8868\u5934\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5373\u7ed9\u8c03\u7528\u8005\u5206\u914d1\u9875\u7269\u7406\u5185\u5b58\u3002 \u7531\u4e8e\u7269\u7406\u5185\u5b58\u662f\u5728\u591a\u8fdb\u7a0b\u4e4b\u95f4\u5171\u4eab\u7684\uff0c\u6240\u4ee5\u4e0d\u7ba1\u662f\u5206\u914d\u8fd8\u662f\u91ca\u653e\u9875\u9762\uff0c\u6bcf\u6b21\u64cd\u4f5ckmem.freelist\u65f6\u90fd\u9700\u8981\u5148\u7533\u8bf7kmem.lock\uff0c\u6b64\u540e\u518d\u8fdb\u884c\u5185\u5b58\u9875\u9762\u7684\u64cd\u4f5c\u3002 1.3 \u9501\u673a\u5236 \u00b6 kalloc \u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f7f\u7528\u4e86\u9501\uff1f \u67e5\u9605 kalloc.c \u4ee3\u7801\u53ef\u77e5\uff0c kalloc \u53ea\u5728 kalloc() \u548c kfree() \u4e2d\u4f7f\u7528\u4e86\u9501\uff0c\u90a3\u8fd9\u4e24\u4e2a\u7528\u9501\u7684\u60c5\u51b5\u6709\u4ec0\u4e48\u5171\u540c\u4e4b\u5904\u5462\uff1f\u6ca1\u9519\uff0c\u4ed6\u4eec\u90fd\u662f\u628a \u5bf9 freelist \u7684\u64cd\u4f5c \u9501\u4e86\u8d77\u6765\u3002 kfree() \u5728\u5f80 freelist \u91cc\u52a0\u5165\u7a7a\u95f2\u9875\u524d\u9501\u4e86\u4e00\u4e0b\uff0c\u64cd\u4f5c\u5b8c\u4e4b\u540e\u89e3\u9501\u4e86\u3002 kalloc() \u5728\u79fb\u9664 freelist \u7b2c\u4e00\u4e2a\u5143\u7d20\u65f6\u4e5f\u540c\u6837\u52a0\u4e86\u9501\uff0c\u64cd\u4f5c\u5b8c\u6210\u518d\u91ca\u653e\u9501\u3002\u6240\u4ee5\u5bf9\u4e8e\u5185\u5b58\u5206\u914d\u5668\u4e2d\u9700\u8981\u9501\u4fdd\u62a4\u7684\u53ea\u6709\u5bf9 freelist \u7684\u64cd\u4f5c\u3002 1.4 \u4f18\u5316\u65b9\u6cd5\uff08\u91cd\u8981\uff09 \u00b6 \u4fee\u6539\u7a7a\u95f2\u5185\u5b58\u94fe\u8868\u5c31\u662f freelist \uff0c\u73b0\u5728\u6211\u4eec\u8981\u51cf\u5c11\u9501\u7684\u4e89\u62a2\uff0c \u4f7f\u6bcf\u4e2a CPU \u6838\u4f7f\u7528\u72ec\u7acb\u7684\u94fe\u8868 \uff0c\u800c\u4e0d\u662f\u73b0\u5728\u7684\u5171\u4eab\u94fe\u8868\u3002\u8fd9\u6837\u7b49\u5206\uff0c\u5c31\u4e0d\u4f1a\u8ba9\u6240\u6709\u7684 CPU \u4e89\u62a2\u4e00\u4e2a\u7a7a\u95f2\u533a\u57df\u3002 \u6ce8\u610f \uff1a\u6bcf\u4e2a\u7a7a\u95f2\u7269\u7406\u9875\u53ea\u80fd\u5b58\u5728\u4e8e\u4e00\u4e2afreelist\u4e2d\u3002 2. \u78c1\u76d8\u7f13\u5b58\uff08Buffer Cache\uff09 \u00b6 \u6ce8\u610f \u672c\u90e8\u5206\uff0c\u4f60\u5e94\u8be5\u8981\u77e5\u9053\uff1a \u4ec0\u4e48\u662f\u78c1\u76d8\u7f13\u5b58\uff1f \u78c1\u76d8\u7f13\u5b58\u7684\u6570\u636e\u7ed3\u6784\u662f\u4ec0\u4e48\uff08bcache\u548cbuf\uff09\uff1f \u78c1\u76d8\u7f13\u5b58\u7684\u6240\u6709\u64cd\u4f5c\u53ca\u5176\u5bf9\u6570\u636e\u7ed3\u6784\u7684\u6539\u53d8\uff1f \u6211\u4eec\u5e94\u8be5\u5982\u4f55\u4fee\u6539\u78c1\u76d8\u7f13\u5b58\u4ee5\u8fbe\u5230\u5b9e\u9a8c\u76ee\u6807\uff1f 2.1 \u7b80\u4ecb \u00b6 xv6\u7684\u6587\u4ef6\u7cfb\u7edf\u662f\u4ee5\u78c1\u76d8\u6570\u636e\u5757\u4e3a\u5355\u4f4d\u4ece\u78c1\u76d8\u8bfb\u5199\u6570\u636e\u7684\u3002\u7531\u4e8e\u5bf9\u78c1\u76d8\u7684\u8bfb\u53d6\u975e\u5e38\u6162\uff0c\u800c\u5185\u5b58\u7684\u901f\u5ea6\u8981\u5feb\u5f97\u591a\uff0c\u56e0\u6b64\u5c06\u6700\u8fd1\u7ecf\u5e38\u8bbf\u95ee\u7684\u78c1\u76d8\u5757\u7f13\u5b58\u5728\u5185\u5b58\u91cc\u53ef\u4ee5\u5927\u5927\u63d0\u5347\u6027\u80fd\uff08\u6b64\u65f6\u5185\u5b58\u8d77\u5230cache\u7684\u4f5c\u7528\uff09\u3002Buffer Cache\uff08\u4e5f\u79f0\u4e3abcache\uff09\u5c31\u62c5\u4efb\u4e86\u78c1\u76d8\u7f13\u5b58\u4e00\u804c\uff0c\u5b83\u662f\u78c1\u76d8\u4e0e\u6587\u4ef6\u7cfb\u7edf\u4ea4\u4e92\u7684\u4e2d\u95f4\u5c42\u3002 xv6\u7684\u78c1\u76d8\u7f13\u5b58\u6a21\u5757\u4e3b\u8981\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u529f\u80fd\uff1a \u540c\u6b65\u8bbf\u95ee\u78c1\u76d8\u5757\u4ee5\u786e\u4fdd\u5185\u5b58\u91cc\u6bcf\u4e2a\u5757\u53ea\u6709\u4e00\u4efd\u590d\u5236\uff0c\u4e14\u6bcf\u6b21\u53ea\u6709\u4e00\u4e2a\u5185\u6838\u8fdb\u7a0b\u53ef\u4ee5\u4f7f\u7528\u90a3\u4efd\u590d\u5236\u3002 \u7f13\u5b58\u5e38\u7528\u5757\uff0c\u4f7f\u5f97\u4e0d\u5fc5\u6bcf\u6b21\u90fd\u4ece\u786c\u76d8\u4e0a\u8bfb\u53d6\u5b83\u4eec\u3002 \u4fee\u6539\u7f13\u5b58\u5757\u7684\u5185\u5bb9\u540e\uff0c\u786e\u4fdd\u78c1\u76d8\u4e2d\u5bf9\u5e94\u5185\u5bb9\u7684\u66f4\u65b0\u3002 2.2 \u57fa\u672c\u7ed3\u6784 \u00b6 \u6570\u636e\u7ed3\u6784bcache\uff08\u89c1kernel/bio.c\uff09\u7ef4\u62a4\u4e86\u4e00\u4e2a\u7531\u9759\u6001\u6570\u7ec4 struct buf buf[NBUF] \u7ec4\u6210\u7684\u53cc\u5411\u94fe\u8868\uff0c\u5b83\u4ee5\u5757\u4e3a\u5355\u4f4d\uff0c\u6bcf\u6b21\u8bfb\u5165\u6216\u5199\u51fa\u4e00\u4e2a\u78c1\u76d8\u5757\uff0c\u653e\u5230\u4e00\u4e2a\u5185\u5b58\u7f13\u5b58\u5757\u4e2d\uff08bcache.buf\uff09\uff0c\u540c\u65f6\u81ea\u65cb\u9501 bcache.lock \u7528\u4e8e\u7528\u6237\u4e92\u65a5\u8bbf\u95ee\u3002\u6240\u6709\u5bf9\u7f13\u5b58\u5757\u7684\u8bbf\u95ee\u90fd\u662f\u901a\u8fc7 bcache.head \u5f15\u7528\u94fe\u8868\u6765\u5b9e\u73b0\u7684\uff0c\u800c\u4e0d\u662fbuf\u6570\u7ec4\u3002 struct { struct spinlock lock ; struct buf buf [ NBUF ]; // Linked list of all buffers, through prev/next. // head.next is most recently used. struct buf head ; } bcache ; struct buf { int valid ; // has data been read from disk? int disk ; // does disk \"own\" buf? uint dev ; uint blockno ; struct sleeplock lock ; uint refcnt ; struct buf * prev ; // LRU cache list struct buf * next ; uchar data [ BSIZE ]; }; \u6bcf\u4e2a\u7f13\u5b58\u5757\uff08\u89c1struct buf\uff09\u90fd\u7531\u4e09\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a data \u5b57\u6bb5\u6807\u793a\u4e86\u5b83\u7684\u5185\u5bb9; \u6307\u9488\u5b57\u6bb5\uff08\\*prev\uff0c\\*next\uff09 \u7528\u4e8e\u7ec4\u6210\u94fe\u8868; \u6570\u503c\u5b57\u6bb5 \u7528\u4e8e\u6807\u793a\u5b83\u7684\u5c5e\u6027\uff0c\u5982 \u5b57\u6bb5 valid \u662f\u7f13\u5b58\u533a\u5305\u542b\u4e86\u4e00\u4e2a\u5757\u7684\u590d\u5236\uff08\u5373\u8be5buffer\u5305\u542b\u5bf9\u5e94\u78c1\u76d8\u5757\u7684\u6570\u636e\uff09; \u5b57\u6bb5 disk \u662f\u7f13\u5b58\u533a\u7684\u5185\u5bb9\u662f\u5426\u5df2\u7ecf\u88ab\u63d0\u4ea4\u5230\u4e86\u78c1\u76d8; \u5b57\u6bb5 dev \u662f\u8bbe\u5907\u53f7; \u5b57\u6bb5 blockno \u662f\u7f13\u5b58\u7684\u78c1\u76d8\u5757\u53f7; \u5b57\u6bb5 refcnt \u662f\u8be5\u5757\u88ab\u5f15\u7528\u6b21\u6570\uff08\u5373\u88ab\u591a\u5c11\u4e2a\u8fdb\u7a0b\u62e5\u6709\uff09; lock \u662f\u7761\u7720\u9501\u3002 \u4e0a\u56fe\u662fbcache\u7ed3\u6784\u793a\u610f\u56fe\u3002bcache.lock\u662f\u81ea\u65cb\u9501\uff0c\u7528\u4e8e\u8868\u793a bcache \u94fe\u8868\u662f\u5426\u88ab\u9501\u4f4f\u3002b->lock\u662f\u7761\u7720\u9501\uff0c\u7528\u4e8e\u8868\u793a\u7f13\u5b58\u6570\u636e\u5757buf\u662f\u5426\u88ab\u9501\u4f4f\u3002 \u5173\u4e8ebcache \u770b\u5230\u8fd9\u91cc\uff0c\u5927\u5bb6\u8fd8\u662f\u5426\u8bb0\u5f97\u6211\u4eec\u5728\u300a\u8ba1\u7b97\u673a\u7ec4\u6210\u539f\u7406\u300b\u5b9e\u9a8c\u8bfe\u7a0b\u4e0a\u505a\u8fc7\u7684Cache\u5b9e\u9a8c\uff0c\u5176\u7ed3\u6784\u662f\uff1a\u6709\u6548\u4f4d\uff08Valid\uff09\u3001\u6807\u8bb0\uff08Tag\uff09\u548c\u6570\u636e\uff08Data\uff09\u3002\u4e3b\u8981\u5dee\u5f02\u5728\u4e8e\uff0c\u7ec4\u6210\u539f\u7406\u5b9e\u9a8c\u662f\u786c\u4ef6Cache\uff0c\u672c\u6b21\u5b9e\u9a8c\u662f\u7528C\u8bed\u8a00\u5199\u7684\u5185\u5b58Cache\u3002 2.3 \u529f\u80fd\u4e0e\u64cd\u4f5c \u00b6 \u5bf9bcache\u7684\u64cd\u4f5c\u5982\u4e0b\uff1a \u5728\u7cfb\u7edf\u542f\u52a8\u65f6\uff0c main() \u51fd\u6570\uff08\u89c1kernel/main.c\uff09\u8c03\u7528 binit() \u6765\u521d\u59cb\u5316\u7f13\u5b58\uff0c\u968f\u5373\u8c03\u7528initlock()\u521d\u59cb\u5316bcache.lock\uff0c\u7136\u540e\u5faa\u73af\u904d\u5386buf\u6570\u7ec4\uff0c\u91c7\u7528\u5934\u63d2\u6cd5\u9010\u4e2a\u94fe\u63a5\u5230bcache.head\u540e\u9762\u3002 \u4e0a\u5c42\u6587\u4ef6\u7cfb\u7edf\u8bfb\u78c1\u76d8\u65f6\uff0c\u8c03\u7528 bread() \uff0c\u968f\u5373\u8c03\u7528 bget() \u68c0\u67e5\u8bf7\u6c42\u7684\u78c1\u76d8\u5757\u662f\u5426\u5728\u7f13\u5b58\u4e2d\uff0c\u5982\u679c\u547d\u4e2d\uff0c\u8fd4\u56de\u7f13\u5b58\u547d\u4ee4\u7ed3\u679c\u3002\u5982\u679c\u672a\u547d\u4e2d\uff0c\u8f6c\u5230\u5e95\u5c42\u7684 virtio_disk_rw() \u51fd\u6570\u5148\u5c06\u6b64\u78c1\u76d8\u5757\u4ece\u78c1\u76d8\u52a0\u8f7d\u8fdb\u7f13\u5b58\u4e2d\uff0c\u518d\u8fd4\u56de\u6b64\u78c1\u76d8\u5757\u3002 \u4e0a\u5c42\u6587\u4ef6\u5199\u78c1\u76d8\u65f6\uff0c\u8c03\u7528 bwrite() \uff0c\u968f\u5373\u8c03\u7528 virtio_disk_rw() \u51fd\u6570\u76f4\u63a5\u5c06\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u5199\u5165\u78c1\u76d8\u3002 \u4e0a\u5c42\u6587\u4ef6\u7cfb\u7edf\u53ef\u901a\u8fc7\u8c03\u7528 brelse() \u91ca\u653e\u4e00\u5757\u4e0d\u518d\u4f7f\u7528\u7684\u7f13\u5b58\u5757\u3002 \u63d0\u793a \u78c1\u76d8\u5c42\u5728virtio_disk.c\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u786c\u76d8\u9a71\u52a8\u3002 \u7f13\u51b2\u533a\u7f13\u5b58\u5c42\u7528\u5230\u7684\u63a5\u53e3\u662fvirtio_disc_rw(struct buf *b, int write) \u4f5c\u7528\uff1a\u5bf9\u78c1\u76d8\u8fdb\u884c\u8bfb\u6216\u5199 *b : \u7f13\u51b2\u533a\u7684\u6307\u9488 write : \u5f53\u4e3a1\u65f6\u662f\u628a\u7f13\u51b2\u533a\u7684\u5185\u5bb9\u5199\u5165\u5230\u78c1\u76d8\uff0c\u4e3a0\u65f6\u662f\u628a\u78c1\u76d8\u7684\u5185\u5bb9\u8bfb\u53d6\u5230\u7f13\u51b2\u533a 2.4 \u4f18\u5316\u65b9\u6cd5\uff08\u91cd\u8981\uff09 \u00b6 \u5728kernel/bio.c\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u6240\u6709\u7684buffer\u90fd\u88ab\u7ec4\u7ec7\u5230 \u4e00\u6761\u94fe\u8868 \u4e2d\uff0c\u56e0\u6b64\u5982\u679c\u6709\u591a\u4e2a\u8fdb\u7a0b\u8981\u4f7f\u7528buffer\uff0c\u5b83\u4eec\u5e76\u53d1\u7684\u8bf7\u6c42\u53ea\u80fd\u88ab\u987a\u5e8f\u5730\u5904\u7406\u3002 MIT\u5b98\u65b9\u6307\u5bfc\u4e66\u63a8\u8350\u4f7f\u7528\u4ee5\u4e0b\u4e24\u79cd\u65b9\u6848\uff08\u53ef\u4ee5\u4e24\u4e2a\u65b9\u6848\u4e00\u8d77\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u5355\u72ec\u5206\u5f00\u7528\uff0c \u9700\u8981\u81ea\u884c\u6d4b\u8bd5\u770b\u770b\u80fd\u5426\u901a\u8fc7\u6d4b\u8bc4\u7a0b\u5e8f\uff09 \uff1a \u4f7f\u7528 \u54c8\u5e0c\u8868 \uff0c\u5c06\u5404\u5757\u5757\u53f7blockno\u7684\u67d0\u79cd\u6563\u5217\u503c\u4f5c\u4e3akey\u5bf9\u5757\u8fdb\u884c\u5206\u7ec4\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u54c8\u5e0c\u6876\u5206\u914d\u4e00\u4e2a\u4e13\u7528\u7684\u9501\u3002\u901a\u8fc7\u54c8\u5e0c\u6876\u6765\u4ee3\u66ff\u94fe\u8868\uff0c\u5f53\u8981\u83b7\u53d6\u548c\u91ca\u653e\u7f13\u5b58\u5757\u65f6\uff0c\u53ea\u9700\u8981\u5bf9\u67d0\u4e2a\u54c8\u5e0c\u6876\u8fdb\u884c\u52a0\u9501\uff0c\u6876\u4e4b\u95f4\u7684\u64cd\u4f5c\u5c31\u53ef\u4ee5\u5e76\u884c\u8fdb\u884c\uff0c\u63d0\u4f9b\u5e76\u884c\u6027\u80fd\u3002 \u5728 bget() \u4e2d\u67e5\u627e\u6307\u5b9a\u5757\u65f6\uff0c\u9501\u4e0a\u5bf9\u5e94\u7684\u9501\uff08\u83b7\u53d6\u7a7a\u95f2\u5757\u53f7\u987b\u53e6\u4f5c\u5904\u7406\uff09\u3002 \u5f53bget()\u67e5\u627e\u6570\u636e\u5757\u672a\u547d\u4e2d\u65f6\uff0cbget()\u53ef\u4ece\u5176\u4ed6\u54c8\u5e0c\u6876\u9009\u62e9\u4e00\u4e2a\u672a\u88ab\u4f7f\u7528\u7684\u7f13\u5b58\u5757\uff0c\u79fb\u5165\u5230\u5f53\u524d\u7684\u54c8\u5e0c\u6876\u94fe\u8868\u4e2d\u4f7f\u7528\u3002 \u9009\u62e9\u5408\u9002\u7684\u6563\u5217\u51fd\u6570\u4ee5\u5206\u7ec4\uff0c\u5206\u7ec4\u7684\u6570\u91cf\u4e0d\u5fc5\u52a8\u6001\u8c03\u6574\uff0c\u53ef\u4ee5\u53d6\u5b9a\u503c\uff0c\u63a8\u8350\u4f7f\u7528\u8d28\u6570\u7ec4\uff08\u598213\u7ec4\uff09\u4ee5\u51cf\u5c11\u54c8\u5e0c\u4e89\u7528\u3002 \u54c8\u5e0c\u8868\u7684\u641c\u7d22\u548c\u7a7a\u95f2\u7f13\u5b58\u5757\u7684\u67e5\u627e\u9700\u8981\u4fdd\u8bc1\u539f\u5b50\u6027\u3002 \u79fb\u9664\u7a7a\u95f2\u7f13\u5b58\u5757\u5217\u8868( bcache.head )\u3002\u4f7f\u7528 \u65f6\u95f4\u6233 \u4f5c\u4e3a\u5224\u65ad\u7f13\u5b58\u5757\u6700\u4e00\u6b21\u88ab\u8bbf\u95ee\u7684\u987a\u5e8f\u7684\u4f9d\u636e\u3002 \u6b64\u9879\u6539\u52a8\u53ef\u4f7f brelse \u4e0d\u518d\u9700\u8981\u9501\u4e0a bcache lock \u3002 bget\u5728\u627e\u7a7a\u95f2\u5757\u65f6\u4e5f\u53ef\u901a\u8fc7\u65f6\u95f4\u6233\u5f97\u77e5\u6700\u540e\u4e00\u6b21\u88ab\u8bbf\u95ee\u65f6\u95f4\u6700\u65e9\u7684\u7a7a\u95f2\u7f13\u5b58\u5757\u3002 \u65f6\u95f4\u6233\u53ef\u901a\u8fc7kernel/trap.c\u4e2d\u7684ticks\u51fd\u6570\u83b7\u5f97\uff08ticks\u5df2\u5728kernel/def.h\u4e2d\u58f0\u660e\uff0cbio.c\u4e2d\u53ef\u76f4\u63a5\u4f7f\u7528\uff09\u3002 \u4ee5\u4e0b\u60c5\u51b5\u4e2d\uff0c\u9501\u4e89\u7528\u662f\u5141\u8bb8\u7684\uff1a a) \u5f53\u4e24\u4e2a\u8fdb\u7a0b\u540c\u65f6\u8bbf\u95ee\u540c\u4e00\u4e2a\u7f13\u5b58\u6570\u636e\u5757\u53f7blockno\u65f6\uff1b b) \u5f53\u4e24\u4e2a\u8fdb\u7a0b\u540c\u65f6\u6ca1\u6709\u547d\u4e2dcache\uff0c\u9700\u8981\u627e\u4e00\u4e2a\u672a\u4f7f\u7528\u7684block\u6765\u66ff\u4ee3\u65f6\uff1b c) \u5f53\u4e24\u4e2a\u8fdb\u7a0b\u540c\u65f6\u4f7f\u7528\u5757\u65f6\uff0c\u65e0\u8bba\u4f7f\u7528\u4f55\u79cd\u6a21\u5f0f\u5212\u5206\u6570\u636e\u5757\u548c\u9501\uff0c\u90fd\u4f1a\u4ea7\u751f\u4e89\u7528\u7684\u60c5\u51b5\uff0c\u5982\uff0c\u5982\u679c\u4e24\u4e2a\u8fdb\u7a0b\u4f7f\u7528\u7684\u4e24\u4e2a\u6570\u636e\u5757\uff0c\u901a\u8fc7\u54c8\u5e0c\u8868\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u54c8\u5e0c\u7ec4\u90e8\u5206\uff08\u8fd9\u53d6\u51b3\u4e8e\u5177\u4f53\u7684\u8bbe\u8ba1\uff0c\u8bf7\u5c1d\u8bd5\u8c03\u6574\u5177\u4f53\u7684\u6a21\u5f0f\u6765\u907f\u514d\u4e89\u7528\uff0c\u6bd4\u5982\u53ef\u4ee5\u8c03\u6574\u54c8\u5e0c\u8868\u7684\u5927\u5c0f\uff09\u3002","title":"\u5b9e\u9a8c\u539f\u7406"},{"location":"lab3/part2/#_1","text":"\u5173\u4e8e\u9501\u7684\u4e00\u4e9b\u89e3\u91ca \u9501\u7528\u6765\u4fdd\u8bc1\u6570\u636e\u4e00\u81f4\u6027\u7684\u624b\u6bb5\u5341\u5206\u7b80\u5355\u7c97\u66b4\uff1a\u5f53\u6709\u4eba\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u4e0d\u5141\u8bb8\u5176\u4ed6\u4eba\u64cd\u4f5c\u3002 \u5728\u591a\u6838\u60c5\u51b5\u4e0b\uff0c\u8fd9\u5c31\u4f1a\u5bfc\u81f4\u5f53\u5f88\u591aCPU\u6838\u5fc3\u8981\u64cd\u4f5c\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff08\u5982kalloc\u4e2d\u7684freelist\uff09\u65f6\uff0c\u9700\u8981\u6392\u961f\uff0c\u4e00\u4e2a\u4e2a\u6765\u3002\u4e00\u4e2a\u6838\u5fc3\u5728\u5e72\u6d3b\uff0c\u5176\u4ed6\u7684\u6838\u5fc3\u53ea\u80fd\u88ab\u963b\u585e\u4f4f\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4e86\u5e76\u884c\u6027\u7684\u4e0b\u964d\u3002 \u90a3\u6211\u4eec\u628a\u9501\u5220\u4e86\uff0c\u4e0d\u963b\u585e\uff0c\u5e76\u884c\u6027\u4e0d\u5c31\u4e0a\u53bb\u4e86\u5417\uff1f\u786e\u5b9e\uff0c\u4f46\u8fd9\u6837\u529f\u80fd\u5c31\u4e0d\u80fd\u4fdd\u8bc1\u6b63\u786e\u4e86\u3002\u529f\u80fd\u6b63\u786e\u7684\u91cd\u8981\u6027\u5f80\u5f80\u6bd4\u6027\u80fd\u9ad8\u7684\u91cd\u8981\u6027\u5927\u5f97\u591a\u3002\u56e0\u6b64\u5728\u6210\u719f\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u4e00\u822c\u90fd\u4f1a\u91c7\u53d6\u9501\u7684\u673a\u5236\uff0c\u540c\u65f6\u901a\u8fc7\u51cf\u5c11\u9501\u4e89\u7528\u7684\u65b9\u6cd5\u4f18\u5316\u6027\u80fd\u3002\u8fd9\u662f\u672c\u5b9e\u9a8c\u7684 \u6839\u672c\u76ee\u7684 \uff0c\u4e4b\u540e\u7684\u7ae0\u8282\u4e3b\u8981\u8ba8\u8bba\u4f7f\u7528\u9501\u7684\u4e00\u4e9b\u90e8\u4ef6\uff0c\u6211\u4eec\u5728\u8fd9\u4e9b\u573a\u666f\u4e0b\u6765\u8fdb\u884c\u9501\u7684\u4f18\u5316\u3002","title":"\u5b9e\u9a8c\u539f\u7406"},{"location":"lab3/part2/#1-memory-allocator","text":"\u6ce8\u610f \u672c\u90e8\u5206\uff0c\u4f60\u5e94\u8be5\u8981\u77e5\u9053\uff1a \u4ec0\u4e48\u662f\u5185\u5b58\u5206\u914d\u5668\uff1f \u5185\u5b58\u5206\u914d\u5668\u7684\u6570\u636e\u7ed3\u6784\u662f\u4ec0\u4e48\uff1f \u5185\u5b58\u5206\u914d\u5668\u7684\u6240\u6709\u64cd\u4f5c\u53ca\u5176\u5bf9\u6570\u636e\u7ed3\u6784\u7684\u6539\u53d8\uff1f \u6211\u4eec\u5e94\u8be5\u5982\u4f55\u4fee\u6539\u5185\u5b58\u5206\u914d\u5668\u4ee5\u8fbe\u5230\u5b9e\u9a8c\u76ee\u6807\uff1f","title":"1. \u5185\u5b58\u5206\u914d\u5668\uff08Memory Allocator\uff09"},{"location":"lab3/part2/#11","text":"\u5728xv6\u4e2d\uff0c\u8bbe\u7f6e\u4e86\u603b\u91cf\u4e3a128MB\u7684\u7269\u7406\u5185\u5b58\u7a7a\u95f4\uff0c\u89c1Makefile\u4e2d\u7684\u7f16\u8bd1\u8fd0\u884c\u9009\u9879\uff1a QEMUOPTS = -machine virt -bios none -kernel $K /kernel -m 128M -smp $( CPUS ) -nographic \u5728\u5185\u6838\u4ee3\u7801\u4e2d\uff0c\u4e5f\u7ed9\u51fa\u4e86\u5185\u5b58\u5730\u5740\u5b9a\u4e49\uff0c\u5728kernel/memlayout.h\u3002 // the kernel expects there to be RAM // for use by the kernel and user pages // from physical address 0x80000000 to PHYSTOP. #define KERNBASE 0x80000000L #define PHYSTOP (KERNBASE + 128*1024*1024) \u5728xv6 book 3.2\u5c0f\u8282\uff0c\u7ed9\u51fa\u4e86\u7269\u7406\u5730\u5740\u548c\u865a\u62df\u5730\u5740\u7684\u5206\u5e03\u53ca\u6620\u5c04\u5173\u7cfb\uff08\u89c1\u4e0b\u56fe\uff09\u3002\u4e0b\u56fe\u5de6\u8fb9\u662f\u5185\u6838\u7684\u865a\u62df\u5730\u5740\uff0c\u53f3\u8fb9\u4e0a\u534a\u90e8\u5206\u662f\u7269\u7406\u5185\u5b58\uff08DRAM\uff09\uff0c\u53f3\u8fb9\u4e0b\u534a\u90e8\u5206\u662fI/O\u8bbe\u5907\u3002\u672c\u6b21\u5b9e\u9a8c\u4e3b\u8981\u5173\u6ce8\u56fe\u4e2d\u7684\u53f3\u8fb9\u4e0a\u534a\u90e8\u5206\uff08\u6211\u4eec\u4f1a\u5728\u4e0b\u4e00\u4e2a\u5b9e\u9a8c\u4e2d\u518d\u6b21\u4ecb\u7ecd\u5de6\u8fb9\u90e8\u5206\u7684\u865a\u62df\u5730\u5740\uff1a-)\u3002\u5f53\u64cd\u4f5c\u7cfb\u7edf\u542f\u52a8\u65f6\uff0c\u4f1a\u4ece\u5730\u57400x80000000\u5f00\u59cb\u8fd0\u884c\uff0c\u8fd9\u4e2a\u5730\u5740\u5176\u5b9e\u662f\u7531\u786c\u4ef6\u8bbe\u8ba1\u8005\u51b3\u5b9a\u7684\u3002\u5728xv6\u5185\u6838\u521a\u542f\u52a8\u65f6\uff0c\u4ecekernel\u7ed3\u675f\u5730\u5740\uff08end\uff09\u4e00\u76f4\u5230PHYSTOP\u7684\u7a7a\u95f4\u90fd\u662f\u7a7a\u95f2\u7684\u3002\u5b9e\u9645\u4e0a\uff0c\u5185\u6838\u4ee3\u7801\u6bb5\uff08kernel text\uff09\u548c\u6570\u636e\u6bb5\uff08kernel data\uff09\u4f1a\u5360\u7528\u4e00\u90e8\u5206\u7a7a\u95f4\uff0c\u5bfc\u81f4\u5269\u4f59\u7684\u7a7a\u95f2\u7a7a\u95f4\u6bd4128MB\u8981\u5c0f\u3002 \u62d3\u5c55\u9605\u8bfb trampoline \uff1a\u7528\u6237\u6001-\u5185\u6838\u6001\u8df3\u677f kstack \uff1a\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u5185\u6838\u6808\u7a7a\u95f4 Guard page \uff1a\u540c\u65f6\u5728\u5185\u6838\u7a7a\u95f4\u548c\u7528\u6237\u7a7a\u95f4\u7528\u6765\u4fdd\u62a4Stack\u3002\u5982\u679ckernel stack\u8017\u5c3d\u4e86\uff0c\u5b83\u4f1a\u6ea2\u51fa\u5230Guard page\uff0c\u4f46\u662f\u56e0\u4e3aGuard page\u7684PTE\u4e2dValid\u6807\u5fd7\u4f4d\u672a\u8bbe\u7f6e\uff0c\u4f1a\u5bfc\u81f4\u7acb\u5373\u89e6\u53d1page fault\uff0c\u8fd9\u6837\u7684\u7ed3\u679c\u597d\u8fc7\u5185\u5b58\u8d8a\u754c\u4e4b\u540e\u9020\u6210\u7684\u6570\u636e\u6df7\u4e71\u3002 free memory \uff1a\u9875\u5206\u914d\u5668\u7ba1\u7406\u7684\u5730\u5740\u7a7a\u95f4 kernel data/text \uff1a\u6570\u636e\u6bb5/\u4ee3\u7801\u6bb5 KERNBASE \uff1a\u5185\u6838\u6001\u57fa\u5740 VIRTIO disk \uff1a\u78c1\u76d8IO\u64cd\u4f5c\u5730\u5740 UART0 \uff1a\u4e32\u53e3IO\u64cd\u4f5c\u5730\u5740 PLIC \uff1a\u5e73\u53f0\u7ea7\u4e2d\u65ad\u63a7\u5236\u5668\u5730\u5740 CLINT \uff1acore-local\u4e2d\u65ad\u63a7\u5236\u5668\u5730\u5740 boot ROM \uff1a\u7528\u4e8e\u542f\u52a8\u64cd\u4f5c\u7cfb\u7edf\u3002\u5f53\u4e3b\u677f\u4e0a\u7535\u540e\uff0c\u8fd0\u884c\u7684\u662f\u5b58\u50a8\u5728boot ROM\u4e2d\u7684\u4ee3\u7801\uff0c\u5f53boot\u5b8c\u6210\u4e4b\u540e\uff0c\u4f1a\u8df3\u8f6c\u5230\u5730\u57400x80000000\u3002 xv6\u5185\u5b58\u5206\u914d\u5668\u5bf9\u4e0a\u5c42\u63d0\u4f9bkalloc()\u548ckfree()\u63a5\u53e3\u6765\u7ba1\u7406\u8fd9\u6bb5\u5269\u4f59\u7684\u7a7a\u95f2\u7269\u7406\u5185\u5b58\u3002\u5728\u9700\u8981\u4f7f\u7528\u65b0\u5185\u5b58\u7a7a\u95f4\u7684\u65f6\u5019\u8c03\u7528kalloc()\uff0c\u5728\u9700\u8981\u91ca\u653e\u5185\u5b58\u7a7a\u95f4\u7684\u65f6\u5019\u8c03\u7528kfree()\u3002 \u7269\u7406\u5185\u5b58\u5206\u914d\u5668\uff08allocator\uff09\u5b9a\u4e49\u5728kernel/kalloc.c\u3002 struct run { struct run * next ; }; struct { struct spinlock lock ; struct run * freelist ; } kmem ; \u5206\u914d\u5668\u7684\u6838\u5fc3\u6570\u636e\u7ed3\u6784\u662f\u7531\u7a7a\u95f2\u7269\u7406\u9875\u7ec4\u6210\u7684\u94fe\u8868 freelist \uff0c\u8fd9\u4e2a\u7a7a\u95f2\u9875\u94fe\u8868\u5c06\u7269\u7406\u5185\u5b58\u5212\u5206\u62104KB\u5927\u5c0f\u7684\u9875\u5e27\u6765\u7ba1\u7406\uff0c\u5e76\u4f7f\u7528 \u81ea\u65cb\u9501 \uff08spinlock\uff09\u8fdb\u884c\u4fdd\u62a4\u3002\u6bcf\u4e2a\u7a7a\u95f2\u9875\u5728\u94fe\u8868\u91cc\u90fd\u662f struct run next \u6307\u5411\u4e0b\u4e00\u4e2a\u7a7a\u95f2\u7269\u7406\u9875\u3002 \u8fd9\u53ef\u80fd\u6bd4\u8f83\u96be\u7406\u89e3\uff0c\u6211\u4eec\u4e0d\u59a8\u4ece\u8fd9\u4e2a\u94fe\u8868\u7684\u6784\u5efa\u5f00\u59cb\u4e86\u89e3\u3002\u5728\u7cfb\u7edf\u542f\u52a8\u65f6\uff0c main() \u51fd\u6570\uff08\u89c1kernel/main.c\uff09\u8c03\u7528 kinit() \u6765\u521d\u59cb\u5316\u5206\u914d\u5668\uff0c\u5b83\u901a\u8fc7\u4fdd\u5b58\u6240\u6709\u7a7a\u95f2\u9875\u6765\u521d\u59cb\u5316\u94fe\u8868\u3002kinit()\u8c03\u7528 freerange() \u6765\u628a\u7a7a\u95f2\u5185\u5b58\u9875\u52a0\u5230\u94fe\u8868\u91cc\uff0cfreerange()\u5219\u662f\u901a\u8fc7\u8c03\u7528 kfree() \u628a\u6bcf\u4e2a\u7a7a\u95f2\u9875\uff08\u5730\u5740\u8303\u56f4\u4ecepa_start\u81f3pa_end\uff09\u9010\u4e00\u52a0\u5230\u94fe\u8868\u91cc\u6765\u5b9e\u73b0\u6b64\u529f\u80fd\u7684\u3002kfree() \u51fd\u6570\u7528\u4e8e\u91ca\u653e\u6307\u5b9a\u7684\u7269\u7406\u5185\u5b58\u9875\uff0c\u5c06\u5176\u6dfb\u52a0\u81f3 freelist \u4e2d\uff0c\u53c2\u6570 pa \u4e3a\u9700\u8981\u91ca\u653e\u7684\u7269\u7406\u9875\u9875\u53f7\uff0c\u5373\u7269\u7406\u9875\u7684\u9996\u5730\u5740\uff0c\u5b83\u88ab\u770b\u4f5c\u4e00\u4e2a\u6ca1\u6709\u7c7b\u578b\u7684\u6307\u9488\u3002\u5728kfree()\u4e2d\uff0cpa\u88ab \u5f3a\u5236\u8f6c\u6362 \u4e3arun\u7c7b\u578b\u7684\u6307\u9488\uff0c\u8fdb\u800c\u53ef\u4ee5\u653e\u5165freelist\u4e2d\u3002\u56e0\u4e3a\u7a7a\u95f2\u9875\u91cc\u4ec0\u4e48\u90fd\u6ca1\u6709\uff0c\u6240\u4ee5\u7ed3\u6784\u4f53 run \u7684\u6210\u5458\u53ef\u4ee5\u76f4\u63a5 \u4fdd\u5b58\u5728\u7a7a\u95f2\u9875\u81ea\u8eab\u91cc \u3002 void freerange ( void * pa_start , void * pa_end ) { char * p ; p = ( char * ) PGROUNDUP (( uint64 ) pa_start ); for (; p + PGSIZE <= ( char * ) pa_end ; p += PGSIZE ) kfree ( p ); } void kfree ( void * pa ) { ... r = ( struct run * ) pa ; acquire ( & kmem . lock ); r -> next = kmem . freelist ; kmem . freelist = r ; release ( & kmem . lock ); }","title":"1.1 \u7b80\u4ecb"},{"location":"lab3/part2/#12","text":"\u5173\u4e8e\u94fe\u8868\u7684\u64cd\u4f5c\u4e3b\u8981\u6709\u4e24\u4e2a\uff1a 1\u3001\u91ca\u653e\u5185\u5b58 \u91ca\u653e\u5185\u5b58\u7684\u51fd\u6570\u662f kfree(void *pa) \uff0c\u9996\u5148\u5c06 void *pa \u5f00\u59cb\u7684\u7269\u7406\u9875\u7684\u5185\u5bb9\u5168\u90e8\u7f6e\u4e3a1\uff0c\u8fd9\u662f\u4e3a\u4e86\u8ba9\u4e4b\u524d\u4f7f\u7528\u5b83\u7684\u4ee3\u7801\u4e0d\u80fd\u518d\u8bfb\u53d6\u5230\u6709\u6548\u7684\u5185\u5bb9\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u4ee3\u7801\u80fd\u5c3d\u65e9\u5d29\u6e83\u4ee5\u66b4\u9732\u95ee\u9898\u3002\u7136\u540e\u5c06\u8fd9\u7a7a\u95f2\u9875\u7269\u7406\u5185\u5b58\u52a0\u5230\u94fe\u8868\u5934\u3002 2\u3001\u7533\u8bf7\u5185\u5b58 void* kalloc(void *) \u7528\u6765\u5206\u914d\u5185\u5b58\u7269\u7406\u9875\uff0c\u529f\u80fd\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u79fb\u9664\u5e76\u8fd4\u56de\u7a7a\u95f2\u94fe\u8868\u5934\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5373\u7ed9\u8c03\u7528\u8005\u5206\u914d1\u9875\u7269\u7406\u5185\u5b58\u3002 \u7531\u4e8e\u7269\u7406\u5185\u5b58\u662f\u5728\u591a\u8fdb\u7a0b\u4e4b\u95f4\u5171\u4eab\u7684\uff0c\u6240\u4ee5\u4e0d\u7ba1\u662f\u5206\u914d\u8fd8\u662f\u91ca\u653e\u9875\u9762\uff0c\u6bcf\u6b21\u64cd\u4f5ckmem.freelist\u65f6\u90fd\u9700\u8981\u5148\u7533\u8bf7kmem.lock\uff0c\u6b64\u540e\u518d\u8fdb\u884c\u5185\u5b58\u9875\u9762\u7684\u64cd\u4f5c\u3002","title":"1.2 \u529f\u80fd\u4e0e\u64cd\u4f5c"},{"location":"lab3/part2/#13","text":"kalloc \u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f7f\u7528\u4e86\u9501\uff1f \u67e5\u9605 kalloc.c \u4ee3\u7801\u53ef\u77e5\uff0c kalloc \u53ea\u5728 kalloc() \u548c kfree() \u4e2d\u4f7f\u7528\u4e86\u9501\uff0c\u90a3\u8fd9\u4e24\u4e2a\u7528\u9501\u7684\u60c5\u51b5\u6709\u4ec0\u4e48\u5171\u540c\u4e4b\u5904\u5462\uff1f\u6ca1\u9519\uff0c\u4ed6\u4eec\u90fd\u662f\u628a \u5bf9 freelist \u7684\u64cd\u4f5c \u9501\u4e86\u8d77\u6765\u3002 kfree() \u5728\u5f80 freelist \u91cc\u52a0\u5165\u7a7a\u95f2\u9875\u524d\u9501\u4e86\u4e00\u4e0b\uff0c\u64cd\u4f5c\u5b8c\u4e4b\u540e\u89e3\u9501\u4e86\u3002 kalloc() \u5728\u79fb\u9664 freelist \u7b2c\u4e00\u4e2a\u5143\u7d20\u65f6\u4e5f\u540c\u6837\u52a0\u4e86\u9501\uff0c\u64cd\u4f5c\u5b8c\u6210\u518d\u91ca\u653e\u9501\u3002\u6240\u4ee5\u5bf9\u4e8e\u5185\u5b58\u5206\u914d\u5668\u4e2d\u9700\u8981\u9501\u4fdd\u62a4\u7684\u53ea\u6709\u5bf9 freelist \u7684\u64cd\u4f5c\u3002","title":"1.3 \u9501\u673a\u5236"},{"location":"lab3/part2/#14","text":"\u4fee\u6539\u7a7a\u95f2\u5185\u5b58\u94fe\u8868\u5c31\u662f freelist \uff0c\u73b0\u5728\u6211\u4eec\u8981\u51cf\u5c11\u9501\u7684\u4e89\u62a2\uff0c \u4f7f\u6bcf\u4e2a CPU \u6838\u4f7f\u7528\u72ec\u7acb\u7684\u94fe\u8868 \uff0c\u800c\u4e0d\u662f\u73b0\u5728\u7684\u5171\u4eab\u94fe\u8868\u3002\u8fd9\u6837\u7b49\u5206\uff0c\u5c31\u4e0d\u4f1a\u8ba9\u6240\u6709\u7684 CPU \u4e89\u62a2\u4e00\u4e2a\u7a7a\u95f2\u533a\u57df\u3002 \u6ce8\u610f \uff1a\u6bcf\u4e2a\u7a7a\u95f2\u7269\u7406\u9875\u53ea\u80fd\u5b58\u5728\u4e8e\u4e00\u4e2afreelist\u4e2d\u3002","title":"1.4 \u4f18\u5316\u65b9\u6cd5\uff08\u91cd\u8981\uff09"},{"location":"lab3/part2/#2-buffer-cache","text":"\u6ce8\u610f \u672c\u90e8\u5206\uff0c\u4f60\u5e94\u8be5\u8981\u77e5\u9053\uff1a \u4ec0\u4e48\u662f\u78c1\u76d8\u7f13\u5b58\uff1f \u78c1\u76d8\u7f13\u5b58\u7684\u6570\u636e\u7ed3\u6784\u662f\u4ec0\u4e48\uff08bcache\u548cbuf\uff09\uff1f \u78c1\u76d8\u7f13\u5b58\u7684\u6240\u6709\u64cd\u4f5c\u53ca\u5176\u5bf9\u6570\u636e\u7ed3\u6784\u7684\u6539\u53d8\uff1f \u6211\u4eec\u5e94\u8be5\u5982\u4f55\u4fee\u6539\u78c1\u76d8\u7f13\u5b58\u4ee5\u8fbe\u5230\u5b9e\u9a8c\u76ee\u6807\uff1f","title":"2. \u78c1\u76d8\u7f13\u5b58\uff08Buffer Cache\uff09"},{"location":"lab3/part2/#21","text":"xv6\u7684\u6587\u4ef6\u7cfb\u7edf\u662f\u4ee5\u78c1\u76d8\u6570\u636e\u5757\u4e3a\u5355\u4f4d\u4ece\u78c1\u76d8\u8bfb\u5199\u6570\u636e\u7684\u3002\u7531\u4e8e\u5bf9\u78c1\u76d8\u7684\u8bfb\u53d6\u975e\u5e38\u6162\uff0c\u800c\u5185\u5b58\u7684\u901f\u5ea6\u8981\u5feb\u5f97\u591a\uff0c\u56e0\u6b64\u5c06\u6700\u8fd1\u7ecf\u5e38\u8bbf\u95ee\u7684\u78c1\u76d8\u5757\u7f13\u5b58\u5728\u5185\u5b58\u91cc\u53ef\u4ee5\u5927\u5927\u63d0\u5347\u6027\u80fd\uff08\u6b64\u65f6\u5185\u5b58\u8d77\u5230cache\u7684\u4f5c\u7528\uff09\u3002Buffer Cache\uff08\u4e5f\u79f0\u4e3abcache\uff09\u5c31\u62c5\u4efb\u4e86\u78c1\u76d8\u7f13\u5b58\u4e00\u804c\uff0c\u5b83\u662f\u78c1\u76d8\u4e0e\u6587\u4ef6\u7cfb\u7edf\u4ea4\u4e92\u7684\u4e2d\u95f4\u5c42\u3002 xv6\u7684\u78c1\u76d8\u7f13\u5b58\u6a21\u5757\u4e3b\u8981\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u529f\u80fd\uff1a \u540c\u6b65\u8bbf\u95ee\u78c1\u76d8\u5757\u4ee5\u786e\u4fdd\u5185\u5b58\u91cc\u6bcf\u4e2a\u5757\u53ea\u6709\u4e00\u4efd\u590d\u5236\uff0c\u4e14\u6bcf\u6b21\u53ea\u6709\u4e00\u4e2a\u5185\u6838\u8fdb\u7a0b\u53ef\u4ee5\u4f7f\u7528\u90a3\u4efd\u590d\u5236\u3002 \u7f13\u5b58\u5e38\u7528\u5757\uff0c\u4f7f\u5f97\u4e0d\u5fc5\u6bcf\u6b21\u90fd\u4ece\u786c\u76d8\u4e0a\u8bfb\u53d6\u5b83\u4eec\u3002 \u4fee\u6539\u7f13\u5b58\u5757\u7684\u5185\u5bb9\u540e\uff0c\u786e\u4fdd\u78c1\u76d8\u4e2d\u5bf9\u5e94\u5185\u5bb9\u7684\u66f4\u65b0\u3002","title":"2.1 \u7b80\u4ecb"},{"location":"lab3/part2/#22","text":"\u6570\u636e\u7ed3\u6784bcache\uff08\u89c1kernel/bio.c\uff09\u7ef4\u62a4\u4e86\u4e00\u4e2a\u7531\u9759\u6001\u6570\u7ec4 struct buf buf[NBUF] \u7ec4\u6210\u7684\u53cc\u5411\u94fe\u8868\uff0c\u5b83\u4ee5\u5757\u4e3a\u5355\u4f4d\uff0c\u6bcf\u6b21\u8bfb\u5165\u6216\u5199\u51fa\u4e00\u4e2a\u78c1\u76d8\u5757\uff0c\u653e\u5230\u4e00\u4e2a\u5185\u5b58\u7f13\u5b58\u5757\u4e2d\uff08bcache.buf\uff09\uff0c\u540c\u65f6\u81ea\u65cb\u9501 bcache.lock \u7528\u4e8e\u7528\u6237\u4e92\u65a5\u8bbf\u95ee\u3002\u6240\u6709\u5bf9\u7f13\u5b58\u5757\u7684\u8bbf\u95ee\u90fd\u662f\u901a\u8fc7 bcache.head \u5f15\u7528\u94fe\u8868\u6765\u5b9e\u73b0\u7684\uff0c\u800c\u4e0d\u662fbuf\u6570\u7ec4\u3002 struct { struct spinlock lock ; struct buf buf [ NBUF ]; // Linked list of all buffers, through prev/next. // head.next is most recently used. struct buf head ; } bcache ; struct buf { int valid ; // has data been read from disk? int disk ; // does disk \"own\" buf? uint dev ; uint blockno ; struct sleeplock lock ; uint refcnt ; struct buf * prev ; // LRU cache list struct buf * next ; uchar data [ BSIZE ]; }; \u6bcf\u4e2a\u7f13\u5b58\u5757\uff08\u89c1struct buf\uff09\u90fd\u7531\u4e09\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a data \u5b57\u6bb5\u6807\u793a\u4e86\u5b83\u7684\u5185\u5bb9; \u6307\u9488\u5b57\u6bb5\uff08\\*prev\uff0c\\*next\uff09 \u7528\u4e8e\u7ec4\u6210\u94fe\u8868; \u6570\u503c\u5b57\u6bb5 \u7528\u4e8e\u6807\u793a\u5b83\u7684\u5c5e\u6027\uff0c\u5982 \u5b57\u6bb5 valid \u662f\u7f13\u5b58\u533a\u5305\u542b\u4e86\u4e00\u4e2a\u5757\u7684\u590d\u5236\uff08\u5373\u8be5buffer\u5305\u542b\u5bf9\u5e94\u78c1\u76d8\u5757\u7684\u6570\u636e\uff09; \u5b57\u6bb5 disk \u662f\u7f13\u5b58\u533a\u7684\u5185\u5bb9\u662f\u5426\u5df2\u7ecf\u88ab\u63d0\u4ea4\u5230\u4e86\u78c1\u76d8; \u5b57\u6bb5 dev \u662f\u8bbe\u5907\u53f7; \u5b57\u6bb5 blockno \u662f\u7f13\u5b58\u7684\u78c1\u76d8\u5757\u53f7; \u5b57\u6bb5 refcnt \u662f\u8be5\u5757\u88ab\u5f15\u7528\u6b21\u6570\uff08\u5373\u88ab\u591a\u5c11\u4e2a\u8fdb\u7a0b\u62e5\u6709\uff09; lock \u662f\u7761\u7720\u9501\u3002 \u4e0a\u56fe\u662fbcache\u7ed3\u6784\u793a\u610f\u56fe\u3002bcache.lock\u662f\u81ea\u65cb\u9501\uff0c\u7528\u4e8e\u8868\u793a bcache \u94fe\u8868\u662f\u5426\u88ab\u9501\u4f4f\u3002b->lock\u662f\u7761\u7720\u9501\uff0c\u7528\u4e8e\u8868\u793a\u7f13\u5b58\u6570\u636e\u5757buf\u662f\u5426\u88ab\u9501\u4f4f\u3002 \u5173\u4e8ebcache \u770b\u5230\u8fd9\u91cc\uff0c\u5927\u5bb6\u8fd8\u662f\u5426\u8bb0\u5f97\u6211\u4eec\u5728\u300a\u8ba1\u7b97\u673a\u7ec4\u6210\u539f\u7406\u300b\u5b9e\u9a8c\u8bfe\u7a0b\u4e0a\u505a\u8fc7\u7684Cache\u5b9e\u9a8c\uff0c\u5176\u7ed3\u6784\u662f\uff1a\u6709\u6548\u4f4d\uff08Valid\uff09\u3001\u6807\u8bb0\uff08Tag\uff09\u548c\u6570\u636e\uff08Data\uff09\u3002\u4e3b\u8981\u5dee\u5f02\u5728\u4e8e\uff0c\u7ec4\u6210\u539f\u7406\u5b9e\u9a8c\u662f\u786c\u4ef6Cache\uff0c\u672c\u6b21\u5b9e\u9a8c\u662f\u7528C\u8bed\u8a00\u5199\u7684\u5185\u5b58Cache\u3002","title":"2.2 \u57fa\u672c\u7ed3\u6784"},{"location":"lab3/part2/#23","text":"\u5bf9bcache\u7684\u64cd\u4f5c\u5982\u4e0b\uff1a \u5728\u7cfb\u7edf\u542f\u52a8\u65f6\uff0c main() \u51fd\u6570\uff08\u89c1kernel/main.c\uff09\u8c03\u7528 binit() \u6765\u521d\u59cb\u5316\u7f13\u5b58\uff0c\u968f\u5373\u8c03\u7528initlock()\u521d\u59cb\u5316bcache.lock\uff0c\u7136\u540e\u5faa\u73af\u904d\u5386buf\u6570\u7ec4\uff0c\u91c7\u7528\u5934\u63d2\u6cd5\u9010\u4e2a\u94fe\u63a5\u5230bcache.head\u540e\u9762\u3002 \u4e0a\u5c42\u6587\u4ef6\u7cfb\u7edf\u8bfb\u78c1\u76d8\u65f6\uff0c\u8c03\u7528 bread() \uff0c\u968f\u5373\u8c03\u7528 bget() \u68c0\u67e5\u8bf7\u6c42\u7684\u78c1\u76d8\u5757\u662f\u5426\u5728\u7f13\u5b58\u4e2d\uff0c\u5982\u679c\u547d\u4e2d\uff0c\u8fd4\u56de\u7f13\u5b58\u547d\u4ee4\u7ed3\u679c\u3002\u5982\u679c\u672a\u547d\u4e2d\uff0c\u8f6c\u5230\u5e95\u5c42\u7684 virtio_disk_rw() \u51fd\u6570\u5148\u5c06\u6b64\u78c1\u76d8\u5757\u4ece\u78c1\u76d8\u52a0\u8f7d\u8fdb\u7f13\u5b58\u4e2d\uff0c\u518d\u8fd4\u56de\u6b64\u78c1\u76d8\u5757\u3002 \u4e0a\u5c42\u6587\u4ef6\u5199\u78c1\u76d8\u65f6\uff0c\u8c03\u7528 bwrite() \uff0c\u968f\u5373\u8c03\u7528 virtio_disk_rw() \u51fd\u6570\u76f4\u63a5\u5c06\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u5199\u5165\u78c1\u76d8\u3002 \u4e0a\u5c42\u6587\u4ef6\u7cfb\u7edf\u53ef\u901a\u8fc7\u8c03\u7528 brelse() \u91ca\u653e\u4e00\u5757\u4e0d\u518d\u4f7f\u7528\u7684\u7f13\u5b58\u5757\u3002 \u63d0\u793a \u78c1\u76d8\u5c42\u5728virtio_disk.c\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u786c\u76d8\u9a71\u52a8\u3002 \u7f13\u51b2\u533a\u7f13\u5b58\u5c42\u7528\u5230\u7684\u63a5\u53e3\u662fvirtio_disc_rw(struct buf *b, int write) \u4f5c\u7528\uff1a\u5bf9\u78c1\u76d8\u8fdb\u884c\u8bfb\u6216\u5199 *b : \u7f13\u51b2\u533a\u7684\u6307\u9488 write : \u5f53\u4e3a1\u65f6\u662f\u628a\u7f13\u51b2\u533a\u7684\u5185\u5bb9\u5199\u5165\u5230\u78c1\u76d8\uff0c\u4e3a0\u65f6\u662f\u628a\u78c1\u76d8\u7684\u5185\u5bb9\u8bfb\u53d6\u5230\u7f13\u51b2\u533a","title":"2.3 \u529f\u80fd\u4e0e\u64cd\u4f5c"},{"location":"lab3/part2/#24","text":"\u5728kernel/bio.c\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u6240\u6709\u7684buffer\u90fd\u88ab\u7ec4\u7ec7\u5230 \u4e00\u6761\u94fe\u8868 \u4e2d\uff0c\u56e0\u6b64\u5982\u679c\u6709\u591a\u4e2a\u8fdb\u7a0b\u8981\u4f7f\u7528buffer\uff0c\u5b83\u4eec\u5e76\u53d1\u7684\u8bf7\u6c42\u53ea\u80fd\u88ab\u987a\u5e8f\u5730\u5904\u7406\u3002 MIT\u5b98\u65b9\u6307\u5bfc\u4e66\u63a8\u8350\u4f7f\u7528\u4ee5\u4e0b\u4e24\u79cd\u65b9\u6848\uff08\u53ef\u4ee5\u4e24\u4e2a\u65b9\u6848\u4e00\u8d77\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u5355\u72ec\u5206\u5f00\u7528\uff0c \u9700\u8981\u81ea\u884c\u6d4b\u8bd5\u770b\u770b\u80fd\u5426\u901a\u8fc7\u6d4b\u8bc4\u7a0b\u5e8f\uff09 \uff1a \u4f7f\u7528 \u54c8\u5e0c\u8868 \uff0c\u5c06\u5404\u5757\u5757\u53f7blockno\u7684\u67d0\u79cd\u6563\u5217\u503c\u4f5c\u4e3akey\u5bf9\u5757\u8fdb\u884c\u5206\u7ec4\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u54c8\u5e0c\u6876\u5206\u914d\u4e00\u4e2a\u4e13\u7528\u7684\u9501\u3002\u901a\u8fc7\u54c8\u5e0c\u6876\u6765\u4ee3\u66ff\u94fe\u8868\uff0c\u5f53\u8981\u83b7\u53d6\u548c\u91ca\u653e\u7f13\u5b58\u5757\u65f6\uff0c\u53ea\u9700\u8981\u5bf9\u67d0\u4e2a\u54c8\u5e0c\u6876\u8fdb\u884c\u52a0\u9501\uff0c\u6876\u4e4b\u95f4\u7684\u64cd\u4f5c\u5c31\u53ef\u4ee5\u5e76\u884c\u8fdb\u884c\uff0c\u63d0\u4f9b\u5e76\u884c\u6027\u80fd\u3002 \u5728 bget() \u4e2d\u67e5\u627e\u6307\u5b9a\u5757\u65f6\uff0c\u9501\u4e0a\u5bf9\u5e94\u7684\u9501\uff08\u83b7\u53d6\u7a7a\u95f2\u5757\u53f7\u987b\u53e6\u4f5c\u5904\u7406\uff09\u3002 \u5f53bget()\u67e5\u627e\u6570\u636e\u5757\u672a\u547d\u4e2d\u65f6\uff0cbget()\u53ef\u4ece\u5176\u4ed6\u54c8\u5e0c\u6876\u9009\u62e9\u4e00\u4e2a\u672a\u88ab\u4f7f\u7528\u7684\u7f13\u5b58\u5757\uff0c\u79fb\u5165\u5230\u5f53\u524d\u7684\u54c8\u5e0c\u6876\u94fe\u8868\u4e2d\u4f7f\u7528\u3002 \u9009\u62e9\u5408\u9002\u7684\u6563\u5217\u51fd\u6570\u4ee5\u5206\u7ec4\uff0c\u5206\u7ec4\u7684\u6570\u91cf\u4e0d\u5fc5\u52a8\u6001\u8c03\u6574\uff0c\u53ef\u4ee5\u53d6\u5b9a\u503c\uff0c\u63a8\u8350\u4f7f\u7528\u8d28\u6570\u7ec4\uff08\u598213\u7ec4\uff09\u4ee5\u51cf\u5c11\u54c8\u5e0c\u4e89\u7528\u3002 \u54c8\u5e0c\u8868\u7684\u641c\u7d22\u548c\u7a7a\u95f2\u7f13\u5b58\u5757\u7684\u67e5\u627e\u9700\u8981\u4fdd\u8bc1\u539f\u5b50\u6027\u3002 \u79fb\u9664\u7a7a\u95f2\u7f13\u5b58\u5757\u5217\u8868( bcache.head )\u3002\u4f7f\u7528 \u65f6\u95f4\u6233 \u4f5c\u4e3a\u5224\u65ad\u7f13\u5b58\u5757\u6700\u4e00\u6b21\u88ab\u8bbf\u95ee\u7684\u987a\u5e8f\u7684\u4f9d\u636e\u3002 \u6b64\u9879\u6539\u52a8\u53ef\u4f7f brelse \u4e0d\u518d\u9700\u8981\u9501\u4e0a bcache lock \u3002 bget\u5728\u627e\u7a7a\u95f2\u5757\u65f6\u4e5f\u53ef\u901a\u8fc7\u65f6\u95f4\u6233\u5f97\u77e5\u6700\u540e\u4e00\u6b21\u88ab\u8bbf\u95ee\u65f6\u95f4\u6700\u65e9\u7684\u7a7a\u95f2\u7f13\u5b58\u5757\u3002 \u65f6\u95f4\u6233\u53ef\u901a\u8fc7kernel/trap.c\u4e2d\u7684ticks\u51fd\u6570\u83b7\u5f97\uff08ticks\u5df2\u5728kernel/def.h\u4e2d\u58f0\u660e\uff0cbio.c\u4e2d\u53ef\u76f4\u63a5\u4f7f\u7528\uff09\u3002 \u4ee5\u4e0b\u60c5\u51b5\u4e2d\uff0c\u9501\u4e89\u7528\u662f\u5141\u8bb8\u7684\uff1a a) \u5f53\u4e24\u4e2a\u8fdb\u7a0b\u540c\u65f6\u8bbf\u95ee\u540c\u4e00\u4e2a\u7f13\u5b58\u6570\u636e\u5757\u53f7blockno\u65f6\uff1b b) \u5f53\u4e24\u4e2a\u8fdb\u7a0b\u540c\u65f6\u6ca1\u6709\u547d\u4e2dcache\uff0c\u9700\u8981\u627e\u4e00\u4e2a\u672a\u4f7f\u7528\u7684block\u6765\u66ff\u4ee3\u65f6\uff1b c) \u5f53\u4e24\u4e2a\u8fdb\u7a0b\u540c\u65f6\u4f7f\u7528\u5757\u65f6\uff0c\u65e0\u8bba\u4f7f\u7528\u4f55\u79cd\u6a21\u5f0f\u5212\u5206\u6570\u636e\u5757\u548c\u9501\uff0c\u90fd\u4f1a\u4ea7\u751f\u4e89\u7528\u7684\u60c5\u51b5\uff0c\u5982\uff0c\u5982\u679c\u4e24\u4e2a\u8fdb\u7a0b\u4f7f\u7528\u7684\u4e24\u4e2a\u6570\u636e\u5757\uff0c\u901a\u8fc7\u54c8\u5e0c\u8868\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u54c8\u5e0c\u7ec4\u90e8\u5206\uff08\u8fd9\u53d6\u51b3\u4e8e\u5177\u4f53\u7684\u8bbe\u8ba1\uff0c\u8bf7\u5c1d\u8bd5\u8c03\u6574\u5177\u4f53\u7684\u6a21\u5f0f\u6765\u907f\u514d\u4e89\u7528\uff0c\u6bd4\u5982\u53ef\u4ee5\u8c03\u6574\u54c8\u5e0c\u8868\u7684\u5927\u5c0f\uff09\u3002","title":"2.4 \u4f18\u5316\u65b9\u6cd5\uff08\u91cd\u8981\uff09"},{"location":"lab3/part3/","text":"\u5b9e\u9a8c\u5b9e\u73b0 \u00b6 \u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5bf9\u4e00\u4e9b\u5b9e\u73b0\u7684\u7ec6\u8282\u505a\u4e00\u5b9a\u7684\u63d0\u9192\u3002\u4f46\u662f\u5b8c\u6574\u7684\u6d41\u7a0b\u9700\u8981\u81ea\u5df1\u628a\u63e1\uff0c\u6211\u4eec \u4e0d\u4f1a\u7ed9\u51fa\u6bcf\u4e00\u6b65\u5b9e\u73b0\u6b65\u9aa4 \u3002\u56e0\u6b64\uff0c\u6700\u91cd\u8981\u7684\u8fd8\u662f\u9605\u8bfb \u5b9e\u9a8c\u539f\u7406 \u5185\u5bb9\uff0c\u5f97\u51fa\u81ea\u5df1\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u7136\u540e\u53c2\u8003 \u5b9e\u9a8c\u5b9e\u73b0 \u8fd9\u90e8\u5206\u7684\u5185\u5bb9\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cxv6\u7684\u4ee3\u7801\u662f\u53ef\u4ee5\u53c2\u8003\u7684\uff0c\u53ef\u4ee5\u770b\u770b\u76f8\u5173\u5b9e\u9a8c\u539f\u7406\u662f\u600e\u4e48\u5b9e\u73b0\u7684\u3002\u540c\u65f6\uff0c\u8fd8\u53ef\u4ee5\u63d2\u6869\uff0c\u4f7f\u7528printf/GDB\u7b49\u65b9\u6cd5\u770b\u770b\u5177\u4f53\u7684\u5185\u5bb9\u3002\u540c\u65f6\uff0c\u8fd8\u53ef\u4ee5\u9605\u8bfb xv6 \u6307\u5bfc\u4e66\uff0c\u770b\u770b\u80cc\u540e\u7684\u8bbe\u8ba1\u673a\u7406\u3002 0. \u4efb\u52a1\u96f6\uff1a\u56de\u7b54\u95ee\u9898 \u00b6 \u56de\u7b54\u95ee\u9898 \u4efb\u52a1\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u5e94\u8be5\u5148\u8981\u9996\u5148\u56de\u7b54\u4e00\u4e9b\u539f\u7406\u6027\u7684\u95ee\u9898\uff0c\u8fd9\u90e8\u5206\u5e94\u8be5\u88ab\u5305\u542b\u5728\u5b9e\u9a8c\u62a5\u544a\u4e2d\uff1a \u5185\u5b58\u5206\u914d\u5668 \u4ec0\u4e48\u662f\u5185\u5b58\u5206\u914d\u5668\uff1f\u5b83\u7684\u4f5c\u7528\u662f\uff1f \u5185\u5b58\u5206\u914d\u5668\u7684\u6570\u636e\u7ed3\u6784\u662f\u4ec0\u4e48\uff1f\u5b83\u6709\u54ea\u4e9b\u64cd\u4f5c\uff08\u51fd\u6570\uff09\uff0c\u5206\u522b\u5b8c\u6210\u4e86\u4ec0\u4e48\u529f\u80fd\uff1f \u4e3a\u4ec0\u4e48\u6307\u5bfc\u4e66\u63d0\u53ca\u7684\u4f18\u5316\u65b9\u6cd5\u53ef\u4ee5\u63d0\u5347\u6027\u80fd\uff1f \u78c1\u76d8\u7f13\u5b58 \u4ec0\u4e48\u662f\u78c1\u76d8\u7f13\u5b58\uff1f\u5b83\u7684\u4f5c\u7528\u662f\uff1f buf\u7ed3\u6784\u4f53\u4e3a\u4ec0\u4e48\u6709prev\u548cnext\u4e24\u4e2a\u6210\u5458\uff0c\u800c\u4e0d\u662f\u53ea\u4fdd\u7559\u5176\u4e2d\u4e00\u4e2a\uff1f\u8bf7\u4ece\u8fd9\u6837\u505a\u7684\u4f18\u70b9\u5206\u6790\uff08\u63d0\u793a\uff1a\u7ed3\u5408\u901a\u8fc7\u8fd9\u4e24\u79cd\u6307\u9488\u904d\u5386\u94fe\u8868\u7684\u5177\u4f53\u573a\u666f\u8fdb\u884c\u601d\u8003\uff09\u3002 \u4e3a\u4ec0\u4e48\u54c8\u5e0c\u8868\u53ef\u4ee5\u63d0\u5347\u78c1\u76d8\u7f13\u5b58\u7684\u6027\u80fd\uff1f\u53ef\u4ee5\u4f7f\u7528\u5185\u5b58\u5206\u914d\u5668\u7684\u4f18\u5316\u65b9\u6cd5\u4f18\u5316\u78c1\u76d8\u7f13\u5b58\u5417\uff1f\u8bf7\u8bf4\u660e\u539f\u56e0\u3002 \u4ee5\u4e0a\u9898\u76ee\u7684\u7b54\u6848\u51e0\u4e4e\u90fd\u80fd\u5728\u6307\u5bfc\u4e66\u4e2d\u627e\u5230\uff0c\u6240\u4ee5\u8bf7\u4ed4\u7ec6\u9605\u8bfb\u6307\u5bfc\u4e66\u3002 \u672c\u5b9e\u9a8c\u7684\u4ee3\u7801\u91cf\u8f83\u5c0f\uff0c\u4f46\u8fd9\u53cd\u800c\u610f\u5473\u7740\u96be\u5ea6\u8f83\u5927\u3002\u56e0\u6b64\uff0c\u5efa\u8bae\u5927\u5bb6\u4ee5 \u56fe \u7684\u5f62\u5f0f \u753b\u51fa\u6570\u636e\u7ed3\u6784\u4ee5\u53ca\u6570\u636e\u7ed3\u6784\u4e4b\u95f4\u7684\u5173\u7cfb\u4ee5\u53ca\u5728\u64cd\u4f5c\u65f6\u4ed6\u4eec\u53d1\u751f\u4e86\u4ec0\u4e48\u53d8\u5316\uff0c\u540c\u65f6\u4e3b\u5f20\u4ee5 \u7b80\u77ed\u800c\u7cbe\u70bc \u7684\u6587\u5b57\u56de\u7b54\u6240\u6709\u95ee\u9898\u3002 1. \u4efb\u52a1\u4e00 \u5185\u5b58\u5206\u914d\u5668 \u00b6 1.1 \u6d41\u7a0b \u00b6 \u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a Step 1 \uff1a\u53c2\u8003 \u8fd9\u4e2a\u6307\u5357 \uff0c\u5207\u6362\u5230lock\u5206\u652f\u5e76\u540c\u6b65\u4e0a\u6e38\u4ed3\u5e93\uff1b Step 2 \uff1a\u7406\u89e3kalloc\u5185\u5b58\u5206\u914d\u7684\u65b9\u5f0f\u548c\u5176\u4e2d\u9501\u7684\u539f\u7406\uff1b Step 3 \uff1a\u4fee\u6539\u5185\u5b58\u5206\u914d\u5668\u6570\u636e\u7ed3\u6784\uff0c\u4f8b\u5982\uff0c\u5c06kalloc\u7684\u5171\u4eabfreelist\u6539\u4e3a\u6bcf\u4e2aCPU\u72ec\u7acb\u7684freelist\uff1b struct run { struct run * next ; }; struct kmem { struct spinlock lock ; struct run * freelist ; }; struct kmem kmems [ NCPU ]; freerange\u4e3a\u6240\u6709\u8fd0\u884cfreerange\u7684CPU\u5206\u914d\u7a7a\u95f2\u7684\u5185\u5b58\u3002 Step 4 \uff1a\u4fee\u6539\u548c\u5185\u5b58\u7ba1\u7406\u5668\u6709\u5173\u7684\u6240\u6709\u64cd\u4f5c\uff0c\u5c3d\u53ef\u80fd\u51cf\u5c11\u9501\u4e89\u7528\uff1b Step 5 \uff1a\u542f\u52a8\u6d4b\u8bd5\u7a0b\u5e8f\u8fdb\u884c\u6d4b\u8bd5\u3002 1.2 \u5b9e\u73b0\u63d0\u793a \u00b6 \u5206\u914d\u5185\u5b58\u5757 \uff1a \u4f18\u5148 \u5206\u914d \u5f53\u524d CPU\u7684freelist\u4e2d\u7684\u5185\u5b58\u5757\uff1b\u5f53\u524dCPU\u6ca1\u6709\u7a7a\u95f2\u5185\u5b58\u5757\uff0c\u5219\u4ece\u5176\u4ed6CPU\u7684freelist\u4e2d \u7a83\u53d6 \u5185\u5b58\u5757\uff1b\u6240\u6709CPU\u90fd\u6ca1\u6709\u7a7a\u95f2\u5757\u65f6\uff0c\u8fd4\u56de0\u3002 \u91ca\u653e\u5185\u5b58\u5757 \uff1a\u5c06\u5185\u5b58\u5757\u653e\u5165\u5f53\u524dCPU\u7684freelist\u4e2d\u3002 \u9501\u7684\u673a\u5236 \uff1a\u9501\u7684\u4f7f\u7528\u548c\u539f\u6765\u4f1a\u6709\u4e9b\u4e0d\u540c\uff0c\u4f60\u9700\u8981\u6ce8\u610f\u4f60\u7684\u8bbe\u8ba1\u5e94\u8be5\u8981\u6ee1\u8db3\u4e00\u81f4\u6027\u3002\u7b80\u5355\u5730\u8bf4\uff0c\u4e5f\u5c31\u662f\u4fdd\u8bc1\u591a\u4e2acpu\u8bbf\u95ee\u540c\u4e00\u4e2a\u6570\u636e\u7684\u65f6\u5019\uff0c\u4f1a\u51fa\u9519\u7684\u8bdd\u5c31\u8981\u52a0\u9501\u3002 \u53ef\u4ee5\u4f7f\u7528kernel/param.h\u4e2d\u7684\u5b8fNCPU\uff0c\u5176\u8868\u793aCPU\u7684\u6570\u76ee\u3002 \u4f7f\u7528cpuid()\u51fd\u6570\u4f1a\u8fd4\u56de\u5f53\u524dCPU\u7684id\u53f7\uff08\u8303\u56f40~NCPU-1\uff09\u3002\u5728\u8c03\u7528cpuid()\u5e76\u4f7f\u7528\u5176\u8fd4\u56de\u503c\u7684\u8fc7\u7a0b\u4e2d\u9700\u8981\u5173\u95ed\u4e2d\u65ad\u3002\u4f7f\u7528push_off()\u53ef\u4ee5\u5173\u95ed\u4e2d\u65ad\uff0c\u4f7f\u7528pop_off()\u53ef\u4ee5\u6253\u5f00\u4e2d\u65ad\u3002 \u8bf7\u4f7f\u7528initlock()\u521d\u59cb\u5316\u9501\uff0c\u5e76 \u8981\u6c42\u9501\u540d\u5b57\u4ee5kmem\u5f00\u5934 \u3002 \u4f7f\u7528freerange\u4e3a\u6240\u6709\u8fd0\u884cfreerange\u7684CPU\u5206\u914d\u7a7a\u95f2\u7684\u5185\u5b58\u3002 2. \u4efb\u52a1\u4e8c \u78c1\u76d8\u7f13\u5b58 \u00b6 \u5177\u4f53\u8981\u6c42\uff1a\u4fee\u6539\u78c1\u76d8\u7f13\u5b58\u5757\u5217\u8868\u7684\u7ba1\u7406\u673a\u5236 \uff0c\u4f7f\u5f97\u53ef\u7528\u591a\u4e2a\u9501\u7ba1\u7406\u7f13\u5b58\u5757\uff0c\u4ece\u800c\u51cf\u5c11\u7f13\u5b58\u5757\u7ba1\u7406\u7684\u9501\u4e89\u7528\u3002 xv6 book\u4e2d8.2 - 8.3 \u8282\u6709\u5173\u4e8e\u5757\u7f13\u5b58\u7684\u63cf\u8ff0\u3002 2.1 \u6d41\u7a0b \u00b6 \u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a Step 1 \uff1a \u7406\u89e3bio.c\u4e2d\u4ee3\u7801\u7684\u884c\u4e3a\u4ee5\u53ca\u539f\u7406\uff1b Step 2 \uff1a \u7406\u89e3bio.c\u4e2d\u9501\u7684\u4f5c\u7528\u4ee5\u53ca\u539f\u7406\uff1b Step 3 \uff1a\u6784\u5efa\u78c1\u76d8\u7f13\u5b58\u6570\u636e\u7ed3\u6784\uff0c\u4f8b\u5982\uff0c\u53ef\u4ee5\u6784\u5efa13\u4e2a\u54c8\u5e0c\u7ec4\uff1b #define NBUCKETS 13 struct { struct spinlock lock [ NBUCKETS ]; struct buf buf [ NBUF ]; // Linked list of all buffers, through prev/next. // head.next is most recently used. //struct buf head; struct buf hashbucket [ NBUCKETS ]; //\u6bcf\u4e2a\u54c8\u5e0c\u961f\u5217\u4e00\u4e2alinked list\u53ca\u4e00\u4e2alock } bcache ; Step 4 \uff1a\u4fee\u6539\u548c\u78c1\u76d8\u7f13\u5b58\u6709\u5173\u7684\u6240\u6709\u64cd\u4f5c\uff0c\u5c3d\u53ef\u80fd\u51cf\u5c11\u9501\u4e89\u7528\uff1b Step 5 \uff1a\u542f\u52a8\u6d4b\u8bd5\u7a0b\u5e8f\u8fdb\u884c\u6d4b\u8bd5\u3002 2.2 \u5b9e\u73b0\u63d0\u793a \u00b6 \u6bcf\u4e2a\u6570\u636e\u5757\u6700\u591a\u53ea\u80fd\u7ef4\u62a4\u4e00\u4efd\u7f13\u5b58\u3002 \u8bf7\u5c06\u672c\u5b9e\u9a8c\u6d89\u53ca\u7684\u9501\u4ee5 bcache \u5f00\u5934\u6765\u547d\u540d\uff0c\u53ef\u4ee5\u8c03\u7528initlock()\u6765\u521d\u59cb\u5316bcache\u9501\u3002 \u54c8\u5e0c\u6876\u7684\u6570\u91cf\u53ef\u4ee5\u4f7f\u7528\u56fa\u5b9a\u7684\u6570\u76ee\uff0c\u4e0d\u9700\u8981\u52a8\u6001\u5730\u6269\u5c55\u54c8\u5e0c\u8868\u7684\u5927\u5c0f\u3002\u8bf7\u4f7f\u7528\u7d20\u6570\uff08\u6bd4\u598213\uff09\u6765\u5b9a\u4e49\u54c8\u5e0c\u7ec4\u7684\u6570\u76ee\u6765\u5c3d\u53ef\u80fd\u51cf\u5c11\u54c8\u5e0c\u4e89\u7528\uff1b \u5728\u54c8\u5e0c\u8868\u4e2d\u641c\u7d22\u5757\u7f13\u5b58\u4e14\u4e3a\u672a\u547d\u4e2d\u7684\u7f13\u5b58\u5206\u914d\u4e00\u4e2a\u65b0\u7684\u6761\u76ee\uff0c\u8fd9\u6574\u4e2a\u64cd\u4f5c\u5fc5\u987b\u662f\u539f\u5b50\u6027\u64cd\u4f5c\u7684\uff08\u4f3c\u4e4e\u8981\u52a0\u9501\u5662\uff09\uff1b \u5141\u8bb8\u6309\u987a\u5e8f\u67e5\u627e\u672a\u88ab\u4f7f\u7528\u7684\u6570\u636e\u7f13\u5b58\u5757\uff08\u5373\u5f15\u7528\u8ba1\u6570refcnt\u4e3a0\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f53bget()\u67e5\u627e\u6570\u636e\u5757\u672a\u547d\u4e2d\u65f6\uff0cbget\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u8fd9\u6837\u7684\u672a\u88ab\u4f7f\u7528\u7684\u7f13\u5b58\u5757\uff0c\u79fb\u5165\u5230\u4ee5blockno\u4e3akey\u7684\u54c8\u5e0c\u7ec4\u94fe\u8868\u4e2d\u4f7f\u7528\u3002 \u5982\u679c\u4f60\u7684\u5b9e\u73b0\u4e2d\u51fa\u73b0\u4e86\u540c\u65f6\u9501\u4e0a\u4e24\u4e2a\u4ee5\u4e0a\u7684\u9501\u7684\u60c5\u51b5\uff08\u6bd4\u5982\u8bf4\uff0cbget()\u5728\u83b7\u53d6\u7a7a\u95f2\u5757\u65f6\uff0c\u53ef\u80fd\u9700\u8981\u79fb\u52a8\u4e00\u4e2a\u5185\u5b58\u5757\u4ece\u4e00\u4e2a\u54c8\u5e0c\u7ec4\u5230\u53e6\u4e00\u4e2a\u54c8\u5e0c\u7ec4\uff09\uff0c\u6ce8\u610f\u907f\u514d\u6b7b\u9501\u7684\u51fa\u73b0\u3002 \u4e00\u4e9b\u8c03\u8bd5\u7684\u63d0\u793a\uff1a\u9650\u5236CPU\u4e32\u884c\u8bbf\u95ee\u53ef\u4ee5\u4fbf\u4e8e\u8c03\u8bd5\u9501\u7ade\u4e89\u4e4b\u5916\u7684\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u4f7f\u7528\u54c8\u5e0c\u8868\u7684\u65b9\u6cd5\u4f18\u5316\u65f6\uff0c\u53ef\u4ee5\u5148\u4fdd\u7559bget\u4e2d\u5bf9\u5168\u5c40\u9501 bcache.lock \u7684\u4f7f\u7528\uff0c\u5f53\u786e\u4fdd\u4f60\u7684\u8bbe\u8ba1\u6ca1\u95ee\u9898\u65f6\uff0c\u518d\u5c06\u5176\u53bb\u9664\u3002\u4f60\u4e5f\u53ef\u4ee5\u5728\u8c03\u8bd5\u6b64\u7c7b\u95ee\u9898\u65f6\u4ec5\u5f00\u542f\u5355\u4e2aCPU\uff0c\u4f7f\u7528\u547d\u4ee4 make CPUS=1 qemu \u91cd\u65b0\u7f16\u8bd1\u5373\u53ef\uff0c\u4f46\u8bf7\u8bb0\u5f97\u5728\u6d4b\u8bd5\u524d\u6253\u5f00\u3002","title":"\u5b9e\u9a8c\u5b9e\u73b0"},{"location":"lab3/part3/#_1","text":"\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5bf9\u4e00\u4e9b\u5b9e\u73b0\u7684\u7ec6\u8282\u505a\u4e00\u5b9a\u7684\u63d0\u9192\u3002\u4f46\u662f\u5b8c\u6574\u7684\u6d41\u7a0b\u9700\u8981\u81ea\u5df1\u628a\u63e1\uff0c\u6211\u4eec \u4e0d\u4f1a\u7ed9\u51fa\u6bcf\u4e00\u6b65\u5b9e\u73b0\u6b65\u9aa4 \u3002\u56e0\u6b64\uff0c\u6700\u91cd\u8981\u7684\u8fd8\u662f\u9605\u8bfb \u5b9e\u9a8c\u539f\u7406 \u5185\u5bb9\uff0c\u5f97\u51fa\u81ea\u5df1\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u7136\u540e\u53c2\u8003 \u5b9e\u9a8c\u5b9e\u73b0 \u8fd9\u90e8\u5206\u7684\u5185\u5bb9\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cxv6\u7684\u4ee3\u7801\u662f\u53ef\u4ee5\u53c2\u8003\u7684\uff0c\u53ef\u4ee5\u770b\u770b\u76f8\u5173\u5b9e\u9a8c\u539f\u7406\u662f\u600e\u4e48\u5b9e\u73b0\u7684\u3002\u540c\u65f6\uff0c\u8fd8\u53ef\u4ee5\u63d2\u6869\uff0c\u4f7f\u7528printf/GDB\u7b49\u65b9\u6cd5\u770b\u770b\u5177\u4f53\u7684\u5185\u5bb9\u3002\u540c\u65f6\uff0c\u8fd8\u53ef\u4ee5\u9605\u8bfb xv6 \u6307\u5bfc\u4e66\uff0c\u770b\u770b\u80cc\u540e\u7684\u8bbe\u8ba1\u673a\u7406\u3002","title":"\u5b9e\u9a8c\u5b9e\u73b0"},{"location":"lab3/part3/#0","text":"\u56de\u7b54\u95ee\u9898 \u4efb\u52a1\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u5e94\u8be5\u5148\u8981\u9996\u5148\u56de\u7b54\u4e00\u4e9b\u539f\u7406\u6027\u7684\u95ee\u9898\uff0c\u8fd9\u90e8\u5206\u5e94\u8be5\u88ab\u5305\u542b\u5728\u5b9e\u9a8c\u62a5\u544a\u4e2d\uff1a \u5185\u5b58\u5206\u914d\u5668 \u4ec0\u4e48\u662f\u5185\u5b58\u5206\u914d\u5668\uff1f\u5b83\u7684\u4f5c\u7528\u662f\uff1f \u5185\u5b58\u5206\u914d\u5668\u7684\u6570\u636e\u7ed3\u6784\u662f\u4ec0\u4e48\uff1f\u5b83\u6709\u54ea\u4e9b\u64cd\u4f5c\uff08\u51fd\u6570\uff09\uff0c\u5206\u522b\u5b8c\u6210\u4e86\u4ec0\u4e48\u529f\u80fd\uff1f \u4e3a\u4ec0\u4e48\u6307\u5bfc\u4e66\u63d0\u53ca\u7684\u4f18\u5316\u65b9\u6cd5\u53ef\u4ee5\u63d0\u5347\u6027\u80fd\uff1f \u78c1\u76d8\u7f13\u5b58 \u4ec0\u4e48\u662f\u78c1\u76d8\u7f13\u5b58\uff1f\u5b83\u7684\u4f5c\u7528\u662f\uff1f buf\u7ed3\u6784\u4f53\u4e3a\u4ec0\u4e48\u6709prev\u548cnext\u4e24\u4e2a\u6210\u5458\uff0c\u800c\u4e0d\u662f\u53ea\u4fdd\u7559\u5176\u4e2d\u4e00\u4e2a\uff1f\u8bf7\u4ece\u8fd9\u6837\u505a\u7684\u4f18\u70b9\u5206\u6790\uff08\u63d0\u793a\uff1a\u7ed3\u5408\u901a\u8fc7\u8fd9\u4e24\u79cd\u6307\u9488\u904d\u5386\u94fe\u8868\u7684\u5177\u4f53\u573a\u666f\u8fdb\u884c\u601d\u8003\uff09\u3002 \u4e3a\u4ec0\u4e48\u54c8\u5e0c\u8868\u53ef\u4ee5\u63d0\u5347\u78c1\u76d8\u7f13\u5b58\u7684\u6027\u80fd\uff1f\u53ef\u4ee5\u4f7f\u7528\u5185\u5b58\u5206\u914d\u5668\u7684\u4f18\u5316\u65b9\u6cd5\u4f18\u5316\u78c1\u76d8\u7f13\u5b58\u5417\uff1f\u8bf7\u8bf4\u660e\u539f\u56e0\u3002 \u4ee5\u4e0a\u9898\u76ee\u7684\u7b54\u6848\u51e0\u4e4e\u90fd\u80fd\u5728\u6307\u5bfc\u4e66\u4e2d\u627e\u5230\uff0c\u6240\u4ee5\u8bf7\u4ed4\u7ec6\u9605\u8bfb\u6307\u5bfc\u4e66\u3002 \u672c\u5b9e\u9a8c\u7684\u4ee3\u7801\u91cf\u8f83\u5c0f\uff0c\u4f46\u8fd9\u53cd\u800c\u610f\u5473\u7740\u96be\u5ea6\u8f83\u5927\u3002\u56e0\u6b64\uff0c\u5efa\u8bae\u5927\u5bb6\u4ee5 \u56fe \u7684\u5f62\u5f0f \u753b\u51fa\u6570\u636e\u7ed3\u6784\u4ee5\u53ca\u6570\u636e\u7ed3\u6784\u4e4b\u95f4\u7684\u5173\u7cfb\u4ee5\u53ca\u5728\u64cd\u4f5c\u65f6\u4ed6\u4eec\u53d1\u751f\u4e86\u4ec0\u4e48\u53d8\u5316\uff0c\u540c\u65f6\u4e3b\u5f20\u4ee5 \u7b80\u77ed\u800c\u7cbe\u70bc \u7684\u6587\u5b57\u56de\u7b54\u6240\u6709\u95ee\u9898\u3002","title":"0. \u4efb\u52a1\u96f6\uff1a\u56de\u7b54\u95ee\u9898"},{"location":"lab3/part3/#1","text":"","title":"1. \u4efb\u52a1\u4e00 \u5185\u5b58\u5206\u914d\u5668"},{"location":"lab3/part3/#11","text":"\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a Step 1 \uff1a\u53c2\u8003 \u8fd9\u4e2a\u6307\u5357 \uff0c\u5207\u6362\u5230lock\u5206\u652f\u5e76\u540c\u6b65\u4e0a\u6e38\u4ed3\u5e93\uff1b Step 2 \uff1a\u7406\u89e3kalloc\u5185\u5b58\u5206\u914d\u7684\u65b9\u5f0f\u548c\u5176\u4e2d\u9501\u7684\u539f\u7406\uff1b Step 3 \uff1a\u4fee\u6539\u5185\u5b58\u5206\u914d\u5668\u6570\u636e\u7ed3\u6784\uff0c\u4f8b\u5982\uff0c\u5c06kalloc\u7684\u5171\u4eabfreelist\u6539\u4e3a\u6bcf\u4e2aCPU\u72ec\u7acb\u7684freelist\uff1b struct run { struct run * next ; }; struct kmem { struct spinlock lock ; struct run * freelist ; }; struct kmem kmems [ NCPU ]; freerange\u4e3a\u6240\u6709\u8fd0\u884cfreerange\u7684CPU\u5206\u914d\u7a7a\u95f2\u7684\u5185\u5b58\u3002 Step 4 \uff1a\u4fee\u6539\u548c\u5185\u5b58\u7ba1\u7406\u5668\u6709\u5173\u7684\u6240\u6709\u64cd\u4f5c\uff0c\u5c3d\u53ef\u80fd\u51cf\u5c11\u9501\u4e89\u7528\uff1b Step 5 \uff1a\u542f\u52a8\u6d4b\u8bd5\u7a0b\u5e8f\u8fdb\u884c\u6d4b\u8bd5\u3002","title":"1.1 \u6d41\u7a0b"},{"location":"lab3/part3/#12","text":"\u5206\u914d\u5185\u5b58\u5757 \uff1a \u4f18\u5148 \u5206\u914d \u5f53\u524d CPU\u7684freelist\u4e2d\u7684\u5185\u5b58\u5757\uff1b\u5f53\u524dCPU\u6ca1\u6709\u7a7a\u95f2\u5185\u5b58\u5757\uff0c\u5219\u4ece\u5176\u4ed6CPU\u7684freelist\u4e2d \u7a83\u53d6 \u5185\u5b58\u5757\uff1b\u6240\u6709CPU\u90fd\u6ca1\u6709\u7a7a\u95f2\u5757\u65f6\uff0c\u8fd4\u56de0\u3002 \u91ca\u653e\u5185\u5b58\u5757 \uff1a\u5c06\u5185\u5b58\u5757\u653e\u5165\u5f53\u524dCPU\u7684freelist\u4e2d\u3002 \u9501\u7684\u673a\u5236 \uff1a\u9501\u7684\u4f7f\u7528\u548c\u539f\u6765\u4f1a\u6709\u4e9b\u4e0d\u540c\uff0c\u4f60\u9700\u8981\u6ce8\u610f\u4f60\u7684\u8bbe\u8ba1\u5e94\u8be5\u8981\u6ee1\u8db3\u4e00\u81f4\u6027\u3002\u7b80\u5355\u5730\u8bf4\uff0c\u4e5f\u5c31\u662f\u4fdd\u8bc1\u591a\u4e2acpu\u8bbf\u95ee\u540c\u4e00\u4e2a\u6570\u636e\u7684\u65f6\u5019\uff0c\u4f1a\u51fa\u9519\u7684\u8bdd\u5c31\u8981\u52a0\u9501\u3002 \u53ef\u4ee5\u4f7f\u7528kernel/param.h\u4e2d\u7684\u5b8fNCPU\uff0c\u5176\u8868\u793aCPU\u7684\u6570\u76ee\u3002 \u4f7f\u7528cpuid()\u51fd\u6570\u4f1a\u8fd4\u56de\u5f53\u524dCPU\u7684id\u53f7\uff08\u8303\u56f40~NCPU-1\uff09\u3002\u5728\u8c03\u7528cpuid()\u5e76\u4f7f\u7528\u5176\u8fd4\u56de\u503c\u7684\u8fc7\u7a0b\u4e2d\u9700\u8981\u5173\u95ed\u4e2d\u65ad\u3002\u4f7f\u7528push_off()\u53ef\u4ee5\u5173\u95ed\u4e2d\u65ad\uff0c\u4f7f\u7528pop_off()\u53ef\u4ee5\u6253\u5f00\u4e2d\u65ad\u3002 \u8bf7\u4f7f\u7528initlock()\u521d\u59cb\u5316\u9501\uff0c\u5e76 \u8981\u6c42\u9501\u540d\u5b57\u4ee5kmem\u5f00\u5934 \u3002 \u4f7f\u7528freerange\u4e3a\u6240\u6709\u8fd0\u884cfreerange\u7684CPU\u5206\u914d\u7a7a\u95f2\u7684\u5185\u5b58\u3002","title":"1.2 \u5b9e\u73b0\u63d0\u793a"},{"location":"lab3/part3/#2","text":"\u5177\u4f53\u8981\u6c42\uff1a\u4fee\u6539\u78c1\u76d8\u7f13\u5b58\u5757\u5217\u8868\u7684\u7ba1\u7406\u673a\u5236 \uff0c\u4f7f\u5f97\u53ef\u7528\u591a\u4e2a\u9501\u7ba1\u7406\u7f13\u5b58\u5757\uff0c\u4ece\u800c\u51cf\u5c11\u7f13\u5b58\u5757\u7ba1\u7406\u7684\u9501\u4e89\u7528\u3002 xv6 book\u4e2d8.2 - 8.3 \u8282\u6709\u5173\u4e8e\u5757\u7f13\u5b58\u7684\u63cf\u8ff0\u3002","title":"2. \u4efb\u52a1\u4e8c \u78c1\u76d8\u7f13\u5b58"},{"location":"lab3/part3/#21","text":"\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a Step 1 \uff1a \u7406\u89e3bio.c\u4e2d\u4ee3\u7801\u7684\u884c\u4e3a\u4ee5\u53ca\u539f\u7406\uff1b Step 2 \uff1a \u7406\u89e3bio.c\u4e2d\u9501\u7684\u4f5c\u7528\u4ee5\u53ca\u539f\u7406\uff1b Step 3 \uff1a\u6784\u5efa\u78c1\u76d8\u7f13\u5b58\u6570\u636e\u7ed3\u6784\uff0c\u4f8b\u5982\uff0c\u53ef\u4ee5\u6784\u5efa13\u4e2a\u54c8\u5e0c\u7ec4\uff1b #define NBUCKETS 13 struct { struct spinlock lock [ NBUCKETS ]; struct buf buf [ NBUF ]; // Linked list of all buffers, through prev/next. // head.next is most recently used. //struct buf head; struct buf hashbucket [ NBUCKETS ]; //\u6bcf\u4e2a\u54c8\u5e0c\u961f\u5217\u4e00\u4e2alinked list\u53ca\u4e00\u4e2alock } bcache ; Step 4 \uff1a\u4fee\u6539\u548c\u78c1\u76d8\u7f13\u5b58\u6709\u5173\u7684\u6240\u6709\u64cd\u4f5c\uff0c\u5c3d\u53ef\u80fd\u51cf\u5c11\u9501\u4e89\u7528\uff1b Step 5 \uff1a\u542f\u52a8\u6d4b\u8bd5\u7a0b\u5e8f\u8fdb\u884c\u6d4b\u8bd5\u3002","title":"2.1 \u6d41\u7a0b"},{"location":"lab3/part3/#22","text":"\u6bcf\u4e2a\u6570\u636e\u5757\u6700\u591a\u53ea\u80fd\u7ef4\u62a4\u4e00\u4efd\u7f13\u5b58\u3002 \u8bf7\u5c06\u672c\u5b9e\u9a8c\u6d89\u53ca\u7684\u9501\u4ee5 bcache \u5f00\u5934\u6765\u547d\u540d\uff0c\u53ef\u4ee5\u8c03\u7528initlock()\u6765\u521d\u59cb\u5316bcache\u9501\u3002 \u54c8\u5e0c\u6876\u7684\u6570\u91cf\u53ef\u4ee5\u4f7f\u7528\u56fa\u5b9a\u7684\u6570\u76ee\uff0c\u4e0d\u9700\u8981\u52a8\u6001\u5730\u6269\u5c55\u54c8\u5e0c\u8868\u7684\u5927\u5c0f\u3002\u8bf7\u4f7f\u7528\u7d20\u6570\uff08\u6bd4\u598213\uff09\u6765\u5b9a\u4e49\u54c8\u5e0c\u7ec4\u7684\u6570\u76ee\u6765\u5c3d\u53ef\u80fd\u51cf\u5c11\u54c8\u5e0c\u4e89\u7528\uff1b \u5728\u54c8\u5e0c\u8868\u4e2d\u641c\u7d22\u5757\u7f13\u5b58\u4e14\u4e3a\u672a\u547d\u4e2d\u7684\u7f13\u5b58\u5206\u914d\u4e00\u4e2a\u65b0\u7684\u6761\u76ee\uff0c\u8fd9\u6574\u4e2a\u64cd\u4f5c\u5fc5\u987b\u662f\u539f\u5b50\u6027\u64cd\u4f5c\u7684\uff08\u4f3c\u4e4e\u8981\u52a0\u9501\u5662\uff09\uff1b \u5141\u8bb8\u6309\u987a\u5e8f\u67e5\u627e\u672a\u88ab\u4f7f\u7528\u7684\u6570\u636e\u7f13\u5b58\u5757\uff08\u5373\u5f15\u7528\u8ba1\u6570refcnt\u4e3a0\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f53bget()\u67e5\u627e\u6570\u636e\u5757\u672a\u547d\u4e2d\u65f6\uff0cbget\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u8fd9\u6837\u7684\u672a\u88ab\u4f7f\u7528\u7684\u7f13\u5b58\u5757\uff0c\u79fb\u5165\u5230\u4ee5blockno\u4e3akey\u7684\u54c8\u5e0c\u7ec4\u94fe\u8868\u4e2d\u4f7f\u7528\u3002 \u5982\u679c\u4f60\u7684\u5b9e\u73b0\u4e2d\u51fa\u73b0\u4e86\u540c\u65f6\u9501\u4e0a\u4e24\u4e2a\u4ee5\u4e0a\u7684\u9501\u7684\u60c5\u51b5\uff08\u6bd4\u5982\u8bf4\uff0cbget()\u5728\u83b7\u53d6\u7a7a\u95f2\u5757\u65f6\uff0c\u53ef\u80fd\u9700\u8981\u79fb\u52a8\u4e00\u4e2a\u5185\u5b58\u5757\u4ece\u4e00\u4e2a\u54c8\u5e0c\u7ec4\u5230\u53e6\u4e00\u4e2a\u54c8\u5e0c\u7ec4\uff09\uff0c\u6ce8\u610f\u907f\u514d\u6b7b\u9501\u7684\u51fa\u73b0\u3002 \u4e00\u4e9b\u8c03\u8bd5\u7684\u63d0\u793a\uff1a\u9650\u5236CPU\u4e32\u884c\u8bbf\u95ee\u53ef\u4ee5\u4fbf\u4e8e\u8c03\u8bd5\u9501\u7ade\u4e89\u4e4b\u5916\u7684\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u4f7f\u7528\u54c8\u5e0c\u8868\u7684\u65b9\u6cd5\u4f18\u5316\u65f6\uff0c\u53ef\u4ee5\u5148\u4fdd\u7559bget\u4e2d\u5bf9\u5168\u5c40\u9501 bcache.lock \u7684\u4f7f\u7528\uff0c\u5f53\u786e\u4fdd\u4f60\u7684\u8bbe\u8ba1\u6ca1\u95ee\u9898\u65f6\uff0c\u518d\u5c06\u5176\u53bb\u9664\u3002\u4f60\u4e5f\u53ef\u4ee5\u5728\u8c03\u8bd5\u6b64\u7c7b\u95ee\u9898\u65f6\u4ec5\u5f00\u542f\u5355\u4e2aCPU\uff0c\u4f7f\u7528\u547d\u4ee4 make CPUS=1 qemu \u91cd\u65b0\u7f16\u8bd1\u5373\u53ef\uff0c\u4f46\u8bf7\u8bb0\u5f97\u5728\u6d4b\u8bd5\u524d\u6253\u5f00\u3002","title":"2.2 \u5b9e\u73b0\u63d0\u793a"},{"location":"lab3/part4/","text":"xv6\u4e2dLock\u7684\u5b9e\u73b0\uff08\u9009\u8bfb\uff09 \u00b6 \u8fd9\u90e8\u5206\u6df1\u5165\u63a2\u8ba8\u4e86\u9501\u7684\u57fa\u672c\u539f\u7406\u3001\u5b9e\u73b0\u65b9\u6cd5\u548c\u4f7f\u7528\u65b9\u6cd5\uff0c\u53ef\u80fd\u6709\u4e9b\u96be\u4ee5\u7406\u89e3\uff0c\u8d85\u51fa\u4e86\u672c\u5b9e\u9a8c\u7684\u6c34\u5e73\u8981\u6c42\uff0c\u4f46\u4ecd\u7136\u5728\u77e5\u8bc6\u8303\u56f4\u5185\uff0c\u56e0\u6b64\u53ef\u4f9b\u611f\u5174\u8da3\u7684\u540c\u5b66\u8fdb\u884c\u53c2\u8003\u3002 1. \u9501\u7684\u57fa\u672c\u5b9e\u9a8c\u539f\u7406 \u00b6 kalloc.c\u4e2d\u8c03\u7528acquire()\u548crelease()\u6765\u83b7\u53d6\u9501\u548c\u91ca\u653e\u9501\u3002\u9996\u5148\u9700\u8981\u77e5\u9053\u7684\u662f\u9501\u7684acquire\uff08\u6216\u8005\u53ebP\uff09\u548crelease\uff08V\uff09\u7684\u5b9e\u73b0\u5e76\u4e0d\u662f\u4e00\u4ef6\u7b80\u5355\u7684\u4e8b\u60c5\u3002\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e2a\u6700naive\u7684\u5b9e\u73b0\uff1a 1. void acquire ( struct spinlock * lk ) // does not work! 2. { 3. for (;;) { 4. if ( lk -> locked == 0 ) { 5. lk -> locked = 1 ; 6. break ; 7. } 8. } 9. } \u8fd9\u4e2a\u4ee3\u7801\u975e\u5e38\u5bb9\u6613\u7406\u89e3\uff0c\u5982\u679clk\u88ab\u9501\u4e0a\u4e86\uff0c\u90a3\u5c31\u7ee7\u7eed\u5faa\u73af\uff0c\u5982\u679clk\u672a\u88ab\u9501\u4e0a\uff0c\u90a3\u5c31\u7ed9\u5b83\u52a0\u9501\u5e76\u9000\u51fa\u3002\u4f46\u8fd9\u4e2a\u5b9e\u73b0\u662f\u6709\u7f3a\u9677\u7684\uff0c\u8ba9\u6211\u4eec\u8bd5\u60f3\u4e00\u4e0b\u4ee5\u4e0b\u573a\u666f\uff1a \u67d0\u4e2a\u9519\u8bef\u573a\u666f lk\u4e00\u5f00\u59cb\u6ca1\u6709\u88ab\u9501\u4e0a\uff0c\u5373lk->locked = 0; \u7136\u540eCPU0\u5728\u8dd1\u8fdb\u7a0bA\u800cCPU1\u5728\u8dd1\u8fdb\u7a0bB\uff0cA\u548cB\u540c\u65f6\u5bf9\u8fd9\u4e2a\u9501\u53d1\u8d77\u4e86acquire\uff1b \u6211\u4eec\u6240\u5e0c\u671b\u770b\u5230\u7684\u662f\uff0c\u9501\u88ab\u4e14\u53ea\u88abA\u6216B\u4e2d\u7684\u4e00\u4e2a\u8fdb\u7a0b\u9501\u4f4f\uff0c\u800c\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u5219\u7ee7\u7eed\u5728for\u4e2d\u5faa\u73af\u7b49\u5f85\u3002 \u4f46\u662f\uff0c\u5047\u8bbeCPU0\u548cCPU1\u540c\u65f6\u6267\u884c\u5230\u4e86\u7b2c6\u884c\uff0c\u90a3\u4e48\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f \u6ca1\u9519\uff0c\u4e24\u4e2aCPU\u90fd\u53d1\u73b0lk->locked == 0\uff0c\u56e0\u4e3a\u53e6\u4e00\u4e2aCPU\u8fd8\u6ca1\u6709\u6765\u5f97\u53ca\u6539\u52a8lk->locked; \u8fd9\u5c31\u4f1a\u5bfc\u81f4A\u548cB\u540c\u65f6\u83b7\u5f97\u9501\uff0c\u5e76\u4eceacquire\u4e2d\u8fd4\u56de\uff0c\u8fd9\u663e\u7136\u4e0d\u662f\u6211\u4eec\u5e0c\u671b\u770b\u5230\u7684\u3002 \u90a3acquire\u5230\u5e95\u662f\u600e\u4e48\u5b9e\u73b0\u7684\u5462\uff1f\u8fd9\u4e2a\u4ec5\u51ed\u8f6f\u4ef6\u662f\u65e0\u6cd5\u5b9e\u73b0\u7684\uff0c\u9700\u8981\u786c\u4ef6\u53c2\u4e0e\u8f85\u52a9\u5b9e\u73b0\u3002 \u5728\u8fd9\u91cc\u6211\u4eec\u5148\u4ecb\u7ecd\u4e00\u6761\u7279\u6b8a\u7684CPU\u6307\u4ee4amoswap\u3002amoswap\u5b9e\u73b0\u4e86\u5728\u4e00\u6761\u6307\u4ee4\u5b8c\u6210\u4e00\u6b21 load \u548c store\uff0c\u66f4\u5177\u4f53\u7684\u8bf4\uff0c\u5c31\u662f\u53ef\u4ee5\u5c06\u4e00\u4e2a\u5bc4\u5b58\u5668\u7684\u503c\u548c\u67d0\u4e00\u5185\u5b58\u5730\u5740\u7684\u503c\u505a\u4ea4\u6362\uff0c\u5c06\u6307\u5b9a\u5185\u5b58\u5730\u5740\u7684\u503c\u653e\u5165\u5bc4\u5b58\u5668\uff0c\u540c\u65f6\u5c06\u5bc4\u5b58\u5668\u7684\u503c\u653e\u5165\u5185\u5b58\u3002\u6b64\u5916\uff0cCPU\u8fd8\u4f1a\u4fdd\u8bc1\u67d0\u4e00CPU\u6838\u5728\u6267\u884c\u8fd9\u4e00\u6307\u4ee4\u65f6\uff0c\u5176\u4ed6CPU\u6838\u4e0d\u80fd\u8bfb\u6216\u5199\u5bf9\u5e94\u7684\u5185\u5b58\u5730\u5740\u3002 amoswap\u6307\u4ee4\u548c__sync_lock_test_and_set \u5728C\u8bed\u8a00\u4e2d\u4f7f\u7528\u8fd9\u4e00\u6c47\u7f16\u6307\u4ee4\u7684\u8bed\u53e5\u8c03\u7528\u662f __sync_lock_test_and_set() \u3002 \u8fd9\u4e00\u51fd\u6570\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u8981\u5199\u5165\u7684\u5730\u5740\u548c\u8981\u5199\u5165\u7684\u503c\uff0c\u8fd4\u56de\u503c\u662f\u5199\u5165\u5730\u5740\u539f\u6765\u7684\u503c\u3002 \u8bf7\u4ed4\u7ec6\u6bd4\u8f83amoswap\u6307\u4ee4\u548c__sync_lock_test_and_set\u884c\u4e3a\u4e0a\u7684\u76f8\u4f3c\u4e4b\u5904\uff0c \u786e\u4fdd\u4f60\u5df2\u7ecf\u5927\u81f4\u77e5\u9053__sync_lock_test_and_set\u662f\u5982\u4f55\u4f7f\u7528amoswap\u5b9e\u73b0\u529f\u80fd\u3002 \u4e86\u89e3\u4e86__sync_lock_test_and_set\u4e4b\u540e\uff0c\u6211\u4eec\u5728\u56de\u5230acquire\u7684\u95ee\u9898\u4e0a\u6765\u3002\u5148\u770b\u770bxv6\u4e2d\u662f\u5982\u4f55\u5b9e\u73b0acquire\u7684\u3002 1. // Acquire the lock. 2. // Loops (spins) until the lock is acquired. 3. void 4. acquire ( struct spinlock * lk ) 5. { 6. push_off (); // disable interrupts to avoid deadlock. 7. if ( holding ( lk )) 8. panic ( \"acquire\" ); 9. __sync_fetch_and_add ( & ( lk -> n ), 1 ); 10. // On RISC-V, sync_lock_test_and_set turns into anatomic swap: 11. // a5 = 1 12. // s1 = &lk->locked 13. // amoswap.w.aq a5, a5, (s1) 14. while ( __sync_lock_test_and_set ( & lk -> locked , 1 ) != 0 ) { 15. __sync_fetch_and_add ( & lk -> nts , 1 ); 16. } 17. // Tell the C compiler and the processor to not moveloads or stores 18. // past this point, to ensure that the criticalsection's memory 19. // references happen after the lock is acquired. 20. __sync_synchronize (); 21. // Record info about lock acquisition for holding() anddebugging. 22. lk -> cpu = mycpu (); 23. } \u6211\u4eec\u9700\u8981\u6ce8\u610f\u7684\u662f14-16\u884c\u7684while\u5faa\u73af\u3002\u8fd9\u91cc\u4f7f\u7528\u4e86 __sync_lock_test_and_set() \uff08\u4f7f\u7528amoswap\uff09\uff0c\u4fdd\u8bc1\u4e86\u5bf9lk->locked\u8bfb\u5199\u7684\u4e00\u81f4\u6027\u3002\u4e0b\u9762\u6211\u4eec\u6765\u5206\u6790\u4ee5\u4e0b\u5177\u4f53\u7684\u5de5\u4f5c\u6d41\u7a0b\u3002 \u5f53lk->locked==0\uff0c\u5373\u5f53\u524d\u9501\u7a7a\u95f2\u65f6\uff0c__sync_lock_test_and_set()\u5728\u8fd4\u56de0\u7684\u540c\u65f6\uff0c\u4f1a\u5f80lk->locked\u5199\u51651\uff0c\u5373\u4e0a\u9501\u3002\u6574\u4e2a\u8fc7\u7a0b\u56e0\u4e3a\u7531amoswap\u5b9e\u73b0\uff0c\u6240\u4ee5\u4e0d\u4f1a\u88ab\u5176\u7684CPU\u6838\u6240\u5e72\u6270\u3002\u8fd4\u56de0\u4e4b\u540e\u9000\u51fawhile\u5faa\u73af\uff0c\u7b26\u5408\u6211\u4eec\u7684\u9884\u671f\u3002 \u5f53lk->locked==1\uff0c\u5373\u5f53\u524d\u9501\u88ab\u9501\u5b9a\u65f6\uff0c__sync_lock_test_and_set\u5728\u8fd4\u56de1\u7684\u540c\u65f6\uff0c\u5f80lk->locked\u91cc\u5199\u5165\u4e861\u3002\u4e8b\u5b9e\u4e0a\u5728\u9501\u88ab\u9501\u5b9a\u540e\u6211\u4eec\u4e0d\u5e94\u8be5\u5f80lk->locked\u91cc\u5199\u4e1c\u897f\uff08\u5f53\u7136\uff0c\u9664\u4e86\u89e3\u9501\u7684\u65f6\u5019\uff09\uff0c\u4f46\u662f\u56e0\u4e3a\u9501\u672c\u6765\u5c31\u662f1\uff0c\u518d\u5199\u5165\u4e00\u4e2a1\u76f8\u5f53\u4e8e\u6ca1\u6709\u6539\u53d8\u5185\u5bb9\uff0c\u6240\u4ee5\u4e5f\u6ca1\u5dee\u3002\u540c\u65f6\uff0c\u56e0\u4e3a\u8fd4\u56de\u4e861\uff0c\u6211\u4eec\u77e5\u9053\u5f53\u524d\u9501\u88ab\u9501\u4f4f\u4e86\uff0c\u6240\u4ee5\u4f1a\u7ee7\u7eed\u5728while\u4e2d\u5faa\u73af\u3002 \u81f3\u4e8e\u7b2c15\u884c\u4ee3\u7801\u6240\u505a\u7684\u4e8b\uff0c\u8fd9\u4e2a\u548c\u9501\u7684\u529f\u80fd\u65e0\u5173\uff0c\u4f46\u5f53\u7136\u5b83\u6709\u53e6\u5916\u7684\u4f5c\u7528\u3002\u8fd9\u6b21\u4e0d\u505a\u89e3\u91ca\uff0c\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002 \u5230\u8fd9\u91cc\u5bf9Lock\u7684\u5b9e\u73b0\u89e3\u91ca\u5c31\u7ed3\u675f\u4e86\u3002\u5728\u8fdb\u884c\u4e0b\u4e00\u6b65\u7684\u9605\u8bfb\u524d\uff0c\u5f3a\u70c8\u5efa\u8bae\u5bf9\u4e0a\u9762\u7684\u4e24\u4e2a\u5b9e\u73b0\u505a\u6bd4\u8f83\u548c\u63e3\u6469\uff0c\u76f4\u5230\u4f60\u5bf9\u4e3a\u4ec0\u4e48\u9501\u8981\u4f7f\u7528__sync_lock_test_and_set\u6709\u4e86\u6e05\u6670\u7684\u8ba4\u8bc6\u3002 \u6ce8\uff1a\u4ee5\u4e0a\u89e3\u91ca\u53ef\u5728xv6\u7684Locking\u7ae0\u8282\u4e2d\u627e\u5230\u3002 2. \u9501\u4e0ekalloc \u00b6 \u5728\u524d\u9762\u7684\u5b9e\u9a8c\u539f\u7406\u90e8\u5206\uff0c\u6211\u4eec\u5df2\u7ecf\u89e3\u91ca\u4e86\u201c kalloc \u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f7f\u7528\u4e86\u9501\uff1f\u201d\u8fd9\u4e2a\u95ee\u9898\u3002\u90a3\u4e3a\u4ec0\u4e48\u8981\u5728\u64cd\u4f5cfreelist\u7684\u65f6\u5019\u4e0a\u9501\u5462\uff1f\u4e0a\u9501\u5fc5\u7136\u662f\u4e3a\u4e86\u9632\u6b62\u5e76\u884c\u8fd0\u884c\u7684\u65f6\u5019\u51fa\u95ee\u9898\uff0c\u5982\u679c\u6211\u4eec\u80fd\u8bbe\u60f3\u51fa\u4e00\u573a\u666f\uff08\u8fd9\u4e2a\u573a\u666f\u663e\u7136\u662f\u5e76\u884c\u60c5\u51b5\u4e0b\u7684\uff09\u8ba9\u6ca1\u4e0a\u9501\u7684\u94fe\u8868\u64cd\u4f5c\u51fa\u95ee\u9898\uff0c\u90a3\u5c31\u53ef\u4ee5\u89e3\u91ca\u4e3a\u4ec0\u4e48\u8981\u4e0a\u9501\u4e86\u3002 // Allocate one 4096-byte page of physical memory. // Returns a pointer that the kernel can use. // Returns 0 if the memory cannot be allocated. 68 void * 69 kalloc ( void ) 70 { 71 struct run * r ; 72 73 acquire ( & kmem . lock ); 74 r = kmem . freelist ; 75 if ( r ) 76 kmem . freelist = r -> next ; 77 release ( & kmem . lock ); 78 79 if ( r ) 80 memset (( char * ) r , 5 , PGSIZE ); // fill with junk 81 return ( void * ) r ; 82 } \u67d0\u4e2a\u9519\u8bef\u573a\u666f \u4ee5kalloc()\u51fd\u6570\u4e3a\u4f8b\uff08\u89c1kernel/kalloc.c\uff09\u3002\u5047\u8bbe\u7b2c73\u548c77\u884c\u7684\u9501\u64cd\u4f5c\u88ab\u6ce8\u91ca\u6389\u4e86\uff0c\u90a3\u4e48\u5c31\u53ef\u80fd\u6709\u4e24\u4e2aCPU\uff0c\u8bb0\u4e3aCPU0\u548cCPU1\uff0c\u540c\u65f6\u6267\u884c\u5230\u7b2c74\u884c\u3002\u7136\u540e\uff0c\u4e24\u4e2aCPU\u5c31\u4f1a\u4ecefreelist\u4e2d\u62ff\u51fa\u540c\u4e00\u4e2a\u5185\u5b58\u5757\uff0c\u8fd9\u5c31\u4f1a\u5bfc\u81f4\u4e24\u4e2a\u8fdb\u7a0b\u5171\u7528\u4e00\u5757\u5185\u5b58\uff0c\u4f46\u5bf9\u4e8e\u8fdb\u7a0b\u6765\u8bf4\u5b83\u8ba4\u4e3a\u5b83\u5f97\u5230\u7684\u5185\u5b58\u662f\u72ec\u4eab\u7684\uff0c\u8fd9\u6837A\u8fdb\u7a0b\u518d\u5f80\u8fd9\u5757\u5185\u5b58\u4e2d\u5199\u6570\u636e\u65f6\uff0c\u4f1a\u628aB\u4e4b\u524d\u5199\u8fdb\u53bb\u7684\u6570\u636e\u7834\u574f\u6389\uff0c\u8fd9\u663e\u7136\u4e0d\u662f\u6211\u4eec\u6240\u5e0c\u671b\u7684\u3002\u6240\u4ee5kalloc()\u91cc\u4ecefreelist\u4e2d\u53d6\u5185\u5b58\u5757\u7684\u64cd\u4f5c\u9700\u8981\u9501\uff0cCPU0\u5728\u53d6\u7684\u65f6\u5019CPU1\u9677\u5165\u7b49\u5f85\uff0c\u76f4\u5230CPU0\u628afreelist\u66f4\u65b0\u5b8c\u89e3\u9501\u540e\uff0cCPU1\u518d\u8fdb\u53bb\u53d6\uff0c\u4ece\u800c\u4fdd\u8bc1\u6bcf\u4e2a\u5185\u5b58\u5757\u53ea\u88ab\u4e00\u4e2a\u8fdb\u7a0b\u53d6\u8d70\u3002 \u5bf9kfree\u51fd\u6570\uff0c\u8bf7\u540c\u5b66\u4eec\u81ea\u884c\u60f3\u8c61\u4e00\u4e2a\u6ca1\u6709\u9501\u4f1a\u51fa\u73b0\u9519\u8bef\u7684\u573a\u666f\uff0c\u5728\u6b64\u4e0d\u518d\u505a\u8ba8\u8bba\u3002 3. \u9501\u4e0ebio \u00b6 \u5728bio.c\u4e2d\uff0c\u4e00\u5171\u4f7f\u7528\u4e24\u79cd\u7c7b\u578b\u7684\u9501\uff1a\u81ea\u65cb\u9501 spinlock \uff08bcache.lock\uff09\u548c\u7761\u7720\u9501 sleeplock \uff08b.lock\uff09\u3002 3.1 \u81ea\u65cb\u9501 \u00b6 bcache.lock \u7528\u4e8e\u8868\u793a\u5f53\u524d\u8bbf\u95ee\u7684bcache\u7f13\u5b58\u5757\u6570\u636e\u7ed3\u6784\u662f\u5426\u88ab\u9501\u4f4f\u3002 \u5f53bcache.lock\u4e3a0\u65f6\u8868\u793a\u672a\u9501\u4f4f\uff0c\u80fd\u591f\u8bbf\u95ee\u5f53\u524d\u6570\u636e\u7ed3\u6784bcache\uff0c\u5982\u679c\u4e3a1\uff0c\u5373\u6682\u65f6\u65e0\u6cd5\u83b7\u5f97\u9501\uff0c\u5219\u4e0d\u65ad\u5faa\u73af\u3001\u81ea\u65cb\u3001\u7b49\u5f85\u9501\u91cd\u65b0\u53ef\u7528\u3002 bget() \u5728\u64cd\u4f5cbcache\u6570\u636e\u7ed3\u6784\uff08\u4fee\u6539refcnt\u3001dev\u3001blockno\u3001valid\uff09\u65f6\uff0c\u9700\u8981\u83b7\u53d6\u5230\u81ea\u65cb\u9501 bcache.lock\uff0c\u64cd\u4f5c\u5b8c\u6210\u540e\u518d\u91ca\u653e\u8be5\u9501\u3002 brelse() \u9700\u8981\u83b7\u53d6\u5230\u81ea\u65cb\u9501 bcache.lock\uff0c\u624d\u80fd\u5c06refcnt\uff08\u5f15\u7528\u8ba1\u6570\uff09\u51cf1\uff0c\u4e14\u53ea\u6709\u5728refcnt\u4e3a0\u65f6\uff0c\u5c06\u8be5\u6570\u636e\u7f13\u5b58\u5757\u63d2\u5165\u5230bcache.head\u94fe\u8868\u540e\u9762\uff0c\u64cd\u4f5c\u5b8c\u6210\u540e\u518d\u91ca\u653e\u8be5\u9501\u3002 bpin()\u548cbunpin() \u83b7\u53d6\u5230\u9501\u540e\uff0c\u624d\u80fd\u4fee\u6539refcnt\uff0c\u64cd\u4f5c\u5b8c\u6210\u540e\u518d\u91ca\u653e\u8be5\u9501\u3002 3.2 \u7761\u7720\u9501 \u00b6 b.lock\u7528\u4e8e\u8868\u793abcache\u7f13\u5b58\u5757\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u5f53\u524d\u7f13\u5b58\u6570\u636e\u5757buf\u662f\u5426\u88ab\u9501\u4f4f\uff0c\u5f53b.lock\u4e3a1\u65f6\uff0c\u5219\u8c03\u7528sleep()\u7761\u7720\u7b49\u5f85\u9501\u91cd\u65b0\u53ef\u7528\uff0c\u4e3a0\u5219\u8868\u793a\u9501\u5df2\u7ecf\u88ab\u91ca\u653e\u3002\u7761\u7720\u9501\u7684\u4e09\u4e2a\u63a5\u53e3\u51fd\u6570\u5982\u4e0b\uff1a acquiresleep() \uff1a\u67e5\u8be2b.lock\u662f\u5426\u88ab\u9501\uff0c\u5982\u679c\u88ab\u9501\u4e86\uff0c\u5c31\u7761\u7720\uff0c\u8ba9\u51faCPU\uff0c\u76f4\u5230wakeup()\u5524\u9192\u540e\uff0c\u83b7\u53d6\u5230\u9501\uff0c\u5e76\u5c06b.lock\u7f6e1\u3002 releasesleep() \uff1a\u91ca\u653e\u9501\uff0c\u5e76\u8c03\u7528wakeup()\u3002 holdingsleep() \uff1a\u8fd4\u56de\u9501\u7684\u72b6\u6001\uff081\uff1a\u9501\u4f4f\u62160\uff1a\u672a\u9501\uff09\u3002 \u7761\u7720\u9501\u7684\u4f7f\u7528\uff1a bget() \u5728\u83b7\u53d6\u5230\u7f13\u5b58\u5757\uff08\u547d\u4e2d\u7684\u7f13\u5b58\u5757\uff0c\u6216\u8005\uff0c\u672a\u547d\u4e2d\u65f6\u901a\u8fc7LRU\u7b97\u6cd5\u66ff\u6362\u51fa\u6765\u7f13\u5b58\u4e2d\u7684\u7f13\u5b58\u5757\uff09\u540e\uff0c\u8c03\u7528acquiresleep()\u83b7\u53d6\u7761\u7720\u9501\u3002 bwrite() \u5728\u5199\u5165\u5230\u78c1\u76d8\u4e4b\u524d\uff0c\u5148\u8c03\u7528holdingsleep()\u67e5\u8be2\u662f\u5426\u5df2\u7ecf\u83b7\u53d6\u5230\u8be5\u7761\u7720\u9501\uff0c\u786e\u4fdd\u6709\u5e26\u9501\u800c\u5165\u3002 brelse() \u4e5f\u5148\u8c03\u7528holdingsleep()\u67e5\u8be2\u662f\u5426\u5df2\u7ecf\u83b7\u53d6\u5230\u8be5\u7761\u7720\u9501\uff0c\u786e\u4fdd\u6709\u5e26\u9501\u540e\uff0c\u624d\u8c03\u7528releasesleep()\u91ca\u653e\u8be5\u9501\u3002 \u81ea\u65cb\u9501\u548c\u7761\u7720\u9501\u7684\u533a\u522b Spinlock 1. \u5728\u77ed\u65f6\u95f4\u5185\u8fdb\u884c\u8f7b\u91cf\u7ea7\u52a0\u9501; 2. \u83b7\u53d6\u8fc7\u7a0b\u4e00\u76f4\u8fdb\u884c\u5fd9\u5faa\u73af\u2014\u65cb\u8f6c\u2014\u7b49\u5f85\u9501\u91cd\u65b0\u53ef\u7528\uff08\u5360\u7528CPU\u65f6\u95f4\u957f\uff09\uff1b 3. xv6\u8981\u6c42\u5728\u6301\u6709spinlock\u671f\u95f4\uff0c\u4e2d\u65ad\u4e0d\u5141\u8bb8\u53d1\u751f\u3002 sleep-lock 1. \u9002\u5408\u957f\u65f6\u95f4\u6301\u6709\uff1b 2. \u83b7\u53d6\u9501\u671f\u95f4\u53ef\u4ee5\u8ba9\u51faCPU\uff1b 3. \u6301\u6709Sleep-lock\u671f\u95f4\u5141\u8bb8\u4e2d\u65ad\u53d1\u751f\uff0c\u4f46\u4e0d\u5141\u8bb8\u5728\u4e2d\u65ad\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u3002 4. \u6d4b\u8bc4\u7a0b\u5e8fkalloctest\u5bf9\u9501\u7684\u68c0\u6d4b \u00b6 \u6d4b\u8bc4\u7a0b\u5e8f\u4f1a\u68c0\u67e5\u9501\u88ab\u963b\u585e\u7684\u60c5\u51b5\uff0c\u8fd8\u8bb0\u5f97\u201cXV6\u4e2dLock\u7684\u5b9e\u73b0\u201d\u4e2d\u63d0\u5230\u7684acquire\u4ee3\u7801\u5417\uff1f 1. // Acquire the lock. 2. // Loops (spins) until the lock is acquired. 3. void 4. acquire ( struct spinlock * lk ) 5. { 6. push_off (); // disable interrupts to avoid deadlock. 7. if ( holding ( lk )) 8. panic ( \"acquire\" ); 9. __sync_fetch_and_add ( & ( lk -> n ), 1 ); 10. // On RISC-V, sync_lock_test_and_set turns into anatomic swap: 11. // a5 = 1 12. // s1 = &lk->locked 13. // amoswap.w.aq a5, a5, (s1) 14. while ( __sync_lock_test_and_set ( & lk -> locked , 1 ) != 0 ) { 15. __sync_fetch_and_add ( & lk -> nts , 1 ); 16. } 17. // Tell the C compiler and the processor to not moveloads or stores 18. // past this point, to ensure that the criticalsection's memory 19. // references happen after the lock is acquired. 20. __sync_synchronize (); 21. // Record info about lock acquisition for holding() anddebugging. 22. lk -> cpu = mycpu (); 23. } lk->n \uff1a\u5373#acquire\uff0c\u83b7\u53d6\u9501\u7684\u6b21\u6570\u3002 lk->nts \uff1a\u5373#fetch-and-add\uff0c\u6ca1\u6709\u83b7\u53d6\u5230\u9501\u7684\u6b21\u6570\u3002 \u6bcf\u5f53\u6267\u884c\u4e00\u6b21acquire()\u51fd\u6570\uff0c\u7b2c9\u884c __sync_fetch_and_add(&(lk->n), 1); \u5c31\u4f1a\u5c06lk->n\u52a01\uff0c\u5f53\u6267\u884c\u5230\u7b2c14\u884c\u65f6\uff0c\u5982\u679c __sync_lock_test_and_set(&lk->locked, 1) \u7684\u8fd4\u56de\u503c\u4e3a1\uff08\u5373\u9501\u5df2\u88ab\u5176\u4ed6\u8fdb\u7a0b\u9501\u4e0a\uff09\uff0clk->nts\u7684\u503c\u5c31\u4f1a\u52a01\uff0c\u800c\u6d4b\u8bc4\u7a0b\u5e8f\u4f1a\u68c0\u67e5lk->nts\u7684\u503c\u3002\u5f53lk->nts\u503c\u63a5\u8fd10\u65f6\uff0c\u624d\u80fd\u901a\u8fc7\u6d4b\u8bd5\u3002\u6240\u4ee5\u8fd9\u6b21\u5b9e\u9a8c\u4e2d\u9700\u8981\u505a\u7684\u5c31\u662f\u51cf\u5c11\u8fdb\u7a0b\u4e2d\u7684\u9501\u51b2\u7a81\uff0c\u5c3d\u91cf\u8ba9\u8fdb\u7a0b\u5728\u83b7\u53d6\u9501\u65f6\uff0c\u9501\u7684\u72b6\u6001\u90fd\u662f\u672a\u88ab\u9501\u4e0a\u7684\u3002","title":"xv-6\u4e2dLock\u7684\u5b9e\u73b0\uff08\u9009\u8bfb\uff09"},{"location":"lab3/part4/#xv6lock","text":"\u8fd9\u90e8\u5206\u6df1\u5165\u63a2\u8ba8\u4e86\u9501\u7684\u57fa\u672c\u539f\u7406\u3001\u5b9e\u73b0\u65b9\u6cd5\u548c\u4f7f\u7528\u65b9\u6cd5\uff0c\u53ef\u80fd\u6709\u4e9b\u96be\u4ee5\u7406\u89e3\uff0c\u8d85\u51fa\u4e86\u672c\u5b9e\u9a8c\u7684\u6c34\u5e73\u8981\u6c42\uff0c\u4f46\u4ecd\u7136\u5728\u77e5\u8bc6\u8303\u56f4\u5185\uff0c\u56e0\u6b64\u53ef\u4f9b\u611f\u5174\u8da3\u7684\u540c\u5b66\u8fdb\u884c\u53c2\u8003\u3002","title":"xv6\u4e2dLock\u7684\u5b9e\u73b0\uff08\u9009\u8bfb\uff09"},{"location":"lab3/part4/#1","text":"kalloc.c\u4e2d\u8c03\u7528acquire()\u548crelease()\u6765\u83b7\u53d6\u9501\u548c\u91ca\u653e\u9501\u3002\u9996\u5148\u9700\u8981\u77e5\u9053\u7684\u662f\u9501\u7684acquire\uff08\u6216\u8005\u53ebP\uff09\u548crelease\uff08V\uff09\u7684\u5b9e\u73b0\u5e76\u4e0d\u662f\u4e00\u4ef6\u7b80\u5355\u7684\u4e8b\u60c5\u3002\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e2a\u6700naive\u7684\u5b9e\u73b0\uff1a 1. void acquire ( struct spinlock * lk ) // does not work! 2. { 3. for (;;) { 4. if ( lk -> locked == 0 ) { 5. lk -> locked = 1 ; 6. break ; 7. } 8. } 9. } \u8fd9\u4e2a\u4ee3\u7801\u975e\u5e38\u5bb9\u6613\u7406\u89e3\uff0c\u5982\u679clk\u88ab\u9501\u4e0a\u4e86\uff0c\u90a3\u5c31\u7ee7\u7eed\u5faa\u73af\uff0c\u5982\u679clk\u672a\u88ab\u9501\u4e0a\uff0c\u90a3\u5c31\u7ed9\u5b83\u52a0\u9501\u5e76\u9000\u51fa\u3002\u4f46\u8fd9\u4e2a\u5b9e\u73b0\u662f\u6709\u7f3a\u9677\u7684\uff0c\u8ba9\u6211\u4eec\u8bd5\u60f3\u4e00\u4e0b\u4ee5\u4e0b\u573a\u666f\uff1a \u67d0\u4e2a\u9519\u8bef\u573a\u666f lk\u4e00\u5f00\u59cb\u6ca1\u6709\u88ab\u9501\u4e0a\uff0c\u5373lk->locked = 0; \u7136\u540eCPU0\u5728\u8dd1\u8fdb\u7a0bA\u800cCPU1\u5728\u8dd1\u8fdb\u7a0bB\uff0cA\u548cB\u540c\u65f6\u5bf9\u8fd9\u4e2a\u9501\u53d1\u8d77\u4e86acquire\uff1b \u6211\u4eec\u6240\u5e0c\u671b\u770b\u5230\u7684\u662f\uff0c\u9501\u88ab\u4e14\u53ea\u88abA\u6216B\u4e2d\u7684\u4e00\u4e2a\u8fdb\u7a0b\u9501\u4f4f\uff0c\u800c\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u5219\u7ee7\u7eed\u5728for\u4e2d\u5faa\u73af\u7b49\u5f85\u3002 \u4f46\u662f\uff0c\u5047\u8bbeCPU0\u548cCPU1\u540c\u65f6\u6267\u884c\u5230\u4e86\u7b2c6\u884c\uff0c\u90a3\u4e48\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f \u6ca1\u9519\uff0c\u4e24\u4e2aCPU\u90fd\u53d1\u73b0lk->locked == 0\uff0c\u56e0\u4e3a\u53e6\u4e00\u4e2aCPU\u8fd8\u6ca1\u6709\u6765\u5f97\u53ca\u6539\u52a8lk->locked; \u8fd9\u5c31\u4f1a\u5bfc\u81f4A\u548cB\u540c\u65f6\u83b7\u5f97\u9501\uff0c\u5e76\u4eceacquire\u4e2d\u8fd4\u56de\uff0c\u8fd9\u663e\u7136\u4e0d\u662f\u6211\u4eec\u5e0c\u671b\u770b\u5230\u7684\u3002 \u90a3acquire\u5230\u5e95\u662f\u600e\u4e48\u5b9e\u73b0\u7684\u5462\uff1f\u8fd9\u4e2a\u4ec5\u51ed\u8f6f\u4ef6\u662f\u65e0\u6cd5\u5b9e\u73b0\u7684\uff0c\u9700\u8981\u786c\u4ef6\u53c2\u4e0e\u8f85\u52a9\u5b9e\u73b0\u3002 \u5728\u8fd9\u91cc\u6211\u4eec\u5148\u4ecb\u7ecd\u4e00\u6761\u7279\u6b8a\u7684CPU\u6307\u4ee4amoswap\u3002amoswap\u5b9e\u73b0\u4e86\u5728\u4e00\u6761\u6307\u4ee4\u5b8c\u6210\u4e00\u6b21 load \u548c store\uff0c\u66f4\u5177\u4f53\u7684\u8bf4\uff0c\u5c31\u662f\u53ef\u4ee5\u5c06\u4e00\u4e2a\u5bc4\u5b58\u5668\u7684\u503c\u548c\u67d0\u4e00\u5185\u5b58\u5730\u5740\u7684\u503c\u505a\u4ea4\u6362\uff0c\u5c06\u6307\u5b9a\u5185\u5b58\u5730\u5740\u7684\u503c\u653e\u5165\u5bc4\u5b58\u5668\uff0c\u540c\u65f6\u5c06\u5bc4\u5b58\u5668\u7684\u503c\u653e\u5165\u5185\u5b58\u3002\u6b64\u5916\uff0cCPU\u8fd8\u4f1a\u4fdd\u8bc1\u67d0\u4e00CPU\u6838\u5728\u6267\u884c\u8fd9\u4e00\u6307\u4ee4\u65f6\uff0c\u5176\u4ed6CPU\u6838\u4e0d\u80fd\u8bfb\u6216\u5199\u5bf9\u5e94\u7684\u5185\u5b58\u5730\u5740\u3002 amoswap\u6307\u4ee4\u548c__sync_lock_test_and_set \u5728C\u8bed\u8a00\u4e2d\u4f7f\u7528\u8fd9\u4e00\u6c47\u7f16\u6307\u4ee4\u7684\u8bed\u53e5\u8c03\u7528\u662f __sync_lock_test_and_set() \u3002 \u8fd9\u4e00\u51fd\u6570\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u8981\u5199\u5165\u7684\u5730\u5740\u548c\u8981\u5199\u5165\u7684\u503c\uff0c\u8fd4\u56de\u503c\u662f\u5199\u5165\u5730\u5740\u539f\u6765\u7684\u503c\u3002 \u8bf7\u4ed4\u7ec6\u6bd4\u8f83amoswap\u6307\u4ee4\u548c__sync_lock_test_and_set\u884c\u4e3a\u4e0a\u7684\u76f8\u4f3c\u4e4b\u5904\uff0c \u786e\u4fdd\u4f60\u5df2\u7ecf\u5927\u81f4\u77e5\u9053__sync_lock_test_and_set\u662f\u5982\u4f55\u4f7f\u7528amoswap\u5b9e\u73b0\u529f\u80fd\u3002 \u4e86\u89e3\u4e86__sync_lock_test_and_set\u4e4b\u540e\uff0c\u6211\u4eec\u5728\u56de\u5230acquire\u7684\u95ee\u9898\u4e0a\u6765\u3002\u5148\u770b\u770bxv6\u4e2d\u662f\u5982\u4f55\u5b9e\u73b0acquire\u7684\u3002 1. // Acquire the lock. 2. // Loops (spins) until the lock is acquired. 3. void 4. acquire ( struct spinlock * lk ) 5. { 6. push_off (); // disable interrupts to avoid deadlock. 7. if ( holding ( lk )) 8. panic ( \"acquire\" ); 9. __sync_fetch_and_add ( & ( lk -> n ), 1 ); 10. // On RISC-V, sync_lock_test_and_set turns into anatomic swap: 11. // a5 = 1 12. // s1 = &lk->locked 13. // amoswap.w.aq a5, a5, (s1) 14. while ( __sync_lock_test_and_set ( & lk -> locked , 1 ) != 0 ) { 15. __sync_fetch_and_add ( & lk -> nts , 1 ); 16. } 17. // Tell the C compiler and the processor to not moveloads or stores 18. // past this point, to ensure that the criticalsection's memory 19. // references happen after the lock is acquired. 20. __sync_synchronize (); 21. // Record info about lock acquisition for holding() anddebugging. 22. lk -> cpu = mycpu (); 23. } \u6211\u4eec\u9700\u8981\u6ce8\u610f\u7684\u662f14-16\u884c\u7684while\u5faa\u73af\u3002\u8fd9\u91cc\u4f7f\u7528\u4e86 __sync_lock_test_and_set() \uff08\u4f7f\u7528amoswap\uff09\uff0c\u4fdd\u8bc1\u4e86\u5bf9lk->locked\u8bfb\u5199\u7684\u4e00\u81f4\u6027\u3002\u4e0b\u9762\u6211\u4eec\u6765\u5206\u6790\u4ee5\u4e0b\u5177\u4f53\u7684\u5de5\u4f5c\u6d41\u7a0b\u3002 \u5f53lk->locked==0\uff0c\u5373\u5f53\u524d\u9501\u7a7a\u95f2\u65f6\uff0c__sync_lock_test_and_set()\u5728\u8fd4\u56de0\u7684\u540c\u65f6\uff0c\u4f1a\u5f80lk->locked\u5199\u51651\uff0c\u5373\u4e0a\u9501\u3002\u6574\u4e2a\u8fc7\u7a0b\u56e0\u4e3a\u7531amoswap\u5b9e\u73b0\uff0c\u6240\u4ee5\u4e0d\u4f1a\u88ab\u5176\u7684CPU\u6838\u6240\u5e72\u6270\u3002\u8fd4\u56de0\u4e4b\u540e\u9000\u51fawhile\u5faa\u73af\uff0c\u7b26\u5408\u6211\u4eec\u7684\u9884\u671f\u3002 \u5f53lk->locked==1\uff0c\u5373\u5f53\u524d\u9501\u88ab\u9501\u5b9a\u65f6\uff0c__sync_lock_test_and_set\u5728\u8fd4\u56de1\u7684\u540c\u65f6\uff0c\u5f80lk->locked\u91cc\u5199\u5165\u4e861\u3002\u4e8b\u5b9e\u4e0a\u5728\u9501\u88ab\u9501\u5b9a\u540e\u6211\u4eec\u4e0d\u5e94\u8be5\u5f80lk->locked\u91cc\u5199\u4e1c\u897f\uff08\u5f53\u7136\uff0c\u9664\u4e86\u89e3\u9501\u7684\u65f6\u5019\uff09\uff0c\u4f46\u662f\u56e0\u4e3a\u9501\u672c\u6765\u5c31\u662f1\uff0c\u518d\u5199\u5165\u4e00\u4e2a1\u76f8\u5f53\u4e8e\u6ca1\u6709\u6539\u53d8\u5185\u5bb9\uff0c\u6240\u4ee5\u4e5f\u6ca1\u5dee\u3002\u540c\u65f6\uff0c\u56e0\u4e3a\u8fd4\u56de\u4e861\uff0c\u6211\u4eec\u77e5\u9053\u5f53\u524d\u9501\u88ab\u9501\u4f4f\u4e86\uff0c\u6240\u4ee5\u4f1a\u7ee7\u7eed\u5728while\u4e2d\u5faa\u73af\u3002 \u81f3\u4e8e\u7b2c15\u884c\u4ee3\u7801\u6240\u505a\u7684\u4e8b\uff0c\u8fd9\u4e2a\u548c\u9501\u7684\u529f\u80fd\u65e0\u5173\uff0c\u4f46\u5f53\u7136\u5b83\u6709\u53e6\u5916\u7684\u4f5c\u7528\u3002\u8fd9\u6b21\u4e0d\u505a\u89e3\u91ca\uff0c\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002 \u5230\u8fd9\u91cc\u5bf9Lock\u7684\u5b9e\u73b0\u89e3\u91ca\u5c31\u7ed3\u675f\u4e86\u3002\u5728\u8fdb\u884c\u4e0b\u4e00\u6b65\u7684\u9605\u8bfb\u524d\uff0c\u5f3a\u70c8\u5efa\u8bae\u5bf9\u4e0a\u9762\u7684\u4e24\u4e2a\u5b9e\u73b0\u505a\u6bd4\u8f83\u548c\u63e3\u6469\uff0c\u76f4\u5230\u4f60\u5bf9\u4e3a\u4ec0\u4e48\u9501\u8981\u4f7f\u7528__sync_lock_test_and_set\u6709\u4e86\u6e05\u6670\u7684\u8ba4\u8bc6\u3002 \u6ce8\uff1a\u4ee5\u4e0a\u89e3\u91ca\u53ef\u5728xv6\u7684Locking\u7ae0\u8282\u4e2d\u627e\u5230\u3002","title":"1. \u9501\u7684\u57fa\u672c\u5b9e\u9a8c\u539f\u7406"},{"location":"lab3/part4/#2-kalloc","text":"\u5728\u524d\u9762\u7684\u5b9e\u9a8c\u539f\u7406\u90e8\u5206\uff0c\u6211\u4eec\u5df2\u7ecf\u89e3\u91ca\u4e86\u201c kalloc \u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f7f\u7528\u4e86\u9501\uff1f\u201d\u8fd9\u4e2a\u95ee\u9898\u3002\u90a3\u4e3a\u4ec0\u4e48\u8981\u5728\u64cd\u4f5cfreelist\u7684\u65f6\u5019\u4e0a\u9501\u5462\uff1f\u4e0a\u9501\u5fc5\u7136\u662f\u4e3a\u4e86\u9632\u6b62\u5e76\u884c\u8fd0\u884c\u7684\u65f6\u5019\u51fa\u95ee\u9898\uff0c\u5982\u679c\u6211\u4eec\u80fd\u8bbe\u60f3\u51fa\u4e00\u573a\u666f\uff08\u8fd9\u4e2a\u573a\u666f\u663e\u7136\u662f\u5e76\u884c\u60c5\u51b5\u4e0b\u7684\uff09\u8ba9\u6ca1\u4e0a\u9501\u7684\u94fe\u8868\u64cd\u4f5c\u51fa\u95ee\u9898\uff0c\u90a3\u5c31\u53ef\u4ee5\u89e3\u91ca\u4e3a\u4ec0\u4e48\u8981\u4e0a\u9501\u4e86\u3002 // Allocate one 4096-byte page of physical memory. // Returns a pointer that the kernel can use. // Returns 0 if the memory cannot be allocated. 68 void * 69 kalloc ( void ) 70 { 71 struct run * r ; 72 73 acquire ( & kmem . lock ); 74 r = kmem . freelist ; 75 if ( r ) 76 kmem . freelist = r -> next ; 77 release ( & kmem . lock ); 78 79 if ( r ) 80 memset (( char * ) r , 5 , PGSIZE ); // fill with junk 81 return ( void * ) r ; 82 } \u67d0\u4e2a\u9519\u8bef\u573a\u666f \u4ee5kalloc()\u51fd\u6570\u4e3a\u4f8b\uff08\u89c1kernel/kalloc.c\uff09\u3002\u5047\u8bbe\u7b2c73\u548c77\u884c\u7684\u9501\u64cd\u4f5c\u88ab\u6ce8\u91ca\u6389\u4e86\uff0c\u90a3\u4e48\u5c31\u53ef\u80fd\u6709\u4e24\u4e2aCPU\uff0c\u8bb0\u4e3aCPU0\u548cCPU1\uff0c\u540c\u65f6\u6267\u884c\u5230\u7b2c74\u884c\u3002\u7136\u540e\uff0c\u4e24\u4e2aCPU\u5c31\u4f1a\u4ecefreelist\u4e2d\u62ff\u51fa\u540c\u4e00\u4e2a\u5185\u5b58\u5757\uff0c\u8fd9\u5c31\u4f1a\u5bfc\u81f4\u4e24\u4e2a\u8fdb\u7a0b\u5171\u7528\u4e00\u5757\u5185\u5b58\uff0c\u4f46\u5bf9\u4e8e\u8fdb\u7a0b\u6765\u8bf4\u5b83\u8ba4\u4e3a\u5b83\u5f97\u5230\u7684\u5185\u5b58\u662f\u72ec\u4eab\u7684\uff0c\u8fd9\u6837A\u8fdb\u7a0b\u518d\u5f80\u8fd9\u5757\u5185\u5b58\u4e2d\u5199\u6570\u636e\u65f6\uff0c\u4f1a\u628aB\u4e4b\u524d\u5199\u8fdb\u53bb\u7684\u6570\u636e\u7834\u574f\u6389\uff0c\u8fd9\u663e\u7136\u4e0d\u662f\u6211\u4eec\u6240\u5e0c\u671b\u7684\u3002\u6240\u4ee5kalloc()\u91cc\u4ecefreelist\u4e2d\u53d6\u5185\u5b58\u5757\u7684\u64cd\u4f5c\u9700\u8981\u9501\uff0cCPU0\u5728\u53d6\u7684\u65f6\u5019CPU1\u9677\u5165\u7b49\u5f85\uff0c\u76f4\u5230CPU0\u628afreelist\u66f4\u65b0\u5b8c\u89e3\u9501\u540e\uff0cCPU1\u518d\u8fdb\u53bb\u53d6\uff0c\u4ece\u800c\u4fdd\u8bc1\u6bcf\u4e2a\u5185\u5b58\u5757\u53ea\u88ab\u4e00\u4e2a\u8fdb\u7a0b\u53d6\u8d70\u3002 \u5bf9kfree\u51fd\u6570\uff0c\u8bf7\u540c\u5b66\u4eec\u81ea\u884c\u60f3\u8c61\u4e00\u4e2a\u6ca1\u6709\u9501\u4f1a\u51fa\u73b0\u9519\u8bef\u7684\u573a\u666f\uff0c\u5728\u6b64\u4e0d\u518d\u505a\u8ba8\u8bba\u3002","title":"2. \u9501\u4e0ekalloc"},{"location":"lab3/part4/#3-bio","text":"\u5728bio.c\u4e2d\uff0c\u4e00\u5171\u4f7f\u7528\u4e24\u79cd\u7c7b\u578b\u7684\u9501\uff1a\u81ea\u65cb\u9501 spinlock \uff08bcache.lock\uff09\u548c\u7761\u7720\u9501 sleeplock \uff08b.lock\uff09\u3002","title":"3. \u9501\u4e0ebio"},{"location":"lab3/part4/#31","text":"bcache.lock \u7528\u4e8e\u8868\u793a\u5f53\u524d\u8bbf\u95ee\u7684bcache\u7f13\u5b58\u5757\u6570\u636e\u7ed3\u6784\u662f\u5426\u88ab\u9501\u4f4f\u3002 \u5f53bcache.lock\u4e3a0\u65f6\u8868\u793a\u672a\u9501\u4f4f\uff0c\u80fd\u591f\u8bbf\u95ee\u5f53\u524d\u6570\u636e\u7ed3\u6784bcache\uff0c\u5982\u679c\u4e3a1\uff0c\u5373\u6682\u65f6\u65e0\u6cd5\u83b7\u5f97\u9501\uff0c\u5219\u4e0d\u65ad\u5faa\u73af\u3001\u81ea\u65cb\u3001\u7b49\u5f85\u9501\u91cd\u65b0\u53ef\u7528\u3002 bget() \u5728\u64cd\u4f5cbcache\u6570\u636e\u7ed3\u6784\uff08\u4fee\u6539refcnt\u3001dev\u3001blockno\u3001valid\uff09\u65f6\uff0c\u9700\u8981\u83b7\u53d6\u5230\u81ea\u65cb\u9501 bcache.lock\uff0c\u64cd\u4f5c\u5b8c\u6210\u540e\u518d\u91ca\u653e\u8be5\u9501\u3002 brelse() \u9700\u8981\u83b7\u53d6\u5230\u81ea\u65cb\u9501 bcache.lock\uff0c\u624d\u80fd\u5c06refcnt\uff08\u5f15\u7528\u8ba1\u6570\uff09\u51cf1\uff0c\u4e14\u53ea\u6709\u5728refcnt\u4e3a0\u65f6\uff0c\u5c06\u8be5\u6570\u636e\u7f13\u5b58\u5757\u63d2\u5165\u5230bcache.head\u94fe\u8868\u540e\u9762\uff0c\u64cd\u4f5c\u5b8c\u6210\u540e\u518d\u91ca\u653e\u8be5\u9501\u3002 bpin()\u548cbunpin() \u83b7\u53d6\u5230\u9501\u540e\uff0c\u624d\u80fd\u4fee\u6539refcnt\uff0c\u64cd\u4f5c\u5b8c\u6210\u540e\u518d\u91ca\u653e\u8be5\u9501\u3002","title":"3.1 \u81ea\u65cb\u9501"},{"location":"lab3/part4/#32","text":"b.lock\u7528\u4e8e\u8868\u793abcache\u7f13\u5b58\u5757\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u5f53\u524d\u7f13\u5b58\u6570\u636e\u5757buf\u662f\u5426\u88ab\u9501\u4f4f\uff0c\u5f53b.lock\u4e3a1\u65f6\uff0c\u5219\u8c03\u7528sleep()\u7761\u7720\u7b49\u5f85\u9501\u91cd\u65b0\u53ef\u7528\uff0c\u4e3a0\u5219\u8868\u793a\u9501\u5df2\u7ecf\u88ab\u91ca\u653e\u3002\u7761\u7720\u9501\u7684\u4e09\u4e2a\u63a5\u53e3\u51fd\u6570\u5982\u4e0b\uff1a acquiresleep() \uff1a\u67e5\u8be2b.lock\u662f\u5426\u88ab\u9501\uff0c\u5982\u679c\u88ab\u9501\u4e86\uff0c\u5c31\u7761\u7720\uff0c\u8ba9\u51faCPU\uff0c\u76f4\u5230wakeup()\u5524\u9192\u540e\uff0c\u83b7\u53d6\u5230\u9501\uff0c\u5e76\u5c06b.lock\u7f6e1\u3002 releasesleep() \uff1a\u91ca\u653e\u9501\uff0c\u5e76\u8c03\u7528wakeup()\u3002 holdingsleep() \uff1a\u8fd4\u56de\u9501\u7684\u72b6\u6001\uff081\uff1a\u9501\u4f4f\u62160\uff1a\u672a\u9501\uff09\u3002 \u7761\u7720\u9501\u7684\u4f7f\u7528\uff1a bget() \u5728\u83b7\u53d6\u5230\u7f13\u5b58\u5757\uff08\u547d\u4e2d\u7684\u7f13\u5b58\u5757\uff0c\u6216\u8005\uff0c\u672a\u547d\u4e2d\u65f6\u901a\u8fc7LRU\u7b97\u6cd5\u66ff\u6362\u51fa\u6765\u7f13\u5b58\u4e2d\u7684\u7f13\u5b58\u5757\uff09\u540e\uff0c\u8c03\u7528acquiresleep()\u83b7\u53d6\u7761\u7720\u9501\u3002 bwrite() \u5728\u5199\u5165\u5230\u78c1\u76d8\u4e4b\u524d\uff0c\u5148\u8c03\u7528holdingsleep()\u67e5\u8be2\u662f\u5426\u5df2\u7ecf\u83b7\u53d6\u5230\u8be5\u7761\u7720\u9501\uff0c\u786e\u4fdd\u6709\u5e26\u9501\u800c\u5165\u3002 brelse() \u4e5f\u5148\u8c03\u7528holdingsleep()\u67e5\u8be2\u662f\u5426\u5df2\u7ecf\u83b7\u53d6\u5230\u8be5\u7761\u7720\u9501\uff0c\u786e\u4fdd\u6709\u5e26\u9501\u540e\uff0c\u624d\u8c03\u7528releasesleep()\u91ca\u653e\u8be5\u9501\u3002 \u81ea\u65cb\u9501\u548c\u7761\u7720\u9501\u7684\u533a\u522b Spinlock 1. \u5728\u77ed\u65f6\u95f4\u5185\u8fdb\u884c\u8f7b\u91cf\u7ea7\u52a0\u9501; 2. \u83b7\u53d6\u8fc7\u7a0b\u4e00\u76f4\u8fdb\u884c\u5fd9\u5faa\u73af\u2014\u65cb\u8f6c\u2014\u7b49\u5f85\u9501\u91cd\u65b0\u53ef\u7528\uff08\u5360\u7528CPU\u65f6\u95f4\u957f\uff09\uff1b 3. xv6\u8981\u6c42\u5728\u6301\u6709spinlock\u671f\u95f4\uff0c\u4e2d\u65ad\u4e0d\u5141\u8bb8\u53d1\u751f\u3002 sleep-lock 1. \u9002\u5408\u957f\u65f6\u95f4\u6301\u6709\uff1b 2. \u83b7\u53d6\u9501\u671f\u95f4\u53ef\u4ee5\u8ba9\u51faCPU\uff1b 3. \u6301\u6709Sleep-lock\u671f\u95f4\u5141\u8bb8\u4e2d\u65ad\u53d1\u751f\uff0c\u4f46\u4e0d\u5141\u8bb8\u5728\u4e2d\u65ad\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u3002","title":"3.2 \u7761\u7720\u9501"},{"location":"lab3/part4/#4-kalloctest","text":"\u6d4b\u8bc4\u7a0b\u5e8f\u4f1a\u68c0\u67e5\u9501\u88ab\u963b\u585e\u7684\u60c5\u51b5\uff0c\u8fd8\u8bb0\u5f97\u201cXV6\u4e2dLock\u7684\u5b9e\u73b0\u201d\u4e2d\u63d0\u5230\u7684acquire\u4ee3\u7801\u5417\uff1f 1. // Acquire the lock. 2. // Loops (spins) until the lock is acquired. 3. void 4. acquire ( struct spinlock * lk ) 5. { 6. push_off (); // disable interrupts to avoid deadlock. 7. if ( holding ( lk )) 8. panic ( \"acquire\" ); 9. __sync_fetch_and_add ( & ( lk -> n ), 1 ); 10. // On RISC-V, sync_lock_test_and_set turns into anatomic swap: 11. // a5 = 1 12. // s1 = &lk->locked 13. // amoswap.w.aq a5, a5, (s1) 14. while ( __sync_lock_test_and_set ( & lk -> locked , 1 ) != 0 ) { 15. __sync_fetch_and_add ( & lk -> nts , 1 ); 16. } 17. // Tell the C compiler and the processor to not moveloads or stores 18. // past this point, to ensure that the criticalsection's memory 19. // references happen after the lock is acquired. 20. __sync_synchronize (); 21. // Record info about lock acquisition for holding() anddebugging. 22. lk -> cpu = mycpu (); 23. } lk->n \uff1a\u5373#acquire\uff0c\u83b7\u53d6\u9501\u7684\u6b21\u6570\u3002 lk->nts \uff1a\u5373#fetch-and-add\uff0c\u6ca1\u6709\u83b7\u53d6\u5230\u9501\u7684\u6b21\u6570\u3002 \u6bcf\u5f53\u6267\u884c\u4e00\u6b21acquire()\u51fd\u6570\uff0c\u7b2c9\u884c __sync_fetch_and_add(&(lk->n), 1); \u5c31\u4f1a\u5c06lk->n\u52a01\uff0c\u5f53\u6267\u884c\u5230\u7b2c14\u884c\u65f6\uff0c\u5982\u679c __sync_lock_test_and_set(&lk->locked, 1) \u7684\u8fd4\u56de\u503c\u4e3a1\uff08\u5373\u9501\u5df2\u88ab\u5176\u4ed6\u8fdb\u7a0b\u9501\u4e0a\uff09\uff0clk->nts\u7684\u503c\u5c31\u4f1a\u52a01\uff0c\u800c\u6d4b\u8bc4\u7a0b\u5e8f\u4f1a\u68c0\u67e5lk->nts\u7684\u503c\u3002\u5f53lk->nts\u503c\u63a5\u8fd10\u65f6\uff0c\u624d\u80fd\u901a\u8fc7\u6d4b\u8bd5\u3002\u6240\u4ee5\u8fd9\u6b21\u5b9e\u9a8c\u4e2d\u9700\u8981\u505a\u7684\u5c31\u662f\u51cf\u5c11\u8fdb\u7a0b\u4e2d\u7684\u9501\u51b2\u7a81\uff0c\u5c3d\u91cf\u8ba9\u8fdb\u7a0b\u5728\u83b7\u53d6\u9501\u65f6\uff0c\u9501\u7684\u72b6\u6001\u90fd\u662f\u672a\u88ab\u9501\u4e0a\u7684\u3002","title":"4. \u6d4b\u8bc4\u7a0b\u5e8fkalloctest\u5bf9\u9501\u7684\u68c0\u6d4b"},{"location":"lab3/part5/","text":"\u4ee3\u7801\u63d0\u4ea4 \u00b6 \u8bf7\u53c2\u8003\u5b9e\u9a8c\u4e8c\u7684\u4ee3\u7801 \u63d0\u4ea4\u65b9\u5f0f \u3002","title":"\u63d0\u4ea4\u6587\u6863"},{"location":"lab3/part5/#_1","text":"\u8bf7\u53c2\u8003\u5b9e\u9a8c\u4e8c\u7684\u4ee3\u7801 \u63d0\u4ea4\u65b9\u5f0f \u3002","title":"\u4ee3\u7801\u63d0\u4ea4"},{"location":"lab4/part1/","text":"\u5b9e\u9a8c\u6982\u8ff0 \u00b6 \u6e29\uff08\u5b88\uff09\u99a8\uff08\u4f4f\uff09\u63d0\uff08\u7ea2\uff09\u793a\uff08\u7ebf\uff09 \u672c\u8bfe\u7a0b\u5b9e\u9a8c\u5df2\u5f15\u5165\u4ee3\u7801\u81ea\u52a8\u67e5\u91cd\u7cfb\u7edf\uff0c\u8bf7\u540c\u5b66\u4eec\u4fdd\u6301 \u5b66\u672f\u8bda\u4fe1 \uff01 \u8bfe\u7a0b\u590d\u4e60\u548c\u9884\u4e60\u8981\u6c42 \u672c\u8282\u5b9e\u9a8c\u4e0e\u7406\u8bba\u8bfe\u7684 \u201c\u865a\u62df\u5185\u5b58\u201d \u548c \u201c\u5185\u5b58\u7ba1\u7406\u201d \u8fd9\u4e24\u7ae0\u8bfe\u7a0b\u5185\u5bb9\u76f8\u5173\uff0c\u8bf7\u540c\u5b66\u4eec\u590d\u4e60\u8fd9\u4e24\u7ae0\u8bfe\u7a0b\u5185\u5bb9\u3002 \u5728\u505a\u5b9e\u9a8c\u4e4b\u524d\uff0c\u8bf7\u540c\u5b66\u4eec\u9605\u8bfb xv6\u624b\u518c \u7684\u4ee5\u4e0b\u7ae0\u8282\u53ca\u76f8\u5173\u6e90\u4ee3\u7801\uff1a [1] xv6 book, Chapter 3 Page tables (\u9875\u8868) [2] kernel/memlayout.h \uff08\u5b9a\u4e49\u5185\u5b58\u7684\u5e03\u5c40\uff09 [3] kernel/vm.c \uff08\u865a\u62df\u5185\u5b58\u4ee3\u7801\uff09 [4] kernel/kalloc.c \uff08\u5206\u914d\u548c\u91ca\u653e\u7269\u7406\u5185\u5b58\u4ee3\u7801\uff09 \u6b64\u5916\uff0c\u7279\u522b\u63a8\u8350\u540c\u5b66\u4eec\u89c2\u770b\u7531\u6211\u6821OS\u8bfe\u9898\u7ec4\u3001\u5404\u7ea7\u5b66\u957f\u52a9\u6559\u4eec\u5408\u529b\u4e3a\u5927\u5bb6\u5f55\u5236\u7684XV6\u8bb2\u89e3\u89c6\u9891\uff0c\u5e0c\u671b\u80fd\u591f\u8ba9\u5927\u5bb6\u5bf9\u6574\u4e2aXV6\u7cfb\u7edf\u6709\u4e00\u4e2a\u66f4\u4e3a\u76f4\u89c2\u7684\u8ba4\u8bc6\uff0c\u63a8\u8350\u5927\u5bb6\u6309\u9700\u89c2\u770b\uff1a \u3010HITSZ\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u7a0b\u7ec4\u8bb2\u89e3XV6\uff08\u4e00\uff09\u542f\u52a8\u8fc7\u7a0b\u3011 \u89c6\u9891\u94fe\u63a5: https://www.bilibili.com/video/BV1mK411S7N9?share_source=copy_web&vd_source=225a99017e082147ac525beeddd6e3e2 \u8bfe\u7a0bPPT: \u70b9\u8fd9\u91cc\u4e0b\u8f7d \u3010HITSZ\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u7a0b\u7ec4\u8bb2\u89e3XV6\uff08\u4e8c\uff09\u8fdb\u7a0b\u7ba1\u7406\u3011 \u89c6\u9891\u94fe\u63a5: https://www.bilibili.com/video/BV1ge4y1J7Je?share_source=copy_web&vd_source=225a99017e082147ac525beeddd6e3e2 \u8bfe\u7a0bPPT: \u70b9\u8fd9\u91cc\u4e0b\u8f7d \u3010HITSZ\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u7a0b\u7ec4\u8bb2\u89e3XV6\uff08\u4e09\uff09\u5185\u5b58\u7ba1\u7406\u3011 \u89c6\u9891\u94fe\u63a5: https://www.bilibili.com/video/BV1Te4y1i77z?share_source=copy_web&vd_source=225a99017e082147ac525beeddd6e3e2 \u8bfe\u7a0bPPT: \u70b9\u8fd9\u91cc\u4e0b\u8f7d \u63d0\u793a \u672c\u8282\u5b9e\u9a8c\u5c06\u63a2\u7d22\u5185\u6838\u7684\u5185\u5b58\u7ba1\u7406\u6a21\u5757\uff0c\u5e76\u4e14\u9700\u8981\u4fee\u6539\u76f8\u5e94\u7684\u90e8\u5206\u3002\u5efa\u8bae\u9605\u8bfb\u5b8c\u6240\u6709\u90e8\u5206\uff0c\u518d\u5f00\u59cb\u4ee3\u7801\u7684\u7f16\u5199\u3002 0. \u5b9e\u9a8c\u5206\u6570 \u00b6 \u672c\u5b9e\u9a8c\u6709\u4e09\u4e2a\u4efb\u52a1\uff0c\u4f5c\u4e3a\u6700\u540e\u4e00\u4e2aMIT xv6\u5b9e\u9a8c\uff0c\u4efb\u52a1\u4e8c\u548c\u4efb\u52a1\u4e09\u7684\u96be\u5ea6\u76f8\u6bd4\u4e4b\u524d\u6765\u8bf4\u6709 \u660e\u663e\u63d0\u9ad8 \uff0c\u4f46\u662f\u6211\u4eec\u5e0c\u671b\u5927\u5bb6\u80fd\u591f\u5c3d\u91cf\u5b8c\u6210\uff0c\u5982\u679c\u5b9e\u5728\u65e0\u6cd5\u5b8c\u6210\uff0c\u4e5f\u53ef\u4ee5\u7ed9\u51fa\u4f60\u7684\u601d\u8def\uff0c\u4ee5\u5c3d\u53ef\u80fd\u62ff\u5230\u5206\u6570\uff0c\u5373\u4f7f\u4efb\u52a1\u4e8c\u548c\u4efb\u52a1\u4e09\u7684\u5206\u6570\u5360\u6bd4\u4e0d\u9ad8\u3002 1. \u5b9e\u9a8c\u62a5\u544a \u56de\u7b54\u5b9e\u9a8c\u4e2d\u7684\u95ee\u9898 40%\uff1b \u7ed9\u51fa\u5b9e\u9a8c\u8bbe\u8ba1\u601d\u8def 60%\uff1a \u4efb\u52a1\u4e00\uff1a30% \u4efb\u52a1\u4e8c\uff1a20% \u4efb\u52a1\u4e09\uff1a10% \u82e5\u5bf9\u5e94\u4efb\u52a1\u672a\u7ed9\u51fa\u5b9e\u9a8c\u8bbe\u8ba1\uff0c\u90a3\u4e48\u5bf9\u5e94\u4efb\u52a1\u4ee3\u7801\u5206\u8bb00\u5206\u3002 2. \u5b9e\u9a8c\u4ee3\u7801 \u4efb\u52a1\u4e00\uff1a50% \u4efb\u52a1\u4e8c\uff1a30% \u4efb\u52a1\u4e09\uff1a20% \u82e5\u5bf9\u5e94\u4efb\u52a1\u4ee3\u7801\u65e0\u6cd5\u901a\u8fc7\u6d4b\u8bd5\uff0c\u90a3\u4e48\u5b9e\u9a8c\u62a5\u544a\u4e2d\u5bf9\u5e94\u4efb\u52a1\u7684\u8bbe\u8ba1\u5206\u6700\u9ad8\u53ea\u80fd\u5f97\u5230\u6ee1\u5206\u768450%\u3002 \u56e0\u6b64\uff0c\u5373\u4f7f\u6ca1\u6709\u5b9e\u73b0\uff0c\u4f60\u4e5f\u5e94\u8be5\u5e94\u8be5\u5c3d\u53ef\u80fd\u5730\u7ed9\u51fa\u4f60\u7684\u601d\u8def\u3002 1. \u5b9e\u9a8c\u76ee\u7684 \u00b6 \u4e86\u89e3\u9875\u8868\u7684\u5b9e\u73b0\u539f\u7406\u3002 \u4fee\u6539\u9875\u8868\uff0c\u4f7f\u5185\u6838\u66f4\u65b9\u4fbf\u7684\u8fdb\u884c\u7528\u6237\u865a\u62df\u5730\u5740\u7ffb\u8bd1\u3002 2. \u5b9e\u9a8c\u5b66\u65f6 \u00b6 \u672c\u5b9e\u9a8c\u4e3a4\u5b66\u65f6\u3002 3. \u5b9e\u9a8c\u5185\u5bb9\u53ca\u8981\u6c42 \u00b6 \u8bf7\u5148\u540c\u6b65\u4e0a\u6e38\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5e76\u6ce8\u610f\u5207\u6362\u5230pgtbl \u5206\u652f\u8fdb\u884c\u8bd5\u9a8c \u672c\u6b21\u5b9e\u9a8c\u57fa\u4e8e pgtbl \u5206\u652f\uff0c\u8bf7\u540c\u5b66\u4eec\u6ce8\u610f\u5207\u6362\u3002 Step 1. \u9996\u5148\uff0c\u4fdd\u5b58\u5b9e\u9a8c\u4e09\u7684\u4ee3\u7801\uff0c\u8bf7\u53c2\u8003\u5b9e\u9a8c\u5b9e\u7528\u5de5\u5177\u7684 3.3.1 \u4f7f\u7528\u547d\u4ee4\u884c\u5b8c\u6210\u64cd\u4f5c \u6216\u8005 3.3.2 \u4f7f\u7528VS Code\u5185\u5efa\u7684\u56fe\u5f62\u5316\u754c\u9762\u5b8c\u6210\u64cd\u4f5c \u8fd9\u4e24\u5c0f\u8282\uff0c\u5b8c\u6210commit\u64cd\u4f5c\u3002\u6216\u8005\uff0c \u5982\u679c\u4f60\u5e0c\u671b\u76f4\u63a5\u653e\u5f03\u6389\u4e0a\u4e00\u6b21commit\u540e\u7684\u6240\u6709\u66f4\u6539 \uff0c\u90a3\u4e48\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528-f\u9009\u9879\u5f3a\u5236\u5207\u6362\u5206\u652f\uff0c\u4f8b\u5982 git checkout -f pgtbl \u3002 Step 2. \u5207\u6362\u7684\u65b9\u6cd5\u53ef\u4ee5\u53c2\u8003\u5b9e\u9a8c -> \u5b9e\u9a8c\u5b9e\u7528\u5de5\u5177 -> 3.1\u540c\u6b65\u4e0a\u6e38\u4ed3\u5e93 ~ 3.3.3 \u5408\u5e76\u51b2\u7a81\u66f4\u6539 \u3002 \u540c\u65f6\uff0c\u672c\u6b21\u5b9e\u9a8c\u7684 \u8f93\u51fa\u683c\u5f0f\u4e0d\u540c\u4e8eMIT\u539f\u7248\u5b9e\u9a8c\uff0c\u8bf7\u4e25\u683c\u6309\u7167\u6307\u5bfc\u4e66\u8981\u6c42\uff01 3.1 \u4efb\u52a1\u4e00\uff1a\u6253\u5370\u9875\u8868 \u00b6 \u672c\u4efb\u52a1\u4e2d\uff0c\u4f60\u9700\u8981\u52a0\u5165\u9875\u8868\u6253\u5370\u529f\u80fd\uff0c\u6765\u5e2e\u52a9\u4f60\u5728\u4e4b\u540e\u7684\u5b9e\u9a8c\u4e2d\u8fdb\u884cdebug\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u9875\u8868\u7684\u6570\u636e\u7ed3\u6784\u3002\u7136\u540e\uff0c\u6309\u5c42\u6b21\u6bcf\u9875\u6253\u5370\u5373\u53ef\uff0c\u53ef\u4ee5\u91c7\u7528\u8fed\u4ee3\u7684\u7b97\u6cd5\u3002 3.1.1 \u6253\u5370\u51fd\u6570\u5b9a\u4e49 \u00b6 void vmprint(pagetable_t pgtbl) \u8be5\u51fd\u6570\u5c06\u83b7\u53d6\u4e00\u4e2a \u6839\u9875\u8868\u6307\u9488 \u4f5c\u4e3a\u53c2\u6570\uff0c\u7136\u540e\u6253\u5370\u5bf9\u5e94\u7684\u9875\u8868\u6570\u636e\u3002 \u51fd\u6570\u7684\u4f7f\u7528\u4f4d\u7f6e \uff1a\u6ce8\u610f\uff01\u8be5\u51fd\u6570\u4e00\u5b9a\u8981\u63d2\u5165\u5728 exec() \u903b\u8f91\u7ed3\u675f\u7684\u672b\u5c3e\uff0c\u6765\u6253\u5370\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u6216\u521a\u8f7d\u5165\u7a0b\u5e8f\u7684\u9875\u8868\u6570\u636e\u3002\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u53ef\u4ee5\u63d2\u5165\u5230\u5176\u4ed6\u7684\u5730\u65b9\uff0c\u4f46\u662f\u6700\u540e\u4e00\u5b9a\u53ea\u4fdd\u7559\u8fd9\u4e00\u4e2a\u5730\u65b9\u7684\u51fd\u6570\u4f7f\u7528\u3002 \u5728exec.c\u4e2d\u7684\u8fd4\u56deargc\u4e4b\u524d\u63d2\u5165vmprint()\u51fd\u6570\uff0c\u4ee5\u8f93\u51fa\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u6216\u521a\u8f7d\u5165\u7a0b\u5e8f\u7684\u9875\u8868\u3002\u5176\u4e2d\uff0cvmprin()\u51fd\u6570\u7684\u5165\u53c2\u53ef\u4ee5\u6839\u636e\u4f60\u81ea\u5df1\u7684\u8bbe\u8ba1\u6765\u586b\u5165\u3002 3.1.2 \u7ed3\u679c\u793a\u4f8b \u00b6 \u5f53xv6\u542f\u52a8\u7684\u65f6\u5019\uff0c\u5b83\u81ea\u8eab\u4f1a\u8c03\u7528 exec() \u542f\u52a8\u7b2c\u4e00\u4e2a\u8fdb\u7a0b init \uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u7684\u51fd\u6570\u4f1a\u5f97\u5230\u4ee5\u4e0b\u7684\u8f93\u51fa\uff1a xv6 kernel is booting hart 1 starting hart 2 starting page table 0x0000000087f6e000 /* \u6839\u9875\u8868\u7269\u7406\u5730\u5740\uff1a0x0000000087f6e000 */ ||0: pte 0x0000000021fda801 pa 0x0000000087f6a000 /* \u6839\u9875\u76ee\u5f55\u9879 0\uff0cPTE\u5185\u5bb9\u4e3a0x0000000021fda801\uff0c\u8868\u793a\u4e0b\u4e00\u7ea7\uff08\u7b2c\u4e8c\u7ea7\uff09\u9875\u8868\u7684PPN\u7269\u7406\u9875\u5e27\u53f7\u4e3a0x87f6a\uff0cFlags\u4e3a0x001\uff0cPTE_V\u6709\u6548\u3002\u8be5\u7269\u7406\u9875\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\u4e3a0x0000000087f6a000\u3002*/ || ||0: pte 0x0000000021fda401 pa 0x0000000087f69000 /* \u7b2c\u4e8c\u7ea7\u76ee\u5f55\u9879 0\uff0cPTE\u7684PPN\u7269\u7406\u9875\u5e27\u53f7\uff1a0x87f69\uff0cFlags\u4e3a0x001\u3002 */ || || ||0: pte 0x0000000021fdac1f pa 0x0000000087f6b000 /* \u7b2c\u4e09\u7ea7\u76ee\u5f55\u9879 0\uff0c\u5176PPN\u7269\u7406\u9875\u5e27\u53f7\uff1a0x87f6b\uff0cFlags\u4e3a0x01f\uff0c\u7269\u7406\u5757\u8d77\u59cb\u5730\u5740\uff1a0x0000000087f6b000 */ || || ||1: pte 0x0000000021fda00f pa 0x0000000087f68000 /* \u7b2c\u4e09\u7ea7\u76ee\u5f55\u9879 1\uff0c\u5176PPN\u7269\u7406\u9875\u5e27\u53f7\uff1a0x87f68\uff0cFlags\u4e3a0x00f\uff0c\u7269\u7406\u5757\u8d77\u59cb\u5730\u5740\uff1a0x0000000087f68000 */ || || ||2: pte 0x0000000021fd9c1f pa 0x0000000087f67000 /* \u7b2c\u4e09\u7ea7\u76ee\u5f55\u9879 2\uff0c\u5176PPN\u7269\u7406\u9875\u5e27\u53f7\uff1a0x87f67\uff0cFlags\u4e3a0x01f\uff0c\u7269\u7406\u5757\u8d77\u59cb\u5730\u5740\uff1a0x0000000087f67000 */ ||255: pte 0x0000000021fdb401 pa 0x0000000087f6d000 /* \u6839\u9875\u76ee\u5f55\u9879 255\uff0c\u4e0b\u4e00\u7ea7\uff08\u7b2c\u4e8c\u7ea7\uff09\u9875\u8868\u7684PPN\u7269\u7406\u9875\u5e27\u53f7\u4e3a0x87f6d\uff0cFlags\u4e3a0x001\uff0cPTE_V\u6709\u6548\u3002\u8be5\u7269\u7406\u9875\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\u4e3a0x0000000087f6d000 */ || ||511: pte 0x0000000021fdb001 pa 0x0000000087f6c000 /* \u7b2c\u4e8c\u7ea7\u76ee\u5f55\u9879 511\uff0cPPN\u7269\u7406\u9875\u5e27\u53f7\u4e3a0x87f6c\uff0cFlags\u4e3a0x001 */ || || ||510: pte 0x0000000021fdd807 pa 0x0000000087f76000 /* \u7b2c\u4e09\u7ea7\u76ee\u5f55\u9879 510\uff0c\u5176PPN\u7269\u7406\u9875\u5e27\u53f7\uff1a0x87f76\uff0cFlags\u4e3a0x007\uff0c\u7269\u7406\u5757\u8d77\u59cb\u5730\u5740\uff1a0x0000000087f76000 */ || || ||511: pte 0x0000000020001c0b pa 0x0000000080007000 /* \u7b2c\u4e09\u7ea7\u76ee\u5f55\u9879 511\uff0c\uff0c\u5176PPN\u7269\u7406\u9875\u5e27\u53f7\uff1a0x80007\uff0cFlags\u4e3a0x00b\uff0c\u7269\u7406\u5757\u8d77\u59cb\u5730\u5740\uff1a0x0000000080007000 */ \u6211\u4eec\u5148\u4e0d\u7740\u6025\u52a8\u624b\uff0c\u5148\u770b\u770b\u7ed3\u679c\u957f\u4ec0\u4e48\u6837\uff08\u4e0d\u6e05\u695a\u9875\u8868\u7684\u542b\u4e49\u5148\u4e0d\u6025\uff0c\u5b9e\u9a8c\u539f\u7406\u4f1a\u544a\u8bc9\u4f60\uff09\u3002 \u7b2c\u4e00\u884c\u6253\u5370\u7684\u662f vmprint \u7684\u53c2\u6570\uff0c\u5373\u83b7\u5f97\u7684\u9875\u8868\u53c2\u6570\u5177\u4f53\u7684\u503c\u3002 \u5728\u4e4b\u540e\u6253\u5370\u7684\u5219\u662f\u9875\u8868\u9879\u3002RISC-V\u7684\u9875\u8868\u88ab\u8bbe\u8ba1\u6210\u4e86\u4e09\u5c42\uff08\u5177\u4f53\u89c1 \u5b9e\u9a8c\u539f\u7406 \uff09\uff0c\u6bcf\u4e00\u4e2a\u201d||\u201c\u90fd\u4ee3\u8868\u4e00\u5c42\u3002 \u4e4b\u540e\u6253\u5370\u7684\u683c\u5f0f\u4e3a\uff1a $index: pte $pte_bits pa $physical_address \u3002 index : \u6307\u793a\u4e86\u8be5\u9875\u8868\u9879\u5728\u5f53\u524d\u7b49\u7ea7\u9875\u8868\u5185\u7684\u5e8f\u53f7\uff08\u53d6\u503c\u8303\u56f4\uff1a0-511\uff09\uff1b pte_bits \uff1a\u6307\u793a\u4e86\u8fd9\u4e2a\u9875\u8868\u9879\u7684\u5341\u516d\u8fdb\u5236\u503c\uff08PTE\uff09\uff1b physical_address \uff1a\u6307\u793a\u4e86\u8fd9\u4e2a\u9875\u8868\u9879\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u7269\u7406\u5730\u5740\uff1b \u53ea\u6253\u5370\u6709\u6548\u7684pte\u3002 \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6839\u9875\u8868\u9879\u53ea\u6709\u7b2c0\u9879\u548c\u7b2c255\u9879\u7684\u6620\u5c04\u662f\u6709\u6548\u7684\uff0c\u5176\u4e2d\u7b2c0\u9879\u7684\u6b21\u9875\u8868\u53ea\u6620\u5c04\u4e86\u7d22\u5f150\uff0c\u8be5\u7d22\u5f150\u6620\u5c04\u4e86\u53f6\u5b50\u9875\u8868\u76840\u30011\u548c2\u3002 \u4f60\u7684\u4ee3\u7801\u8f93\u51fa\u7684\u7269\u7406\u5730\u5740\u4e0e\u4e0a\u8ff0\u793a\u4f8b\u53ef\u80fd\u4e0d\u76f8\u540c\uff0c\u4f46\u663e\u793a\u9879\u6570\u548c\u865a\u62df\u5730\u5740\u5e94\u76f8\u540c\u3002 3.1.3 \u6d4b\u8bd5 \u00b6 \u8fd0\u884c make grade \uff0c\u5176\u4e2d\u7684 pte printout \u6d4b\u8bd5\u5c31\u662f\u8be5\u4efb\u52a1\u7684\u6d4b\u8bd5\uff08 \u53ef\u53c2\u8003\u6d4b\u8bc4 3.4 \uff09\u3002 3.2 \u4efb\u52a1\u4e8c\uff1a\u72ec\u7acb\u5185\u6838\u9875\u8868\uff08\u96be\uff09 \u00b6 \u76ee\u524d\uff0cxv6\u7684\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u72ec\u7acb\u7684 \u7528\u6237\u9875\u8868 \uff08\u53ea\u5305\u542b\u8be5\u8fdb\u7a0b\u7528\u6237\u5185\u5b58\u7684\u6620\u5c04\uff0c\u4ece\u865a\u62df\u5730\u57400\u5f00\u59cb\uff09\uff0c\u4f46\u662f\u6bcf\u4e2a\u8fdb\u7a0b\u8fdb\u5165\u5185\u6838\u7684\u65f6\u5019\uff0c\u4f1a\u4f7f\u7528\u552f\u4e00\u7684\u4e00\u4e2a \u5168\u5c40\u5171\u4eab\u5185\u6838\u9875\u8868 \u3002\u6211\u4eec\u9700\u8981 \u5c06\u5168\u5c40\u5171\u4eab\u5185\u6838\u9875\u8868\u6539\u6210\u72ec\u7acb\u5185\u6838\u9875\u8868 \uff0c\u4f7f\u5f97\u6bcf\u4e2a\u8fdb\u7a0b\u62e5\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5185\u6838\u9875\u8868\uff0c\u4e5f\u5c31\u662f\u5168\u5c40\u5171\u4eab\u5185\u6838\u9875\u8868\u7684\u526f\u672c\u3002 \u8fd9\u90e8\u5206\u6709\u4e00\u5b9a\u7684\u96be\u5ea6\uff0c\u56e0\u6b64\u6307\u5bfc\u4e66\u4f1a\u5c3d\u53ef\u80fd\u7ed9\u51fa\u591a\u7684\u63cf\u8ff0\uff0c\u5927\u5bb6\u5e94\u53cd\u590d\u9605\u8bfb\uff0c\u5e76\u8bd5\u56fe\u5c06\u77e5\u8bc6\u70b9\u4e32\u8054\u8d77\u6765\u3002 3.2.1 \u72ec\u7acb\u9875\u8868\u7684\u80cc\u666f \u00b6 \u5171\u4eab\u5185\u6838\u9875\u8868\u4e2d\uff0c\u6240\u6709\u7269\u7406\u5730\u5740\u90fd\u548c\u4e0e\u4e4b\u5b8c\u5168\u76f8\u7b49\u7684\u865a\u62df\u5730\u5740\u5efa\u7acb\u6620\u5c04\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u6620\u5c04\u3002\u8fd9\u662f\u8ba9\u5185\u6838\u80fd\u591f\u76f4\u63a5\u4ee5\u7269\u7406\u5730\u5740\u8bbf\u95ee\u5185\u5b58\u7684\u6570\u636e\uff0c\u4e0d\u9700\u8981\u4f7f\u7528\u4efb\u4f55\u7684\u865a\u62df\u5730\u5740\u3002 \u4f46\u662f \uff0c\u7531\u4e8e\u7528\u6237\u5730\u5740\u7684\u6620\u5c04\u5e76\u672a\u5b58\u50a8\u4e8e\u5185\u6838\u9875\u8868\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u5904\u7406\u7528\u6237\u7a0b\u5e8f\u4f20\u6765\u7684\u865a\u62df\u5730\u5740\uff08\u6bd4\u5982\u7cfb\u7edf\u8c03\u7528\u4f20\u5165\u7684\u6307\u9488\uff09\uff0c\u6211\u4eec\u9700\u8981\u5148\u627e\u5230\u7528\u6237\u9875\u8868\uff0c\u9010\u4e2a\u9875\u8868\u9879\u5730\u627e\u5230\u80fd\u591f\u7ffb\u8bd1\u5bf9\u5e94\u865a\u62df\u5730\u5740\u7684\u9875\u8868\u9879\u540e\uff0c\u624d\u53ef\u4ee5\u83b7\u53d6\u5b9e\u9645\u7684\u7269\u7406\u5730\u5740\u5e76\u8fdb\u884c\u8bbf\u95ee\uff0c\u8fd9\u53eb\u505a\u8f6f\u4ef6\u6a21\u62df\u7ffb\u8bd1\u3002\u8f6f\u4ef6\u6a21\u62df\u7ffb\u8bd1\u7684\u5b9e\u73b0\u5f88\u590d\u6742\uff0c\u540c\u65f6\uff0c\u56e0\u4e3a\u9700\u8981\u590d\u6742\u7684\u67e5\u627e\uff0c\u8fd8\u964d\u4f4e\u4e86\u6027\u80fd\u3002 \u6240\u4ee5\u6211\u4eec\u5c06 \u7528\u6237\u9875\u8868\u4e2d\u7684\u5185\u5b58\u6620\u5c04 \u548c \u539f\u6765\u5171\u4eab\u5185\u6838\u9875\u8868\u4e2d\u7684\u5185\u5b58\u6620\u5c04 \u8fdb\u884c\u5408\u5e76\uff0c\u8fd9\u6837\u5185\u6838\u4e5f\u80fd\u591f\u76f4\u63a5\u5bf9\u7528\u6237\u7684\u865a\u62df\u5730\u5740\u8fdb\u884c\u8bbf\u95ee\uff0c\u800c\u4e0d\u9700\u8981\u8f6f\u4ef6\u6a21\u62df\u7ffb\u8bd1\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u662f \u4efb\u52a1\u4e09\u548c\u4efb\u52a1\u4e8c\u4e00\u540c \u9700\u8981\u5b9e\u73b0\u7684\u7ed3\u679c\uff0c\u4efb\u52a1\u4e8c\u5206\u79bb\u51fa\u72ec\u7acb\u9875\u8868\uff0c\u4efb\u52a1\u4e09\u5229\u7528\u72ec\u7acb\u9875\u8868\u53bb\u9664\u8f6f\u4ef6\u6a21\u62df\u7ffb\u8bd1\u3002 3.2.2 \u72ec\u7acb\u9875\u8868\u7684\u8981\u6c42 \u00b6 \u5171\u4eab\u5185\u6838\u9875\u8868\u7684\u6620\u5c04\uff1a\u865a\u5b9e\u5730\u5740\u76f8\u540c\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u6620\u5c04\u3002 \u72ec\u7acb\u5185\u6838\u9875\u8868\u7684\u6620\u5c04\uff1a\u865a\u5b9e\u5730\u5740\u76f8\u540c\u7684\u6620\u5c04\u5e94\u8be5\u8981\u4fdd\u7559\uff0c \u5148\u4e0d\u9700\u8981 \u52a0\u4e0a\u7528\u6237\u9875\u8868\u7684\u5185\u5bb9\uff0c\u5728 \u4efb\u52a1\u4e09 \u4e2d\u518d\u52a0\u4e0a\u52a0\u4e0a\u7528\u6237\u9875\u8868\u7684\u5185\u5bb9\u3002 \u540c\u65f6\u8fd8\u9700\u8981\u4fee\u6539\u6709\u5173\u7684\u64cd\u4f5c\u3002 3.2.3 \u6d4b\u8bd5 \u00b6 \u9996\u5148\uff0c\u5728xv6\u8fd0\u884c kvmtest \uff0c\u5982\u679c\u4f60\u786e\u5b9e\u4f7f\u7528\u4e86\u72ec\u7acb\u5185\u6838\u9875\u8868\uff0c\u4f1a\u770b\u5230\u4ee5\u4e0b\u7ed3\u679c\uff1a \u7136\u540e\uff0c\u8bf7\u5728xv6\u8fd0\u884c usertests \uff0c\u786e\u4fdd\u6240\u6709\u6d4b\u8bd5\u901a\u8fc7\uff08\u663e\u793a\"ALL TESTS PASSED\"\uff09\u3002 3.3 \u4efb\u52a1\u4e09\uff1a\u7b80\u5316\u8f6f\u4ef6\u6a21\u62df\u5730\u5740\u7ffb\u8bd1\uff08\u5f88\u96be\uff09 \u00b6 xv6\u76ee\u524d\u4f7f\u7528 kernel/vm.c \u4e2d\u7684 copyin()/copyinstr() \u5c06\u7528\u6237\u5730\u5740\u7a7a\u95f4\u7684\u6570\u636e\u62f7\u8d1d\u81f3\u5185\u6838\u5730\u5740\u7a7a\u95f4\uff0c\u5b83\u4eec\u901a\u8fc7\u8f6f\u4ef6\u6a21\u62df\u7ffb\u8bd1\u7684\u65b9\u5f0f\u83b7\u53d6\u7528\u6237\u7a7a\u95f4\u5730\u5740\u5bf9\u5e94\u7684\u7269\u7406\u5730\u5740\uff0c\u7136\u540e\u8fdb\u884c\u590d\u5236\uff08\u8be6\u60c5\u89c1\u4ee3\u7801\u6ce8\u91ca\uff09\u3002 \u4efb\u52a1\u76ee\u6807\uff1a\u4f60\u9700\u8981 \u5728\u72ec\u7acb\u5185\u6838\u9875\u8868\u52a0\u4e0a\u7528\u6237\u5730\u5740\u7a7a\u95f4\u7684\u6620\u5c04\uff0c\u540c\u65f6\u5c06\u51fd\u6570 copyin()/copyinstr() \u4e2d\u7684\u8f6f\u4ef6\u6a21\u62df\u5730\u5740\u7ffb\u8bd1\u6539\u6210\u76f4\u63a5\u8bbf\u95ee \uff0c\u4f7f\u5f97\u5185\u6838\u80fd\u591f\u4e0d\u5fc5\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\uff0c\u7528\u8f6f\u4ef6\u6a21\u62df\u7684\u65b9\u6cd5\u4e00\u6b65\u4e00\u6b65\u904d\u5386\u9875\u8868\uff0c\u800c\u662f\u76f4\u63a5\u5229\u7528\u786c\u4ef6\u3002 3.3.1 \u4efb\u52a1\u8981\u6c42 \u00b6 \u8981\u6c42\u63d0\u4f9b\u4e86\u65b0\u7684\u51fd\u6570 copyin_new()/copyinstr_new() \uff08\u5728 kernel/vmcopyin.c \u4e2d\u5b9a\u4e49\uff09\u3002\u4f60\u9700\u8981\u627e\u5230\u8c03\u7528 copyin() \uff08\u5728 kernel/vm.c \u4e2d\u5b9a\u4e49\uff09\u7684\u5730\u65b9\uff0c\u7528 copyin_new() \u66ff\u6362\u4e4b \u3002\u540c\u6837\u5730\uff0c\u7528 copyinstr_new() \u4ee3\u66ff copyinstr() \u3002 \u5728\u72ec\u7acb\u5185\u6838\u9875\u8868\u52a0\u4e0a\u7528\u6237\u9875\u8868\u7684\u6620\u5c04\uff0c\u4ee5\u4fdd\u8bc1\u521a\u521a\u66ff\u6362\u5730\u65b0\u51fd\u6570\u80fd\u591f\u4f7f\u7528\u3002\u4f46\u662f\u8981\u6ce8\u610f\u5730\u5740\u91cd\u5408\u95ee\u9898\uff0c\u89c1\u201c \u5b9e\u9a8c\u539f\u7406 3.5 \u201d. 3.3.2 \u7ed3\u679c\u793a\u4f8b \u00b6 \u9996\u5148\uff0c\u5728xv6\u8fd0\u884c stats stats \uff0c\u5982\u679c\u4f60\u6b63\u786e\u4f7f\u7528\u4e86copyin_new\u548ccopyinstr_new\uff0c\u4f1a\u770b\u5230\u8f93\u51fa\u7684\u6570\u503c\u4e0d\u4e3a\u96f6\uff1a \u7136\u540e\uff0c\u8bf7\u5728xv6\u8fd0\u884c usertests \uff0c\u786e\u4fdd\u6240\u6709\u6d4b\u8bd5\u901a\u8fc7\uff08\u663e\u793a\"ALL TESTS PASSED\"\uff09\u3002 3.4 \u6d4b\u8bc4 \u00b6 \u5f53\u5b8c\u6210\u4e0a\u8ff0\u7684\u4e09\u4e2a\u5b9e\u9a8c\u540e\uff0c\u5728\u547d\u4ee4\u884c\u8f93\u5165 make grade \u8fdb\u884c\u6d4b\u8bd5\u3002\u5982\u679c\u901a\u8fc7\u6d4b\u8bd5\uff0c\u4f1a\u663e\u793a\u5982\u4e0b\u5185\u5bb9\uff1a","title":"\u5b9e\u9a8c\u6982\u8ff0"},{"location":"lab4/part1/#_1","text":"\u6e29\uff08\u5b88\uff09\u99a8\uff08\u4f4f\uff09\u63d0\uff08\u7ea2\uff09\u793a\uff08\u7ebf\uff09 \u672c\u8bfe\u7a0b\u5b9e\u9a8c\u5df2\u5f15\u5165\u4ee3\u7801\u81ea\u52a8\u67e5\u91cd\u7cfb\u7edf\uff0c\u8bf7\u540c\u5b66\u4eec\u4fdd\u6301 \u5b66\u672f\u8bda\u4fe1 \uff01 \u8bfe\u7a0b\u590d\u4e60\u548c\u9884\u4e60\u8981\u6c42 \u672c\u8282\u5b9e\u9a8c\u4e0e\u7406\u8bba\u8bfe\u7684 \u201c\u865a\u62df\u5185\u5b58\u201d \u548c \u201c\u5185\u5b58\u7ba1\u7406\u201d \u8fd9\u4e24\u7ae0\u8bfe\u7a0b\u5185\u5bb9\u76f8\u5173\uff0c\u8bf7\u540c\u5b66\u4eec\u590d\u4e60\u8fd9\u4e24\u7ae0\u8bfe\u7a0b\u5185\u5bb9\u3002 \u5728\u505a\u5b9e\u9a8c\u4e4b\u524d\uff0c\u8bf7\u540c\u5b66\u4eec\u9605\u8bfb xv6\u624b\u518c \u7684\u4ee5\u4e0b\u7ae0\u8282\u53ca\u76f8\u5173\u6e90\u4ee3\u7801\uff1a [1] xv6 book, Chapter 3 Page tables (\u9875\u8868) [2] kernel/memlayout.h \uff08\u5b9a\u4e49\u5185\u5b58\u7684\u5e03\u5c40\uff09 [3] kernel/vm.c \uff08\u865a\u62df\u5185\u5b58\u4ee3\u7801\uff09 [4] kernel/kalloc.c \uff08\u5206\u914d\u548c\u91ca\u653e\u7269\u7406\u5185\u5b58\u4ee3\u7801\uff09 \u6b64\u5916\uff0c\u7279\u522b\u63a8\u8350\u540c\u5b66\u4eec\u89c2\u770b\u7531\u6211\u6821OS\u8bfe\u9898\u7ec4\u3001\u5404\u7ea7\u5b66\u957f\u52a9\u6559\u4eec\u5408\u529b\u4e3a\u5927\u5bb6\u5f55\u5236\u7684XV6\u8bb2\u89e3\u89c6\u9891\uff0c\u5e0c\u671b\u80fd\u591f\u8ba9\u5927\u5bb6\u5bf9\u6574\u4e2aXV6\u7cfb\u7edf\u6709\u4e00\u4e2a\u66f4\u4e3a\u76f4\u89c2\u7684\u8ba4\u8bc6\uff0c\u63a8\u8350\u5927\u5bb6\u6309\u9700\u89c2\u770b\uff1a \u3010HITSZ\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u7a0b\u7ec4\u8bb2\u89e3XV6\uff08\u4e00\uff09\u542f\u52a8\u8fc7\u7a0b\u3011 \u89c6\u9891\u94fe\u63a5: https://www.bilibili.com/video/BV1mK411S7N9?share_source=copy_web&vd_source=225a99017e082147ac525beeddd6e3e2 \u8bfe\u7a0bPPT: \u70b9\u8fd9\u91cc\u4e0b\u8f7d \u3010HITSZ\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u7a0b\u7ec4\u8bb2\u89e3XV6\uff08\u4e8c\uff09\u8fdb\u7a0b\u7ba1\u7406\u3011 \u89c6\u9891\u94fe\u63a5: https://www.bilibili.com/video/BV1ge4y1J7Je?share_source=copy_web&vd_source=225a99017e082147ac525beeddd6e3e2 \u8bfe\u7a0bPPT: \u70b9\u8fd9\u91cc\u4e0b\u8f7d \u3010HITSZ\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u7a0b\u7ec4\u8bb2\u89e3XV6\uff08\u4e09\uff09\u5185\u5b58\u7ba1\u7406\u3011 \u89c6\u9891\u94fe\u63a5: https://www.bilibili.com/video/BV1Te4y1i77z?share_source=copy_web&vd_source=225a99017e082147ac525beeddd6e3e2 \u8bfe\u7a0bPPT: \u70b9\u8fd9\u91cc\u4e0b\u8f7d \u63d0\u793a \u672c\u8282\u5b9e\u9a8c\u5c06\u63a2\u7d22\u5185\u6838\u7684\u5185\u5b58\u7ba1\u7406\u6a21\u5757\uff0c\u5e76\u4e14\u9700\u8981\u4fee\u6539\u76f8\u5e94\u7684\u90e8\u5206\u3002\u5efa\u8bae\u9605\u8bfb\u5b8c\u6240\u6709\u90e8\u5206\uff0c\u518d\u5f00\u59cb\u4ee3\u7801\u7684\u7f16\u5199\u3002","title":"\u5b9e\u9a8c\u6982\u8ff0"},{"location":"lab4/part1/#0","text":"\u672c\u5b9e\u9a8c\u6709\u4e09\u4e2a\u4efb\u52a1\uff0c\u4f5c\u4e3a\u6700\u540e\u4e00\u4e2aMIT xv6\u5b9e\u9a8c\uff0c\u4efb\u52a1\u4e8c\u548c\u4efb\u52a1\u4e09\u7684\u96be\u5ea6\u76f8\u6bd4\u4e4b\u524d\u6765\u8bf4\u6709 \u660e\u663e\u63d0\u9ad8 \uff0c\u4f46\u662f\u6211\u4eec\u5e0c\u671b\u5927\u5bb6\u80fd\u591f\u5c3d\u91cf\u5b8c\u6210\uff0c\u5982\u679c\u5b9e\u5728\u65e0\u6cd5\u5b8c\u6210\uff0c\u4e5f\u53ef\u4ee5\u7ed9\u51fa\u4f60\u7684\u601d\u8def\uff0c\u4ee5\u5c3d\u53ef\u80fd\u62ff\u5230\u5206\u6570\uff0c\u5373\u4f7f\u4efb\u52a1\u4e8c\u548c\u4efb\u52a1\u4e09\u7684\u5206\u6570\u5360\u6bd4\u4e0d\u9ad8\u3002 1. \u5b9e\u9a8c\u62a5\u544a \u56de\u7b54\u5b9e\u9a8c\u4e2d\u7684\u95ee\u9898 40%\uff1b \u7ed9\u51fa\u5b9e\u9a8c\u8bbe\u8ba1\u601d\u8def 60%\uff1a \u4efb\u52a1\u4e00\uff1a30% \u4efb\u52a1\u4e8c\uff1a20% \u4efb\u52a1\u4e09\uff1a10% \u82e5\u5bf9\u5e94\u4efb\u52a1\u672a\u7ed9\u51fa\u5b9e\u9a8c\u8bbe\u8ba1\uff0c\u90a3\u4e48\u5bf9\u5e94\u4efb\u52a1\u4ee3\u7801\u5206\u8bb00\u5206\u3002 2. \u5b9e\u9a8c\u4ee3\u7801 \u4efb\u52a1\u4e00\uff1a50% \u4efb\u52a1\u4e8c\uff1a30% \u4efb\u52a1\u4e09\uff1a20% \u82e5\u5bf9\u5e94\u4efb\u52a1\u4ee3\u7801\u65e0\u6cd5\u901a\u8fc7\u6d4b\u8bd5\uff0c\u90a3\u4e48\u5b9e\u9a8c\u62a5\u544a\u4e2d\u5bf9\u5e94\u4efb\u52a1\u7684\u8bbe\u8ba1\u5206\u6700\u9ad8\u53ea\u80fd\u5f97\u5230\u6ee1\u5206\u768450%\u3002 \u56e0\u6b64\uff0c\u5373\u4f7f\u6ca1\u6709\u5b9e\u73b0\uff0c\u4f60\u4e5f\u5e94\u8be5\u5e94\u8be5\u5c3d\u53ef\u80fd\u5730\u7ed9\u51fa\u4f60\u7684\u601d\u8def\u3002","title":"0.  \u5b9e\u9a8c\u5206\u6570"},{"location":"lab4/part1/#1","text":"\u4e86\u89e3\u9875\u8868\u7684\u5b9e\u73b0\u539f\u7406\u3002 \u4fee\u6539\u9875\u8868\uff0c\u4f7f\u5185\u6838\u66f4\u65b9\u4fbf\u7684\u8fdb\u884c\u7528\u6237\u865a\u62df\u5730\u5740\u7ffb\u8bd1\u3002","title":"1.  \u5b9e\u9a8c\u76ee\u7684"},{"location":"lab4/part1/#2","text":"\u672c\u5b9e\u9a8c\u4e3a4\u5b66\u65f6\u3002","title":"2.  \u5b9e\u9a8c\u5b66\u65f6"},{"location":"lab4/part1/#3","text":"\u8bf7\u5148\u540c\u6b65\u4e0a\u6e38\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5e76\u6ce8\u610f\u5207\u6362\u5230pgtbl \u5206\u652f\u8fdb\u884c\u8bd5\u9a8c \u672c\u6b21\u5b9e\u9a8c\u57fa\u4e8e pgtbl \u5206\u652f\uff0c\u8bf7\u540c\u5b66\u4eec\u6ce8\u610f\u5207\u6362\u3002 Step 1. \u9996\u5148\uff0c\u4fdd\u5b58\u5b9e\u9a8c\u4e09\u7684\u4ee3\u7801\uff0c\u8bf7\u53c2\u8003\u5b9e\u9a8c\u5b9e\u7528\u5de5\u5177\u7684 3.3.1 \u4f7f\u7528\u547d\u4ee4\u884c\u5b8c\u6210\u64cd\u4f5c \u6216\u8005 3.3.2 \u4f7f\u7528VS Code\u5185\u5efa\u7684\u56fe\u5f62\u5316\u754c\u9762\u5b8c\u6210\u64cd\u4f5c \u8fd9\u4e24\u5c0f\u8282\uff0c\u5b8c\u6210commit\u64cd\u4f5c\u3002\u6216\u8005\uff0c \u5982\u679c\u4f60\u5e0c\u671b\u76f4\u63a5\u653e\u5f03\u6389\u4e0a\u4e00\u6b21commit\u540e\u7684\u6240\u6709\u66f4\u6539 \uff0c\u90a3\u4e48\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528-f\u9009\u9879\u5f3a\u5236\u5207\u6362\u5206\u652f\uff0c\u4f8b\u5982 git checkout -f pgtbl \u3002 Step 2. \u5207\u6362\u7684\u65b9\u6cd5\u53ef\u4ee5\u53c2\u8003\u5b9e\u9a8c -> \u5b9e\u9a8c\u5b9e\u7528\u5de5\u5177 -> 3.1\u540c\u6b65\u4e0a\u6e38\u4ed3\u5e93 ~ 3.3.3 \u5408\u5e76\u51b2\u7a81\u66f4\u6539 \u3002 \u540c\u65f6\uff0c\u672c\u6b21\u5b9e\u9a8c\u7684 \u8f93\u51fa\u683c\u5f0f\u4e0d\u540c\u4e8eMIT\u539f\u7248\u5b9e\u9a8c\uff0c\u8bf7\u4e25\u683c\u6309\u7167\u6307\u5bfc\u4e66\u8981\u6c42\uff01","title":"3.  \u5b9e\u9a8c\u5185\u5bb9\u53ca\u8981\u6c42"},{"location":"lab4/part1/#31","text":"\u672c\u4efb\u52a1\u4e2d\uff0c\u4f60\u9700\u8981\u52a0\u5165\u9875\u8868\u6253\u5370\u529f\u80fd\uff0c\u6765\u5e2e\u52a9\u4f60\u5728\u4e4b\u540e\u7684\u5b9e\u9a8c\u4e2d\u8fdb\u884cdebug\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u9875\u8868\u7684\u6570\u636e\u7ed3\u6784\u3002\u7136\u540e\uff0c\u6309\u5c42\u6b21\u6bcf\u9875\u6253\u5370\u5373\u53ef\uff0c\u53ef\u4ee5\u91c7\u7528\u8fed\u4ee3\u7684\u7b97\u6cd5\u3002","title":"3.1 \u4efb\u52a1\u4e00\uff1a\u6253\u5370\u9875\u8868"},{"location":"lab4/part1/#311","text":"void vmprint(pagetable_t pgtbl) \u8be5\u51fd\u6570\u5c06\u83b7\u53d6\u4e00\u4e2a \u6839\u9875\u8868\u6307\u9488 \u4f5c\u4e3a\u53c2\u6570\uff0c\u7136\u540e\u6253\u5370\u5bf9\u5e94\u7684\u9875\u8868\u6570\u636e\u3002 \u51fd\u6570\u7684\u4f7f\u7528\u4f4d\u7f6e \uff1a\u6ce8\u610f\uff01\u8be5\u51fd\u6570\u4e00\u5b9a\u8981\u63d2\u5165\u5728 exec() \u903b\u8f91\u7ed3\u675f\u7684\u672b\u5c3e\uff0c\u6765\u6253\u5370\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u6216\u521a\u8f7d\u5165\u7a0b\u5e8f\u7684\u9875\u8868\u6570\u636e\u3002\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u53ef\u4ee5\u63d2\u5165\u5230\u5176\u4ed6\u7684\u5730\u65b9\uff0c\u4f46\u662f\u6700\u540e\u4e00\u5b9a\u53ea\u4fdd\u7559\u8fd9\u4e00\u4e2a\u5730\u65b9\u7684\u51fd\u6570\u4f7f\u7528\u3002 \u5728exec.c\u4e2d\u7684\u8fd4\u56deargc\u4e4b\u524d\u63d2\u5165vmprint()\u51fd\u6570\uff0c\u4ee5\u8f93\u51fa\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u6216\u521a\u8f7d\u5165\u7a0b\u5e8f\u7684\u9875\u8868\u3002\u5176\u4e2d\uff0cvmprin()\u51fd\u6570\u7684\u5165\u53c2\u53ef\u4ee5\u6839\u636e\u4f60\u81ea\u5df1\u7684\u8bbe\u8ba1\u6765\u586b\u5165\u3002","title":"3.1.1 \u6253\u5370\u51fd\u6570\u5b9a\u4e49"},{"location":"lab4/part1/#312","text":"\u5f53xv6\u542f\u52a8\u7684\u65f6\u5019\uff0c\u5b83\u81ea\u8eab\u4f1a\u8c03\u7528 exec() \u542f\u52a8\u7b2c\u4e00\u4e2a\u8fdb\u7a0b init \uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u7684\u51fd\u6570\u4f1a\u5f97\u5230\u4ee5\u4e0b\u7684\u8f93\u51fa\uff1a xv6 kernel is booting hart 1 starting hart 2 starting page table 0x0000000087f6e000 /* \u6839\u9875\u8868\u7269\u7406\u5730\u5740\uff1a0x0000000087f6e000 */ ||0: pte 0x0000000021fda801 pa 0x0000000087f6a000 /* \u6839\u9875\u76ee\u5f55\u9879 0\uff0cPTE\u5185\u5bb9\u4e3a0x0000000021fda801\uff0c\u8868\u793a\u4e0b\u4e00\u7ea7\uff08\u7b2c\u4e8c\u7ea7\uff09\u9875\u8868\u7684PPN\u7269\u7406\u9875\u5e27\u53f7\u4e3a0x87f6a\uff0cFlags\u4e3a0x001\uff0cPTE_V\u6709\u6548\u3002\u8be5\u7269\u7406\u9875\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\u4e3a0x0000000087f6a000\u3002*/ || ||0: pte 0x0000000021fda401 pa 0x0000000087f69000 /* \u7b2c\u4e8c\u7ea7\u76ee\u5f55\u9879 0\uff0cPTE\u7684PPN\u7269\u7406\u9875\u5e27\u53f7\uff1a0x87f69\uff0cFlags\u4e3a0x001\u3002 */ || || ||0: pte 0x0000000021fdac1f pa 0x0000000087f6b000 /* \u7b2c\u4e09\u7ea7\u76ee\u5f55\u9879 0\uff0c\u5176PPN\u7269\u7406\u9875\u5e27\u53f7\uff1a0x87f6b\uff0cFlags\u4e3a0x01f\uff0c\u7269\u7406\u5757\u8d77\u59cb\u5730\u5740\uff1a0x0000000087f6b000 */ || || ||1: pte 0x0000000021fda00f pa 0x0000000087f68000 /* \u7b2c\u4e09\u7ea7\u76ee\u5f55\u9879 1\uff0c\u5176PPN\u7269\u7406\u9875\u5e27\u53f7\uff1a0x87f68\uff0cFlags\u4e3a0x00f\uff0c\u7269\u7406\u5757\u8d77\u59cb\u5730\u5740\uff1a0x0000000087f68000 */ || || ||2: pte 0x0000000021fd9c1f pa 0x0000000087f67000 /* \u7b2c\u4e09\u7ea7\u76ee\u5f55\u9879 2\uff0c\u5176PPN\u7269\u7406\u9875\u5e27\u53f7\uff1a0x87f67\uff0cFlags\u4e3a0x01f\uff0c\u7269\u7406\u5757\u8d77\u59cb\u5730\u5740\uff1a0x0000000087f67000 */ ||255: pte 0x0000000021fdb401 pa 0x0000000087f6d000 /* \u6839\u9875\u76ee\u5f55\u9879 255\uff0c\u4e0b\u4e00\u7ea7\uff08\u7b2c\u4e8c\u7ea7\uff09\u9875\u8868\u7684PPN\u7269\u7406\u9875\u5e27\u53f7\u4e3a0x87f6d\uff0cFlags\u4e3a0x001\uff0cPTE_V\u6709\u6548\u3002\u8be5\u7269\u7406\u9875\u7684\u8d77\u59cb\u7269\u7406\u5730\u5740\u4e3a0x0000000087f6d000 */ || ||511: pte 0x0000000021fdb001 pa 0x0000000087f6c000 /* \u7b2c\u4e8c\u7ea7\u76ee\u5f55\u9879 511\uff0cPPN\u7269\u7406\u9875\u5e27\u53f7\u4e3a0x87f6c\uff0cFlags\u4e3a0x001 */ || || ||510: pte 0x0000000021fdd807 pa 0x0000000087f76000 /* \u7b2c\u4e09\u7ea7\u76ee\u5f55\u9879 510\uff0c\u5176PPN\u7269\u7406\u9875\u5e27\u53f7\uff1a0x87f76\uff0cFlags\u4e3a0x007\uff0c\u7269\u7406\u5757\u8d77\u59cb\u5730\u5740\uff1a0x0000000087f76000 */ || || ||511: pte 0x0000000020001c0b pa 0x0000000080007000 /* \u7b2c\u4e09\u7ea7\u76ee\u5f55\u9879 511\uff0c\uff0c\u5176PPN\u7269\u7406\u9875\u5e27\u53f7\uff1a0x80007\uff0cFlags\u4e3a0x00b\uff0c\u7269\u7406\u5757\u8d77\u59cb\u5730\u5740\uff1a0x0000000080007000 */ \u6211\u4eec\u5148\u4e0d\u7740\u6025\u52a8\u624b\uff0c\u5148\u770b\u770b\u7ed3\u679c\u957f\u4ec0\u4e48\u6837\uff08\u4e0d\u6e05\u695a\u9875\u8868\u7684\u542b\u4e49\u5148\u4e0d\u6025\uff0c\u5b9e\u9a8c\u539f\u7406\u4f1a\u544a\u8bc9\u4f60\uff09\u3002 \u7b2c\u4e00\u884c\u6253\u5370\u7684\u662f vmprint \u7684\u53c2\u6570\uff0c\u5373\u83b7\u5f97\u7684\u9875\u8868\u53c2\u6570\u5177\u4f53\u7684\u503c\u3002 \u5728\u4e4b\u540e\u6253\u5370\u7684\u5219\u662f\u9875\u8868\u9879\u3002RISC-V\u7684\u9875\u8868\u88ab\u8bbe\u8ba1\u6210\u4e86\u4e09\u5c42\uff08\u5177\u4f53\u89c1 \u5b9e\u9a8c\u539f\u7406 \uff09\uff0c\u6bcf\u4e00\u4e2a\u201d||\u201c\u90fd\u4ee3\u8868\u4e00\u5c42\u3002 \u4e4b\u540e\u6253\u5370\u7684\u683c\u5f0f\u4e3a\uff1a $index: pte $pte_bits pa $physical_address \u3002 index : \u6307\u793a\u4e86\u8be5\u9875\u8868\u9879\u5728\u5f53\u524d\u7b49\u7ea7\u9875\u8868\u5185\u7684\u5e8f\u53f7\uff08\u53d6\u503c\u8303\u56f4\uff1a0-511\uff09\uff1b pte_bits \uff1a\u6307\u793a\u4e86\u8fd9\u4e2a\u9875\u8868\u9879\u7684\u5341\u516d\u8fdb\u5236\u503c\uff08PTE\uff09\uff1b physical_address \uff1a\u6307\u793a\u4e86\u8fd9\u4e2a\u9875\u8868\u9879\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u7269\u7406\u5730\u5740\uff1b \u53ea\u6253\u5370\u6709\u6548\u7684pte\u3002 \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6839\u9875\u8868\u9879\u53ea\u6709\u7b2c0\u9879\u548c\u7b2c255\u9879\u7684\u6620\u5c04\u662f\u6709\u6548\u7684\uff0c\u5176\u4e2d\u7b2c0\u9879\u7684\u6b21\u9875\u8868\u53ea\u6620\u5c04\u4e86\u7d22\u5f150\uff0c\u8be5\u7d22\u5f150\u6620\u5c04\u4e86\u53f6\u5b50\u9875\u8868\u76840\u30011\u548c2\u3002 \u4f60\u7684\u4ee3\u7801\u8f93\u51fa\u7684\u7269\u7406\u5730\u5740\u4e0e\u4e0a\u8ff0\u793a\u4f8b\u53ef\u80fd\u4e0d\u76f8\u540c\uff0c\u4f46\u663e\u793a\u9879\u6570\u548c\u865a\u62df\u5730\u5740\u5e94\u76f8\u540c\u3002","title":"3.1.2 \u7ed3\u679c\u793a\u4f8b"},{"location":"lab4/part1/#313","text":"\u8fd0\u884c make grade \uff0c\u5176\u4e2d\u7684 pte printout \u6d4b\u8bd5\u5c31\u662f\u8be5\u4efb\u52a1\u7684\u6d4b\u8bd5\uff08 \u53ef\u53c2\u8003\u6d4b\u8bc4 3.4 \uff09\u3002","title":"3.1.3 \u6d4b\u8bd5"},{"location":"lab4/part1/#32","text":"\u76ee\u524d\uff0cxv6\u7684\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u72ec\u7acb\u7684 \u7528\u6237\u9875\u8868 \uff08\u53ea\u5305\u542b\u8be5\u8fdb\u7a0b\u7528\u6237\u5185\u5b58\u7684\u6620\u5c04\uff0c\u4ece\u865a\u62df\u5730\u57400\u5f00\u59cb\uff09\uff0c\u4f46\u662f\u6bcf\u4e2a\u8fdb\u7a0b\u8fdb\u5165\u5185\u6838\u7684\u65f6\u5019\uff0c\u4f1a\u4f7f\u7528\u552f\u4e00\u7684\u4e00\u4e2a \u5168\u5c40\u5171\u4eab\u5185\u6838\u9875\u8868 \u3002\u6211\u4eec\u9700\u8981 \u5c06\u5168\u5c40\u5171\u4eab\u5185\u6838\u9875\u8868\u6539\u6210\u72ec\u7acb\u5185\u6838\u9875\u8868 \uff0c\u4f7f\u5f97\u6bcf\u4e2a\u8fdb\u7a0b\u62e5\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5185\u6838\u9875\u8868\uff0c\u4e5f\u5c31\u662f\u5168\u5c40\u5171\u4eab\u5185\u6838\u9875\u8868\u7684\u526f\u672c\u3002 \u8fd9\u90e8\u5206\u6709\u4e00\u5b9a\u7684\u96be\u5ea6\uff0c\u56e0\u6b64\u6307\u5bfc\u4e66\u4f1a\u5c3d\u53ef\u80fd\u7ed9\u51fa\u591a\u7684\u63cf\u8ff0\uff0c\u5927\u5bb6\u5e94\u53cd\u590d\u9605\u8bfb\uff0c\u5e76\u8bd5\u56fe\u5c06\u77e5\u8bc6\u70b9\u4e32\u8054\u8d77\u6765\u3002","title":"3.2 \u4efb\u52a1\u4e8c\uff1a\u72ec\u7acb\u5185\u6838\u9875\u8868\uff08\u96be\uff09"},{"location":"lab4/part1/#321","text":"\u5171\u4eab\u5185\u6838\u9875\u8868\u4e2d\uff0c\u6240\u6709\u7269\u7406\u5730\u5740\u90fd\u548c\u4e0e\u4e4b\u5b8c\u5168\u76f8\u7b49\u7684\u865a\u62df\u5730\u5740\u5efa\u7acb\u6620\u5c04\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u6620\u5c04\u3002\u8fd9\u662f\u8ba9\u5185\u6838\u80fd\u591f\u76f4\u63a5\u4ee5\u7269\u7406\u5730\u5740\u8bbf\u95ee\u5185\u5b58\u7684\u6570\u636e\uff0c\u4e0d\u9700\u8981\u4f7f\u7528\u4efb\u4f55\u7684\u865a\u62df\u5730\u5740\u3002 \u4f46\u662f \uff0c\u7531\u4e8e\u7528\u6237\u5730\u5740\u7684\u6620\u5c04\u5e76\u672a\u5b58\u50a8\u4e8e\u5185\u6838\u9875\u8868\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u5904\u7406\u7528\u6237\u7a0b\u5e8f\u4f20\u6765\u7684\u865a\u62df\u5730\u5740\uff08\u6bd4\u5982\u7cfb\u7edf\u8c03\u7528\u4f20\u5165\u7684\u6307\u9488\uff09\uff0c\u6211\u4eec\u9700\u8981\u5148\u627e\u5230\u7528\u6237\u9875\u8868\uff0c\u9010\u4e2a\u9875\u8868\u9879\u5730\u627e\u5230\u80fd\u591f\u7ffb\u8bd1\u5bf9\u5e94\u865a\u62df\u5730\u5740\u7684\u9875\u8868\u9879\u540e\uff0c\u624d\u53ef\u4ee5\u83b7\u53d6\u5b9e\u9645\u7684\u7269\u7406\u5730\u5740\u5e76\u8fdb\u884c\u8bbf\u95ee\uff0c\u8fd9\u53eb\u505a\u8f6f\u4ef6\u6a21\u62df\u7ffb\u8bd1\u3002\u8f6f\u4ef6\u6a21\u62df\u7ffb\u8bd1\u7684\u5b9e\u73b0\u5f88\u590d\u6742\uff0c\u540c\u65f6\uff0c\u56e0\u4e3a\u9700\u8981\u590d\u6742\u7684\u67e5\u627e\uff0c\u8fd8\u964d\u4f4e\u4e86\u6027\u80fd\u3002 \u6240\u4ee5\u6211\u4eec\u5c06 \u7528\u6237\u9875\u8868\u4e2d\u7684\u5185\u5b58\u6620\u5c04 \u548c \u539f\u6765\u5171\u4eab\u5185\u6838\u9875\u8868\u4e2d\u7684\u5185\u5b58\u6620\u5c04 \u8fdb\u884c\u5408\u5e76\uff0c\u8fd9\u6837\u5185\u6838\u4e5f\u80fd\u591f\u76f4\u63a5\u5bf9\u7528\u6237\u7684\u865a\u62df\u5730\u5740\u8fdb\u884c\u8bbf\u95ee\uff0c\u800c\u4e0d\u9700\u8981\u8f6f\u4ef6\u6a21\u62df\u7ffb\u8bd1\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u662f \u4efb\u52a1\u4e09\u548c\u4efb\u52a1\u4e8c\u4e00\u540c \u9700\u8981\u5b9e\u73b0\u7684\u7ed3\u679c\uff0c\u4efb\u52a1\u4e8c\u5206\u79bb\u51fa\u72ec\u7acb\u9875\u8868\uff0c\u4efb\u52a1\u4e09\u5229\u7528\u72ec\u7acb\u9875\u8868\u53bb\u9664\u8f6f\u4ef6\u6a21\u62df\u7ffb\u8bd1\u3002","title":"3.2.1 \u72ec\u7acb\u9875\u8868\u7684\u80cc\u666f"},{"location":"lab4/part1/#322","text":"\u5171\u4eab\u5185\u6838\u9875\u8868\u7684\u6620\u5c04\uff1a\u865a\u5b9e\u5730\u5740\u76f8\u540c\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u6620\u5c04\u3002 \u72ec\u7acb\u5185\u6838\u9875\u8868\u7684\u6620\u5c04\uff1a\u865a\u5b9e\u5730\u5740\u76f8\u540c\u7684\u6620\u5c04\u5e94\u8be5\u8981\u4fdd\u7559\uff0c \u5148\u4e0d\u9700\u8981 \u52a0\u4e0a\u7528\u6237\u9875\u8868\u7684\u5185\u5bb9\uff0c\u5728 \u4efb\u52a1\u4e09 \u4e2d\u518d\u52a0\u4e0a\u52a0\u4e0a\u7528\u6237\u9875\u8868\u7684\u5185\u5bb9\u3002 \u540c\u65f6\u8fd8\u9700\u8981\u4fee\u6539\u6709\u5173\u7684\u64cd\u4f5c\u3002","title":"3.2.2 \u72ec\u7acb\u9875\u8868\u7684\u8981\u6c42"},{"location":"lab4/part1/#323","text":"\u9996\u5148\uff0c\u5728xv6\u8fd0\u884c kvmtest \uff0c\u5982\u679c\u4f60\u786e\u5b9e\u4f7f\u7528\u4e86\u72ec\u7acb\u5185\u6838\u9875\u8868\uff0c\u4f1a\u770b\u5230\u4ee5\u4e0b\u7ed3\u679c\uff1a \u7136\u540e\uff0c\u8bf7\u5728xv6\u8fd0\u884c usertests \uff0c\u786e\u4fdd\u6240\u6709\u6d4b\u8bd5\u901a\u8fc7\uff08\u663e\u793a\"ALL TESTS PASSED\"\uff09\u3002","title":"3.2.3 \u6d4b\u8bd5"},{"location":"lab4/part1/#33","text":"xv6\u76ee\u524d\u4f7f\u7528 kernel/vm.c \u4e2d\u7684 copyin()/copyinstr() \u5c06\u7528\u6237\u5730\u5740\u7a7a\u95f4\u7684\u6570\u636e\u62f7\u8d1d\u81f3\u5185\u6838\u5730\u5740\u7a7a\u95f4\uff0c\u5b83\u4eec\u901a\u8fc7\u8f6f\u4ef6\u6a21\u62df\u7ffb\u8bd1\u7684\u65b9\u5f0f\u83b7\u53d6\u7528\u6237\u7a7a\u95f4\u5730\u5740\u5bf9\u5e94\u7684\u7269\u7406\u5730\u5740\uff0c\u7136\u540e\u8fdb\u884c\u590d\u5236\uff08\u8be6\u60c5\u89c1\u4ee3\u7801\u6ce8\u91ca\uff09\u3002 \u4efb\u52a1\u76ee\u6807\uff1a\u4f60\u9700\u8981 \u5728\u72ec\u7acb\u5185\u6838\u9875\u8868\u52a0\u4e0a\u7528\u6237\u5730\u5740\u7a7a\u95f4\u7684\u6620\u5c04\uff0c\u540c\u65f6\u5c06\u51fd\u6570 copyin()/copyinstr() \u4e2d\u7684\u8f6f\u4ef6\u6a21\u62df\u5730\u5740\u7ffb\u8bd1\u6539\u6210\u76f4\u63a5\u8bbf\u95ee \uff0c\u4f7f\u5f97\u5185\u6838\u80fd\u591f\u4e0d\u5fc5\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\uff0c\u7528\u8f6f\u4ef6\u6a21\u62df\u7684\u65b9\u6cd5\u4e00\u6b65\u4e00\u6b65\u904d\u5386\u9875\u8868\uff0c\u800c\u662f\u76f4\u63a5\u5229\u7528\u786c\u4ef6\u3002","title":"3.3 \u4efb\u52a1\u4e09\uff1a\u7b80\u5316\u8f6f\u4ef6\u6a21\u62df\u5730\u5740\u7ffb\u8bd1\uff08\u5f88\u96be\uff09"},{"location":"lab4/part1/#331","text":"\u8981\u6c42\u63d0\u4f9b\u4e86\u65b0\u7684\u51fd\u6570 copyin_new()/copyinstr_new() \uff08\u5728 kernel/vmcopyin.c \u4e2d\u5b9a\u4e49\uff09\u3002\u4f60\u9700\u8981\u627e\u5230\u8c03\u7528 copyin() \uff08\u5728 kernel/vm.c \u4e2d\u5b9a\u4e49\uff09\u7684\u5730\u65b9\uff0c\u7528 copyin_new() \u66ff\u6362\u4e4b \u3002\u540c\u6837\u5730\uff0c\u7528 copyinstr_new() \u4ee3\u66ff copyinstr() \u3002 \u5728\u72ec\u7acb\u5185\u6838\u9875\u8868\u52a0\u4e0a\u7528\u6237\u9875\u8868\u7684\u6620\u5c04\uff0c\u4ee5\u4fdd\u8bc1\u521a\u521a\u66ff\u6362\u5730\u65b0\u51fd\u6570\u80fd\u591f\u4f7f\u7528\u3002\u4f46\u662f\u8981\u6ce8\u610f\u5730\u5740\u91cd\u5408\u95ee\u9898\uff0c\u89c1\u201c \u5b9e\u9a8c\u539f\u7406 3.5 \u201d.","title":"3.3.1 \u4efb\u52a1\u8981\u6c42"},{"location":"lab4/part1/#332","text":"\u9996\u5148\uff0c\u5728xv6\u8fd0\u884c stats stats \uff0c\u5982\u679c\u4f60\u6b63\u786e\u4f7f\u7528\u4e86copyin_new\u548ccopyinstr_new\uff0c\u4f1a\u770b\u5230\u8f93\u51fa\u7684\u6570\u503c\u4e0d\u4e3a\u96f6\uff1a \u7136\u540e\uff0c\u8bf7\u5728xv6\u8fd0\u884c usertests \uff0c\u786e\u4fdd\u6240\u6709\u6d4b\u8bd5\u901a\u8fc7\uff08\u663e\u793a\"ALL TESTS PASSED\"\uff09\u3002","title":"3.3.2 \u7ed3\u679c\u793a\u4f8b"},{"location":"lab4/part1/#34","text":"\u5f53\u5b8c\u6210\u4e0a\u8ff0\u7684\u4e09\u4e2a\u5b9e\u9a8c\u540e\uff0c\u5728\u547d\u4ee4\u884c\u8f93\u5165 make grade \u8fdb\u884c\u6d4b\u8bd5\u3002\u5982\u679c\u901a\u8fc7\u6d4b\u8bd5\uff0c\u4f1a\u663e\u793a\u5982\u4e0b\u5185\u5bb9\uff1a","title":"3.4 \u6d4b\u8bc4"},{"location":"lab4/part2/","text":"\u5b9e\u9a8c\u539f\u7406 \u00b6 1. \u865a\u62df\u5185\u5b58\u7ba1\u7406 \u00b6 \u865a\u62df\u5185\u5b58\u7ba1\u7406\u5df2\u7ecf\u5728\u7406\u8bba\u8bfe\u4e0a\u8fdb\u884c\u4e86\u5b66\u4e60\uff0c\u4e0d\u719f\u6089\u7684\u540c\u5b66\u8bf7\u53ca\u65f6\u56de\u987e\u7406\u8bba\u77e5\u8bc6\uff0c\u672c\u90e8\u5206\u4ec5\u4f9b\u56de\u987e\u3002 1.1 \u5730\u5740\u7a7a\u95f4 \u00b6 \u6bcf\u4e2a\u8fdb\u7a0b\u6709\u72ec\u7acb\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\uff0c\u8fdb\u7a0b\u8bbf\u95ee\u7684\u865a\u62df\u5730\u5740\u5e76\u4e0d\u662f\u771f\u6b63\u7684\u7269\u7406\u5730\u5740\uff0c\u4f46\u8fdb\u7a0b\u53ef\u901a\u8fc7\u81ea\u8eab\u9875\u8868\u4e2d\u865a\u62df\u5730\u5740\u4e0e\u7269\u7406\u5730\u5740\u5efa\u7acb\u7684\u6620\u5c04\u83b7\u5f97\u771f\u6b63\u7684\u7269\u7406\u5730\u5740\u3002xv6\u4f7f\u7528\u9875\u8868\u5206\u9694\u4e0d\u540c\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u5e76\u628a\u5b83\u4eec\u591a\u8def\u590d\u7528\u5230\u5355\u4e00\u7684\u7269\u7406\u5185\u5b58\u3002 1.2 \u6570\u636e\u7ed3\u6784 \u00b6 \u7cfb\u7edf\u901a\u8fc7\u9875\u673a\u5236\u6765\u5b9e\u73b0\u865a\u62df\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u7684\u6620\u5c04\uff0c\u7528\u9875\u8868\u50a8\u5b58\u6620\u5c04\u5173\u7cfb\u3002 \u9875\uff1a \u7cfb\u7edf\u5c06\u865a\u62df\u5185\u5b58\u5206\u62104K\u5927\u5c0f\u7684\u5757\u3002\u6bcf\u5757\u5c31\u662f\u4e00\u9875\uff0c\u4f5c\u4e3a\u5185\u5b58\u7ba1\u7406\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u6bcf\u4e2a\u9875\u90fd\u4f1a\u6709\u4e00\u4e2a\u7f16\u53f7\uff0c\u4ece\u5c0f\u5230\u5927\u3002 \u9875\u6846\uff08\u5757\uff09\uff1a \u7cfb\u7edf\u5c06\u7269\u7406\u5185\u5b58\u4e5f\u548c\u865a\u62df\u5185\u5b58\u4e00\u6837\u5206\u62104K\u5927\u5c0f\u7684\u5757\uff0c\u6bcf\u5757\u5c31\u662f\u4e00\u4e2a\u9875\u6846\uff0c\u4e0e\u9875\u4e00\u4e00\u5bf9\u5e94\u3002 \u5730\u5740\u7ed3\u6784\uff1a \u5206\u9875\u5b58\u50a8\u7ba1\u7406\u7684\u903b\u8f91\u5730\u5740\u7ed3\u6784\u5982\u56fe\u524d\u4e00\u90e8\u5206\u4e3a\u9875\u53f7P\uff0c\u540e\u4e00\u90e8\u5206\u4e3a\u9875\u5185\u504f\u79fb\u91cfW\u300232\u4f4d\u673a\u5668\u56fe\u793a\u5982\u4e0b\uff08xv6\u662f64\u4f4d\u64cd\u4f5c\u7cfb\u7edf\uff09\u3002 \u9875\u8868\uff1a \u4e3a\u4e86\u4fbf\u4e8e\u5728\u5185\u5b58\u4e2d\u627e\u5230\u8fdb\u7a0b\u7684\u6bcf\u4e2a\u9875\u9762\u6240\u5bf9\u5e94\u7684\u7269\u7406\u5757\uff0c\u7cfb\u7edf\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u5efa\u7acb\u4e00\u5f20\u9875\u8868\uff0c\u8bb0\u5f55\u9875\u5728\u5185\u5b58\u4e2d\u5bf9\u5e94\u7684\u9875\u6846\u53f7\uff0c\u9875\u8868\u4e00\u822c\u5b58\u653e\u5728\u5185\u5b58\u4e2d\u3002\u5728\u914d\u7f6e\u4e86\u9875\u8868\u540e\uff0c\u8fdb\u7a0b\u6267\u884c\u65f6\uff0c\u901a\u8fc7\u67e5\u627e\u8be5\u8868\uff0c\u5373\u53ef\u627e\u5230\u6bcf\u9875\u5728\u5185\u5b58\u4e2d\u7684\u7269\u7406\u5757\u53f7\u3002\u53ef\u89c1\uff0c\u9875\u8868\u7684\u4f5c\u7528\u662f\u5b9e\u73b0\u4ece\u9875\u53f7\u5230\u9875\u6846\u53f7\u7684\u5730\u5740\u6620\u5c04\u3002 1.3 \u4f7f\u7528\u65b9\u6cd5 \u00b6 \u5728RISC-V\u6307\u4ee4\u96c6\u4e2d\uff0c\u5f53\u6211\u4eec\u9700\u8981\u5f00\u542f\u9875\u8868\u670d\u52a1\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5c06\u6211\u4eec\u9884\u5148\u914d\u7f6e\u597d\u7684\u9875\u8868\u9996\u5730\u5740\u653e\u5165 satp \u5bc4\u5b58\u5668\u4e2d\u3002\u4ece\u6b64\u4e4b\u540e\uff0c \u8ba1\u7b97\u673a\u786c\u4ef6 \u5c06\u628a\u8bbf\u5b58\u7684\u5730\u5740 \u5747\u89c6\u4e3a\u865a\u62df\u5730\u5740 \uff0c\u90fd\u9700\u8981\u901a\u8fc7\u786c\u4ef6\u67e5\u8be2\u9875\u8868\uff0c\u5c06\u5176 \u7ffb\u8bd1\u6210\u4e3a\u7269\u7406\u5730\u5740 \uff0c\u7136\u540e\u5c06\u5176\u4f5c\u4e3a\u5730\u5740\u53d1\u9001\u7ed9\u5185\u5b58\u8fdb\u884c\u8bbf\u5b58\u3002 2. \u9875\u8868 \u00b6 \u63d0\u793a \u672c\u90e8\u5206\uff0c\u4f60\u5e94\u8be5\u8981\u77e5\u9053\uff1a \u4ec0\u4e48\u662f\u9875\u8868\uff1f \u9875\u8868\u7684\u6570\u636e\u7ed3\u6784\u662f\u4ec0\u4e48\uff1f \u9875\u8868\u662f\u600e\u4e48\u5de5\u4f5c\u7684\uff1f 2.1 \u9875\u8868\u662f\u4ec0\u4e48 \u00b6 \u9875\u8868\u5c31\u662f\u5b58\u653e\u865a\u5b9e\u5730\u5740\u6620\u5c04\u7684\u8868\u683c\uff0c\u91cc\u9762\u88c5\u6ee1\u4e86\u865a\u5b9e\u5730\u5740\u7684\u6620\u5c04\u3002 \u9875\u8868\u7684\u6570\u636e\u7ed3\u6784\u548c\u7ffb\u8bd1\u7684\u6a21\u5f0f\u56fe\u793a\u5927\u81f4\u5982\u4e0b\uff1a xv6\u91c7\u7528\u7684\u6307\u4ee4\u96c6\u6807\u51c6\u4e3aRISC-V\u6807\u51c6\uff0c\u5176\u4e2d\u9875\u8868\u7684\u6807\u51c6\u4e3aSV39\u6807\u51c6\uff0c\u4e5f\u5c31\u662f\u865a\u62df\u5730\u5740\u6700\u591a\u4e3a39\u4f4d\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u6765\u4ecb\u7ecd\u8fd9\u5957\u6807\u51c6\uff0c\u4e4b\u540e\u4f60\u4f1a\u77e5\u9053\u4e3a\u4ec0\u4e48\u53eb39\u3002 2.2 \u9875\u8868\u7684\u6570\u636e\u7ed3\u6784\uff08\u91cd\u8981\uff09 \u00b6 2.2.1 \u865a\u5b9e\u5730\u5740 \u00b6 \u84dd\u8272\u90e8\u5206\uff1a\u4ee3\u8868\u7528\u6237\u6240\u6301\u6709\u7684\u865a\u62df\u5730\u5740\u3002\u6bd4\u5982\u6211\u4eec\u5728\u7528\u6237\u7a0b\u5e8f\u6240\u6301\u6709\u7684\u6307\u9488\uff0c64\u4f4d\u7684\uff0c\u5c31\u957f\u8fd9\u6837\u3002\u5176\u4e2d\u4f4e39\u4f4d\u53ef\u7528\uff0839\u7684\u7531\u6765\uff09\uff0c\u5176\u4ed6\u7684\u4e3a\u62d3\u5c55\u3002\u8fd9\u4e09\u5341\u4e5d\u4f4d\u88ab\u5212\u5206\u6210\u4e86\u56db\u90e8\u5206\uff1a L2 L1 L0 Offset \u3002 L2\u662f \u6839\u9875\u8868 \u7684\u7d22\u5f15\uff08index\uff09\uff0c\u53ef\u4ee5\u5f97\u5230\u6b21\u9875\u8868\u7684\u57fa\u5730\u5740\u3002 L1\u662f \u6b21\u9875\u8868 \u7684\u7d22\u5f15\uff0c\u53ef\u4ee5\u5f97\u5230\u53f6\u5b50\u9875\u8868\u7684\u57fa\u5730\u5740\u3002 L0\u662f \u9875\u8868\u9879 \u7684\u7d22\u5f15\uff0c\u53ef\u4ee5\u5f97\u523064\u4f4d\u7684\u9875\u8868\u9879\u3002 \u6ce8\uff1a\u4e8b\u5b9e\u4e0a\uff0cL2\u548cL1\u5bf9\u5e94\u4e8e\u7406\u8bba\u8bfe\u4e2d\u7684\u9875\u76ee\u5f55\u53f7\uff0cL0\u5bf9\u5e94\u7406\u8bba\u8bfe\u4e2d\u7684\u9875\u53f7\u3002 \u7ea2\u8272\u90e8\u5206\uff1a\u9875\u8868\u9879\u4e2d\u6709\u7269\u7406\u9875\u5e27\u53f7PPN\uff0c\u52a0\u4e0a\u865a\u62df\u5730\u5740\u672c\u8eab\u542b\u6709\u7684 Offset \u7ec4\u6210\u4e86\u7269\u7406\u5730\u5740\uff0c64\u4f4d\u5269\u4e0b\u7684\u4f4d\u6570\u4e3a\u4fdd\u7559\u4f4d\u3002\u6ce8\u610f\uff0c \u865a\u5b9e\u5730\u5740\u7684Offset\uff08\u4f4e\u5341\u4e8c\u4f4d\uff09\u5b8c\u5168\u76f8\u540c \uff0c\u4e0d\u7528\u7ffb\u8bd1\u3002 2.2.2 \u9875\u8868 \u00b6 SV39\u9875\u8868\u6807\u51c6\u4e0b\uff0c\u6784\u9020\u4e86\u4e09\u7ea7\u9875\u8868\uff0c\u6211\u4eec\u5c06\u5176\u5206\u4e3a\u79f0\u4e3a\uff1a\u6839\u9875\u8868\u3001\u6b21\u9875\u8868\u3001\u53f6\u5b50\u9875\u8868\u3002\u987a\u5e8f\u548c\u56fe\u4e2d\u9875\u8868\u4ece\u5de6\u5411\u53f3\u4f9d\u6b21\u5bf9\u5e94\u3002 \u6bcf\u4e2a\u9875\u8868\u7684\u5927\u5c0f\u90fd\u662f4K\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u9875\u3002\u9875\u8868\u6709512\u4e2a\u9875\u76ee\u5f55\u9879\uff0c\u6bcf\u4e2a\u76ee\u5f55\u98798 bytes\uff0c\u4e5f\u5c31\u662f64\u4f4d\u3002512\u4e2a\u76ee\u5f55\u9879\u9700\u89819\u4f4d\u7684\u7d22\u5f15\uff0c\u56e0\u6b64 2.2.1 \u865a\u5b9e\u5730\u5740 \u84dd\u8272\u865a\u62df\u5730\u5740\u4e2d\u7684 L2, L1, L0 \u7d22\u5f15\u90fd\u662f9\u4f4d\u7684\u3002 \u73b0\u5728\u6765\u770b\u9875\u76ee\u5f55\u9879\u81ea\u8eab\uff0c\u53ef\u4ee5\u5927\u6982\u5206\u6210\u4e24\u4e2a\u90e8\u5206\uff1a \u9875\u5e27\u53f7\uff08PPN\uff09 \u548c\u5bf9\u5e94\u7684 \u6807\u5fd7\u4f4d\uff08Flags\uff09 \uff08\u542b\u6709\u8bbf\u95ee\u6743\u9650\u3001\u8bbf\u95ee\u8bb0\u5f55\u7b49\uff09\u3002\u524d\u8005\u8868\u793a\u7269\u7406\u5730\u5740\u7684\u9875\u5e27\u53f7\uff0c\u4e5f\u5c31\u662f 2.2.1 \u865a\u5b9e\u5730\u5740 \u7ea2\u8272\u7269\u7406\u5730\u5740\u7684PPN\u3002\u4f46\u662f\u6bcf\u4e00\u7ea7\u9875\u8868\u7684\u76ee\u5f55\u9879\u7684\u610f\u4e49\u90fd\u4e0d\u540c\uff0c\u5177\u4f53\u5982\u4e0b\uff1a \u6839\u9875\u8868 \u7684\u76ee\u5f55\u9879\uff0c\u5305\u542b\u5bf9\u5e94 \u6b21\u9875\u8868 \uff08\u4e0b\u4e00\u7ea7\u9875\u8868\uff09\u7684\u57fa\u5730\u5740\u9875\u5e27\u53f7\u4ee5\u53ca\u6807\u5fd7\u4f4d\u3002 \u6b21\u9875\u8868 \u7684\u76ee\u5f55\u9879\uff0c\u5305\u542b\u5bf9\u5e94 \u53f6\u5b50\u9875\u8868 \uff08\u4e0b\u4e00\u7ea7\u9875\u8868\uff09\u7684\u57fa\u5730\u5740\u9875\u5e27\u53f7\u4ee5\u53ca\u6807\u5fd7\u4f4d\u3002 \u53f6\u5b50\u9875\u8868 \u7684\u76ee\u5f55\u9879\uff0c\u5305\u542b\u5bf9\u5e94 \u865a\u62df\u5730\u5740 \u7684\u7269\u7406\u5730\u5740\u9875\u5e27\u53f7\u4ee5\u53ca\u6807\u5fd7\u4f4d\u3002 2.2.3 \u9875\u8868\u9879 \u00b6 \u521a\u521a\uff0c\u6211\u4eec\u628a\u76ee\u5f55\u9879\u5206\u6210\u4e86\u4e24\u4e2a\u90e8\u5206\uff1a\u7269\u7406\u5730\u5740\u9875\u5e27\u53f7\u548c\u6807\u5fd7\u4f4d\u3002\u5177\u4f53\u7684\u7ed3\u6784\u5982\u4e0a\u56fe\u3002 \u4fdd\u7559\u4f4d\uff1a\u7b2c 54-63 \u4f4d\uff0c\u5171 10 \u4f4d\u3002 PPN : \u7269\u7406\u9875\u5e27\u53f7\uff0c\u7b2c 10-53 \u4f4d\uff0c\u5171 44 \u4f4d\u3002 Flags \uff1a\u6807\u5fd7\u4f4d\uff0c\u7b2c 0-9 \u4f4d\uff0c\u5171 10 \u4f4d\u3002\u5176\u4e2d\u7b2c 8-9 \u4f4d\u4e3a\u4fdd\u7559\u4f4d\uff0c\u6682\u4e0d\u4f7f\u7528\u3002 \u7b2c 0 \u4f4d Valid \uff1a\u8be5\u9875\u8868\u9879\u6709\u6548\u3002\u5bf9\u4e8e\u53f6\u5b50\u9875\u8868\u6765\u8bf4\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u4e3a1\u8bf4\u660e\u865a\u62df\u5730\u5740\u6709\u6620\u5c04\u5230\u7269\u7406\u5730\u5740\uff0c\u5426\u5219\u8bf4\u660e\u6ca1\u6709\u8be5\u6620\u5c04\u3002\u5bf9\u4e8e\u6b21\u9875\u8868\u6765\u8bf4\uff0c\u4e3a1\u8bf4\u660e\u6709\u5bf9\u5e94\u7684\u53f6\u5b50\u9875\u8868\uff0c\u5bf9\u4e8e\u6839\u9875\u8868\u8bf4\u660e\u6709\u5bf9\u5e94\u6b21\u9875\u8868\u3002 \u7b2c 1-3 \u4f4d Readable/ Writable/ Executable \uff1a \u8be5\u9875\u8868\u9879\u662f\u53ef\u8bfb/\u5199/\u6267\u884c\uff08\u4f5c\u4e3a\u4ee3\u7801\u8fd0\u884c\uff09\u7684\u3002\u901a\u5e38\u6211\u4eec\u53ea\u9700\u8981\u5173\u5fc3\u53f6\u5b50\u9875\u8868\u9879\u7684\u8fd9\u4e09\u4e2a\u4f4d\uff0c\u56e0\u4e3a\u8fd9\u4ee3\u8868\u5bf9\u5e94\u7684\u7269\u7406\u9875\u5e27\u7684\u6807\u5fd7\uff0c\u800c\u4e0d\u662f\u9875\u8868\u7684\u6807\u5fd7\u3002\u5bf9\u4e8e\u6839\u9875\u8868\u548c\u6b21\u9875\u8868\u7684\u76ee\u5f55\u9879\uff0c\u8fd9\u4e09\u4e2a\u4f4d\u5f80\u5f80\u7f6e\u4e3a 0 \u3002 \u7b2c 4 \u4f4d User \uff1a \u8be5\u9875\u8868\u9879\u6307\u5411\u7684\u7269\u7406\u9875\u80fd\u5728\u7528\u6237\u6001\u8bbf\u95ee\u3002\u5185\u6838\u9875\u8868\u4e2d\u7684\u4ee3\u7801\u548c\u6570\u636e\u6211\u4eec\u4e0d\u4f1a\u5c06\u5176\u7ed9\u7528\u6237\u4f7f\u7528\uff0c\u6240\u4ee5\u4f1a\u7f6e 0 \uff0c\u4f46\u662f\u7528\u6237\u9875\u8868\u7684\u4ee3\u7801\u548c\u6570\u636e\u5e94\u8be5\u8981\u7f6e 1 \u3002\u540c\u6837\uff0c\u5bf9\u4e8e\u5185\u6838\u9875\u8868\u4e2d\u7684\u9875\u8868\u9879\uff0c\u5982\u679c\u8be5\u4f4d\u7f6e 1 \uff0c\u5219\u8ba1\u7b97\u673a\u7684\u786c\u4ef6\u4e0d\u4f1a\u5141\u8bb8\u5185\u6838\u8bbf\u95ee\u5bf9\u5e94\u5730\u5740\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u7684\u624b\u6bb5\u8bbf\u95ee\uff0c\u540e\u6587\u4f1a\u4ecb\u7ecd\u3002 \u5176\u4ed6\u7684\u4f4d\uff0c\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u901a\u8fc7\u82f1\u6587\u540d\u770b\u51fa\u5176\u610f\u4e49\uff0c\u6216\u8005\u67e5\u9605 riscv-privileged.pdf 4.3~4.4\u5c0f\u8282\u3002 \u6ce8\uff1a\u7406\u8bba\u8bfe\u4e0a\u6211\u4eec\u5c06\u9875\u8868\u9879\u548c\u9875\u76ee\u5f55\u9879\u52a0\u4ee5\u533a\u5206\uff0c\u4f46\u662f\u5728\u672c\u5b9e\u9a8c\u4e2d\uff0c\u4ed6\u4eec\u662f\u5b8c\u5168\u76f8\u540c\u7684\u7ed3\u6784\uff01 2.3 \u865a\u5b9e\u5730\u5740\u7ffb\u8bd1\u6d41\u7a0b \u00b6 \u73b0\u5728\u6211\u4eec\u6765\u5c06\u5176\u4e32\u8054\u8d77\u6765\uff0c\u770b\u770b\u5bf9\u5e94\u7684\u865a\u62df\u5730\u5740\u662f\u600e\u6837\u7ffb\u8bd1\u6210\u7269\u7406\u5730\u5740\u7684\uff1a \u83b7\u5f97\u4e00\u4e2a\u865a\u62df\u5730\u5740\u3002\u6839\u9875\u8868\u57fa\u5730\u5740\u5df2\u7ecf\u88ab\u88c5\u586b\u81f3\u5bc4\u5b58\u5668 satp \u4e2d\u3002 \u901a\u8fc7 satp \u627e\u5230\u6839\u9875\u8868\u7684\u7269\u7406\u9875\u5e27\u53f7\uff0c\u8f6c\u6210\u7269\u7406\u5730\u5740\uff08 Offset \u4e3a0\uff09\uff0c\u901a\u8fc7\u865a\u62df\u5730\u5740\u7684 L2 \u7d22\u5f15\uff0c\u627e\u5230\u5bf9\u5e94\u7684\u9875\u8868\u9879\u3002 \u901a\u8fc7\u9875\u8868\u9879\u53ef\u4ee5\u627e\u5230\u627e\u5230 \u6b21\u9875\u8868 \u7684\u7269\u7406\u9875\u5e27\u53f7\uff0c\u8f6c\u6210\u7269\u7406\u5730\u5740\uff08 Offset \u4e3a0\uff09\uff0c\u901a\u8fc7\u865a\u62df\u5730\u5740\u7684 L1 \u7d22\u5f15\uff0c\u627e\u5230\u5bf9\u5e94\u7684\u9875\u8868\u9879\u3002 \u901a\u8fc7\u9875\u8868\u9879\u53ef\u4ee5\u627e\u5230\u627e\u5230 \u53f6\u5b50\u9875\u8868 \u7684\u7269\u7406\u9875\u5e27\u53f7\uff0c\u8f6c\u6210\u7269\u7406\u5730\u5740\uff08 Offset \u4e3a0\uff09\uff0c\u901a\u8fc7\u865a\u62df\u5730\u5740\u7684 L0 \u7d22\u5f15\uff0c\u627e\u5230\u5bf9\u5e94\u7684\u9875\u8868\u9879\u3002 \u901a\u8fc7\u9875\u8868\u9879\u53ef\u4ee5\u627e\u5230\u627e\u5230 \u7269\u7406\u5730\u5740 \u7684\u7269\u7406\u9875\u5e27\u53f7\uff0c\u901a\u8fc7\u865a\u62df\u5730\u5740\u7684 Offset \uff0c\u8f6c\u6210\u7269\u7406\u5730\u5740\uff08 Offset \u548c\u865a\u62df\u5730\u5740 Offset \u76f8\u540c\uff09\u3002 3. xv6\u4e2d\u7684\u865a\u62df\u5185\u5b58\u7ba1\u7406 \u00b6 \u63d0\u793a \u672c\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u7b80\u5355\u7684\u8bf4\u660exv6\u4e2d\u4e0e\u4e4b\u524d\u4e24\u4e2a\u90e8\u5206\u76f8\u5173\u7684\u5177\u4f53\u5b9e\u73b0\u548c\u90e8\u5206\u539f\u7406\u3002\u8fd9\u90e8\u5206\u5c06 \u76f4\u63a5\u53d9\u8ff0\u4e0e\u5b9e\u9a8c\u672c\u8eab\u6709\u5173 \u7684\u539f\u7406\uff0c\u5e0c\u671b\u5927\u5bb6\u80fd\u591f\u7406\u89e3\u8fd9\u4e2a\u5b9e\u9a8c\u7684\u76ee\u7684\u548c\u8981\u6c42\u5e76\u5f62\u6210\u81ea\u5df1\u7684\u89e3\u51b3\u65b9\u6848\u3002 3.1 \u7528\u6237\u5185\u6838\u53cc\u9875\u8868 \u00b6 \u5728xv6\u4e2d\uff0c\u7528\u6237\u7a0b\u5e8f\u8fd0\u884c\u548c\u5185\u6838\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u7684\u662f\u4e0d\u540c\u7684\u9875\u8868\u3002 \u7528\u6237\u7a0b\u5e8f\u9875\u8868 \uff1a\u4ec5\u5305\u542b\u81ea\u8eab\u7684\u4ee3\u7801\u548c\u6570\u636e\u7684\u865a\u5b9e\u5730\u5740\u6620\u5c04\uff0c\u5185\u6838\u4ee3\u7801\u548c\u6570\u636e\u4e0d\u5305\u542b\u5728\u5185\u3002 \u4e0a\u56fe\u662fxv6\u7684\u7528\u6237\u7a0b\u5e8f\u865a\u62df\u5730\u5740\u7a7a\u95f4\u5206\u5e03\u3002\u5176\u4ee3\u7801\u5b9e\u73b0\u5728kernel/exec.c\u4e2d\uff0c exec \u4f7f\u7528 proc_pagetable \u5206\u914d\u4e86TRAMPOLINE\u548cTRAPFRAME\u7684\u9875\u8868\u6620\u5c04\uff0c\u7136\u540e\u7528 uvmalloc \u6765\u4e3a\u6bcf\u4e2aELF\u6bb5\u5206\u914d\u5185\u5b58\u53ca\u9875\u8868\u6620\u5c04\uff0c\u5e76\u7528 loadseg \u628a\u6bcf\u4e2aELF\u6bb5\u8f7d\u5165\u5185\u5b58\u3002 \u5f53\u8fdb\u7a0b\u7533\u8bf7\u66f4\u591a\u5185\u5b58\u7684\u65f6\u5019\uff0cxv6\u9996\u5148\u7528 kalloc \u5206\u914d\u4e00\u4e2a\u7269\u7406\u9875\u3002\u7136\u540e\u8c03\u7528mappages\u51fd\u6570\u628a\u8fd9\u4e2a\u7269\u7406\u9875\u7684PTE\u52a0\u5230\u8fdb\u7a0b\u7684\u9875\u8868\u91cc\u3002xv6\u4f1a\u8bbe\u7f6e\u8be5PTE\u5bf9\u5e94\u7684\u6807\u5fd7\u4f4d(W,X,R,U,V)\u3002 \u62d3\u5c55\u9605\u8bfb\uff1a\u7528\u6237\u7a0b\u5e8f\u865a\u62df\u5730\u5740\u7a7a\u95f4\u5206\u5e03 trampoline \uff1a\u7528\u6237\u6001-\u5185\u6838\u6001\u8df3\u677f\u3002 trapframe \uff1a\u7528\u6765\u5b58\u653e\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u7528\u6237\u5bc4\u5b58\u5668\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u5982\u679c\u4f60\u60f3\u67e5\u770bxv6\u5728trapframe page\u4e2d\u5b58\u653e\u4e86\u4ec0\u4e48\uff0c\u8be6\u89c1proc.h\u7684trapframe\u7ed3\u6784\u4f53\u3002 heap \uff1a\u5806\u3002\u7a0b\u5e8f\u521d\u59cb\u5316\u65f6\u5806\u6ca1\u6709\u5206\u914d\u4efb\u4f55\u7a7a\u95f4\u3002\u7528\u6237\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7sbrk\u7cfb\u7edf\u8c03\u7528\u8c03\u6574\u5806\u5206\u914d\u7684\u7a7a\u95f4\uff0c\u8fd9\u4f1a\u628a\u65b0\u5185\u5b58\u6620\u5c04\u5230\u9875\u8868\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u4ece\u9875\u8868\u4e2d\u79fb\u9664\u6620\u5c04\uff0c\u91ca\u653e\u5185\u5b58\u3002 stack \uff1a\u7528\u6237\u6808\u3002xv6\u7684\u7528\u6237\u6808\u53ea\u5206\u914d\u4e86\u4e00\u4e2a\u9875\uff08PAGESIZE\uff09\uff0c\u653e\u7f6e\u5728\u6bd4\u5806\u66f4\u4f4e\u7684\u4f4d\u7f6e\u3002\u901a\u5e38\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u628a\u7528\u6237\u6808\u653e\u7f6e\u5728\u6bd4\u5806\u66f4\u9ad8\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e5f\u662fxv6\u548c\u5e38\u89c1\u7684\u64cd\u4f5c\u7cfb\u7edf\u505a\u6cd5\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u3002 guard page \uff1a\u5b88\u62a4\u9875\uff0c\u7528\u6765\u4fdd\u62a4Stack\u3002\u5982\u679cstack\u8017\u5c3d\u4e86\uff0c\u5b83\u4f1a\u6ea2\u51fa\u5230Guard page\uff0c\u4f46\u662f\u56e0\u4e3aGuard page\u7684PTE\u4e2dValid\u6807\u5fd7\u4f4d\u672a\u8bbe\u7f6e\uff0c\u4f1a\u5bfc\u81f4\u7acb\u5373\u89e6\u53d1page fault\uff0c\u8fd9\u6837\u7684\u7ed3\u679c\u597d\u8fc7\u5185\u5b58\u8d8a\u754c\u4e4b\u540e\u9020\u6210\u7684\u6570\u636e\u6df7\u4e71\u3002 data \uff1a\u7528\u6237\u7a0b\u5e8f\u7684\u6570\u636e\u6bb5\u3002 text \uff1a\u7528\u6237\u7a0b\u5e8f\u7684\u4ee3\u7801\u6bb5\u3002 \u5185\u6838\u9875\u8868 \uff1a\u4ec5\u5305\u542b\u5185\u6838\u7684\u4ee3\u7801\u548c\u6570\u636e\u7684\u865a\u5b9e\u5730\u5740\u6620\u5c04\uff0c\u7528\u6237\u7a0b\u5e8f\u7684\u4ee3\u7801\u548c\u6570\u636e\u4e0d\u5305\u542b\u5728\u5185\u3002 \u5176\u4ee3\u7801\u5b9e\u73b0\u5728kernel/vm.c\u7684kvminit()\u51fd\u6570\u3002\u5728kvminit()\u51fd\u6570\u5185\uff0c\u5b8c\u6210\u4e86UART0\u3001VIRTIO0\u3001CLINT\u3001PLIC\u3001kernel text\u3001kernel data\u548cTRAMPOLINE\u7684\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u7684\u6620\u5c04\u3002 /* * create a direct-map page table for the kernel. */ void kvminit () { kernel_pagetable = ( pagetable_t ) kalloc (); memset ( kernel_pagetable , 0 , PGSIZE ); // uart registers kvmmap ( UART0 , UART0 , PGSIZE , PTE_R | PTE_W ); // virtio mmio disk interface kvmmap ( VIRTIO0 , VIRTIO0 , PGSIZE , PTE_R | PTE_W ); // CLINT kvmmap ( CLINT , CLINT , 0x10000 , PTE_R | PTE_W ); // PLIC kvmmap ( PLIC , PLIC , 0x400000 , PTE_R | PTE_W ); // map kernel text executable and read-only. kvmmap ( KERNBASE , KERNBASE , ( uint64 ) etext - KERNBASE , PTE_R | PTE_X ); // map kernel data and the physical RAM we'll make use of. kvmmap (( uint64 ) etext , ( uint64 ) etext , PHYSTOP - ( uint64 ) etext , PTE_R | PTE_W ); // map the trampoline for trap entry/exit to // the highest virtual address in the kernel. kvmmap ( TRAMPOLINE , ( uint64 ) trampoline , PGSIZE , PTE_R | PTE_X ); } \u62d3\u5c55\u9605\u8bfb\uff1a\u5185\u6838\u865a\u62df\u5730\u5740\u7a7a\u95f4-\u7269\u7406\u5730\u5740\u7a7a\u95f4\u5206\u5e03 \u53c8\u89c1\u5230\u56feFigure3.3\u4e86:-) \u6211\u4eec\u5728 Lab3\u7684\u5b9e\u9a8c\u539f\u7406 \u90e8\u5206\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\u4e86\u3002 kernel/memlayout.h\u63cf\u8ff0\u4e86\u5185\u6838\u5185\u5b58\u7684\u5e03\u5c40\u3002 QEMU\u6a21\u62df\u4e86\u4e00\u4e2a\u5305\u542bI/O\u8bbe\u5907\u7684\u8ba1\u7b97\u673a\u3002\u8bbe\u5907\u7684\u63a7\u5236\u5bc4\u5b58\u5668\u88ab\u6620\u5c04\u5230\u7269\u7406\u5185\u5b580x0~0x80000000\u4e4b\u95f4\uff0c\u5185\u6838\u901a\u8fc7\u8bfb\u5199\u8fd9\u4e9b\u5185\u5b58\u5730\u5740\u4e8e\u8bbe\u5907\u8fdb\u884c\u4ea4\u4e92\u3002 xv6\u5185\u6838\u7684\u5927\u90e8\u5206\u865a\u5b9e\u5730\u5740\u6620\u5c04\u662f\u6052\u7b49\u6620\u5c04\uff0c\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u662f\u4e00\u6a21\u4e00\u6837\u7684\u3002\u5bf9\u4e8e\u65e2\u8981\u8bfb\u5199\u865a\u62df\u9875\u53c8\u8981\u901a\u8fc7PTE\u7ba1\u7406\u7269\u7406\u9875\u7684xv6\u5185\u6838\u6765\u8bf4\uff0c\u8fd9\u6837\u7684\u76f4\u63a5\u6620\u5c04\u964d\u4f4e\u4e86\u590d\u6742\u6027\u3002 \u4eceFigure3.3\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u6709\u4e24\u5904\u865a\u62df\u5730\u5740\u4e0d\u662f\u76f4\u63a5\u6620\u5c04\u7684\uff1a trampoline\u9875\uff1a\u5b83\u662f\u7528\u6237\u6001-\u5185\u6838\u6001\u8df3\u677f\uff0c\u65e2\u88ab\u6620\u5c04\u5230\u5185\u6838\u865a\u62df\u7a7a\u95f4\u7684\u9876\u7aef\uff0c\u9875\u88ab\u6620\u5c04\u5230\u7528\u6237\u7a7a\u95f4\u7684\u540c\u6837\u4f4d\u7f6e\u3002 \u5185\u6838\u6808\uff1a\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u5185\u6838\u6808\uff0c\u5b83\u88ab\u6620\u5c04\u5230\u9ad8\u4f4d\uff0c\u8fd9\u6837\u5728\u5b83\u4e0b\u9762\u53ef\u4ee5\u4fdd\u7559\u4e00\u4e2a\u672a\u6620\u5c04\u7684\u5b88\u62a4\u9875\u3002 \u5bf9\u6b64Figure3.3\u548cFigure3.4\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u7528\u6237\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e0e\u5185\u6838\u865a\u62df\u5730\u5740\u7a7a\u95f4\u7684\u8303\u56f4\u4e00\u6837\uff0c\u90fd\u662f\u4ece0\u5230MAXVA\uff08MAXVA\u7684\u5b9a\u4e49\u89c1kernel/riscv.h\uff0c\u5171\u8ba1256G\u7684\u5185\u5b58\uff082 38 \uff09\uff09\u3002\u8fd9\u6837\uff0c\u5185\u6838\u9875\u8868\u56e0\u4e0d\u5305\u542b\u7528\u6237\u9875\u8868\u7684\u6620\u5c04\uff0c\u7528\u6237\u5730\u5740\u5728\u5185\u6838\u4e2d\u65e0\u8bbf\u95ee\uff0c\u540c\u7406\u7528\u6237\u65e0\u6cd5\u8bbf\u95ee\u5185\u6838\u7684\u6570\u636e\u3002 // one beyond the highest possible virtual address. // MAXVA is actually one bit less than the max allowed by // Sv39, to avoid having to sign-extend virtual addresses // that have the high bit set. #define MAXVA (1L << (9 + 9 + 9 + 12 - 1)) 3.2 \u7528\u6237\u5185\u6838\u53cc\u9875\u8868\u7684\u5207\u6362 \u00b6 \u5f53\u7528\u6237\u7a0b\u5e8f\u9700\u8981\u8fdb\u5165\u5185\u6838\u7684\u65f6\u5019\uff0c\u9700\u8981\u5207\u6362\u76f8\u5e94\u7684\u9875\u8868\uff0c\u8f6c\u6362\u4e3a\u5185\u6838\u9875\u8868\u3002\u5185\u6838\u5207\u6362\u5230\u7528\u6237\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u4e5f\u540c\u6837\u9700\u8981\u5207\u6362\u4e3a\u7528\u6237\u9875\u8868\u3002 \u4f46\u662f\uff0cxv6\u4f7f\u7528\u4e86\u5171\u4eab\u7684\u5185\u6838\u9875\u8868\uff0c\u6240\u6709\u8fdb\u7a0b\u4f7f\u7528\u4e00\u4e2a\u9875\u8868\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u5185\u6838\u8fdb\u884c \u8fdb\u7a0b\u95f4\u8c03\u5ea6 \u7684\u65f6\u5019\uff0c\u4e0d\u9700\u8981\u5207\u6362\u9875\u8868\u3002\u4f46\u662f\u5982\u679c\u5185\u6838\u9875\u8868\u53d8\u6210\u72ec\u7acb\u9875\u8868\uff0c\u90a3\u4e48\u5728\u8fdb\u7a0b\u8c03\u5ea6\uff0c\u5207\u6362\u8fdb\u7a0b\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981 \u5728\u9002\u5f53\u7684\u65f6\u5019\u5207\u6362\u5185\u6838\u9875\u8868 \u3002 \u4e0a\u6587\u5df2\u7ecf\u63d0\u53ca\uff0c\u4f7f\u7528\u67d0\u4e2a\u9875\u8868\u65f6\uff0c\u9875\u8868\u6240\u5728\u7684\u7269\u7406\u5730\u5740\u5e94\u5b58\u653e\u5728 satp \u5bc4\u5b58\u5668\u4e2d\u3002\u9875\u8868\u672a\u4f7f\u7528\u65f6\uff0c\u9875\u8868\u6240\u5728\u5730\u5740\u4e5f\u9700\u8981\u4e00\u4e2a\u4f4d\u7f6e\u4fdd\u5b58\uff0c\u5bf9\u4e8e\u7528\u6237\u8fdb\u7a0b\u800c\u8a00\uff0c\u5b83\u88ab\u4fdd\u5b58\u5728 struct proc \u4e2d\u7684 pagetable_t pagetable \uff1b\u5bf9\u4e8e\u5185\u6838\u800c\u8a00\uff0cxv6\u4f7f\u7528\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u4fdd\u5b58\uff08 kernel/vm.c \u7684 kernel_pagetable \uff09\u3002\u4e3a\u8fdb\u7a0b\u5f15\u5165\u5185\u6838\u9875\u8868\u540e\uff0c\u4e5f\u9700\u8981\u5b58\u50a8\u5176\u6240\u5728\u7684\u7269\u7406\u5730\u5740\u3002 3.3 \u5185\u6838\u5bf9\u7528\u6237\u7a7a\u95f4\u7684\u8bbf\u95ee \u00b6 \u901a\u5e38\uff0c\u8fdb\u884c\u5730\u5740\u7ffb\u8bd1\u7684\u65f6\u5019\uff0c\u8ba1\u7b97\u673a\u786c\u4ef6\uff08\u5373\u5185\u5b58\u7ba1\u7406\u5355\u5143MMU\uff09\u90fd\u4f1a\u81ea\u52a8\u7684\u67e5\u627e\u5bf9\u5e94\u7684\u6620\u5c04\u8fdb\u884c\u7ffb\u8bd1\u3002 \u62d3\u5c55\u9605\u8bfb\uff1aTLB\u9875\u8868\u7f13\u5b58 \u56de\u60f3\u4e00\u4e0b\u4e0a\u8ff0page table\u7684\u7ed3\u6784\uff0c\u5f53\u5904\u7406\u5668\u4ece\u5185\u5b58\u52a0\u8f7d\u6216\u5b58\u50a8\u6570\u636e\u65f6\uff0c\u9700\u8981\u505a3\u6b21\u5185\u5b58\u67e5\u627e\uff0c\u7b2c\u4e00\u6b21\u5728\u6700\u9ad8\u7ea7\u7684\u6839\u9875\u8868\uff0c\u7b2c\u4e8c\u6b21\u5728\u4e2d\u95f4\u7ea7\u7684\u6b21\u9875\u8868\uff0c\u6700\u540e\u4e00\u6b21\u5728\u6700\u4f4e\u7ea7\u7684\u53f6\u5b50\u9875\u8868\u3002\u5bf9\u4e8e\u4e00\u4e2a\u865a\u62df\u5185\u5b58\u5730\u5740\u7684\u5bfb\u5740\uff0c\u9700\u8981\u8bfb\u4e09\u6b21\u5185\u5b58\uff0c\u4ee3\u4ef7\u786e\u5b9e\u6709\u70b9\u9ad8\u3002\u56e0\u6b64\uff0c\u5728\u5b9e\u9645\u7684\u5904\u7406\u5668\u4e2d\uff0c\u57fa\u672c\u4f1a\u4f7f\u7528TLB\u9875\u8868\u7f13\u5b58\u6765\u7f13\u5b58\u6700\u8fd1\u4f7f\u7528\u8fc7\u7684\u865a\u62df\u5730\u5740\u7684\u7ffb\u8bd1\u7ed3\u679c\u3002 TLB\u662f\u7531\u786c\u4ef6\u5b9e\u73b0\u7684\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u9700\u8981\u77e5\u9053TLB\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u4f46\u662f\uff0c\u5982\u679c\u5207\u6362\u4e86page table\uff0cTLB\u4e2d\u7684\u7f13\u5b58\u5c06\u4e0d\u518d\u6709\u7528\uff0c\u64cd\u4f5c\u7cfb\u7edf\u9700\u8981\u544a\u8bc9\u5904\u7406\u5668\u5f53\u524d\u6b63\u5728\u5207\u6362page table\uff0c\u5904\u7406\u5668\u4f1a\u53bb\u6e05\u7a7aTLB\u3002\u5728RISC-V\u4e2d\uff0c\u6e05\u7a7aTLB\u7684\u6307\u4ee4\u662fsfence_vma\u3002 \u7136\u800c\uff0c\u5728xv6\u5185\u6838\u9700\u8981\u7ffb\u8bd1\u7528\u6237\u7684\u865a\u62df\u5730\u5740\u65f6\uff0c\u56e0\u4e3a\u5185\u6838\u9875\u8868\u4e0d\u542b\u5bf9\u5e94\u7684\u6620\u5c04\uff0c\u8ba1\u7b97\u673a\u786c\u4ef6\u4e0d\u80fd\u81ea\u52a8\u5e2e\u52a9\u5b8c\u6210\u8fd9\u4ef6\u4e8b\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5148\u627e\u5230\u7528\u6237\u7a0b\u5e8f\u7684\u9875\u8868\uff0c\u4eff\u7167\u786c\u4ef6\u7ffb\u8bd1\u7684\u6d41\u7a0b\uff0c\u4e00\u6b65\u4e00\u6b65\u7684\u627e\u5230\u5bf9\u5e94\u7684\u7269\u7406\u5730\u5740\uff0c\u518d\u5bf9\u5176\u8fdb\u884c\u8bbf\u95ee\u3002 \u4e3e\u4e2a\u6817\u5b50\uff1aLab2\u7528\u5230\u7684copyout()\u51fd\u6570 \u5982 3.1 \u7528\u6237\u5185\u6838\u53cc\u9875\u8868 \u4e2d\u6240\u8ff0\uff0c\u5185\u6838\u6709\u81ea\u5df1\u7684\u9875\u8868\uff0c\u7528\u6237\u7a0b\u5e8f\u4e5f\u6709\u81ea\u5df1\u7684\u9875\u8868\u3002\u5728Lab2\u7684\u4efb\u52a1\u4e8c\u4e2d\uff0c\u7528\u6237\u7a0b\u5e8f\u6307\u5411sys_info\u7ed3\u6784\u4f53\u7684\u6307\u9488\u5b58\u5728\u4e8e\u7528\u6237\u7a7a\u95f4\u7684\u9875\u8868\u4e2d\uff0c\u5185\u6838\u9700\u8981\u5c06\u8fd9\u4e2a\u6307\u9488\u7ffb\u8bd1\u6210\u4e00\u4e2a\u81ea\u5df1\u53ef\u4ee5\u8bfb\u5199\u7684\u7269\u7406\u5730\u5740\uff0c\u624d\u80fd\u53bb\u8bbf\u95eesys_info\u7ed3\u6784\u4f53\u3002\u5982\u679c\u4f60\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u67e5\u770bcopyout()\u51fd\u6570\u662f\u5982\u4f55\u8fdb\u884c\u8f6f\u4ef6\u6a21\u62df\u7ffb\u8bd1\u7684\u3002 \u5f53\u6211\u4eec\u5728\u5185\u6838\u9875\u8868\u4e2d\u62e5\u6709\u4e86\u7528\u6237\u8fdb\u7a0b\u7684\u6620\u5c04\u540e\uff0c\u5185\u6838\u5c31\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u7528\u6237\u8fdb\u7a0b\u7684\u865a\u62df\u5730\u5740\u3002\u6bd4\u5982\u53ef\u4ee5\u76f4\u63a5\u89e3\u5f15\u7528\u7528\u6237\u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u6307\u9488\uff0c\u5c31\u80fd\u83b7\u53d6\u5230\u5bf9\u5e94\u5730\u5740\u7684\u6570\u636e\u3002\u5f88\u591a\u7cfb\u7edf\u8c03\u7528\uff0c\u6216\u8005\u5185\u6838\u7684\u4e00\u4e9b\u64cd\u4f5c\uff0c\u90fd\u9700\u8981\u8fdb\u884c\u865a\u5b9e\u5730\u5740\u7ffb\u8bd1\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u62e5\u6709\u4e86\u7528\u6237\u8fdb\u7a0b\u7684\u5730\u5740\u6620\u5c04\u540e\uff0c\u539f\u6709\u9ebb\u70e6\u7684\u8f6f\u4ef6\u6a21\u62df\u7ffb\u8bd1\u5c31\u53ef\u4ee5\u88ab\u53bb\u9664\uff0c\u5f88\u591a\u64cd\u4f5c\u90fd\u53ef\u4ee5\u88ab\u7b80\u5316\uff0c\u6027\u80fd\u4e5f\u53ef\u4ee5\u5f97\u5230\u63d0\u5347\u3002 \u4f46\u9700\u8981\u6ce8\u610f\u7684\u662f \uff0c\u5982\u679c\u76f4\u63a5\u628a\u7528\u6237\u9875\u8868\u7684\u5185\u5bb9\u590d\u5236\u5230\u5185\u6838\u9875\u8868\uff0c\u5373\u5176\u4e2d\u9875\u8868\u9879\u7684User\u4f4d\u7f6e1\uff0c\u90a3\u4e48\u5185\u6838\u4f9d\u65e7\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u5bf9\u5e94\u7684\u865a\u62df\u5730\u5740\uff08\u786c\u4ef6\u4f1a\u62d2\u7edd\u5730\u5740\u7ffb\u8bd1\uff0c\u4f46\u8f6f\u4ef6\u6a21\u62df\u7ffb\u8bd1\u4f9d\u65e7\u53ef\u884c\uff09\u3002\u53ef\u4f9b\u53c2\u8003\u7684\u89e3\u51b3\u65b9\u6848\u6709\u4e24\u79cd\uff1a \uff081\uff09\u628a\u5185\u6838\u9875\u8868\u4e2d\u9875\u8868\u9879\u7684User\u4f4d\u5747\u7f6e\u4e3a0\uff1b \uff082\uff09\u501f\u52a9RISC-V\u7684 sstatus \u5bc4\u5b58\u5668\uff0c\u5982\u679c\u8be5\u5bc4\u5b58\u5668\u7684SUM\u4f4d\uff08\u7b2c18\u4f4d\uff09\u7f6e\u4e3a1\uff0c\u90a3\u4e48\u5185\u6838\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u4e0a\u8ff0\u7684\u865a\u62df\u5730\u5740\u3002\u5927\u591a\u60c5\u51b5\u4e0b\uff0c\u8be5\u4f4d\u9700\u8981\u7f6e0\u3002\uff08\u8bbf\u95ee\u5bc4\u5b58\u5668\u7684\u51fd\u6570\u5b9a\u4e49\u4e8eriscv.h\uff09\u5173\u4e8e sstatus \u5bc4\u5b58\u5668\uff0c\u53ef\u4ee5\u67e5\u9605 riscv-privileged.pdf 4.1\u5c0f\u8282\u3002 3.4 \u5185\u6838\u6808 \u00b6 \u8fdb\u7a0b\u8fdb\u5165\u5185\u6838\u540e\uff0c\u9700\u8981\u4e00\u4e2a\u4e13\u5c5e\u7684\u6808\u4ee5\u7ef4\u6301\u8fd0\u884c\uff0c\u8fd9\u4e2a\u6808\u5c31\u88ab\u79f0\u4e3a\u5185\u6838\u6808\u3002\u56e0\u4e3a\u4e0d\u540c\u8fdb\u7a0b\u5728\u5185\u6838\u4e2d\u8fd0\u884c\u7684\u60c5\u51b5\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u5e94\u5f53\u62e5\u6709\u4e00\u4e2a\u5185\u6838\u6808\u3002 \u5982 3.1\u5c0f\u8282 \u5185\u6838\u9875\u8868 \u6240\u793a\uff0c\u5728kvminit()\u51fd\u6570\u4e2d\uff0c\u9664\u4e86\u5185\u6838\u6808\u4e4b\u5916\uff0c\u5176\u4ed6\u90e8\u4ef6\u90fd\u6620\u5c04\u5b8c\u6210\u3002\u5185\u6838\u6808\u7684\u9875\u8868\u6620\u5c04\u662f\u5728 kernel/proc.c \u7684 procinit() \u4e2d\u5b9e\u73b0\uff1a /*in kernel/proc.c procinit()*/ for ( p = proc ; p < & proc [ NPROC ]; p ++ ) { ... char * pa = kalloc (); // \u5206\u914d\u4e00\u4e2a\u7269\u7406\u9875\uff0c\u8fd4\u56de\u5176\u9996\u5730\u5740 if ( pa == 0 ) panic ( \"kalloc\" ); uint64 va = KSTACK (( int ) ( p - proc )); // \u8ba1\u7b97\u5185\u6838\u6808\u6240\u5728\u7684\u865a\u62df\u5730\u5740 kvmmap ( va , ( uint64 ) pa , PGSIZE , PTE_R | PTE_W ); // \u5728\u5185\u6838\u9875\u8868\u5efa\u7acb\u5185\u6838\u6808\u7684\u6620\u5c04 p -> kstack = va ; // \u5c06\u5185\u6838\u6808\u7684\u865a\u62df\u5730\u5740\u5b58\u50a8\u4e8e\u8fdb\u7a0b\u63a7\u5236\u5757 } procinit() \u5728\u7cfb\u7edf\u7684\u542f\u52a8\u9636\u6bb5\u6267\u884c\uff0c\u56e0\u6b64\u5176\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\uff08\u603b\u5171\u652f\u6301NPROC\u4e2a\u8fdb\u7a0b\uff09\u90fd\u5206\u914d\u4e86\u4e00\u4e2a\u5185\u6838\u6808\u3002\u5728xv6\u7684\u8bbe\u8ba1\u4e2d\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u5185\u6838\u6808\u7684\u865a\u62df\u5730\u5740\u662f\u56fa\u5b9a\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u3002 3.5 \u7528\u6237\u9875\u8868\u548c\u5185\u6838\u9875\u8868\u5408\u5e76\u7684\u4e00\u4e2a\u91cd\u8981\u524d\u63d0\uff1a\u5730\u5740\u4e0d\u91cd\u5408 \u00b6 \u5176\u5b9e\uff0c\u8981\u60f3\u5728\u72ec\u7acb\u5185\u6838\u9875\u8868\u4e2d\uff0c\u540c\u65f6\u5305\u542b\u5185\u6838\u9875\u8868\u548c\u7528\u6237\u9875\u8868\u662f\u6709\u8bb2\u7a76\u7684\u3002\u5176\u4e2d\u4e00\u4e2a\u91cd\u8981\u7684\u524d\u63d0\u8981\u6c42\u662f\uff1a\u7528\u6237\u7684\u865a\u62df\u5730\u5740\u548c\u5185\u6838\u7684\u865a\u62df\u5730\u5740\u4e0d\u80fd\u91cd\u53e0\u3002 \u8fd8\u597d\uff0c\u7528\u6237\u7a0b\u5e8f\u4ece0\u5f00\u59cb\uff0c\u5185\u6838\u5219\u4ece\u4e00\u4e2a\u5f88\u9ad8\u7684\u865a\u62df\u5730\u5740\uff080xC000000\uff09\u5f00\u59cb\u6392\u5e03\u3002\u4f46\u662f\u4ed6\u4eec\u8fd8\u662f\u6709\u53ef\u80fd\u53d1\u751f\u91cd\u53e0\u3002\u6240\u4ee5\uff0c\u4f60\u4e00\u5b9a\u8981\u9650\u5236\u7528\u6237\u7a0b\u5e8f\u865a\u62df\u5730\u5740\u4e0e\u5185\u6838\u5730\u5740\u91cd\u53e0\u3002 \u5185\u6838\u5730\u57400xC000000\uff0c\u4e3aPLIC\u5bc4\u5b58\u5668\u5730\u5740\uff0c\u4f60\u53ef\u4ee5\u5728 kernel/memlayout.h + kernel/vm.c \u4e2d kvminit() \u8fdb\u884c\u67e5\u9605\u3002\u4ed4\u7ec6\u9605\u8bfb kvminit() \uff0c\u4f60\u4f1a\u53d1\u73b0\u5176\u5bf9\u5982\u4e0b\u5730\u5740\u8303\u56f4\u8fdb\u884c\u4e86\u6620\u5c04\uff1a // CLINT kvmmap ( CLINT , CLINT , 0x10000 , PTE_R | PTE_W ); // PLIC kvmmap ( PLIC , PLIC , 0x400000 , PTE_R | PTE_W ); \u90a3\u4e48\u4e3a\u4f55\u8bf40xC000000\u662f\u5185\u6838\u5730\u5740\u7684\u5f00\u59cb\uff1f\u5185\u6838\u9875\u8868\u4e0d\u662f\u4ece0\u5f00\u59cb\uff0c\u800c\u662f\u5728\u67d0\u4e9b\u7279\u5b9a\u5730\u5740\u4e0a\u6709\u7279\u5b9a\u7684\u6620\u5c04\uff08\u89c1\u4e0a\u8ff0Figure3.3\uff09\u3002\u5728 memlayout.h \u53ef\u770b\u5230CLINT\u7684\u503c\u4e3a0x2000000L\uff0c\u8fd9\u4e2a\u503c\u6bd40xC000000\u5c0f\uff0c0xC000000\u662fPLIC\uff08Platform-Level Interrput Controller\uff0c\u4e2d\u65ad\u63a7\u5236\u5668\uff09\u7684\u5730\u5740\uff0c\u5b9e\u9645\u4e0a\uff0cCLINT\uff08Core Local Interruptor\uff09\u5b9a\u4e49\u4e86\u672c\u5730\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u5730\u5740\uff0c\u6211\u4eec\u53ea\u4f1a\u5728\u5185\u6838\u521d\u59cb\u5316\u7684\u65f6\u5019\u7528\u5230\u8fd9\u6bb5\u5730\u5740\u3002\u6240\u4ee5\uff0c\u4e3a\u7528\u6237\u8fdb\u7a0b\u751f\u6210\u5185\u6838\u9875\u8868\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4e0d\u5fc5\u6620\u5c04\u8fd9\u6bb5\u5730\u5740\u3002\u7528\u6237\u9875\u8868\u662f\u4ece\u865a\u62df\u5730\u57400\u5f00\u59cb\uff0c\u7528\u591a\u5c11\u5c31\u5efa\u591a\u5c11\uff0c\u4f46\u6700\u9ad8\u5730\u5740\u4e0d\u80fd\u8d85\u8fc7\u5185\u6838\u7684\u8d77\u59cb\u5730\u5740\uff0c\u8fd9\u6837\u7528\u6237\u7a0b\u5e8f\u53ef\u7528\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u5c31\u4e3a 0x0 - 0xC000000 \u3002","title":"\u5b9e\u9a8c\u539f\u7406"},{"location":"lab4/part2/#_1","text":"","title":"\u5b9e\u9a8c\u539f\u7406"},{"location":"lab4/part2/#1","text":"\u865a\u62df\u5185\u5b58\u7ba1\u7406\u5df2\u7ecf\u5728\u7406\u8bba\u8bfe\u4e0a\u8fdb\u884c\u4e86\u5b66\u4e60\uff0c\u4e0d\u719f\u6089\u7684\u540c\u5b66\u8bf7\u53ca\u65f6\u56de\u987e\u7406\u8bba\u77e5\u8bc6\uff0c\u672c\u90e8\u5206\u4ec5\u4f9b\u56de\u987e\u3002","title":"1. \u865a\u62df\u5185\u5b58\u7ba1\u7406"},{"location":"lab4/part2/#11","text":"\u6bcf\u4e2a\u8fdb\u7a0b\u6709\u72ec\u7acb\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\uff0c\u8fdb\u7a0b\u8bbf\u95ee\u7684\u865a\u62df\u5730\u5740\u5e76\u4e0d\u662f\u771f\u6b63\u7684\u7269\u7406\u5730\u5740\uff0c\u4f46\u8fdb\u7a0b\u53ef\u901a\u8fc7\u81ea\u8eab\u9875\u8868\u4e2d\u865a\u62df\u5730\u5740\u4e0e\u7269\u7406\u5730\u5740\u5efa\u7acb\u7684\u6620\u5c04\u83b7\u5f97\u771f\u6b63\u7684\u7269\u7406\u5730\u5740\u3002xv6\u4f7f\u7528\u9875\u8868\u5206\u9694\u4e0d\u540c\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u5e76\u628a\u5b83\u4eec\u591a\u8def\u590d\u7528\u5230\u5355\u4e00\u7684\u7269\u7406\u5185\u5b58\u3002","title":"1.1 \u5730\u5740\u7a7a\u95f4"},{"location":"lab4/part2/#12","text":"\u7cfb\u7edf\u901a\u8fc7\u9875\u673a\u5236\u6765\u5b9e\u73b0\u865a\u62df\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u7684\u6620\u5c04\uff0c\u7528\u9875\u8868\u50a8\u5b58\u6620\u5c04\u5173\u7cfb\u3002 \u9875\uff1a \u7cfb\u7edf\u5c06\u865a\u62df\u5185\u5b58\u5206\u62104K\u5927\u5c0f\u7684\u5757\u3002\u6bcf\u5757\u5c31\u662f\u4e00\u9875\uff0c\u4f5c\u4e3a\u5185\u5b58\u7ba1\u7406\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u6bcf\u4e2a\u9875\u90fd\u4f1a\u6709\u4e00\u4e2a\u7f16\u53f7\uff0c\u4ece\u5c0f\u5230\u5927\u3002 \u9875\u6846\uff08\u5757\uff09\uff1a \u7cfb\u7edf\u5c06\u7269\u7406\u5185\u5b58\u4e5f\u548c\u865a\u62df\u5185\u5b58\u4e00\u6837\u5206\u62104K\u5927\u5c0f\u7684\u5757\uff0c\u6bcf\u5757\u5c31\u662f\u4e00\u4e2a\u9875\u6846\uff0c\u4e0e\u9875\u4e00\u4e00\u5bf9\u5e94\u3002 \u5730\u5740\u7ed3\u6784\uff1a \u5206\u9875\u5b58\u50a8\u7ba1\u7406\u7684\u903b\u8f91\u5730\u5740\u7ed3\u6784\u5982\u56fe\u524d\u4e00\u90e8\u5206\u4e3a\u9875\u53f7P\uff0c\u540e\u4e00\u90e8\u5206\u4e3a\u9875\u5185\u504f\u79fb\u91cfW\u300232\u4f4d\u673a\u5668\u56fe\u793a\u5982\u4e0b\uff08xv6\u662f64\u4f4d\u64cd\u4f5c\u7cfb\u7edf\uff09\u3002 \u9875\u8868\uff1a \u4e3a\u4e86\u4fbf\u4e8e\u5728\u5185\u5b58\u4e2d\u627e\u5230\u8fdb\u7a0b\u7684\u6bcf\u4e2a\u9875\u9762\u6240\u5bf9\u5e94\u7684\u7269\u7406\u5757\uff0c\u7cfb\u7edf\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u5efa\u7acb\u4e00\u5f20\u9875\u8868\uff0c\u8bb0\u5f55\u9875\u5728\u5185\u5b58\u4e2d\u5bf9\u5e94\u7684\u9875\u6846\u53f7\uff0c\u9875\u8868\u4e00\u822c\u5b58\u653e\u5728\u5185\u5b58\u4e2d\u3002\u5728\u914d\u7f6e\u4e86\u9875\u8868\u540e\uff0c\u8fdb\u7a0b\u6267\u884c\u65f6\uff0c\u901a\u8fc7\u67e5\u627e\u8be5\u8868\uff0c\u5373\u53ef\u627e\u5230\u6bcf\u9875\u5728\u5185\u5b58\u4e2d\u7684\u7269\u7406\u5757\u53f7\u3002\u53ef\u89c1\uff0c\u9875\u8868\u7684\u4f5c\u7528\u662f\u5b9e\u73b0\u4ece\u9875\u53f7\u5230\u9875\u6846\u53f7\u7684\u5730\u5740\u6620\u5c04\u3002","title":"1.2 \u6570\u636e\u7ed3\u6784"},{"location":"lab4/part2/#13","text":"\u5728RISC-V\u6307\u4ee4\u96c6\u4e2d\uff0c\u5f53\u6211\u4eec\u9700\u8981\u5f00\u542f\u9875\u8868\u670d\u52a1\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5c06\u6211\u4eec\u9884\u5148\u914d\u7f6e\u597d\u7684\u9875\u8868\u9996\u5730\u5740\u653e\u5165 satp \u5bc4\u5b58\u5668\u4e2d\u3002\u4ece\u6b64\u4e4b\u540e\uff0c \u8ba1\u7b97\u673a\u786c\u4ef6 \u5c06\u628a\u8bbf\u5b58\u7684\u5730\u5740 \u5747\u89c6\u4e3a\u865a\u62df\u5730\u5740 \uff0c\u90fd\u9700\u8981\u901a\u8fc7\u786c\u4ef6\u67e5\u8be2\u9875\u8868\uff0c\u5c06\u5176 \u7ffb\u8bd1\u6210\u4e3a\u7269\u7406\u5730\u5740 \uff0c\u7136\u540e\u5c06\u5176\u4f5c\u4e3a\u5730\u5740\u53d1\u9001\u7ed9\u5185\u5b58\u8fdb\u884c\u8bbf\u5b58\u3002","title":"1.3 \u4f7f\u7528\u65b9\u6cd5"},{"location":"lab4/part2/#2","text":"\u63d0\u793a \u672c\u90e8\u5206\uff0c\u4f60\u5e94\u8be5\u8981\u77e5\u9053\uff1a \u4ec0\u4e48\u662f\u9875\u8868\uff1f \u9875\u8868\u7684\u6570\u636e\u7ed3\u6784\u662f\u4ec0\u4e48\uff1f \u9875\u8868\u662f\u600e\u4e48\u5de5\u4f5c\u7684\uff1f","title":"2. \u9875\u8868"},{"location":"lab4/part2/#21","text":"\u9875\u8868\u5c31\u662f\u5b58\u653e\u865a\u5b9e\u5730\u5740\u6620\u5c04\u7684\u8868\u683c\uff0c\u91cc\u9762\u88c5\u6ee1\u4e86\u865a\u5b9e\u5730\u5740\u7684\u6620\u5c04\u3002 \u9875\u8868\u7684\u6570\u636e\u7ed3\u6784\u548c\u7ffb\u8bd1\u7684\u6a21\u5f0f\u56fe\u793a\u5927\u81f4\u5982\u4e0b\uff1a xv6\u91c7\u7528\u7684\u6307\u4ee4\u96c6\u6807\u51c6\u4e3aRISC-V\u6807\u51c6\uff0c\u5176\u4e2d\u9875\u8868\u7684\u6807\u51c6\u4e3aSV39\u6807\u51c6\uff0c\u4e5f\u5c31\u662f\u865a\u62df\u5730\u5740\u6700\u591a\u4e3a39\u4f4d\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u6765\u4ecb\u7ecd\u8fd9\u5957\u6807\u51c6\uff0c\u4e4b\u540e\u4f60\u4f1a\u77e5\u9053\u4e3a\u4ec0\u4e48\u53eb39\u3002","title":"2.1 \u9875\u8868\u662f\u4ec0\u4e48"},{"location":"lab4/part2/#22","text":"","title":"2.2 \u9875\u8868\u7684\u6570\u636e\u7ed3\u6784\uff08\u91cd\u8981\uff09"},{"location":"lab4/part2/#221","text":"\u84dd\u8272\u90e8\u5206\uff1a\u4ee3\u8868\u7528\u6237\u6240\u6301\u6709\u7684\u865a\u62df\u5730\u5740\u3002\u6bd4\u5982\u6211\u4eec\u5728\u7528\u6237\u7a0b\u5e8f\u6240\u6301\u6709\u7684\u6307\u9488\uff0c64\u4f4d\u7684\uff0c\u5c31\u957f\u8fd9\u6837\u3002\u5176\u4e2d\u4f4e39\u4f4d\u53ef\u7528\uff0839\u7684\u7531\u6765\uff09\uff0c\u5176\u4ed6\u7684\u4e3a\u62d3\u5c55\u3002\u8fd9\u4e09\u5341\u4e5d\u4f4d\u88ab\u5212\u5206\u6210\u4e86\u56db\u90e8\u5206\uff1a L2 L1 L0 Offset \u3002 L2\u662f \u6839\u9875\u8868 \u7684\u7d22\u5f15\uff08index\uff09\uff0c\u53ef\u4ee5\u5f97\u5230\u6b21\u9875\u8868\u7684\u57fa\u5730\u5740\u3002 L1\u662f \u6b21\u9875\u8868 \u7684\u7d22\u5f15\uff0c\u53ef\u4ee5\u5f97\u5230\u53f6\u5b50\u9875\u8868\u7684\u57fa\u5730\u5740\u3002 L0\u662f \u9875\u8868\u9879 \u7684\u7d22\u5f15\uff0c\u53ef\u4ee5\u5f97\u523064\u4f4d\u7684\u9875\u8868\u9879\u3002 \u6ce8\uff1a\u4e8b\u5b9e\u4e0a\uff0cL2\u548cL1\u5bf9\u5e94\u4e8e\u7406\u8bba\u8bfe\u4e2d\u7684\u9875\u76ee\u5f55\u53f7\uff0cL0\u5bf9\u5e94\u7406\u8bba\u8bfe\u4e2d\u7684\u9875\u53f7\u3002 \u7ea2\u8272\u90e8\u5206\uff1a\u9875\u8868\u9879\u4e2d\u6709\u7269\u7406\u9875\u5e27\u53f7PPN\uff0c\u52a0\u4e0a\u865a\u62df\u5730\u5740\u672c\u8eab\u542b\u6709\u7684 Offset \u7ec4\u6210\u4e86\u7269\u7406\u5730\u5740\uff0c64\u4f4d\u5269\u4e0b\u7684\u4f4d\u6570\u4e3a\u4fdd\u7559\u4f4d\u3002\u6ce8\u610f\uff0c \u865a\u5b9e\u5730\u5740\u7684Offset\uff08\u4f4e\u5341\u4e8c\u4f4d\uff09\u5b8c\u5168\u76f8\u540c \uff0c\u4e0d\u7528\u7ffb\u8bd1\u3002","title":"2.2.1 \u865a\u5b9e\u5730\u5740"},{"location":"lab4/part2/#222","text":"SV39\u9875\u8868\u6807\u51c6\u4e0b\uff0c\u6784\u9020\u4e86\u4e09\u7ea7\u9875\u8868\uff0c\u6211\u4eec\u5c06\u5176\u5206\u4e3a\u79f0\u4e3a\uff1a\u6839\u9875\u8868\u3001\u6b21\u9875\u8868\u3001\u53f6\u5b50\u9875\u8868\u3002\u987a\u5e8f\u548c\u56fe\u4e2d\u9875\u8868\u4ece\u5de6\u5411\u53f3\u4f9d\u6b21\u5bf9\u5e94\u3002 \u6bcf\u4e2a\u9875\u8868\u7684\u5927\u5c0f\u90fd\u662f4K\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u9875\u3002\u9875\u8868\u6709512\u4e2a\u9875\u76ee\u5f55\u9879\uff0c\u6bcf\u4e2a\u76ee\u5f55\u98798 bytes\uff0c\u4e5f\u5c31\u662f64\u4f4d\u3002512\u4e2a\u76ee\u5f55\u9879\u9700\u89819\u4f4d\u7684\u7d22\u5f15\uff0c\u56e0\u6b64 2.2.1 \u865a\u5b9e\u5730\u5740 \u84dd\u8272\u865a\u62df\u5730\u5740\u4e2d\u7684 L2, L1, L0 \u7d22\u5f15\u90fd\u662f9\u4f4d\u7684\u3002 \u73b0\u5728\u6765\u770b\u9875\u76ee\u5f55\u9879\u81ea\u8eab\uff0c\u53ef\u4ee5\u5927\u6982\u5206\u6210\u4e24\u4e2a\u90e8\u5206\uff1a \u9875\u5e27\u53f7\uff08PPN\uff09 \u548c\u5bf9\u5e94\u7684 \u6807\u5fd7\u4f4d\uff08Flags\uff09 \uff08\u542b\u6709\u8bbf\u95ee\u6743\u9650\u3001\u8bbf\u95ee\u8bb0\u5f55\u7b49\uff09\u3002\u524d\u8005\u8868\u793a\u7269\u7406\u5730\u5740\u7684\u9875\u5e27\u53f7\uff0c\u4e5f\u5c31\u662f 2.2.1 \u865a\u5b9e\u5730\u5740 \u7ea2\u8272\u7269\u7406\u5730\u5740\u7684PPN\u3002\u4f46\u662f\u6bcf\u4e00\u7ea7\u9875\u8868\u7684\u76ee\u5f55\u9879\u7684\u610f\u4e49\u90fd\u4e0d\u540c\uff0c\u5177\u4f53\u5982\u4e0b\uff1a \u6839\u9875\u8868 \u7684\u76ee\u5f55\u9879\uff0c\u5305\u542b\u5bf9\u5e94 \u6b21\u9875\u8868 \uff08\u4e0b\u4e00\u7ea7\u9875\u8868\uff09\u7684\u57fa\u5730\u5740\u9875\u5e27\u53f7\u4ee5\u53ca\u6807\u5fd7\u4f4d\u3002 \u6b21\u9875\u8868 \u7684\u76ee\u5f55\u9879\uff0c\u5305\u542b\u5bf9\u5e94 \u53f6\u5b50\u9875\u8868 \uff08\u4e0b\u4e00\u7ea7\u9875\u8868\uff09\u7684\u57fa\u5730\u5740\u9875\u5e27\u53f7\u4ee5\u53ca\u6807\u5fd7\u4f4d\u3002 \u53f6\u5b50\u9875\u8868 \u7684\u76ee\u5f55\u9879\uff0c\u5305\u542b\u5bf9\u5e94 \u865a\u62df\u5730\u5740 \u7684\u7269\u7406\u5730\u5740\u9875\u5e27\u53f7\u4ee5\u53ca\u6807\u5fd7\u4f4d\u3002","title":"2.2.2 \u9875\u8868"},{"location":"lab4/part2/#223","text":"\u521a\u521a\uff0c\u6211\u4eec\u628a\u76ee\u5f55\u9879\u5206\u6210\u4e86\u4e24\u4e2a\u90e8\u5206\uff1a\u7269\u7406\u5730\u5740\u9875\u5e27\u53f7\u548c\u6807\u5fd7\u4f4d\u3002\u5177\u4f53\u7684\u7ed3\u6784\u5982\u4e0a\u56fe\u3002 \u4fdd\u7559\u4f4d\uff1a\u7b2c 54-63 \u4f4d\uff0c\u5171 10 \u4f4d\u3002 PPN : \u7269\u7406\u9875\u5e27\u53f7\uff0c\u7b2c 10-53 \u4f4d\uff0c\u5171 44 \u4f4d\u3002 Flags \uff1a\u6807\u5fd7\u4f4d\uff0c\u7b2c 0-9 \u4f4d\uff0c\u5171 10 \u4f4d\u3002\u5176\u4e2d\u7b2c 8-9 \u4f4d\u4e3a\u4fdd\u7559\u4f4d\uff0c\u6682\u4e0d\u4f7f\u7528\u3002 \u7b2c 0 \u4f4d Valid \uff1a\u8be5\u9875\u8868\u9879\u6709\u6548\u3002\u5bf9\u4e8e\u53f6\u5b50\u9875\u8868\u6765\u8bf4\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u4e3a1\u8bf4\u660e\u865a\u62df\u5730\u5740\u6709\u6620\u5c04\u5230\u7269\u7406\u5730\u5740\uff0c\u5426\u5219\u8bf4\u660e\u6ca1\u6709\u8be5\u6620\u5c04\u3002\u5bf9\u4e8e\u6b21\u9875\u8868\u6765\u8bf4\uff0c\u4e3a1\u8bf4\u660e\u6709\u5bf9\u5e94\u7684\u53f6\u5b50\u9875\u8868\uff0c\u5bf9\u4e8e\u6839\u9875\u8868\u8bf4\u660e\u6709\u5bf9\u5e94\u6b21\u9875\u8868\u3002 \u7b2c 1-3 \u4f4d Readable/ Writable/ Executable \uff1a \u8be5\u9875\u8868\u9879\u662f\u53ef\u8bfb/\u5199/\u6267\u884c\uff08\u4f5c\u4e3a\u4ee3\u7801\u8fd0\u884c\uff09\u7684\u3002\u901a\u5e38\u6211\u4eec\u53ea\u9700\u8981\u5173\u5fc3\u53f6\u5b50\u9875\u8868\u9879\u7684\u8fd9\u4e09\u4e2a\u4f4d\uff0c\u56e0\u4e3a\u8fd9\u4ee3\u8868\u5bf9\u5e94\u7684\u7269\u7406\u9875\u5e27\u7684\u6807\u5fd7\uff0c\u800c\u4e0d\u662f\u9875\u8868\u7684\u6807\u5fd7\u3002\u5bf9\u4e8e\u6839\u9875\u8868\u548c\u6b21\u9875\u8868\u7684\u76ee\u5f55\u9879\uff0c\u8fd9\u4e09\u4e2a\u4f4d\u5f80\u5f80\u7f6e\u4e3a 0 \u3002 \u7b2c 4 \u4f4d User \uff1a \u8be5\u9875\u8868\u9879\u6307\u5411\u7684\u7269\u7406\u9875\u80fd\u5728\u7528\u6237\u6001\u8bbf\u95ee\u3002\u5185\u6838\u9875\u8868\u4e2d\u7684\u4ee3\u7801\u548c\u6570\u636e\u6211\u4eec\u4e0d\u4f1a\u5c06\u5176\u7ed9\u7528\u6237\u4f7f\u7528\uff0c\u6240\u4ee5\u4f1a\u7f6e 0 \uff0c\u4f46\u662f\u7528\u6237\u9875\u8868\u7684\u4ee3\u7801\u548c\u6570\u636e\u5e94\u8be5\u8981\u7f6e 1 \u3002\u540c\u6837\uff0c\u5bf9\u4e8e\u5185\u6838\u9875\u8868\u4e2d\u7684\u9875\u8868\u9879\uff0c\u5982\u679c\u8be5\u4f4d\u7f6e 1 \uff0c\u5219\u8ba1\u7b97\u673a\u7684\u786c\u4ef6\u4e0d\u4f1a\u5141\u8bb8\u5185\u6838\u8bbf\u95ee\u5bf9\u5e94\u5730\u5740\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u7684\u624b\u6bb5\u8bbf\u95ee\uff0c\u540e\u6587\u4f1a\u4ecb\u7ecd\u3002 \u5176\u4ed6\u7684\u4f4d\uff0c\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u901a\u8fc7\u82f1\u6587\u540d\u770b\u51fa\u5176\u610f\u4e49\uff0c\u6216\u8005\u67e5\u9605 riscv-privileged.pdf 4.3~4.4\u5c0f\u8282\u3002 \u6ce8\uff1a\u7406\u8bba\u8bfe\u4e0a\u6211\u4eec\u5c06\u9875\u8868\u9879\u548c\u9875\u76ee\u5f55\u9879\u52a0\u4ee5\u533a\u5206\uff0c\u4f46\u662f\u5728\u672c\u5b9e\u9a8c\u4e2d\uff0c\u4ed6\u4eec\u662f\u5b8c\u5168\u76f8\u540c\u7684\u7ed3\u6784\uff01","title":"2.2.3 \u9875\u8868\u9879"},{"location":"lab4/part2/#23","text":"\u73b0\u5728\u6211\u4eec\u6765\u5c06\u5176\u4e32\u8054\u8d77\u6765\uff0c\u770b\u770b\u5bf9\u5e94\u7684\u865a\u62df\u5730\u5740\u662f\u600e\u6837\u7ffb\u8bd1\u6210\u7269\u7406\u5730\u5740\u7684\uff1a \u83b7\u5f97\u4e00\u4e2a\u865a\u62df\u5730\u5740\u3002\u6839\u9875\u8868\u57fa\u5730\u5740\u5df2\u7ecf\u88ab\u88c5\u586b\u81f3\u5bc4\u5b58\u5668 satp \u4e2d\u3002 \u901a\u8fc7 satp \u627e\u5230\u6839\u9875\u8868\u7684\u7269\u7406\u9875\u5e27\u53f7\uff0c\u8f6c\u6210\u7269\u7406\u5730\u5740\uff08 Offset \u4e3a0\uff09\uff0c\u901a\u8fc7\u865a\u62df\u5730\u5740\u7684 L2 \u7d22\u5f15\uff0c\u627e\u5230\u5bf9\u5e94\u7684\u9875\u8868\u9879\u3002 \u901a\u8fc7\u9875\u8868\u9879\u53ef\u4ee5\u627e\u5230\u627e\u5230 \u6b21\u9875\u8868 \u7684\u7269\u7406\u9875\u5e27\u53f7\uff0c\u8f6c\u6210\u7269\u7406\u5730\u5740\uff08 Offset \u4e3a0\uff09\uff0c\u901a\u8fc7\u865a\u62df\u5730\u5740\u7684 L1 \u7d22\u5f15\uff0c\u627e\u5230\u5bf9\u5e94\u7684\u9875\u8868\u9879\u3002 \u901a\u8fc7\u9875\u8868\u9879\u53ef\u4ee5\u627e\u5230\u627e\u5230 \u53f6\u5b50\u9875\u8868 \u7684\u7269\u7406\u9875\u5e27\u53f7\uff0c\u8f6c\u6210\u7269\u7406\u5730\u5740\uff08 Offset \u4e3a0\uff09\uff0c\u901a\u8fc7\u865a\u62df\u5730\u5740\u7684 L0 \u7d22\u5f15\uff0c\u627e\u5230\u5bf9\u5e94\u7684\u9875\u8868\u9879\u3002 \u901a\u8fc7\u9875\u8868\u9879\u53ef\u4ee5\u627e\u5230\u627e\u5230 \u7269\u7406\u5730\u5740 \u7684\u7269\u7406\u9875\u5e27\u53f7\uff0c\u901a\u8fc7\u865a\u62df\u5730\u5740\u7684 Offset \uff0c\u8f6c\u6210\u7269\u7406\u5730\u5740\uff08 Offset \u548c\u865a\u62df\u5730\u5740 Offset \u76f8\u540c\uff09\u3002","title":"2.3 \u865a\u5b9e\u5730\u5740\u7ffb\u8bd1\u6d41\u7a0b"},{"location":"lab4/part2/#3-xv6","text":"\u63d0\u793a \u672c\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u7b80\u5355\u7684\u8bf4\u660exv6\u4e2d\u4e0e\u4e4b\u524d\u4e24\u4e2a\u90e8\u5206\u76f8\u5173\u7684\u5177\u4f53\u5b9e\u73b0\u548c\u90e8\u5206\u539f\u7406\u3002\u8fd9\u90e8\u5206\u5c06 \u76f4\u63a5\u53d9\u8ff0\u4e0e\u5b9e\u9a8c\u672c\u8eab\u6709\u5173 \u7684\u539f\u7406\uff0c\u5e0c\u671b\u5927\u5bb6\u80fd\u591f\u7406\u89e3\u8fd9\u4e2a\u5b9e\u9a8c\u7684\u76ee\u7684\u548c\u8981\u6c42\u5e76\u5f62\u6210\u81ea\u5df1\u7684\u89e3\u51b3\u65b9\u6848\u3002","title":"3. xv6\u4e2d\u7684\u865a\u62df\u5185\u5b58\u7ba1\u7406"},{"location":"lab4/part2/#31","text":"\u5728xv6\u4e2d\uff0c\u7528\u6237\u7a0b\u5e8f\u8fd0\u884c\u548c\u5185\u6838\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u7684\u662f\u4e0d\u540c\u7684\u9875\u8868\u3002 \u7528\u6237\u7a0b\u5e8f\u9875\u8868 \uff1a\u4ec5\u5305\u542b\u81ea\u8eab\u7684\u4ee3\u7801\u548c\u6570\u636e\u7684\u865a\u5b9e\u5730\u5740\u6620\u5c04\uff0c\u5185\u6838\u4ee3\u7801\u548c\u6570\u636e\u4e0d\u5305\u542b\u5728\u5185\u3002 \u4e0a\u56fe\u662fxv6\u7684\u7528\u6237\u7a0b\u5e8f\u865a\u62df\u5730\u5740\u7a7a\u95f4\u5206\u5e03\u3002\u5176\u4ee3\u7801\u5b9e\u73b0\u5728kernel/exec.c\u4e2d\uff0c exec \u4f7f\u7528 proc_pagetable \u5206\u914d\u4e86TRAMPOLINE\u548cTRAPFRAME\u7684\u9875\u8868\u6620\u5c04\uff0c\u7136\u540e\u7528 uvmalloc \u6765\u4e3a\u6bcf\u4e2aELF\u6bb5\u5206\u914d\u5185\u5b58\u53ca\u9875\u8868\u6620\u5c04\uff0c\u5e76\u7528 loadseg \u628a\u6bcf\u4e2aELF\u6bb5\u8f7d\u5165\u5185\u5b58\u3002 \u5f53\u8fdb\u7a0b\u7533\u8bf7\u66f4\u591a\u5185\u5b58\u7684\u65f6\u5019\uff0cxv6\u9996\u5148\u7528 kalloc \u5206\u914d\u4e00\u4e2a\u7269\u7406\u9875\u3002\u7136\u540e\u8c03\u7528mappages\u51fd\u6570\u628a\u8fd9\u4e2a\u7269\u7406\u9875\u7684PTE\u52a0\u5230\u8fdb\u7a0b\u7684\u9875\u8868\u91cc\u3002xv6\u4f1a\u8bbe\u7f6e\u8be5PTE\u5bf9\u5e94\u7684\u6807\u5fd7\u4f4d(W,X,R,U,V)\u3002 \u62d3\u5c55\u9605\u8bfb\uff1a\u7528\u6237\u7a0b\u5e8f\u865a\u62df\u5730\u5740\u7a7a\u95f4\u5206\u5e03 trampoline \uff1a\u7528\u6237\u6001-\u5185\u6838\u6001\u8df3\u677f\u3002 trapframe \uff1a\u7528\u6765\u5b58\u653e\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u7528\u6237\u5bc4\u5b58\u5668\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u5982\u679c\u4f60\u60f3\u67e5\u770bxv6\u5728trapframe page\u4e2d\u5b58\u653e\u4e86\u4ec0\u4e48\uff0c\u8be6\u89c1proc.h\u7684trapframe\u7ed3\u6784\u4f53\u3002 heap \uff1a\u5806\u3002\u7a0b\u5e8f\u521d\u59cb\u5316\u65f6\u5806\u6ca1\u6709\u5206\u914d\u4efb\u4f55\u7a7a\u95f4\u3002\u7528\u6237\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7sbrk\u7cfb\u7edf\u8c03\u7528\u8c03\u6574\u5806\u5206\u914d\u7684\u7a7a\u95f4\uff0c\u8fd9\u4f1a\u628a\u65b0\u5185\u5b58\u6620\u5c04\u5230\u9875\u8868\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u4ece\u9875\u8868\u4e2d\u79fb\u9664\u6620\u5c04\uff0c\u91ca\u653e\u5185\u5b58\u3002 stack \uff1a\u7528\u6237\u6808\u3002xv6\u7684\u7528\u6237\u6808\u53ea\u5206\u914d\u4e86\u4e00\u4e2a\u9875\uff08PAGESIZE\uff09\uff0c\u653e\u7f6e\u5728\u6bd4\u5806\u66f4\u4f4e\u7684\u4f4d\u7f6e\u3002\u901a\u5e38\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u628a\u7528\u6237\u6808\u653e\u7f6e\u5728\u6bd4\u5806\u66f4\u9ad8\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e5f\u662fxv6\u548c\u5e38\u89c1\u7684\u64cd\u4f5c\u7cfb\u7edf\u505a\u6cd5\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u3002 guard page \uff1a\u5b88\u62a4\u9875\uff0c\u7528\u6765\u4fdd\u62a4Stack\u3002\u5982\u679cstack\u8017\u5c3d\u4e86\uff0c\u5b83\u4f1a\u6ea2\u51fa\u5230Guard page\uff0c\u4f46\u662f\u56e0\u4e3aGuard page\u7684PTE\u4e2dValid\u6807\u5fd7\u4f4d\u672a\u8bbe\u7f6e\uff0c\u4f1a\u5bfc\u81f4\u7acb\u5373\u89e6\u53d1page fault\uff0c\u8fd9\u6837\u7684\u7ed3\u679c\u597d\u8fc7\u5185\u5b58\u8d8a\u754c\u4e4b\u540e\u9020\u6210\u7684\u6570\u636e\u6df7\u4e71\u3002 data \uff1a\u7528\u6237\u7a0b\u5e8f\u7684\u6570\u636e\u6bb5\u3002 text \uff1a\u7528\u6237\u7a0b\u5e8f\u7684\u4ee3\u7801\u6bb5\u3002 \u5185\u6838\u9875\u8868 \uff1a\u4ec5\u5305\u542b\u5185\u6838\u7684\u4ee3\u7801\u548c\u6570\u636e\u7684\u865a\u5b9e\u5730\u5740\u6620\u5c04\uff0c\u7528\u6237\u7a0b\u5e8f\u7684\u4ee3\u7801\u548c\u6570\u636e\u4e0d\u5305\u542b\u5728\u5185\u3002 \u5176\u4ee3\u7801\u5b9e\u73b0\u5728kernel/vm.c\u7684kvminit()\u51fd\u6570\u3002\u5728kvminit()\u51fd\u6570\u5185\uff0c\u5b8c\u6210\u4e86UART0\u3001VIRTIO0\u3001CLINT\u3001PLIC\u3001kernel text\u3001kernel data\u548cTRAMPOLINE\u7684\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u7684\u6620\u5c04\u3002 /* * create a direct-map page table for the kernel. */ void kvminit () { kernel_pagetable = ( pagetable_t ) kalloc (); memset ( kernel_pagetable , 0 , PGSIZE ); // uart registers kvmmap ( UART0 , UART0 , PGSIZE , PTE_R | PTE_W ); // virtio mmio disk interface kvmmap ( VIRTIO0 , VIRTIO0 , PGSIZE , PTE_R | PTE_W ); // CLINT kvmmap ( CLINT , CLINT , 0x10000 , PTE_R | PTE_W ); // PLIC kvmmap ( PLIC , PLIC , 0x400000 , PTE_R | PTE_W ); // map kernel text executable and read-only. kvmmap ( KERNBASE , KERNBASE , ( uint64 ) etext - KERNBASE , PTE_R | PTE_X ); // map kernel data and the physical RAM we'll make use of. kvmmap (( uint64 ) etext , ( uint64 ) etext , PHYSTOP - ( uint64 ) etext , PTE_R | PTE_W ); // map the trampoline for trap entry/exit to // the highest virtual address in the kernel. kvmmap ( TRAMPOLINE , ( uint64 ) trampoline , PGSIZE , PTE_R | PTE_X ); } \u62d3\u5c55\u9605\u8bfb\uff1a\u5185\u6838\u865a\u62df\u5730\u5740\u7a7a\u95f4-\u7269\u7406\u5730\u5740\u7a7a\u95f4\u5206\u5e03 \u53c8\u89c1\u5230\u56feFigure3.3\u4e86:-) \u6211\u4eec\u5728 Lab3\u7684\u5b9e\u9a8c\u539f\u7406 \u90e8\u5206\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\u4e86\u3002 kernel/memlayout.h\u63cf\u8ff0\u4e86\u5185\u6838\u5185\u5b58\u7684\u5e03\u5c40\u3002 QEMU\u6a21\u62df\u4e86\u4e00\u4e2a\u5305\u542bI/O\u8bbe\u5907\u7684\u8ba1\u7b97\u673a\u3002\u8bbe\u5907\u7684\u63a7\u5236\u5bc4\u5b58\u5668\u88ab\u6620\u5c04\u5230\u7269\u7406\u5185\u5b580x0~0x80000000\u4e4b\u95f4\uff0c\u5185\u6838\u901a\u8fc7\u8bfb\u5199\u8fd9\u4e9b\u5185\u5b58\u5730\u5740\u4e8e\u8bbe\u5907\u8fdb\u884c\u4ea4\u4e92\u3002 xv6\u5185\u6838\u7684\u5927\u90e8\u5206\u865a\u5b9e\u5730\u5740\u6620\u5c04\u662f\u6052\u7b49\u6620\u5c04\uff0c\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u662f\u4e00\u6a21\u4e00\u6837\u7684\u3002\u5bf9\u4e8e\u65e2\u8981\u8bfb\u5199\u865a\u62df\u9875\u53c8\u8981\u901a\u8fc7PTE\u7ba1\u7406\u7269\u7406\u9875\u7684xv6\u5185\u6838\u6765\u8bf4\uff0c\u8fd9\u6837\u7684\u76f4\u63a5\u6620\u5c04\u964d\u4f4e\u4e86\u590d\u6742\u6027\u3002 \u4eceFigure3.3\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u6709\u4e24\u5904\u865a\u62df\u5730\u5740\u4e0d\u662f\u76f4\u63a5\u6620\u5c04\u7684\uff1a trampoline\u9875\uff1a\u5b83\u662f\u7528\u6237\u6001-\u5185\u6838\u6001\u8df3\u677f\uff0c\u65e2\u88ab\u6620\u5c04\u5230\u5185\u6838\u865a\u62df\u7a7a\u95f4\u7684\u9876\u7aef\uff0c\u9875\u88ab\u6620\u5c04\u5230\u7528\u6237\u7a7a\u95f4\u7684\u540c\u6837\u4f4d\u7f6e\u3002 \u5185\u6838\u6808\uff1a\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u5185\u6838\u6808\uff0c\u5b83\u88ab\u6620\u5c04\u5230\u9ad8\u4f4d\uff0c\u8fd9\u6837\u5728\u5b83\u4e0b\u9762\u53ef\u4ee5\u4fdd\u7559\u4e00\u4e2a\u672a\u6620\u5c04\u7684\u5b88\u62a4\u9875\u3002 \u5bf9\u6b64Figure3.3\u548cFigure3.4\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u7528\u6237\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e0e\u5185\u6838\u865a\u62df\u5730\u5740\u7a7a\u95f4\u7684\u8303\u56f4\u4e00\u6837\uff0c\u90fd\u662f\u4ece0\u5230MAXVA\uff08MAXVA\u7684\u5b9a\u4e49\u89c1kernel/riscv.h\uff0c\u5171\u8ba1256G\u7684\u5185\u5b58\uff082 38 \uff09\uff09\u3002\u8fd9\u6837\uff0c\u5185\u6838\u9875\u8868\u56e0\u4e0d\u5305\u542b\u7528\u6237\u9875\u8868\u7684\u6620\u5c04\uff0c\u7528\u6237\u5730\u5740\u5728\u5185\u6838\u4e2d\u65e0\u8bbf\u95ee\uff0c\u540c\u7406\u7528\u6237\u65e0\u6cd5\u8bbf\u95ee\u5185\u6838\u7684\u6570\u636e\u3002 // one beyond the highest possible virtual address. // MAXVA is actually one bit less than the max allowed by // Sv39, to avoid having to sign-extend virtual addresses // that have the high bit set. #define MAXVA (1L << (9 + 9 + 9 + 12 - 1))","title":"3.1 \u7528\u6237\u5185\u6838\u53cc\u9875\u8868"},{"location":"lab4/part2/#32","text":"\u5f53\u7528\u6237\u7a0b\u5e8f\u9700\u8981\u8fdb\u5165\u5185\u6838\u7684\u65f6\u5019\uff0c\u9700\u8981\u5207\u6362\u76f8\u5e94\u7684\u9875\u8868\uff0c\u8f6c\u6362\u4e3a\u5185\u6838\u9875\u8868\u3002\u5185\u6838\u5207\u6362\u5230\u7528\u6237\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u4e5f\u540c\u6837\u9700\u8981\u5207\u6362\u4e3a\u7528\u6237\u9875\u8868\u3002 \u4f46\u662f\uff0cxv6\u4f7f\u7528\u4e86\u5171\u4eab\u7684\u5185\u6838\u9875\u8868\uff0c\u6240\u6709\u8fdb\u7a0b\u4f7f\u7528\u4e00\u4e2a\u9875\u8868\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u5185\u6838\u8fdb\u884c \u8fdb\u7a0b\u95f4\u8c03\u5ea6 \u7684\u65f6\u5019\uff0c\u4e0d\u9700\u8981\u5207\u6362\u9875\u8868\u3002\u4f46\u662f\u5982\u679c\u5185\u6838\u9875\u8868\u53d8\u6210\u72ec\u7acb\u9875\u8868\uff0c\u90a3\u4e48\u5728\u8fdb\u7a0b\u8c03\u5ea6\uff0c\u5207\u6362\u8fdb\u7a0b\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981 \u5728\u9002\u5f53\u7684\u65f6\u5019\u5207\u6362\u5185\u6838\u9875\u8868 \u3002 \u4e0a\u6587\u5df2\u7ecf\u63d0\u53ca\uff0c\u4f7f\u7528\u67d0\u4e2a\u9875\u8868\u65f6\uff0c\u9875\u8868\u6240\u5728\u7684\u7269\u7406\u5730\u5740\u5e94\u5b58\u653e\u5728 satp \u5bc4\u5b58\u5668\u4e2d\u3002\u9875\u8868\u672a\u4f7f\u7528\u65f6\uff0c\u9875\u8868\u6240\u5728\u5730\u5740\u4e5f\u9700\u8981\u4e00\u4e2a\u4f4d\u7f6e\u4fdd\u5b58\uff0c\u5bf9\u4e8e\u7528\u6237\u8fdb\u7a0b\u800c\u8a00\uff0c\u5b83\u88ab\u4fdd\u5b58\u5728 struct proc \u4e2d\u7684 pagetable_t pagetable \uff1b\u5bf9\u4e8e\u5185\u6838\u800c\u8a00\uff0cxv6\u4f7f\u7528\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u4fdd\u5b58\uff08 kernel/vm.c \u7684 kernel_pagetable \uff09\u3002\u4e3a\u8fdb\u7a0b\u5f15\u5165\u5185\u6838\u9875\u8868\u540e\uff0c\u4e5f\u9700\u8981\u5b58\u50a8\u5176\u6240\u5728\u7684\u7269\u7406\u5730\u5740\u3002","title":"3.2 \u7528\u6237\u5185\u6838\u53cc\u9875\u8868\u7684\u5207\u6362"},{"location":"lab4/part2/#33","text":"\u901a\u5e38\uff0c\u8fdb\u884c\u5730\u5740\u7ffb\u8bd1\u7684\u65f6\u5019\uff0c\u8ba1\u7b97\u673a\u786c\u4ef6\uff08\u5373\u5185\u5b58\u7ba1\u7406\u5355\u5143MMU\uff09\u90fd\u4f1a\u81ea\u52a8\u7684\u67e5\u627e\u5bf9\u5e94\u7684\u6620\u5c04\u8fdb\u884c\u7ffb\u8bd1\u3002 \u62d3\u5c55\u9605\u8bfb\uff1aTLB\u9875\u8868\u7f13\u5b58 \u56de\u60f3\u4e00\u4e0b\u4e0a\u8ff0page table\u7684\u7ed3\u6784\uff0c\u5f53\u5904\u7406\u5668\u4ece\u5185\u5b58\u52a0\u8f7d\u6216\u5b58\u50a8\u6570\u636e\u65f6\uff0c\u9700\u8981\u505a3\u6b21\u5185\u5b58\u67e5\u627e\uff0c\u7b2c\u4e00\u6b21\u5728\u6700\u9ad8\u7ea7\u7684\u6839\u9875\u8868\uff0c\u7b2c\u4e8c\u6b21\u5728\u4e2d\u95f4\u7ea7\u7684\u6b21\u9875\u8868\uff0c\u6700\u540e\u4e00\u6b21\u5728\u6700\u4f4e\u7ea7\u7684\u53f6\u5b50\u9875\u8868\u3002\u5bf9\u4e8e\u4e00\u4e2a\u865a\u62df\u5185\u5b58\u5730\u5740\u7684\u5bfb\u5740\uff0c\u9700\u8981\u8bfb\u4e09\u6b21\u5185\u5b58\uff0c\u4ee3\u4ef7\u786e\u5b9e\u6709\u70b9\u9ad8\u3002\u56e0\u6b64\uff0c\u5728\u5b9e\u9645\u7684\u5904\u7406\u5668\u4e2d\uff0c\u57fa\u672c\u4f1a\u4f7f\u7528TLB\u9875\u8868\u7f13\u5b58\u6765\u7f13\u5b58\u6700\u8fd1\u4f7f\u7528\u8fc7\u7684\u865a\u62df\u5730\u5740\u7684\u7ffb\u8bd1\u7ed3\u679c\u3002 TLB\u662f\u7531\u786c\u4ef6\u5b9e\u73b0\u7684\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u9700\u8981\u77e5\u9053TLB\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u4f46\u662f\uff0c\u5982\u679c\u5207\u6362\u4e86page table\uff0cTLB\u4e2d\u7684\u7f13\u5b58\u5c06\u4e0d\u518d\u6709\u7528\uff0c\u64cd\u4f5c\u7cfb\u7edf\u9700\u8981\u544a\u8bc9\u5904\u7406\u5668\u5f53\u524d\u6b63\u5728\u5207\u6362page table\uff0c\u5904\u7406\u5668\u4f1a\u53bb\u6e05\u7a7aTLB\u3002\u5728RISC-V\u4e2d\uff0c\u6e05\u7a7aTLB\u7684\u6307\u4ee4\u662fsfence_vma\u3002 \u7136\u800c\uff0c\u5728xv6\u5185\u6838\u9700\u8981\u7ffb\u8bd1\u7528\u6237\u7684\u865a\u62df\u5730\u5740\u65f6\uff0c\u56e0\u4e3a\u5185\u6838\u9875\u8868\u4e0d\u542b\u5bf9\u5e94\u7684\u6620\u5c04\uff0c\u8ba1\u7b97\u673a\u786c\u4ef6\u4e0d\u80fd\u81ea\u52a8\u5e2e\u52a9\u5b8c\u6210\u8fd9\u4ef6\u4e8b\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5148\u627e\u5230\u7528\u6237\u7a0b\u5e8f\u7684\u9875\u8868\uff0c\u4eff\u7167\u786c\u4ef6\u7ffb\u8bd1\u7684\u6d41\u7a0b\uff0c\u4e00\u6b65\u4e00\u6b65\u7684\u627e\u5230\u5bf9\u5e94\u7684\u7269\u7406\u5730\u5740\uff0c\u518d\u5bf9\u5176\u8fdb\u884c\u8bbf\u95ee\u3002 \u4e3e\u4e2a\u6817\u5b50\uff1aLab2\u7528\u5230\u7684copyout()\u51fd\u6570 \u5982 3.1 \u7528\u6237\u5185\u6838\u53cc\u9875\u8868 \u4e2d\u6240\u8ff0\uff0c\u5185\u6838\u6709\u81ea\u5df1\u7684\u9875\u8868\uff0c\u7528\u6237\u7a0b\u5e8f\u4e5f\u6709\u81ea\u5df1\u7684\u9875\u8868\u3002\u5728Lab2\u7684\u4efb\u52a1\u4e8c\u4e2d\uff0c\u7528\u6237\u7a0b\u5e8f\u6307\u5411sys_info\u7ed3\u6784\u4f53\u7684\u6307\u9488\u5b58\u5728\u4e8e\u7528\u6237\u7a7a\u95f4\u7684\u9875\u8868\u4e2d\uff0c\u5185\u6838\u9700\u8981\u5c06\u8fd9\u4e2a\u6307\u9488\u7ffb\u8bd1\u6210\u4e00\u4e2a\u81ea\u5df1\u53ef\u4ee5\u8bfb\u5199\u7684\u7269\u7406\u5730\u5740\uff0c\u624d\u80fd\u53bb\u8bbf\u95eesys_info\u7ed3\u6784\u4f53\u3002\u5982\u679c\u4f60\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u67e5\u770bcopyout()\u51fd\u6570\u662f\u5982\u4f55\u8fdb\u884c\u8f6f\u4ef6\u6a21\u62df\u7ffb\u8bd1\u7684\u3002 \u5f53\u6211\u4eec\u5728\u5185\u6838\u9875\u8868\u4e2d\u62e5\u6709\u4e86\u7528\u6237\u8fdb\u7a0b\u7684\u6620\u5c04\u540e\uff0c\u5185\u6838\u5c31\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u7528\u6237\u8fdb\u7a0b\u7684\u865a\u62df\u5730\u5740\u3002\u6bd4\u5982\u53ef\u4ee5\u76f4\u63a5\u89e3\u5f15\u7528\u7528\u6237\u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u6307\u9488\uff0c\u5c31\u80fd\u83b7\u53d6\u5230\u5bf9\u5e94\u5730\u5740\u7684\u6570\u636e\u3002\u5f88\u591a\u7cfb\u7edf\u8c03\u7528\uff0c\u6216\u8005\u5185\u6838\u7684\u4e00\u4e9b\u64cd\u4f5c\uff0c\u90fd\u9700\u8981\u8fdb\u884c\u865a\u5b9e\u5730\u5740\u7ffb\u8bd1\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u62e5\u6709\u4e86\u7528\u6237\u8fdb\u7a0b\u7684\u5730\u5740\u6620\u5c04\u540e\uff0c\u539f\u6709\u9ebb\u70e6\u7684\u8f6f\u4ef6\u6a21\u62df\u7ffb\u8bd1\u5c31\u53ef\u4ee5\u88ab\u53bb\u9664\uff0c\u5f88\u591a\u64cd\u4f5c\u90fd\u53ef\u4ee5\u88ab\u7b80\u5316\uff0c\u6027\u80fd\u4e5f\u53ef\u4ee5\u5f97\u5230\u63d0\u5347\u3002 \u4f46\u9700\u8981\u6ce8\u610f\u7684\u662f \uff0c\u5982\u679c\u76f4\u63a5\u628a\u7528\u6237\u9875\u8868\u7684\u5185\u5bb9\u590d\u5236\u5230\u5185\u6838\u9875\u8868\uff0c\u5373\u5176\u4e2d\u9875\u8868\u9879\u7684User\u4f4d\u7f6e1\uff0c\u90a3\u4e48\u5185\u6838\u4f9d\u65e7\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u5bf9\u5e94\u7684\u865a\u62df\u5730\u5740\uff08\u786c\u4ef6\u4f1a\u62d2\u7edd\u5730\u5740\u7ffb\u8bd1\uff0c\u4f46\u8f6f\u4ef6\u6a21\u62df\u7ffb\u8bd1\u4f9d\u65e7\u53ef\u884c\uff09\u3002\u53ef\u4f9b\u53c2\u8003\u7684\u89e3\u51b3\u65b9\u6848\u6709\u4e24\u79cd\uff1a \uff081\uff09\u628a\u5185\u6838\u9875\u8868\u4e2d\u9875\u8868\u9879\u7684User\u4f4d\u5747\u7f6e\u4e3a0\uff1b \uff082\uff09\u501f\u52a9RISC-V\u7684 sstatus \u5bc4\u5b58\u5668\uff0c\u5982\u679c\u8be5\u5bc4\u5b58\u5668\u7684SUM\u4f4d\uff08\u7b2c18\u4f4d\uff09\u7f6e\u4e3a1\uff0c\u90a3\u4e48\u5185\u6838\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u4e0a\u8ff0\u7684\u865a\u62df\u5730\u5740\u3002\u5927\u591a\u60c5\u51b5\u4e0b\uff0c\u8be5\u4f4d\u9700\u8981\u7f6e0\u3002\uff08\u8bbf\u95ee\u5bc4\u5b58\u5668\u7684\u51fd\u6570\u5b9a\u4e49\u4e8eriscv.h\uff09\u5173\u4e8e sstatus \u5bc4\u5b58\u5668\uff0c\u53ef\u4ee5\u67e5\u9605 riscv-privileged.pdf 4.1\u5c0f\u8282\u3002","title":"3.3 \u5185\u6838\u5bf9\u7528\u6237\u7a7a\u95f4\u7684\u8bbf\u95ee"},{"location":"lab4/part2/#34","text":"\u8fdb\u7a0b\u8fdb\u5165\u5185\u6838\u540e\uff0c\u9700\u8981\u4e00\u4e2a\u4e13\u5c5e\u7684\u6808\u4ee5\u7ef4\u6301\u8fd0\u884c\uff0c\u8fd9\u4e2a\u6808\u5c31\u88ab\u79f0\u4e3a\u5185\u6838\u6808\u3002\u56e0\u4e3a\u4e0d\u540c\u8fdb\u7a0b\u5728\u5185\u6838\u4e2d\u8fd0\u884c\u7684\u60c5\u51b5\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u5e94\u5f53\u62e5\u6709\u4e00\u4e2a\u5185\u6838\u6808\u3002 \u5982 3.1\u5c0f\u8282 \u5185\u6838\u9875\u8868 \u6240\u793a\uff0c\u5728kvminit()\u51fd\u6570\u4e2d\uff0c\u9664\u4e86\u5185\u6838\u6808\u4e4b\u5916\uff0c\u5176\u4ed6\u90e8\u4ef6\u90fd\u6620\u5c04\u5b8c\u6210\u3002\u5185\u6838\u6808\u7684\u9875\u8868\u6620\u5c04\u662f\u5728 kernel/proc.c \u7684 procinit() \u4e2d\u5b9e\u73b0\uff1a /*in kernel/proc.c procinit()*/ for ( p = proc ; p < & proc [ NPROC ]; p ++ ) { ... char * pa = kalloc (); // \u5206\u914d\u4e00\u4e2a\u7269\u7406\u9875\uff0c\u8fd4\u56de\u5176\u9996\u5730\u5740 if ( pa == 0 ) panic ( \"kalloc\" ); uint64 va = KSTACK (( int ) ( p - proc )); // \u8ba1\u7b97\u5185\u6838\u6808\u6240\u5728\u7684\u865a\u62df\u5730\u5740 kvmmap ( va , ( uint64 ) pa , PGSIZE , PTE_R | PTE_W ); // \u5728\u5185\u6838\u9875\u8868\u5efa\u7acb\u5185\u6838\u6808\u7684\u6620\u5c04 p -> kstack = va ; // \u5c06\u5185\u6838\u6808\u7684\u865a\u62df\u5730\u5740\u5b58\u50a8\u4e8e\u8fdb\u7a0b\u63a7\u5236\u5757 } procinit() \u5728\u7cfb\u7edf\u7684\u542f\u52a8\u9636\u6bb5\u6267\u884c\uff0c\u56e0\u6b64\u5176\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\uff08\u603b\u5171\u652f\u6301NPROC\u4e2a\u8fdb\u7a0b\uff09\u90fd\u5206\u914d\u4e86\u4e00\u4e2a\u5185\u6838\u6808\u3002\u5728xv6\u7684\u8bbe\u8ba1\u4e2d\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u5185\u6838\u6808\u7684\u865a\u62df\u5730\u5740\u662f\u56fa\u5b9a\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u3002","title":"3.4 \u5185\u6838\u6808"},{"location":"lab4/part2/#35","text":"\u5176\u5b9e\uff0c\u8981\u60f3\u5728\u72ec\u7acb\u5185\u6838\u9875\u8868\u4e2d\uff0c\u540c\u65f6\u5305\u542b\u5185\u6838\u9875\u8868\u548c\u7528\u6237\u9875\u8868\u662f\u6709\u8bb2\u7a76\u7684\u3002\u5176\u4e2d\u4e00\u4e2a\u91cd\u8981\u7684\u524d\u63d0\u8981\u6c42\u662f\uff1a\u7528\u6237\u7684\u865a\u62df\u5730\u5740\u548c\u5185\u6838\u7684\u865a\u62df\u5730\u5740\u4e0d\u80fd\u91cd\u53e0\u3002 \u8fd8\u597d\uff0c\u7528\u6237\u7a0b\u5e8f\u4ece0\u5f00\u59cb\uff0c\u5185\u6838\u5219\u4ece\u4e00\u4e2a\u5f88\u9ad8\u7684\u865a\u62df\u5730\u5740\uff080xC000000\uff09\u5f00\u59cb\u6392\u5e03\u3002\u4f46\u662f\u4ed6\u4eec\u8fd8\u662f\u6709\u53ef\u80fd\u53d1\u751f\u91cd\u53e0\u3002\u6240\u4ee5\uff0c\u4f60\u4e00\u5b9a\u8981\u9650\u5236\u7528\u6237\u7a0b\u5e8f\u865a\u62df\u5730\u5740\u4e0e\u5185\u6838\u5730\u5740\u91cd\u53e0\u3002 \u5185\u6838\u5730\u57400xC000000\uff0c\u4e3aPLIC\u5bc4\u5b58\u5668\u5730\u5740\uff0c\u4f60\u53ef\u4ee5\u5728 kernel/memlayout.h + kernel/vm.c \u4e2d kvminit() \u8fdb\u884c\u67e5\u9605\u3002\u4ed4\u7ec6\u9605\u8bfb kvminit() \uff0c\u4f60\u4f1a\u53d1\u73b0\u5176\u5bf9\u5982\u4e0b\u5730\u5740\u8303\u56f4\u8fdb\u884c\u4e86\u6620\u5c04\uff1a // CLINT kvmmap ( CLINT , CLINT , 0x10000 , PTE_R | PTE_W ); // PLIC kvmmap ( PLIC , PLIC , 0x400000 , PTE_R | PTE_W ); \u90a3\u4e48\u4e3a\u4f55\u8bf40xC000000\u662f\u5185\u6838\u5730\u5740\u7684\u5f00\u59cb\uff1f\u5185\u6838\u9875\u8868\u4e0d\u662f\u4ece0\u5f00\u59cb\uff0c\u800c\u662f\u5728\u67d0\u4e9b\u7279\u5b9a\u5730\u5740\u4e0a\u6709\u7279\u5b9a\u7684\u6620\u5c04\uff08\u89c1\u4e0a\u8ff0Figure3.3\uff09\u3002\u5728 memlayout.h \u53ef\u770b\u5230CLINT\u7684\u503c\u4e3a0x2000000L\uff0c\u8fd9\u4e2a\u503c\u6bd40xC000000\u5c0f\uff0c0xC000000\u662fPLIC\uff08Platform-Level Interrput Controller\uff0c\u4e2d\u65ad\u63a7\u5236\u5668\uff09\u7684\u5730\u5740\uff0c\u5b9e\u9645\u4e0a\uff0cCLINT\uff08Core Local Interruptor\uff09\u5b9a\u4e49\u4e86\u672c\u5730\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u5730\u5740\uff0c\u6211\u4eec\u53ea\u4f1a\u5728\u5185\u6838\u521d\u59cb\u5316\u7684\u65f6\u5019\u7528\u5230\u8fd9\u6bb5\u5730\u5740\u3002\u6240\u4ee5\uff0c\u4e3a\u7528\u6237\u8fdb\u7a0b\u751f\u6210\u5185\u6838\u9875\u8868\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4e0d\u5fc5\u6620\u5c04\u8fd9\u6bb5\u5730\u5740\u3002\u7528\u6237\u9875\u8868\u662f\u4ece\u865a\u62df\u5730\u57400\u5f00\u59cb\uff0c\u7528\u591a\u5c11\u5c31\u5efa\u591a\u5c11\uff0c\u4f46\u6700\u9ad8\u5730\u5740\u4e0d\u80fd\u8d85\u8fc7\u5185\u6838\u7684\u8d77\u59cb\u5730\u5740\uff0c\u8fd9\u6837\u7528\u6237\u7a0b\u5e8f\u53ef\u7528\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u5c31\u4e3a 0x0 - 0xC000000 \u3002","title":"3.5 \u7528\u6237\u9875\u8868\u548c\u5185\u6838\u9875\u8868\u5408\u5e76\u7684\u4e00\u4e2a\u91cd\u8981\u524d\u63d0\uff1a\u5730\u5740\u4e0d\u91cd\u5408"},{"location":"lab4/part3/","text":"\u5b9e\u9a8c\u5b9e\u73b0 \u00b6 \u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5bf9\u4e00\u4e9b\u5b9e\u73b0\u7684\u7ec6\u8282\u505a\u4e00\u5b9a\u7684\u63d0\u9192\u3002\u4f46\u662f\u5b8c\u6574\u7684\u6d41\u7a0b\u9700\u8981\u81ea\u5df1\u628a\u63e1\uff0c\u6211\u4eec \u4e0d\u4f1a\u7ed9\u51fa\u6bcf\u4e00\u6b65\u5b9e\u73b0\u6b65\u9aa4 \u3002\u56e0\u6b64\uff0c\u6700\u91cd\u8981\u7684\u8fd8\u662f\u9605\u8bfb \u201c \u5b9e\u9a8c\u539f\u7406 \u201d \u5185\u5bb9\uff0c\u5f97\u51fa\u81ea\u5df1\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u7136\u540e\u53c2\u8003 \u201d\u5b9e\u9a8c\u5b9e\u73b0\u201c \u8fd9\u90e8\u5206\u7684\u5185\u5bb9\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cxv6\u7684\u4ee3\u7801\u662f\u53ef\u4ee5\u53c2\u8003\u7684\uff0c\u53ef\u4ee5\u770b\u770b\u76f8\u5173\u5b9e\u9a8c\u539f\u7406\u662f\u600e\u4e48\u5b9e\u73b0\u7684\u3002\u540c\u65f6\uff0c\u8fd8\u53ef\u4ee5\u63d2\u6869\uff0c\u4f7f\u7528printf\u7b49\u65b9\u6cd5\u770b\u770b\u5177\u4f53\u7684\u5185\u5bb9\u3002\u540c\u65f6\uff0c\u8fd8\u53ef\u4ee5\u9605\u8bfb xv6 \u6307\u5bfc\u4e66\uff0c\u770b\u770b\u80cc\u540e\u7684\u8bbe\u8ba1\u673a\u7406\u3002 \u6e29\u99a8\u63d0\u793a \u672c\u6b21\u5b9e\u9a8c\u7684\u540e\u4e24\u4e2a\u4efb\u52a1\u975e\u5e38\u786c\u6838\uff0c\u4f46\u771f\u6b63\u51f8\u663e\u4e86\u64cd\u4f5c\u7cfb\u7edf\u7684\u9b45\u529b\u3002\u867d\u7136\u6700\u540e\u4e00\u4e2a\u4efb\u52a1\u7684\u5206\u503c\u4e0d\u591a\uff0c\u6211\u4eec\u4f9d\u7136\u5efa\u8bae\u4f60\u52aa\u529b\u5c1d\u8bd5\uff0c\u5982\u679c\u80fd\u575a\u6301\u505a\u5b8c\uff0c\u5c31\u4e00\u5b9a\u4f1a\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u7684\u5185\u5b58\u7ba1\u7406\u6709\u66f4\u9ad8\u5c42\u6b21\u7684\u8ba4\u77e5\u3002 \u672c\u6b21\u5b9e\u9a8c \u4f60\u53ef\u80fd\u4f1a\u7528\u5230\u5f88\u591akernel/vm.c\u4e2d\u7684\u51fd\u6570 \uff0c\u5b83\u4eec\u6709\u6bd4\u8f83\u5b8c\u5584\u7684\u6ce8\u91ca\uff0c\u8bf7\u4ed4\u7ec6\u9605\u8bfb\u7406\u89e3\u3002 0. \u4efb\u52a1\u96f6\uff1a\u56de\u7b54\u95ee\u9898 \u00b6 \u56de\u7b54\u95ee\u9898 \u4efb\u52a1\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u5e94\u8be5\u5148\u8981\u9996\u5148\u56de\u7b54\u4e00\u4e9b\u539f\u7406\u6027\u7684\u95ee\u9898\uff0c\u8fd9\u90e8\u5206\u5e94\u8be5\u88ab\u5305\u542b\u5728\u5b9e\u9a8c\u62a5\u544a\u4e2d\uff1a \u67e5\u9605\u8d44\u6599\uff0c\u7b80\u8981\u9610\u8ff0\u9875\u8868\u673a\u5236\u4e3a\u4ec0\u4e48\u4f1a\u88ab\u53d1\u660e\uff0c\u5b83\u6709\u4ec0\u4e48\u597d\u5904\uff1f \u6309\u7167\u6b65\u9aa4\uff0c\u9610\u8ff0SV39\u6807\u51c6\u4e0b\uff0c\u7ed9\u5b9a\u4e00\u4e2a64\u4f4d\u865a\u62df\u5730\u5740\u4e3a0x123456789ABCDEF\u7684\u65f6\u5019\uff0c\u662f\u5982\u4f55\u4e00\u6b65\u4e00\u6b65\u5f97\u5230\u6700\u7ec8\u7684\u7269\u7406\u5730\u5740\u7684\uff1f\uff08\u9875\u8868\u5185\u5bb9\u53ef\u4ee5\u81ea\u884c\u5047\u8bbe\uff09 \u6211\u4eec\u6ce8\u610f\u5230\uff0c\u865a\u62df\u5730\u5740\u7684L2, L1, L0 \u5747\u4e3a9\u4f4d\u3002\u8fd9\u5b9e\u9645\u4e0a\u662f\u8bbe\u8ba1\u4e2d\u7684\u5fc5\u7136\u7ed3\u679c\uff0c\u5b83\u4eec\u53ea\u80fd\u662f9\u4f4d\uff0c\u4e0d\u80fd\u662f10\u4f4d\u6216\u8005\u662f8\u4f4d\uff0c\u4f60\u80fd\u8bf4\u51fa\u5176\u4e2d\u7684\u7406\u7531\u5417\uff1f\uff08\u63d0\u793a\uff1a\u4e00\u4e2a\u9875\u76ee\u5f55\u7684\u5927\u5c0f\u5fc5\u987b\u4e0e\u9875\u7684\u5927\u5c0f\u7b49\u5927\uff09 \u5728\u201c\u5b9e\u9a8c\u539f\u7406\u201d\u90e8\u5206\uff0c\u6211\u4eec\u77e5\u9053SV39\u4e2d\u768439\u662f\u4ec0\u4e48\u610f\u601d\u3002\u4f46\u662f\u5176\u5b9e\u8fd8\u6709\u4e00\u79cd\u6807\u51c6\uff0c\u53eb\u505aSV48\uff0c\u91c7\u7528\u4e86\u56db\u7ea7\u9875\u8868\u800c\u975e\u4e09\u7ea7\u9875\u8868\uff0c\u4f60\u80fd\u6a21\u4eff\u201c\u5b9e\u9a8c\u539f\u7406\u201d\u90e8\u5206\u793a\u610f\u56fe\uff0c\u753b\u51faSV48\u9875\u8868\u7684\u6570\u636e\u7ed3\u6784\u548c\u7ffb\u8bd1\u7684\u6a21\u5f0f\u56fe\u793a\u5417\uff1f\uff08SV39\u539f\u56fe\u5982\u4e0b\uff09 1. \u4efb\u52a1\u4e00 \uff1a\u6253\u5370\u9875\u8868 \u00b6 \u672c\u4efb\u52a1\u4e2d\uff0c\u4f60\u9700\u8981\u52a0\u5165 \u9875\u8868\u6253\u5370\u529f\u80fd \uff0c\u6765\u5e2e\u52a9\u4f60\u5728\u4e4b\u540e\u7684\u5b9e\u9a8c\u4e2d\u8fdb\u884cdebug\u3002 void vmprint(pagetable_t pgtbl) 1.1 \u6d41\u7a0b \u00b6 Step 1 \uff1a\u66f4\u65b0\u672c\u5730\u4ee3\u7801\uff0c\u5207\u6362\u5230pgtbl\u5206\u652f\u3002 Step 2 \uff1a\u7406\u89e3\u9875\u8868\u7684\u539f\u7406\u3002 Step 3 \uff1a\u5b9e\u73b0 vmprint() \uff0c\u5e76\u5728 exec() \u51fd\u6570\u4e2d\u63d2\u5165\u8bed\u53e5 if(p->pid==1) vmprint(p->pagetable) \uff0c \u8fd9\u6761\u8bed\u53e5\u63d2\u5728 exec.c \u4e2d return argc \u4ee3\u7801\u4e4b\u524d\uff0c\u5373\u5728\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u542f\u52a8\u65f6\u6253\u5370\u9875\u8868\u4fe1\u606f\u3002 \u62d3\u5c55\u9605\u8bfb\uff1axv6\u7b2c\u4e00\u4e2a\u8fdb\u7a0b \u6211\u4eec\u4ecexv6\u7684\u542f\u52a8\u6765\u5206\u6790\uff1a \u4e0a\u7535\u540e\uff0c\u5148\u8fd0\u884cROM\u7684bootloader\uff0cbootloader\u518d\u52a0\u8f7dxv6\u5185\u6838\u5230\u5185\u5b580x80000000\u5904\uff0c\u7136\u540e\u4ecexv6\u5185\u6838\u7684 _entry \u5f00\u59cb\u3002\u90a3\u4e3a\u4ec0\u4e48\u4e0d\u52a0\u8f7d\u52300x0\u5730\u5740\u5462\uff1f\u539f\u56e0\u662f0x0~0x80000000\u4e4b\u95f4\u5305\u542b\u4e86I/O\u8bbe\u5907\uff0c\u8be6\u89c1\u300aXV6 book\u300bFigure3.3\u3002 _entry \u7528\u4e8e\u8bbe\u7f6eC\u4ee3\u7801\u7684\u8fd0\u884c\u6307\u5b9a\u6808\uff0c\u5b8c\u6210\u540e\u5c31\u8df3\u8f6c\u5230 start \u51fd\u6570\u6267\u884cC\u4ee3\u7801\u3002 start \u51fd\u6570\u5904\u4e8e\u673a\u5668\u6a21\u5f0f\u4e0b\uff0c\u521d\u59cb\u5316\u8ba1\u65f6\u5668\u4e2d\u65ad\uff0c\u4e3a\u5207\u6362\u5230\u7ba1\u7406\u6a21\u5f0f\u505a\u597d\u51c6\u5907\uff0c\u7136\u540e\u5230 main \u51fd\u6570\u5f00\u59cb\u6267\u884c\u3002 main \u51fd\u6570\u521d\u59cb\u5316\u4e00\u4e9b\u8bbe\u5907\u548c\u5b50\u7cfb\u7edf\uff0c\u8c03\u7528 userinit \u6765\u521b\u5efa\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u3002 \u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u6267\u884c\u4e86\u4e00\u4e2a\u5c0f\u7a0b\u5e8f user/initcode.S \uff0c\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528 exec \u6267\u884c\u4e00\u4e2a\u65b0\u7684\u7a0b\u5e8f user/init \u3002 user/init \u521b\u5efa\u4e86\u4e00\u4e2a\u63a7\u5236\u53f0\u8bbe\u5907\u6587\u4ef6\uff0c\u5e76\u4f5c\u4e3a\u6587\u4ef6\u63cf\u8ff0\u7b260\uff0c1\uff0c2\u6765\u6253\u5f00\u5b83\u3002\u4e4b\u540e\u5728for(;;)\u65e0\u9650\u5faa\u73af\u4e2d\u542f\u52a8shell\uff0c\u5e76\u5904\u7406\u50f5\u5c38\u8fdb\u7a0b\u3002\u8fd9\u6837\uff0c\u7cfb\u7edf\u5c31\u542f\u52a8\u4e86\u3002 Step 4 \uff1a\u542f\u52a8\u6d4b\u8bd5\u7a0b\u5e8f\u8fdb\u884c\u6d4b\u8bd5\u3002 1.2 \u5b9e\u73b0 \u00b6 \u628a vmprint() \u653e\u5728 kernel/vm.c \u3002 \u53ef\u4ee5\u4f7f\u7528 kernel/riscv.h \u4e2d\u5c3e\u90e8\u7684\u5b8f\u5b9a\u4e49 \uff0c\u6bd4\u5982\uff1a 323 # define PGSIZE 4096 // bytes per page 324 # define PGSHIFT 12 // bits of offset within a page 329 # define PTE_V ( 1L << 0 ) // valid 330 # define PTE_R ( 1L << 1 ) 331 # define PTE_W ( 1L << 2 ) 332 # define PTE_X ( 1L << 3 ) 333 # define PTE_U ( 1L << 4 ) // 1 -> user can access 334 335 // shift a physical address to the right place for a PTE. 336 # define PA2PTE ( pa ) (((( uint64 ) pa ) >> 12 ) << 10 ) 337 338 # define PTE2PA ( pte ) ((( pte ) >> 10 ) << 12 ) kernel/vm.c \u4e2d\u7684\u51fd\u6570 freewalk() \u80fd\u5e2e\u52a9\u4f60\u7406\u89e3\u904d\u5386\u9875\u8868\u7684\u8fc7\u7a0b\u3002 // Recursively free page-table pages. // All leaf mappings must already have been removed. 275 void 276 freewalk ( pagetable_t pagetable ) 277 { 278 // there are 2^9 = 512 PTEs in a page table. // \u904d\u5386\u4e00\u4e2a\u9875\u8868\u9875\u7684PTE\u8868\u9879 279 for ( int i = 0 ; i < 512 ; i ++ ){ 280 pte_t pte = pagetable [ i ]; //\u83b7\u53d6\u7b2ci\u6761PTE /*\u5224\u65adPTE\u7684Flag\u4f4d\uff0c\u5982\u679c\u8fd8\u6709\u4e0b\u4e00\u7ea7\u9875\u8868(\u5373\u5f53\u524d\u662f\u6839\u9875\u8868\u6216\u6b21\u9875\u8868)\uff0c \u5219\u9012\u5f52\u8c03\u7528freewalk\u91ca\u653e\u9875\u8868\u9879\uff0c\u5e76\u5c06\u5bf9\u5e94\u7684PTE\u6e05\u96f6*/ 281 if (( pte & PTE_V ) && ( pte & ( PTE_R | PTE_W | PTE_X )) == 0 ){ 282 // this PTE points to a lower-level page table. 283 uint64 child = PTE2PA ( pte ); // \u5c06PTE\u8f6c\u4e3a\u4e3a\u7269\u7406\u5730\u5740 284 freewalk (( pagetable_t ) child ); // \u9012\u5f52\u8c03\u7528freewalk 285 pagetable [ i ] = 0 ; // \u6e05\u96f6 286 } else if ( pte & PTE_V ){ /*\u5982\u679c\u53f6\u5b50\u9875\u8868\u7684\u865a\u62df\u5730\u5740\u8fd8\u6709\u6620\u5c04\u5230\u7269\u7406\u5730\u5740\uff0c\u62a5\u9519panic\u3002 \u56e0\u4e3a\u8c03\u7528freewalk\u4e4b\u524d\u5e94\u8be5\u4f1a\u5148uvmunmap\u91ca\u653e\u7269\u7406\u5185\u5b58*/ 287 panic ( \"freewalk: leaf\" ); 288 } 289 } 290 kfree (( void * ) pagetable ); // \u91ca\u653epagetable\u6307\u5411\u7684\u7269\u7406\u9875 291 } \u5728 kernel/defs.h \u4e2d\u5b9a\u4e49 vmprint() \u7684\u63a5\u53e3\uff0c\u8fd9\u6837\u4f60\u624d\u80fd\u5728 exec() \u4e2d\u4f7f\u7528\u5b83\u3002 \u4f7f\u7528 printf() \u6253\u5370\u9875\u8868\u6570\u636e\u4e2d\u7684\u6307\u9488\u65f6\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 %p \u6807\u793a\u3002 2 \u4efb\u52a1\u4e8c \u72ec\u7acb\u5185\u6838\u9875\u8868 \u00b6 \u6211\u4eec\u9700\u8981 \u5c06\u5171\u4eab\u5185\u6838\u9875\u8868\u6539\u6210\u72ec\u7acb\u5185\u6838\u9875\u8868 \uff0c\u4f7f\u5f97\u6bcf\u4e2a\u8fdb\u7a0b\u62e5\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5185\u6838\u9875\u8868\u3002 2.1 \u6d41\u7a0b \u00b6 Step 1 \uff1a\u4fee\u6539 kernel/proc.h \u4e2d\u7684 struct proc \uff0c \u589e\u52a0\u4e24\u4e2a\u65b0\u6210\u5458\uff1a pagetable_t k_pagetable; \u548c uint64 kstack_pa; \uff0c\u5206\u522b\u7528\u4e8e\u7ed9\u6bcf\u4e2a\u8fdb\u7a0b\u4e2d\u8bbe\u7f6e\u4e00\u4e2a\u5185\u6838\u72ec\u7acb\u9875\u8868\u548c\u5185\u6838\u6808\u7684\u7269\u7406\u5730\u5740\u3002 Step 2 \uff1a\u4eff\u7167 kvminit() \u51fd\u6570\u91cd\u65b0\u5199\u4e00\u4e2a\u521b\u5efa\u5185\u6838\u9875\u8868\u7684\u51fd\u6570\u3002 \u4e3a\u8fdb\u7a0b\u5206\u914d\u5185\u6838\u9875\u8868\u7684\u4e00\u79cd\u89e3\u51b3\u65b9\u6848 \uff1a\u4e0d\u8981\u4fee\u6539\u5168\u5c40\u7684\u5185\u6838\u9875\u8868\uff08kernel/vm.c\u4e2d\u7684 pagetable_t kernel_pagetable \uff09\uff0c\u800c\u662f\u76f4\u63a5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5185\u6838\u9875\u8868\uff0c\u5e76\u5c06\u5176\u5730\u5740 k_pagetable \u8fd4\u56de\u3002\u5b9e\u73b0\u7684\u65f6\u5019\u4e0d\u8981\u6620\u5c04CLINT\uff0c\u5426\u5219\u4f1a\u5728\u4efb\u52a1\u4e09\u53d1\u751f\u5730\u5740\u91cd\u5408\u95ee\u9898\u3002\u5e94\u8be5\u8981\u5728Step 4 allocproc() \u4e2d\u8c03\u7528\u5b83\u3002 Step 3 \uff1a\u4fee\u6539procinit\u51fd\u6570\u3002procinit()\u662f\u5728\u7cfb\u7edf\u5f15\u5bfc\u65f6\uff08\u89c1 kernel/main.c \u7684main\u51fd\u6570\uff09\uff0c\u7528\u4e8e\u7ed9\u8fdb\u7a0b\u5206\u914d\u5185\u6838\u6808\u7684\u7269\u7406\u9875\u5e76\u5728\u9875\u8868\u5efa\u7acb\u6620\u5c04\u3002 \u53c2\u8003\u4f18\u5316\u65b9\u6cd5 \uff1a\u628aprocinit()\u4e2d\u5185\u6838\u6808\u7684\u7269\u7406\u5730\u5740pa\u62f7\u8d1d\u5230PCB\u65b0\u589e\u7684\u6210\u5458 kstack_pa \u4e2d\uff0c\u540c\u65f6\u8fd8\u9700\u8981\u4fdd\u7559\u5185\u6838\u6808\u5728\u5168\u5c40\u9875\u8868kernel_pagetable\u7684\u6620\u5c04\uff0c\u7136\u540e\u5728Step 4 allocproc() \u4e2d\u518d\u628a\u5b83\u6620\u5c04\u5230\u8fdb\u7a0b\u7684\u5185\u6838\u9875\u8868\u91cc\u3002\u5173\u4e8e\u5185\u6838\u6808\u8bf4\u660e\uff0c\u89c1 \u5b9e\u9a8c\u539f\u7406 3.4 . \u4e3a\u4ec0\u4e48\u8981\u4fdd\u7559\u521d\u59cb\u5185\u6838\u9875\u8868\uff1f \u4fdd\u7559\u539f\u6709\u7684kvminit()\u4ee5\u53cakernel/vm.c\u4e2dkernel_pagetable\uff0c\u56e0\u4e3a\u6709\u4e9b\u65f6\u5019CPU\u53ef\u80fd\u5e76\u672a\u6267\u884c\u7528\u6237\u8fdb\u7a0b\u3002 Step 4 \uff1a\u4fee\u6539allocproc\u51fd\u6570\u3002allocproc()\u4f1a\u5728\u7cfb\u7edf\u542f\u52a8\u65f6\u88ab\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u548cfork\u8c03\u7528\u3002\u5728allocproc\u51fd\u6570\u91cc\u8c03\u7528Step 2 \u521b\u5efa\u7684\u51fd\u6570\u8bbe\u7f6e\u5185\u6838\u9875\u8868\uff0c\u5e76\u4e14\u8c03\u7528kvmmap\u51fd\u6570\u5c06Step 3 \u8bbe\u7f6e\u7684\u5185\u6838\u6808\u6620\u5c04\u5230\u9875\u8868 k_pagetable \u91cc\u3002 allocproc\u51fd\u6570\u529f\u80fd\u8bf4\u660e \u5728\u8fdb\u7a0b\u8868\u4e2d\u67e5\u627e\u7a7a\u95f2PCB\uff0c\u5982\u679c\u627e\u5230\uff0c\u521d\u59cb\u5316\u5728\u5185\u6838\u4e2d\u8fd0\u884c\u6240\u9700\u7684\u72b6\u6001\uff0c\u5e76\u4fdd\u6301p->lock\u8fd4\u56de\u3002\u5982\u679c\u6ca1\u6709\u7a7a\u95f2PCB\uff0c\u6216\u8005\u5185\u5b58\u5206\u914d\u5931\u8d25\uff0c\u5219\u8fd4\u56de0\u3002 \u5173\u4e8e\u5185\u6838\u6808\u6620\u5c04 \u6ce8\u610f\uff0c\u8981\u4fdd\u8bc1\u5728\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5185\u6838\u9875\u8868\u4e2d\u6620\u5c04\u8be5\u8fdb\u7a0b\u7684\u5185\u6838\u6808\u3002xv6\u672c\u4f1a\u5728 procinit() \u4e2d\u5206\u914d\u5185\u6838\u6808\u7684\u7269\u7406\u9875\u5e76\u5728\u9875\u8868\u5efa\u7acb\u6620\u5c04\u3002\u4f46\u662f\u73b0\u5728\uff0c\u5e94\u8be5\u5728allocproc()\u4e2d\u5b9e\u73b0\u8be5\u529f\u80fd\uff0c\u56e0\u4e3a\u6267\u884cprocinit()\u7684\u65f6\u5019\u8fdb\u7a0b\u7684\u5185\u6838\u9875\u8868\u8fd8\u672a\u88ab\u521b\u5efa\u3002\u4f60\u53ef\u4ee5\u5728procinit()\u4e2d\u53ea\u4fdd\u7559\u5185\u5b58\u7684\u5206\u914d\uff0c\u4f46\u5728allocproc()\u4e2d\u5b8c\u6210\u6620\u5c04\u3002 Step 5 \uff1a\u4fee\u6539\u8c03\u5ea6\u5668\uff08scheduler\uff09\uff0c\u4f7f\u5f97\u5207\u6362\u8fdb\u7a0b\u7684\u65f6\u5019\u5207\u6362\u5185\u6838\u9875\u8868\u3002 \u53c2\u8003\u65b9\u6cd5 \uff1a\u5728\u8fdb\u7a0b\u5207\u6362\u7684\u540c\u65f6\u4e5f\u8981\u5207\u6362\u9875\u8868\u5c06\u5176\u653e\u5165\u5bc4\u5b58\u5668 satp \u4e2d\uff0c\u8bf7\u501f\u9274 kvminithart()\u7684\u9875\u8868\u8f7d\u5165\u65b9\u5f0f\uff09\uff0c\u5728\u8c03\u7528 w_satp() \u4e4b\u540e\u8c03\u7528 sfence_vma()\uff0c\u5177\u4f53\u539f\u7406\u53ef\u67e5\u9605\u5b9e\u9a8c\u539f\u7406\u7684 3.3 \u5185\u6838\u5bf9\u7528\u6237\u7a7a\u95f4\u7684\u8bbf\u95ee \u3002 \u65e0\u8fdb\u7a0b\u8fd0\u884c\u7684\u9002\u914d \uff1a\u5f53\u76ee\u524d\u6ca1\u6709\u8fdb\u7a0b\u8fd0\u884c\u7684\u65f6\u5019\uff0cscheduler() \u5e94\u8be5\u8981satp\u8f7d\u5165\u5168\u5c40\u7684\u5185\u6838\u9875\u8868kernel_pagetable (kernel/vm.c)\u3002 \u5173\u4e8escheduler\u8c03\u5ea6\u5668\uff0c\u53ef\u4ee5\u53c2\u8003 HITSZ\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u7a0b\u7ec4\u8bb2\u89e3XV6\uff08\u4e09\uff09\u5185\u5b58\u7ba1\u7406 Step 6 \uff1a\u5f53\u8fdb\u7a0b\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u4f60\u9700\u8981\u4fee\u6539freeproc()\u51fd\u6570\u6765\u91ca\u653e\u5bf9\u5e94\u7684\u5185\u6838\u9875\u8868\u3002\u4f60\u9700\u8981\u627e\u5230 \u91ca\u653e\u9875\u8868\u4f46\u4e0d\u91ca\u653e\u53f6\u5b50\u9875\u8868\u6307\u5411\u7684\u7269\u7406\u9875\u5e27 \u7684\u65b9\u6cd5\u3002\u4f60\u53ef\u53c2\u8003kernel/vm.c\u4e2d\u7684freewalk\uff0c\u5176\u7528\u4e8e\u91ca\u653e\u6574\u4e2a\u9875\u8868\uff0c\u4f46\u8981\u6c42\u53f6\u5b50\u9875\u8868\u7684\u9875\u9879\u5df2\u7ecf\u88ab\u6e05\u7a7a\u3002 \u867d\u7136\u6211\u4eec\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u5f15\u5165\u4e86\u5185\u6838\u9875\u8868\uff0c\u4f46\u662f\u5185\u6838\u7684\u4ee3\u7801\u548c\u6570\u636e\u90fd\u8fd8\u662f\u552f\u4e00\u7684\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5728\u5404\u4e2a\u5185\u6838\u9875\u8868\u7684\u53f6\u5b50\u9875\u8868\u4e2d\uff0c\u9875\u8868\u9879\u6307\u5411\u4e86\u5171\u4eab\u7684\u7269\u7406\u9875\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u56e0\u6b64\uff0c\u5728\u6211\u4eec\u91ca\u653e\u67d0\u4e2a\u8fdb\u7a0b\u7684\u5185\u6838\u9875\u8868\u7684\u65f6\u5019\uff0c\u4e0d\u5e94\u8be5\u628a\u8fd9\u4e2a\u5171\u4eab\u7269\u7406\u9875\u5e27\u91ca\u653e\uff0c\u5426\u5219\u4f1a\u4ea7\u751f\u975e\u5e38\u4e25\u91cd\u7684\u540e\u679c\uff01 Step 7 \uff1a\u901a\u8fc7 usertests \u548c kvmtest \u6d4b\u8bd5\u3002 2.2 \u5b9e\u73b0 \u00b6 \u8fd9\u91cc\u6709\u5fc5\u8981\u63d0\u9192\u4e00\u4e0b\u540c\u5b66\uff0c\u8981\u4ee5\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u4ee5\u53ca\u5de5\u7a0b\u91cf\u6700\u5c0f\u7684\u65b9\u6cd5\u5b9e\u73b0\uff0c\u6700\u597d\u4e0d\u8981\u56e0\u4e3a\u4f18\u5316\u7b49\u95ee\u9898\uff0c\u5927\u6539\u5185\u6838\u673a\u5236\u3002 \u597d\u597d\u5229\u7528 vmprint() \u6765\u5e2e\u52a9debug\u3002 \u9875\u8868\u7684bug\u901a\u5e38\u4f1a\u5bfc\u81f4\u6620\u5c04\u7f3a\u5931\u7684traps\uff0c\u8bbf\u5b58\u5931\u8d25\uff0c\u6307\u4ee4\u8fd0\u884c\u9519\u8bef\u7b49\u62a5\u9519\u3002\u5982\u679c \u5185\u6838 \u7f3a\u5931\u4e86\u5730\u5740\u6620\u5c04\u9020\u6210\u4e86\u9875\u7f3a\u5931\uff08page fault\uff09\uff0c\u901a\u5e38\u4f1a\u6253\u5370\u4e2a sepc=0x00000000XXXXXXXX \uff0c\u8fd9\u4ee3\u8868\u7684\u662f\u51fa\u9519\u65f6pc\u7684\u503c\uff0c\u4f60\u53ef\u4ee5\u67e5 kernel/kernel.asm \u770b\u770b \u5bf9\u5e94\u5730\u5740 \u7684\u4ee3\u7801\u7684\u542b\u4e49\u3002 \u4f60\u7684\u5b9e\u73b0\u53ef\u4ee5\u4fee\u6539\u539f\u6709\u7684\u51fd\u6570\u6216\u8005\u662f\u65b0\u589e\u51fd\u6570\uff0c\u6700\u597d\u653e\u5728 kernel/vm.c +kernel/proc.c \u4e2d\uff0c\u4f46\u662f \u5343\u4e07\u4e0d\u8981\u4fee\u6539 kernel/vmcopyin.c +kernel/stats.c + user/usertests.c + user/stats.c \u3002 3 \u4efb\u52a1\u4e09 \u7b80\u5316\u8f6f\u4ef6\u6a21\u62df\u5730\u5740\u7ffb\u8bd1 \u00b6 \u5177\u4f53\u8981\u6c42 \u6211\u4eec\u9700\u8981 \u5728\u72ec\u7acb\u5185\u6838\u9875\u8868\u52a0\u4e0a\u7528\u6237\u9875\u8868\u7684\u6620\u5c04\uff0c\u540c\u65f6\u66ff\u6362 copyin()/copyinstr() \u4e3a copyin_new()/copyinstr_new() \uff0c\u4f7f\u5f97\u5185\u6838\u80fd\u591f\u4e0d\u5fc5\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\uff0c\u7528\u8f6f\u4ef6\u6a21\u62df\u7684\u65b9\u6cd5\u4e00\u6b65\u4e00\u6b65\u904d\u5386\u9875\u8868\uff0c\u800c\u662f\u76f4\u63a5\u5229\u7528\u786c\u4ef6\u3002 3.1 \u6d41\u7a0b \u00b6 Step 1 \uff1a\u5199\u4e00\u4e2a XXX \u51fd\u6570\u628a\u8fdb\u7a0b\u7684\u7528\u6237\u9875\u8868\u6620\u5c04\u5230\u5185\u6838\u9875\u8868\u4e2d\uff0c\u540c\u65f6\u5728defs.h\u4e2d\u58f0\u660e\u3002 \u63a8\u8350\u4e00\u79cd\u8f83\u4e3a\u4f18\u96c5\u7684\u5b9e\u73b0\u65b9\u6cd5 \uff1a\u5185\u6838\u9875\u8868\u76f4\u63a5\u5171\u4eab\u7528\u6237\u9875\u8868\u7684\u53f6\u5b50\u9875\u8868\uff0c\u5373\u5185\u6838\u9875\u8868\u4e2d\u6b21\u9875\u8868\u7684\u90e8\u5206\u76ee\u5f55\u9879\u76f4\u63a5\u6307\u5411\u7528\u6237\u9875\u8868\u7684\u53f6\u5b50\u9875\u8868\u3002\u8fd9\u6837\u53ef\u4ee5\u4e0d\u5fc5\u5c06\u7528\u6237\u9875\u8868\u7684\u9875\u8868\u9879\u5168\u90e8\u590d\u5236\u8fdb\u5185\u6838\u9875\u8868\uff0c\u4e5f\u4e0d\u5fc5\u4fee\u6539\u9875\u8868\u9879\u6807\u5fd7\u4f4d\uff0c\u7b80\u5316\u5b9e\u73b0\u7684\u540c\u65f6\u4e5f\u53ef\u4ee5\u63d0\u5347\u6027\u80fd\uff0c\u4f46\u5728\u9875\u8868\u56de\u6536\u7684\u65f6\u5019\u9700\u8981\u907f\u514d\u91cd\u590d\u56de\u6536\u3002 \u63d0\u793a\uff1a\u524d\u9762\u5df2\u7ecf\u63d0\u5230\u7528\u6237\u5730\u5740\u7a7a\u95f4\u7684\u8303\u56f4\u4e3a0x0-0xC000000\uff0c\u89c1\u201c \u5b9e\u9a8c\u539f\u7406 3.5 \u201d\u3002\u8bd5\u8ba1\u7b97\uff0c\u591a\u5c11\u4e2a\u6b21\u7ea7\u9875\u8868\u9879\u5c31\u80fd\u6db5\u76d6\u6574\u4e2a\u7528\u6237\u5730\u5740\u7a7a\u95f4\uff1f Step 2 \uff1a\u7528\u51fd\u6570 copyin_new() \uff08\u5728 kernel/vmcopyin.c \u4e2d\u5b9a\u4e49\uff09\u4ee3\u66ff copyin() \uff08\u5728 kernel/vm.c \u4e2d\u5b9a\u4e49\uff09\u3002\u786e\u4fdd\u7a0b\u5e8f \u80fd\u8fd0\u884c \u4e4b\u540e\u518d\u7528 copyinstr_new() \u4ee5\u4ee3\u66ff copyinstr() \u3002 Step 3 \uff1a\u5728\u72ec\u7acb\u5185\u6838\u9875\u8868\u52a0\u4e0a\u7528\u6237\u9875\u8868\u7684\u6620\u5c04\uff0c\u4ee5\u4fdd\u8bc1\u521a\u521a\u66ff\u6362\u5730\u65b0\u51fd\u6570\u80fd\u591f\u4f7f\u7528\u3002\u6ce8\u610f\u72ec\u7acb\u5185\u6838\u9875\u8868\u7684\u7528\u6237\u9875\u8868\u7684\u6620\u5c04\u7684\u6807\u5fd7\u4f4d\u7684\u9009\u62e9\u3002\u6807\u5fd7\u4f4dUser\u4e00\u65e6\u88ab\u8bbe\u7f6e\uff0c\u5185\u6838\u5c31\u4e0d\u80fd\u8bbf\u95ee\u8be5\u865a\u62df\u5730\u5740\u4e86\u3002 \u63a8\u8350\u65b9\u6848 \uff1a\u5728\u8c03\u7528copyin_new()/ copyinstr_new()\u4e4b\u524d\u4fee\u6539sstatus\u5bc4\u5b58\u5668\u7684SUM\u4f4d\uff1a w_sstatus(r_sstatus() | SSTATUS_SUM); \u5728\u51cb\u7528copyin_new()/ copyinstr_new()\u4e4b\u540e\u53bb\u6389sstatus\u5bc4\u5b58\u5668\u7684SUM\u4f4d\uff1a w_sstatus(r_sstatus() & ~SSTATUS_SUM); Step 4 \uff1a\u5728\u72ec\u7acb\u5185\u6838\u9875\u8868\u52a0\u4e0a\u7528\u6237\u9875\u8868\u7684\u6620\u5c04\u7684\u65f6\u5019\uff0c\u6bcf\u4e00\u6b21\u7528\u6237\u9875\u8868\u88ab\u4fee\u6539\u4e86\u6620\u5c04\u7684\u540c\u65f6\uff0c\u90fd\u8981\u4fee\u6539\u5bf9\u5e94\u72ec\u7acb\u5185\u6838\u9875\u8868\u7684\u76f8\u5e94\u90e8\u5206\u4fdd\u6301\u540c\u6b65\u3002\u8fd9\u901a\u5e38\u5728 fork(), exec(), sbrk()\u4e2d\u53d1\u751f\uff0c\u5176\u4e2dsbrk()\u8c03\u7528growproc()\u6765\u5b9e\u73b0\u5185\u5b58\u5206\u914d\u6216\u56de\u6536\u3002\u4e5f\u5c31\u662f\uff0c\u9700\u8981\u5728fork()\u3001exec()\u548cgrowproc()\u8fd9\u4e09\u4e2a\u51fd\u6570\u91cc\u5c06\u6539\u53d8\u540e\u7684\u8fdb\u7a0b\u9875\u8868\u540c\u6b65\u5230\u5185\u6838\u9875\u8868\u4e2d\u3002 Step 5 \uff1a\u6ce8\u610f\uff1a\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u4e5f\u9700\u8981\u5c06\u7528\u6237\u9875\u8868\u6620\u5c04\u5230\u5185\u6838\u9875\u8868\u4e2d\uff0c\u89c1kernel/proc.c: userinit()\u3002 Step 6 \uff1a\u901a\u8fc7 usertests, make grade\u3002 3.2 \u5b9e\u73b0 \u00b6 \u6ce8\u610f\u72ec\u7acb\u5185\u6838\u9875\u8868\u7684\u7528\u6237\u9875\u8868\u7684\u6620\u5c04\u7684 \u6807\u5fd7\u4f4d \u7684\u9009\u62e9\u3002\uff08\u6807\u5fd7\u4f4dUser\u4e00\u65e6\u88ab\u8bbe\u7f6e\uff0c\u5185\u6838\u5c31\u4e0d\u80fd\u8bbf\u95ee\u8be5\u865a\u62df\u5730\u5740\u4e86\uff09 \u518d\u6b21\u63d0\u9192\u5730\u5740\u91cd\u5408\u95ee\u9898\uff0c\u89c1\u201c \u5b9e\u9a8c\u539f\u7406 3.5 \u201d.","title":"\u5b9e\u9a8c\u5b9e\u73b0"},{"location":"lab4/part3/#_1","text":"\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5bf9\u4e00\u4e9b\u5b9e\u73b0\u7684\u7ec6\u8282\u505a\u4e00\u5b9a\u7684\u63d0\u9192\u3002\u4f46\u662f\u5b8c\u6574\u7684\u6d41\u7a0b\u9700\u8981\u81ea\u5df1\u628a\u63e1\uff0c\u6211\u4eec \u4e0d\u4f1a\u7ed9\u51fa\u6bcf\u4e00\u6b65\u5b9e\u73b0\u6b65\u9aa4 \u3002\u56e0\u6b64\uff0c\u6700\u91cd\u8981\u7684\u8fd8\u662f\u9605\u8bfb \u201c \u5b9e\u9a8c\u539f\u7406 \u201d \u5185\u5bb9\uff0c\u5f97\u51fa\u81ea\u5df1\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u7136\u540e\u53c2\u8003 \u201d\u5b9e\u9a8c\u5b9e\u73b0\u201c \u8fd9\u90e8\u5206\u7684\u5185\u5bb9\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cxv6\u7684\u4ee3\u7801\u662f\u53ef\u4ee5\u53c2\u8003\u7684\uff0c\u53ef\u4ee5\u770b\u770b\u76f8\u5173\u5b9e\u9a8c\u539f\u7406\u662f\u600e\u4e48\u5b9e\u73b0\u7684\u3002\u540c\u65f6\uff0c\u8fd8\u53ef\u4ee5\u63d2\u6869\uff0c\u4f7f\u7528printf\u7b49\u65b9\u6cd5\u770b\u770b\u5177\u4f53\u7684\u5185\u5bb9\u3002\u540c\u65f6\uff0c\u8fd8\u53ef\u4ee5\u9605\u8bfb xv6 \u6307\u5bfc\u4e66\uff0c\u770b\u770b\u80cc\u540e\u7684\u8bbe\u8ba1\u673a\u7406\u3002 \u6e29\u99a8\u63d0\u793a \u672c\u6b21\u5b9e\u9a8c\u7684\u540e\u4e24\u4e2a\u4efb\u52a1\u975e\u5e38\u786c\u6838\uff0c\u4f46\u771f\u6b63\u51f8\u663e\u4e86\u64cd\u4f5c\u7cfb\u7edf\u7684\u9b45\u529b\u3002\u867d\u7136\u6700\u540e\u4e00\u4e2a\u4efb\u52a1\u7684\u5206\u503c\u4e0d\u591a\uff0c\u6211\u4eec\u4f9d\u7136\u5efa\u8bae\u4f60\u52aa\u529b\u5c1d\u8bd5\uff0c\u5982\u679c\u80fd\u575a\u6301\u505a\u5b8c\uff0c\u5c31\u4e00\u5b9a\u4f1a\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u7684\u5185\u5b58\u7ba1\u7406\u6709\u66f4\u9ad8\u5c42\u6b21\u7684\u8ba4\u77e5\u3002 \u672c\u6b21\u5b9e\u9a8c \u4f60\u53ef\u80fd\u4f1a\u7528\u5230\u5f88\u591akernel/vm.c\u4e2d\u7684\u51fd\u6570 \uff0c\u5b83\u4eec\u6709\u6bd4\u8f83\u5b8c\u5584\u7684\u6ce8\u91ca\uff0c\u8bf7\u4ed4\u7ec6\u9605\u8bfb\u7406\u89e3\u3002","title":"\u5b9e\u9a8c\u5b9e\u73b0"},{"location":"lab4/part3/#0","text":"\u56de\u7b54\u95ee\u9898 \u4efb\u52a1\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u5e94\u8be5\u5148\u8981\u9996\u5148\u56de\u7b54\u4e00\u4e9b\u539f\u7406\u6027\u7684\u95ee\u9898\uff0c\u8fd9\u90e8\u5206\u5e94\u8be5\u88ab\u5305\u542b\u5728\u5b9e\u9a8c\u62a5\u544a\u4e2d\uff1a \u67e5\u9605\u8d44\u6599\uff0c\u7b80\u8981\u9610\u8ff0\u9875\u8868\u673a\u5236\u4e3a\u4ec0\u4e48\u4f1a\u88ab\u53d1\u660e\uff0c\u5b83\u6709\u4ec0\u4e48\u597d\u5904\uff1f \u6309\u7167\u6b65\u9aa4\uff0c\u9610\u8ff0SV39\u6807\u51c6\u4e0b\uff0c\u7ed9\u5b9a\u4e00\u4e2a64\u4f4d\u865a\u62df\u5730\u5740\u4e3a0x123456789ABCDEF\u7684\u65f6\u5019\uff0c\u662f\u5982\u4f55\u4e00\u6b65\u4e00\u6b65\u5f97\u5230\u6700\u7ec8\u7684\u7269\u7406\u5730\u5740\u7684\uff1f\uff08\u9875\u8868\u5185\u5bb9\u53ef\u4ee5\u81ea\u884c\u5047\u8bbe\uff09 \u6211\u4eec\u6ce8\u610f\u5230\uff0c\u865a\u62df\u5730\u5740\u7684L2, L1, L0 \u5747\u4e3a9\u4f4d\u3002\u8fd9\u5b9e\u9645\u4e0a\u662f\u8bbe\u8ba1\u4e2d\u7684\u5fc5\u7136\u7ed3\u679c\uff0c\u5b83\u4eec\u53ea\u80fd\u662f9\u4f4d\uff0c\u4e0d\u80fd\u662f10\u4f4d\u6216\u8005\u662f8\u4f4d\uff0c\u4f60\u80fd\u8bf4\u51fa\u5176\u4e2d\u7684\u7406\u7531\u5417\uff1f\uff08\u63d0\u793a\uff1a\u4e00\u4e2a\u9875\u76ee\u5f55\u7684\u5927\u5c0f\u5fc5\u987b\u4e0e\u9875\u7684\u5927\u5c0f\u7b49\u5927\uff09 \u5728\u201c\u5b9e\u9a8c\u539f\u7406\u201d\u90e8\u5206\uff0c\u6211\u4eec\u77e5\u9053SV39\u4e2d\u768439\u662f\u4ec0\u4e48\u610f\u601d\u3002\u4f46\u662f\u5176\u5b9e\u8fd8\u6709\u4e00\u79cd\u6807\u51c6\uff0c\u53eb\u505aSV48\uff0c\u91c7\u7528\u4e86\u56db\u7ea7\u9875\u8868\u800c\u975e\u4e09\u7ea7\u9875\u8868\uff0c\u4f60\u80fd\u6a21\u4eff\u201c\u5b9e\u9a8c\u539f\u7406\u201d\u90e8\u5206\u793a\u610f\u56fe\uff0c\u753b\u51faSV48\u9875\u8868\u7684\u6570\u636e\u7ed3\u6784\u548c\u7ffb\u8bd1\u7684\u6a21\u5f0f\u56fe\u793a\u5417\uff1f\uff08SV39\u539f\u56fe\u5982\u4e0b\uff09","title":"0. \u4efb\u52a1\u96f6\uff1a\u56de\u7b54\u95ee\u9898"},{"location":"lab4/part3/#1","text":"\u672c\u4efb\u52a1\u4e2d\uff0c\u4f60\u9700\u8981\u52a0\u5165 \u9875\u8868\u6253\u5370\u529f\u80fd \uff0c\u6765\u5e2e\u52a9\u4f60\u5728\u4e4b\u540e\u7684\u5b9e\u9a8c\u4e2d\u8fdb\u884cdebug\u3002 void vmprint(pagetable_t pgtbl)","title":"1. \u4efb\u52a1\u4e00 \uff1a\u6253\u5370\u9875\u8868"},{"location":"lab4/part3/#11","text":"Step 1 \uff1a\u66f4\u65b0\u672c\u5730\u4ee3\u7801\uff0c\u5207\u6362\u5230pgtbl\u5206\u652f\u3002 Step 2 \uff1a\u7406\u89e3\u9875\u8868\u7684\u539f\u7406\u3002 Step 3 \uff1a\u5b9e\u73b0 vmprint() \uff0c\u5e76\u5728 exec() \u51fd\u6570\u4e2d\u63d2\u5165\u8bed\u53e5 if(p->pid==1) vmprint(p->pagetable) \uff0c \u8fd9\u6761\u8bed\u53e5\u63d2\u5728 exec.c \u4e2d return argc \u4ee3\u7801\u4e4b\u524d\uff0c\u5373\u5728\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u542f\u52a8\u65f6\u6253\u5370\u9875\u8868\u4fe1\u606f\u3002 \u62d3\u5c55\u9605\u8bfb\uff1axv6\u7b2c\u4e00\u4e2a\u8fdb\u7a0b \u6211\u4eec\u4ecexv6\u7684\u542f\u52a8\u6765\u5206\u6790\uff1a \u4e0a\u7535\u540e\uff0c\u5148\u8fd0\u884cROM\u7684bootloader\uff0cbootloader\u518d\u52a0\u8f7dxv6\u5185\u6838\u5230\u5185\u5b580x80000000\u5904\uff0c\u7136\u540e\u4ecexv6\u5185\u6838\u7684 _entry \u5f00\u59cb\u3002\u90a3\u4e3a\u4ec0\u4e48\u4e0d\u52a0\u8f7d\u52300x0\u5730\u5740\u5462\uff1f\u539f\u56e0\u662f0x0~0x80000000\u4e4b\u95f4\u5305\u542b\u4e86I/O\u8bbe\u5907\uff0c\u8be6\u89c1\u300aXV6 book\u300bFigure3.3\u3002 _entry \u7528\u4e8e\u8bbe\u7f6eC\u4ee3\u7801\u7684\u8fd0\u884c\u6307\u5b9a\u6808\uff0c\u5b8c\u6210\u540e\u5c31\u8df3\u8f6c\u5230 start \u51fd\u6570\u6267\u884cC\u4ee3\u7801\u3002 start \u51fd\u6570\u5904\u4e8e\u673a\u5668\u6a21\u5f0f\u4e0b\uff0c\u521d\u59cb\u5316\u8ba1\u65f6\u5668\u4e2d\u65ad\uff0c\u4e3a\u5207\u6362\u5230\u7ba1\u7406\u6a21\u5f0f\u505a\u597d\u51c6\u5907\uff0c\u7136\u540e\u5230 main \u51fd\u6570\u5f00\u59cb\u6267\u884c\u3002 main \u51fd\u6570\u521d\u59cb\u5316\u4e00\u4e9b\u8bbe\u5907\u548c\u5b50\u7cfb\u7edf\uff0c\u8c03\u7528 userinit \u6765\u521b\u5efa\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u3002 \u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u6267\u884c\u4e86\u4e00\u4e2a\u5c0f\u7a0b\u5e8f user/initcode.S \uff0c\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528 exec \u6267\u884c\u4e00\u4e2a\u65b0\u7684\u7a0b\u5e8f user/init \u3002 user/init \u521b\u5efa\u4e86\u4e00\u4e2a\u63a7\u5236\u53f0\u8bbe\u5907\u6587\u4ef6\uff0c\u5e76\u4f5c\u4e3a\u6587\u4ef6\u63cf\u8ff0\u7b260\uff0c1\uff0c2\u6765\u6253\u5f00\u5b83\u3002\u4e4b\u540e\u5728for(;;)\u65e0\u9650\u5faa\u73af\u4e2d\u542f\u52a8shell\uff0c\u5e76\u5904\u7406\u50f5\u5c38\u8fdb\u7a0b\u3002\u8fd9\u6837\uff0c\u7cfb\u7edf\u5c31\u542f\u52a8\u4e86\u3002 Step 4 \uff1a\u542f\u52a8\u6d4b\u8bd5\u7a0b\u5e8f\u8fdb\u884c\u6d4b\u8bd5\u3002","title":"1.1 \u6d41\u7a0b"},{"location":"lab4/part3/#12","text":"\u628a vmprint() \u653e\u5728 kernel/vm.c \u3002 \u53ef\u4ee5\u4f7f\u7528 kernel/riscv.h \u4e2d\u5c3e\u90e8\u7684\u5b8f\u5b9a\u4e49 \uff0c\u6bd4\u5982\uff1a 323 # define PGSIZE 4096 // bytes per page 324 # define PGSHIFT 12 // bits of offset within a page 329 # define PTE_V ( 1L << 0 ) // valid 330 # define PTE_R ( 1L << 1 ) 331 # define PTE_W ( 1L << 2 ) 332 # define PTE_X ( 1L << 3 ) 333 # define PTE_U ( 1L << 4 ) // 1 -> user can access 334 335 // shift a physical address to the right place for a PTE. 336 # define PA2PTE ( pa ) (((( uint64 ) pa ) >> 12 ) << 10 ) 337 338 # define PTE2PA ( pte ) ((( pte ) >> 10 ) << 12 ) kernel/vm.c \u4e2d\u7684\u51fd\u6570 freewalk() \u80fd\u5e2e\u52a9\u4f60\u7406\u89e3\u904d\u5386\u9875\u8868\u7684\u8fc7\u7a0b\u3002 // Recursively free page-table pages. // All leaf mappings must already have been removed. 275 void 276 freewalk ( pagetable_t pagetable ) 277 { 278 // there are 2^9 = 512 PTEs in a page table. // \u904d\u5386\u4e00\u4e2a\u9875\u8868\u9875\u7684PTE\u8868\u9879 279 for ( int i = 0 ; i < 512 ; i ++ ){ 280 pte_t pte = pagetable [ i ]; //\u83b7\u53d6\u7b2ci\u6761PTE /*\u5224\u65adPTE\u7684Flag\u4f4d\uff0c\u5982\u679c\u8fd8\u6709\u4e0b\u4e00\u7ea7\u9875\u8868(\u5373\u5f53\u524d\u662f\u6839\u9875\u8868\u6216\u6b21\u9875\u8868)\uff0c \u5219\u9012\u5f52\u8c03\u7528freewalk\u91ca\u653e\u9875\u8868\u9879\uff0c\u5e76\u5c06\u5bf9\u5e94\u7684PTE\u6e05\u96f6*/ 281 if (( pte & PTE_V ) && ( pte & ( PTE_R | PTE_W | PTE_X )) == 0 ){ 282 // this PTE points to a lower-level page table. 283 uint64 child = PTE2PA ( pte ); // \u5c06PTE\u8f6c\u4e3a\u4e3a\u7269\u7406\u5730\u5740 284 freewalk (( pagetable_t ) child ); // \u9012\u5f52\u8c03\u7528freewalk 285 pagetable [ i ] = 0 ; // \u6e05\u96f6 286 } else if ( pte & PTE_V ){ /*\u5982\u679c\u53f6\u5b50\u9875\u8868\u7684\u865a\u62df\u5730\u5740\u8fd8\u6709\u6620\u5c04\u5230\u7269\u7406\u5730\u5740\uff0c\u62a5\u9519panic\u3002 \u56e0\u4e3a\u8c03\u7528freewalk\u4e4b\u524d\u5e94\u8be5\u4f1a\u5148uvmunmap\u91ca\u653e\u7269\u7406\u5185\u5b58*/ 287 panic ( \"freewalk: leaf\" ); 288 } 289 } 290 kfree (( void * ) pagetable ); // \u91ca\u653epagetable\u6307\u5411\u7684\u7269\u7406\u9875 291 } \u5728 kernel/defs.h \u4e2d\u5b9a\u4e49 vmprint() \u7684\u63a5\u53e3\uff0c\u8fd9\u6837\u4f60\u624d\u80fd\u5728 exec() \u4e2d\u4f7f\u7528\u5b83\u3002 \u4f7f\u7528 printf() \u6253\u5370\u9875\u8868\u6570\u636e\u4e2d\u7684\u6307\u9488\u65f6\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 %p \u6807\u793a\u3002","title":"1.2 \u5b9e\u73b0"},{"location":"lab4/part3/#2","text":"\u6211\u4eec\u9700\u8981 \u5c06\u5171\u4eab\u5185\u6838\u9875\u8868\u6539\u6210\u72ec\u7acb\u5185\u6838\u9875\u8868 \uff0c\u4f7f\u5f97\u6bcf\u4e2a\u8fdb\u7a0b\u62e5\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5185\u6838\u9875\u8868\u3002","title":"2  \u4efb\u52a1\u4e8c \u72ec\u7acb\u5185\u6838\u9875\u8868"},{"location":"lab4/part3/#21","text":"Step 1 \uff1a\u4fee\u6539 kernel/proc.h \u4e2d\u7684 struct proc \uff0c \u589e\u52a0\u4e24\u4e2a\u65b0\u6210\u5458\uff1a pagetable_t k_pagetable; \u548c uint64 kstack_pa; \uff0c\u5206\u522b\u7528\u4e8e\u7ed9\u6bcf\u4e2a\u8fdb\u7a0b\u4e2d\u8bbe\u7f6e\u4e00\u4e2a\u5185\u6838\u72ec\u7acb\u9875\u8868\u548c\u5185\u6838\u6808\u7684\u7269\u7406\u5730\u5740\u3002 Step 2 \uff1a\u4eff\u7167 kvminit() \u51fd\u6570\u91cd\u65b0\u5199\u4e00\u4e2a\u521b\u5efa\u5185\u6838\u9875\u8868\u7684\u51fd\u6570\u3002 \u4e3a\u8fdb\u7a0b\u5206\u914d\u5185\u6838\u9875\u8868\u7684\u4e00\u79cd\u89e3\u51b3\u65b9\u6848 \uff1a\u4e0d\u8981\u4fee\u6539\u5168\u5c40\u7684\u5185\u6838\u9875\u8868\uff08kernel/vm.c\u4e2d\u7684 pagetable_t kernel_pagetable \uff09\uff0c\u800c\u662f\u76f4\u63a5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5185\u6838\u9875\u8868\uff0c\u5e76\u5c06\u5176\u5730\u5740 k_pagetable \u8fd4\u56de\u3002\u5b9e\u73b0\u7684\u65f6\u5019\u4e0d\u8981\u6620\u5c04CLINT\uff0c\u5426\u5219\u4f1a\u5728\u4efb\u52a1\u4e09\u53d1\u751f\u5730\u5740\u91cd\u5408\u95ee\u9898\u3002\u5e94\u8be5\u8981\u5728Step 4 allocproc() \u4e2d\u8c03\u7528\u5b83\u3002 Step 3 \uff1a\u4fee\u6539procinit\u51fd\u6570\u3002procinit()\u662f\u5728\u7cfb\u7edf\u5f15\u5bfc\u65f6\uff08\u89c1 kernel/main.c \u7684main\u51fd\u6570\uff09\uff0c\u7528\u4e8e\u7ed9\u8fdb\u7a0b\u5206\u914d\u5185\u6838\u6808\u7684\u7269\u7406\u9875\u5e76\u5728\u9875\u8868\u5efa\u7acb\u6620\u5c04\u3002 \u53c2\u8003\u4f18\u5316\u65b9\u6cd5 \uff1a\u628aprocinit()\u4e2d\u5185\u6838\u6808\u7684\u7269\u7406\u5730\u5740pa\u62f7\u8d1d\u5230PCB\u65b0\u589e\u7684\u6210\u5458 kstack_pa \u4e2d\uff0c\u540c\u65f6\u8fd8\u9700\u8981\u4fdd\u7559\u5185\u6838\u6808\u5728\u5168\u5c40\u9875\u8868kernel_pagetable\u7684\u6620\u5c04\uff0c\u7136\u540e\u5728Step 4 allocproc() \u4e2d\u518d\u628a\u5b83\u6620\u5c04\u5230\u8fdb\u7a0b\u7684\u5185\u6838\u9875\u8868\u91cc\u3002\u5173\u4e8e\u5185\u6838\u6808\u8bf4\u660e\uff0c\u89c1 \u5b9e\u9a8c\u539f\u7406 3.4 . \u4e3a\u4ec0\u4e48\u8981\u4fdd\u7559\u521d\u59cb\u5185\u6838\u9875\u8868\uff1f \u4fdd\u7559\u539f\u6709\u7684kvminit()\u4ee5\u53cakernel/vm.c\u4e2dkernel_pagetable\uff0c\u56e0\u4e3a\u6709\u4e9b\u65f6\u5019CPU\u53ef\u80fd\u5e76\u672a\u6267\u884c\u7528\u6237\u8fdb\u7a0b\u3002 Step 4 \uff1a\u4fee\u6539allocproc\u51fd\u6570\u3002allocproc()\u4f1a\u5728\u7cfb\u7edf\u542f\u52a8\u65f6\u88ab\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u548cfork\u8c03\u7528\u3002\u5728allocproc\u51fd\u6570\u91cc\u8c03\u7528Step 2 \u521b\u5efa\u7684\u51fd\u6570\u8bbe\u7f6e\u5185\u6838\u9875\u8868\uff0c\u5e76\u4e14\u8c03\u7528kvmmap\u51fd\u6570\u5c06Step 3 \u8bbe\u7f6e\u7684\u5185\u6838\u6808\u6620\u5c04\u5230\u9875\u8868 k_pagetable \u91cc\u3002 allocproc\u51fd\u6570\u529f\u80fd\u8bf4\u660e \u5728\u8fdb\u7a0b\u8868\u4e2d\u67e5\u627e\u7a7a\u95f2PCB\uff0c\u5982\u679c\u627e\u5230\uff0c\u521d\u59cb\u5316\u5728\u5185\u6838\u4e2d\u8fd0\u884c\u6240\u9700\u7684\u72b6\u6001\uff0c\u5e76\u4fdd\u6301p->lock\u8fd4\u56de\u3002\u5982\u679c\u6ca1\u6709\u7a7a\u95f2PCB\uff0c\u6216\u8005\u5185\u5b58\u5206\u914d\u5931\u8d25\uff0c\u5219\u8fd4\u56de0\u3002 \u5173\u4e8e\u5185\u6838\u6808\u6620\u5c04 \u6ce8\u610f\uff0c\u8981\u4fdd\u8bc1\u5728\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5185\u6838\u9875\u8868\u4e2d\u6620\u5c04\u8be5\u8fdb\u7a0b\u7684\u5185\u6838\u6808\u3002xv6\u672c\u4f1a\u5728 procinit() \u4e2d\u5206\u914d\u5185\u6838\u6808\u7684\u7269\u7406\u9875\u5e76\u5728\u9875\u8868\u5efa\u7acb\u6620\u5c04\u3002\u4f46\u662f\u73b0\u5728\uff0c\u5e94\u8be5\u5728allocproc()\u4e2d\u5b9e\u73b0\u8be5\u529f\u80fd\uff0c\u56e0\u4e3a\u6267\u884cprocinit()\u7684\u65f6\u5019\u8fdb\u7a0b\u7684\u5185\u6838\u9875\u8868\u8fd8\u672a\u88ab\u521b\u5efa\u3002\u4f60\u53ef\u4ee5\u5728procinit()\u4e2d\u53ea\u4fdd\u7559\u5185\u5b58\u7684\u5206\u914d\uff0c\u4f46\u5728allocproc()\u4e2d\u5b8c\u6210\u6620\u5c04\u3002 Step 5 \uff1a\u4fee\u6539\u8c03\u5ea6\u5668\uff08scheduler\uff09\uff0c\u4f7f\u5f97\u5207\u6362\u8fdb\u7a0b\u7684\u65f6\u5019\u5207\u6362\u5185\u6838\u9875\u8868\u3002 \u53c2\u8003\u65b9\u6cd5 \uff1a\u5728\u8fdb\u7a0b\u5207\u6362\u7684\u540c\u65f6\u4e5f\u8981\u5207\u6362\u9875\u8868\u5c06\u5176\u653e\u5165\u5bc4\u5b58\u5668 satp \u4e2d\uff0c\u8bf7\u501f\u9274 kvminithart()\u7684\u9875\u8868\u8f7d\u5165\u65b9\u5f0f\uff09\uff0c\u5728\u8c03\u7528 w_satp() \u4e4b\u540e\u8c03\u7528 sfence_vma()\uff0c\u5177\u4f53\u539f\u7406\u53ef\u67e5\u9605\u5b9e\u9a8c\u539f\u7406\u7684 3.3 \u5185\u6838\u5bf9\u7528\u6237\u7a7a\u95f4\u7684\u8bbf\u95ee \u3002 \u65e0\u8fdb\u7a0b\u8fd0\u884c\u7684\u9002\u914d \uff1a\u5f53\u76ee\u524d\u6ca1\u6709\u8fdb\u7a0b\u8fd0\u884c\u7684\u65f6\u5019\uff0cscheduler() \u5e94\u8be5\u8981satp\u8f7d\u5165\u5168\u5c40\u7684\u5185\u6838\u9875\u8868kernel_pagetable (kernel/vm.c)\u3002 \u5173\u4e8escheduler\u8c03\u5ea6\u5668\uff0c\u53ef\u4ee5\u53c2\u8003 HITSZ\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u7a0b\u7ec4\u8bb2\u89e3XV6\uff08\u4e09\uff09\u5185\u5b58\u7ba1\u7406 Step 6 \uff1a\u5f53\u8fdb\u7a0b\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u4f60\u9700\u8981\u4fee\u6539freeproc()\u51fd\u6570\u6765\u91ca\u653e\u5bf9\u5e94\u7684\u5185\u6838\u9875\u8868\u3002\u4f60\u9700\u8981\u627e\u5230 \u91ca\u653e\u9875\u8868\u4f46\u4e0d\u91ca\u653e\u53f6\u5b50\u9875\u8868\u6307\u5411\u7684\u7269\u7406\u9875\u5e27 \u7684\u65b9\u6cd5\u3002\u4f60\u53ef\u53c2\u8003kernel/vm.c\u4e2d\u7684freewalk\uff0c\u5176\u7528\u4e8e\u91ca\u653e\u6574\u4e2a\u9875\u8868\uff0c\u4f46\u8981\u6c42\u53f6\u5b50\u9875\u8868\u7684\u9875\u9879\u5df2\u7ecf\u88ab\u6e05\u7a7a\u3002 \u867d\u7136\u6211\u4eec\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u5f15\u5165\u4e86\u5185\u6838\u9875\u8868\uff0c\u4f46\u662f\u5185\u6838\u7684\u4ee3\u7801\u548c\u6570\u636e\u90fd\u8fd8\u662f\u552f\u4e00\u7684\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5728\u5404\u4e2a\u5185\u6838\u9875\u8868\u7684\u53f6\u5b50\u9875\u8868\u4e2d\uff0c\u9875\u8868\u9879\u6307\u5411\u4e86\u5171\u4eab\u7684\u7269\u7406\u9875\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u56e0\u6b64\uff0c\u5728\u6211\u4eec\u91ca\u653e\u67d0\u4e2a\u8fdb\u7a0b\u7684\u5185\u6838\u9875\u8868\u7684\u65f6\u5019\uff0c\u4e0d\u5e94\u8be5\u628a\u8fd9\u4e2a\u5171\u4eab\u7269\u7406\u9875\u5e27\u91ca\u653e\uff0c\u5426\u5219\u4f1a\u4ea7\u751f\u975e\u5e38\u4e25\u91cd\u7684\u540e\u679c\uff01 Step 7 \uff1a\u901a\u8fc7 usertests \u548c kvmtest \u6d4b\u8bd5\u3002","title":"2.1 \u6d41\u7a0b"},{"location":"lab4/part3/#22","text":"\u8fd9\u91cc\u6709\u5fc5\u8981\u63d0\u9192\u4e00\u4e0b\u540c\u5b66\uff0c\u8981\u4ee5\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u4ee5\u53ca\u5de5\u7a0b\u91cf\u6700\u5c0f\u7684\u65b9\u6cd5\u5b9e\u73b0\uff0c\u6700\u597d\u4e0d\u8981\u56e0\u4e3a\u4f18\u5316\u7b49\u95ee\u9898\uff0c\u5927\u6539\u5185\u6838\u673a\u5236\u3002 \u597d\u597d\u5229\u7528 vmprint() \u6765\u5e2e\u52a9debug\u3002 \u9875\u8868\u7684bug\u901a\u5e38\u4f1a\u5bfc\u81f4\u6620\u5c04\u7f3a\u5931\u7684traps\uff0c\u8bbf\u5b58\u5931\u8d25\uff0c\u6307\u4ee4\u8fd0\u884c\u9519\u8bef\u7b49\u62a5\u9519\u3002\u5982\u679c \u5185\u6838 \u7f3a\u5931\u4e86\u5730\u5740\u6620\u5c04\u9020\u6210\u4e86\u9875\u7f3a\u5931\uff08page fault\uff09\uff0c\u901a\u5e38\u4f1a\u6253\u5370\u4e2a sepc=0x00000000XXXXXXXX \uff0c\u8fd9\u4ee3\u8868\u7684\u662f\u51fa\u9519\u65f6pc\u7684\u503c\uff0c\u4f60\u53ef\u4ee5\u67e5 kernel/kernel.asm \u770b\u770b \u5bf9\u5e94\u5730\u5740 \u7684\u4ee3\u7801\u7684\u542b\u4e49\u3002 \u4f60\u7684\u5b9e\u73b0\u53ef\u4ee5\u4fee\u6539\u539f\u6709\u7684\u51fd\u6570\u6216\u8005\u662f\u65b0\u589e\u51fd\u6570\uff0c\u6700\u597d\u653e\u5728 kernel/vm.c +kernel/proc.c \u4e2d\uff0c\u4f46\u662f \u5343\u4e07\u4e0d\u8981\u4fee\u6539 kernel/vmcopyin.c +kernel/stats.c + user/usertests.c + user/stats.c \u3002","title":"2.2 \u5b9e\u73b0"},{"location":"lab4/part3/#3","text":"\u5177\u4f53\u8981\u6c42 \u6211\u4eec\u9700\u8981 \u5728\u72ec\u7acb\u5185\u6838\u9875\u8868\u52a0\u4e0a\u7528\u6237\u9875\u8868\u7684\u6620\u5c04\uff0c\u540c\u65f6\u66ff\u6362 copyin()/copyinstr() \u4e3a copyin_new()/copyinstr_new() \uff0c\u4f7f\u5f97\u5185\u6838\u80fd\u591f\u4e0d\u5fc5\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\uff0c\u7528\u8f6f\u4ef6\u6a21\u62df\u7684\u65b9\u6cd5\u4e00\u6b65\u4e00\u6b65\u904d\u5386\u9875\u8868\uff0c\u800c\u662f\u76f4\u63a5\u5229\u7528\u786c\u4ef6\u3002","title":"3  \u4efb\u52a1\u4e09 \u7b80\u5316\u8f6f\u4ef6\u6a21\u62df\u5730\u5740\u7ffb\u8bd1"},{"location":"lab4/part3/#31","text":"Step 1 \uff1a\u5199\u4e00\u4e2a XXX \u51fd\u6570\u628a\u8fdb\u7a0b\u7684\u7528\u6237\u9875\u8868\u6620\u5c04\u5230\u5185\u6838\u9875\u8868\u4e2d\uff0c\u540c\u65f6\u5728defs.h\u4e2d\u58f0\u660e\u3002 \u63a8\u8350\u4e00\u79cd\u8f83\u4e3a\u4f18\u96c5\u7684\u5b9e\u73b0\u65b9\u6cd5 \uff1a\u5185\u6838\u9875\u8868\u76f4\u63a5\u5171\u4eab\u7528\u6237\u9875\u8868\u7684\u53f6\u5b50\u9875\u8868\uff0c\u5373\u5185\u6838\u9875\u8868\u4e2d\u6b21\u9875\u8868\u7684\u90e8\u5206\u76ee\u5f55\u9879\u76f4\u63a5\u6307\u5411\u7528\u6237\u9875\u8868\u7684\u53f6\u5b50\u9875\u8868\u3002\u8fd9\u6837\u53ef\u4ee5\u4e0d\u5fc5\u5c06\u7528\u6237\u9875\u8868\u7684\u9875\u8868\u9879\u5168\u90e8\u590d\u5236\u8fdb\u5185\u6838\u9875\u8868\uff0c\u4e5f\u4e0d\u5fc5\u4fee\u6539\u9875\u8868\u9879\u6807\u5fd7\u4f4d\uff0c\u7b80\u5316\u5b9e\u73b0\u7684\u540c\u65f6\u4e5f\u53ef\u4ee5\u63d0\u5347\u6027\u80fd\uff0c\u4f46\u5728\u9875\u8868\u56de\u6536\u7684\u65f6\u5019\u9700\u8981\u907f\u514d\u91cd\u590d\u56de\u6536\u3002 \u63d0\u793a\uff1a\u524d\u9762\u5df2\u7ecf\u63d0\u5230\u7528\u6237\u5730\u5740\u7a7a\u95f4\u7684\u8303\u56f4\u4e3a0x0-0xC000000\uff0c\u89c1\u201c \u5b9e\u9a8c\u539f\u7406 3.5 \u201d\u3002\u8bd5\u8ba1\u7b97\uff0c\u591a\u5c11\u4e2a\u6b21\u7ea7\u9875\u8868\u9879\u5c31\u80fd\u6db5\u76d6\u6574\u4e2a\u7528\u6237\u5730\u5740\u7a7a\u95f4\uff1f Step 2 \uff1a\u7528\u51fd\u6570 copyin_new() \uff08\u5728 kernel/vmcopyin.c \u4e2d\u5b9a\u4e49\uff09\u4ee3\u66ff copyin() \uff08\u5728 kernel/vm.c \u4e2d\u5b9a\u4e49\uff09\u3002\u786e\u4fdd\u7a0b\u5e8f \u80fd\u8fd0\u884c \u4e4b\u540e\u518d\u7528 copyinstr_new() \u4ee5\u4ee3\u66ff copyinstr() \u3002 Step 3 \uff1a\u5728\u72ec\u7acb\u5185\u6838\u9875\u8868\u52a0\u4e0a\u7528\u6237\u9875\u8868\u7684\u6620\u5c04\uff0c\u4ee5\u4fdd\u8bc1\u521a\u521a\u66ff\u6362\u5730\u65b0\u51fd\u6570\u80fd\u591f\u4f7f\u7528\u3002\u6ce8\u610f\u72ec\u7acb\u5185\u6838\u9875\u8868\u7684\u7528\u6237\u9875\u8868\u7684\u6620\u5c04\u7684\u6807\u5fd7\u4f4d\u7684\u9009\u62e9\u3002\u6807\u5fd7\u4f4dUser\u4e00\u65e6\u88ab\u8bbe\u7f6e\uff0c\u5185\u6838\u5c31\u4e0d\u80fd\u8bbf\u95ee\u8be5\u865a\u62df\u5730\u5740\u4e86\u3002 \u63a8\u8350\u65b9\u6848 \uff1a\u5728\u8c03\u7528copyin_new()/ copyinstr_new()\u4e4b\u524d\u4fee\u6539sstatus\u5bc4\u5b58\u5668\u7684SUM\u4f4d\uff1a w_sstatus(r_sstatus() | SSTATUS_SUM); \u5728\u51cb\u7528copyin_new()/ copyinstr_new()\u4e4b\u540e\u53bb\u6389sstatus\u5bc4\u5b58\u5668\u7684SUM\u4f4d\uff1a w_sstatus(r_sstatus() & ~SSTATUS_SUM); Step 4 \uff1a\u5728\u72ec\u7acb\u5185\u6838\u9875\u8868\u52a0\u4e0a\u7528\u6237\u9875\u8868\u7684\u6620\u5c04\u7684\u65f6\u5019\uff0c\u6bcf\u4e00\u6b21\u7528\u6237\u9875\u8868\u88ab\u4fee\u6539\u4e86\u6620\u5c04\u7684\u540c\u65f6\uff0c\u90fd\u8981\u4fee\u6539\u5bf9\u5e94\u72ec\u7acb\u5185\u6838\u9875\u8868\u7684\u76f8\u5e94\u90e8\u5206\u4fdd\u6301\u540c\u6b65\u3002\u8fd9\u901a\u5e38\u5728 fork(), exec(), sbrk()\u4e2d\u53d1\u751f\uff0c\u5176\u4e2dsbrk()\u8c03\u7528growproc()\u6765\u5b9e\u73b0\u5185\u5b58\u5206\u914d\u6216\u56de\u6536\u3002\u4e5f\u5c31\u662f\uff0c\u9700\u8981\u5728fork()\u3001exec()\u548cgrowproc()\u8fd9\u4e09\u4e2a\u51fd\u6570\u91cc\u5c06\u6539\u53d8\u540e\u7684\u8fdb\u7a0b\u9875\u8868\u540c\u6b65\u5230\u5185\u6838\u9875\u8868\u4e2d\u3002 Step 5 \uff1a\u6ce8\u610f\uff1a\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u4e5f\u9700\u8981\u5c06\u7528\u6237\u9875\u8868\u6620\u5c04\u5230\u5185\u6838\u9875\u8868\u4e2d\uff0c\u89c1kernel/proc.c: userinit()\u3002 Step 6 \uff1a\u901a\u8fc7 usertests, make grade\u3002","title":"3.1 \u6d41\u7a0b"},{"location":"lab4/part3/#32","text":"\u6ce8\u610f\u72ec\u7acb\u5185\u6838\u9875\u8868\u7684\u7528\u6237\u9875\u8868\u7684\u6620\u5c04\u7684 \u6807\u5fd7\u4f4d \u7684\u9009\u62e9\u3002\uff08\u6807\u5fd7\u4f4dUser\u4e00\u65e6\u88ab\u8bbe\u7f6e\uff0c\u5185\u6838\u5c31\u4e0d\u80fd\u8bbf\u95ee\u8be5\u865a\u62df\u5730\u5740\u4e86\uff09 \u518d\u6b21\u63d0\u9192\u5730\u5740\u91cd\u5408\u95ee\u9898\uff0c\u89c1\u201c \u5b9e\u9a8c\u539f\u7406 3.5 \u201d.","title":"3.2 \u5b9e\u73b0"},{"location":"lab4/part4/","text":"\u4ee3\u7801\u63d0\u4ea4 \u00b6 \u8bf7\u53c2\u8003\u5b9e\u9a8c\u4e8c\u7684\u4ee3\u7801 \u63d0\u4ea4\u65b9\u5f0f \u3002","title":"\u63d0\u4ea4\u6587\u6863"},{"location":"lab4/part4/#_1","text":"\u8bf7\u53c2\u8003\u5b9e\u9a8c\u4e8c\u7684\u4ee3\u7801 \u63d0\u4ea4\u65b9\u5f0f \u3002","title":"\u4ee3\u7801\u63d0\u4ea4"},{"location":"lab5/part1/","text":"\u5b9e\u9a8c\u6982\u8ff0 \u00b6 \u6e29\uff08\u5b88\uff09\u99a8\uff08\u4f4f\uff09\u63d0\uff08\u7ea2\uff09\u793a\uff08\u7ebf\uff09 \u672c\u8bfe\u7a0b\u5b9e\u9a8c\u5df2\u5f15\u5165\u4ee3\u7801\u81ea\u52a8\u67e5\u91cd\u7cfb\u7edf\uff0c\u8bf7\u540c\u5b66\u4eec\u4fdd\u6301 \u5b66\u672f\u8bda\u4fe1 \uff01 \u8bfe\u7a0b\u590d\u4e60\u548c\u9884\u4e60\u8981\u6c42 \u672c\u8282\u5b9e\u9a8c\u4e0e\u7406\u8bba\u8bfe\u7684 \u201c\u6587\u4ef6\u4e0e\u6587\u4ef6\u7cfb\u7edf\u201d \u548c \u201cI/O\u4e0e\u5b58\u50a8\u201d \u8fd9\u4e24\u7ae0\u8bfe\u7a0b\u5185\u5bb9\u76f8\u5173\uff0c\u8bf7\u540c\u5b66\u4eec\u590d\u4e60\u8fd9\u4e24\u7ae0\u8bfe\u7a0b\u5185\u5bb9\u3002 \u5173\u4e8e\u7b2c\u4e09\u6b21\u5b9e\u9a8c\u8bfe\u8003\u6838 \u6211\u4eec\u5c06\u5728\u7b2c\u516d\u6b21\u5b9e\u9a8c\u8bfe\u8fdb\u884c\u7b2c\u4e09\u6b21\u5b9e\u9a8c\u73b0\u573a\u9a8c\u6536\uff1a \u9a8c\u6536\u5185\u5bb9 \uff1aLab4 \u9875\u8868\uff0cLab5 \u57fa\u4e8eFUSE\u7684\u9752\u6625\u7248EXT2\u6587\u4ef6\u7cfb\u7edf\u3002 \u9a8c\u6536\u76ee\u7684 \uff1a\u8003\u5bdf\u540c\u5b66\u4eec\u662f\u5426\u662f\u81ea\u5df1\u5b8c\u6210\u7684\u5b9e\u9a8c\u4ee3\u7801\uff0c\u800c\u4e0d\u662f\u201c\u590d\u5236\u62f7\u8d1d\u201d\u3002 \u9a8c\u6536\u5f62\u5f0f \uff1a\u52a9\u6559\u4e0e\u540c\u5b66\u4eec\u8fdb\u884c\u4e00\u5bf9\u4e00\u95ee\u7b54\uff08\ud83d\udce2 \u6ce8\uff1aLab5\u9a8c\u6536\u65f6\u9700\u8981\u73b0\u573a\u6539\u4ee3\u7801 \uff09\u3002 duck\u4e0d\u5fc5\u62c5\u5fc3\uff0c\u53ea\u662f\u4fee\u6539\u51e0\u884c\u4ee3\u7801\uff1a\uff09 \u5982\u679c\u5b9e\u9a8c\u4ee3\u7801\u662f\u4f60\u81ea\u5df1\u5199\u7684\uff0c\u90a3\u8fd9\u5c06\u662f\u4f60\u7684\u73b0\u573a\u79c0\uff01 \u8bf7\u540c\u5b66\u4eec\u8ba4\u771f\u5bf9\u5f85\uff01 1. \u5b9e\u9a8c\u76ee\u7684 \u00b6 \u4ee5Linux\u7cfb\u7edf\u4e2d\u7684 EXT2 \u6587\u4ef6\u7cfb\u7edf\u4e3a\u4f8b\uff0c\u719f\u6089\u8be5\u6587\u4ef6\u7cfb\u7edf\u5185\u90e8\u6570\u636e\u7ed3\u6784\u7684\u7ec4\u7ec7\u65b9\u5f0f\u548c\u57fa\u672c\u5904\u7406\u6d41\u7a0b\uff0c\u5e76\u57fa\u4e8e FUSE \u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e00\u4e2a\u53ef\u4ee5 \u771f\u6b63\u5728Linux\u4e0a\u8dd1 \u7684\u6587\u4ef6\u7cfb\u7edf\u3002 2. \u5b9e\u9a8c\u5b66\u65f6 \u00b6 \u672c\u5b9e\u9a8c\u4e3a8\u5b66\u65f6\u3002 3. \u5b9e\u9a8c\u5185\u5bb9 \u00b6 3.1 \u5fc5\u505a\u90e8\u5206 \u00b6 3.1.1 \u719f\u6089DDRIVER\u9a71\u52a8 \uff08\u53c2\u8003\u5b9e\u9a8c\u539f\u7406-DDRIVER\u865a\u62df\u78c1\u76d8\u9a71\u52a8\uff09 \u00b6 \u672c\u5b9e\u9a8c\u8981\u6c42\u901a\u8fc7 ddriver\uff08disk driver\uff09 \u9a71\u52a8\u6765\u8bbf\u95eeddriver\u8bbe\u5907\uff0c\u4ece\u800c\u7b80\u5316\u78c1\u76d8\u8bbf\u95ee\u64cd\u4f5c\u3002\u6b64\u540e\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u5229\u7528ddriver\u9a71\u52a8\u6765\u7f16\u5199\u81ea\u5df1\u7684\u6587\u4ef6\u7cfb\u7edf\u3002\u201c \u5de5\u6b32\u5584\u5176\u4e8b\uff0c\u5fc5\u5148\u5229\u5176\u5668 \u201d\uff0c\u5728\u5b9e\u9a8c\u8fc7\u7a0b\u4e2d\uff0c \u8bf7\u52a1\u5fc5\u4fdd\u8bc1\u4f60\u5df2\u7ecf\u7406\u89e3tests/test_ddriver.c\u76ee\u5f55\u4e0b\u7ed9\u51fa\u7684\u6848\u4f8b \u3002 3.1.2 \u57fa\u4e8eFUSE\u5b9e\u73b0\u9752\u6625\u7248EXT2\u6587\u4ef6\u7cfb\u7edf \uff08\u53c2\u8003\u5b9e\u9a8c\u539f\u7406-FUSE\u4ecb\u7ecd\u4e0eExt2\u6587\u4ef6\u7cfb\u7edf\u539f\u7406\u7b80\u4ecb\uff09 \u00b6 \u7cfb\u7edf\u7ed3\u6784\u53c2\u8003EXT2\u6587\u4ef6\u7cfb\u7edf\uff0c\u8981\u6c42\u5177\u6709 SUPER_BLOCK \u3001 DATA_MAP \u3001 INODE_MAP \u7b49\u4e3b\u8981\u7ed3\u6784\u3002\u672c\u5b9e\u9a8c\u57fa\u4e8eFUSE\u67b6\u6784\uff0c\u8981\u6c42\u5c06\u81ea\u5df1\u8bbe\u8ba1\u7684\u6587\u4ef6\u7cfb\u7edf\u63a5\u5165FUSE\uff0c\u4f7f\u5f97\u6211\u4eec\u80fd\u591f\u5728Linux\u7cfb\u7edf\u4e2d\u76f4\u63a5\u8bbf\u95ee\u6211\u4eec\u81ea\u5df1\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u662f\u4e0d\u662f\u5f88\u9177\u70ab\u5462\uff1f\u8a00\u5f52\u6b63\u4f20\uff0c\u672c\u6b21\u5b9e\u9a8c\u4ec5\u8981\u6c42\u5b8c\u6210\u5982\u4e0b\u51e0\u4e2a\u529f\u80fd\uff1a \u6302\u8f7d\u6587\u4ef6\u7cfb\u7edf\uff1b \u5378\u8f7d\u6587\u4ef6\u7cfb\u7edf\uff1b \u521b\u5efa\u6587\u4ef6/\u6587\u4ef6\u5939\uff08\u6570\u636e\u5757\u53ef\u9884\u5206\u914d\uff09\uff1b \u67e5\u770b\u6587\u4ef6\u5939\u4e0b\u7684\u6587\u4ef6\uff08\u8bfb\u53d6\u6587\u4ef6\u5939\u5185\u5bb9\uff09\uff1b \u4e0a\u8ff0\u529f\u80fd\u5bf9\u5e94\u7684\u547d\u4ee4\u4e3a\uff1a mount umount touch/mkdir ls \u4ee5\u4e0a\u672a\u63d0\u53ca\u7684\u529f\u80fd\uff08\u5982\u590d\u5236\u3001\u5220\u9664\u3001\u8bfb\u5199\u6587\u4ef6\u7b49\uff09 \u4e0d\u8981\u6c42\u5b9e\u73b0 \u3002 \u5177\u4f53\u8981\u6c42\u53c2\u89c1\u5b9e\u9a8c\u8981\u6c42 \u3002 3.2 \u9009\u505a\u90e8\u5206 \u00b6 \u672c\u9009\u505a\u90e8\u5206\u4ec5\u4e3a\u5b66\u6709\u4f59\u529b\u7684\u5927\u4f6c\u79c0\u64cd\u4f5c\u63d0\u4f9b\u65b9\u5411\u3002\u4e3a\u9632\u6b62\u5185\u5377\uff0c\u5b9e\u73b0\u672c\u90e8\u5206\u4e0d\u4f1a\u5e26 \u6765\u989d\u5916\u52a0\u5206\uff08\u4f46\u6216\u8bb8\u4f1a\u6709\u5176\u4ed6\u610f\u60f3\u4e0d\u5230\u7684\u60ca\u559c\uff09\uff0c\u79c0\u7ffb\u8f66\u4e86\u4e5f\u4e0d\u4f1a\u6263\u5206\u3002 EXPERT\uff1a\u5b8c\u5584\u6587\u4ef6\u7cfb\u7edf\u57fa\u672c\u64cd\u4f5c \u6309\u9700\u5206\u914d \u6587\u4ef6\u6570\u636e\u5757 \u95f4\u63a5\u7d22\u5f15\u548c\u4e8c\u7ea7\u95f4\u63a5\u7d22\u5f15 \u5220\u9664\u64cd\u4f5c\uff08 rm \u547d\u4ee4\uff0c\u9700\u8981\u652f\u6301 rm -r \uff09 \u6587\u4ef6\u79fb\u52a8\uff08 mv \u547d\u4ee4\uff09 \u8bfb\u5199\u6587\u4ef6\uff08\u652f\u6301vim\u3001vscode\u76f4\u63a5\u4fee\u6539\u6587\u4ef6\uff09 \u8f6f\u786c\u8fde\u63a5\uff08 ln \u547d\u4ee4\uff09 SUPERME\uff1a\u4e1d\u6ed1\u7684\u6587\u4ef6\u8bfb\u5199\u4f53\u9a8c \u5b9e\u73b0\u7f13\u5b58\u7ed3\u6784\uff08\u53c2\u8003 \u5b9e\u9a8c\u539f\u7406-\u78c1\u76d8\u7f13\u5b58\u7b80\u4ecb \uff09 EPIC\uff1a\u8d85\u5f3a\u7684\u9c81\u68d2\u6027 \u542f\u52a8\u65f6\u68c0\u67e5\u7cfb\u7edf\u4e00\u81f4\u6027\uff08\u5b64\u513f\u8282\u70b9\u3001\u7a7a\u95f2\u8282\u70b9\u4e0e\u4f4d\u56fe\u662f\u5426\u4e00\u81f4\u3001\u66f4\u591a\u4e00\u81f4\u6027\u68c0\u6d4b\uff09 \u574f\u5757\u8bc6\u522b\u4e0e\u5904\u7406\uff08\u52a8\u6001\u8bc6\u522b\u574f\u5757\uff0c\u5e76\u907f\u514d\u4f7f\u7528\uff09 \u65e5\u5fd7\uff08\u53c2\u8003 \u5b9e\u9a8c\u539f\u7406-\u65e5\u5fd7\u6587\u4ef6\u7cfb\u7edf\u7b80\u4ecb \uff09 4. \u8fd0\u884c\u5b9e\u4f8b \u00b6 \u672c\u5c0f\u8282\u7ed9\u51fa\u4e86sfs\uff08simplefs\uff09\u6587\u4ef6\u7cfb\u7edf\u7684\u8fd0\u884c\u793a\u4f8b\u3002\u4f60\u9700\u8981\u53c2\u7167\u8fd9\u4e2a\u793a\u4f8b\u8c03\u8bd5\u8fd0\u884c\u4f60\u81ea\u5df1\u7f16\u5199\u7684\u201cnewfs\u201d\uff08\u4f60\u81ea\u5df1\u7684\u9879\u76ee\u540d\u79f0\uff09\u6587\u4ef6\u7cfb\u7edf\uff0c\u8c03\u8bd5\u8fd0\u884c\u53c2\u8003\u5b9e\u9a8c\u6b65\u9aa4\u7684\u9879\u76ee\u7f16\u8bd1\u3002\u5f53\u81ea\u6d4b\u5b8c\u6210\u540e\uff0c\u4f60\u8fd8\u9700\u8981\u901a\u8fc7./tests/test.sh\u811a\u672c\u7684\u57fa\u7840\u529f\u80fd\u6d4b\u8bd5\uff0c\u663e\u793a\u201c\u606d\u559c\u4f60\uff0c\u901a\u8fc7\u6240\u6709\u6d4b\u8bd5\u201d\uff0c\u5373\u53ef\u5b8c\u6210\u672c\u6b21\u5b9e\u9a8c\u3002 bilibili\u4e0a\u89c2\u770b\uff1a https://www.bilibili.com/video/BV1KB4y1z7f2/?spm_id_from=333.999.0.0 \u4e3a\u4e86\u7ed9\u540c\u5b66\u4eec\u6f14\u793a\u5982\u4f55\u4e0b\u8f7d\u3001\u7f16\u8bd1\u3001\u8fd0\u884csimplefs\u6587\u4ef6\u7cfb\u7edf\uff0c\u6211\u4eec\u5f55\u5236\u4e86\u4e24\u4e2a\u6f14\u793a\u89c6\u9891\uff1a\u201cHITSZ FUSE\u6587\u4ef6\u7cfb\u7edf\u5b9e\u9a8c\uff08\u672c\u5730\u7248\uff09\u201d\u548c\u201cHITSZ FUSE\u6587\u4ef6\u7cfb\u7edf\uff08\u8fdc\u7a0b\u8ba1\u7b97\u8282\u70b9\u7248\uff09\u201d\u3002 \u5982\u679c\u89c6\u9891\u4e0d\u592a\u6e05\u6670\uff0c\u5efa\u8bae\u5230bilibili\u4e0a\u89c2\u770b\u3002 FUSE\u6587\u4ef6\u7cfb\u7edf\u5b9e\u9a8c\uff08\u672c\u5730\u7248\uff09\uff1a https://www.bilibili.com/video/BV1Af4y1K7FX/ HITSZ FUSE\u6587\u4ef6\u7cfb\u7edf\uff08\u8fdc\u7a0b\u8ba1\u7b97\u8282\u70b9\u7248\uff09\uff1a https://www.bilibili.com/video/BV1TR4y1b7M3/","title":"\u5b9e\u9a8c\u6982\u8ff0"},{"location":"lab5/part1/#_1","text":"\u6e29\uff08\u5b88\uff09\u99a8\uff08\u4f4f\uff09\u63d0\uff08\u7ea2\uff09\u793a\uff08\u7ebf\uff09 \u672c\u8bfe\u7a0b\u5b9e\u9a8c\u5df2\u5f15\u5165\u4ee3\u7801\u81ea\u52a8\u67e5\u91cd\u7cfb\u7edf\uff0c\u8bf7\u540c\u5b66\u4eec\u4fdd\u6301 \u5b66\u672f\u8bda\u4fe1 \uff01 \u8bfe\u7a0b\u590d\u4e60\u548c\u9884\u4e60\u8981\u6c42 \u672c\u8282\u5b9e\u9a8c\u4e0e\u7406\u8bba\u8bfe\u7684 \u201c\u6587\u4ef6\u4e0e\u6587\u4ef6\u7cfb\u7edf\u201d \u548c \u201cI/O\u4e0e\u5b58\u50a8\u201d \u8fd9\u4e24\u7ae0\u8bfe\u7a0b\u5185\u5bb9\u76f8\u5173\uff0c\u8bf7\u540c\u5b66\u4eec\u590d\u4e60\u8fd9\u4e24\u7ae0\u8bfe\u7a0b\u5185\u5bb9\u3002 \u5173\u4e8e\u7b2c\u4e09\u6b21\u5b9e\u9a8c\u8bfe\u8003\u6838 \u6211\u4eec\u5c06\u5728\u7b2c\u516d\u6b21\u5b9e\u9a8c\u8bfe\u8fdb\u884c\u7b2c\u4e09\u6b21\u5b9e\u9a8c\u73b0\u573a\u9a8c\u6536\uff1a \u9a8c\u6536\u5185\u5bb9 \uff1aLab4 \u9875\u8868\uff0cLab5 \u57fa\u4e8eFUSE\u7684\u9752\u6625\u7248EXT2\u6587\u4ef6\u7cfb\u7edf\u3002 \u9a8c\u6536\u76ee\u7684 \uff1a\u8003\u5bdf\u540c\u5b66\u4eec\u662f\u5426\u662f\u81ea\u5df1\u5b8c\u6210\u7684\u5b9e\u9a8c\u4ee3\u7801\uff0c\u800c\u4e0d\u662f\u201c\u590d\u5236\u62f7\u8d1d\u201d\u3002 \u9a8c\u6536\u5f62\u5f0f \uff1a\u52a9\u6559\u4e0e\u540c\u5b66\u4eec\u8fdb\u884c\u4e00\u5bf9\u4e00\u95ee\u7b54\uff08\ud83d\udce2 \u6ce8\uff1aLab5\u9a8c\u6536\u65f6\u9700\u8981\u73b0\u573a\u6539\u4ee3\u7801 \uff09\u3002 duck\u4e0d\u5fc5\u62c5\u5fc3\uff0c\u53ea\u662f\u4fee\u6539\u51e0\u884c\u4ee3\u7801\uff1a\uff09 \u5982\u679c\u5b9e\u9a8c\u4ee3\u7801\u662f\u4f60\u81ea\u5df1\u5199\u7684\uff0c\u90a3\u8fd9\u5c06\u662f\u4f60\u7684\u73b0\u573a\u79c0\uff01 \u8bf7\u540c\u5b66\u4eec\u8ba4\u771f\u5bf9\u5f85\uff01","title":"\u5b9e\u9a8c\u6982\u8ff0"},{"location":"lab5/part1/#1","text":"\u4ee5Linux\u7cfb\u7edf\u4e2d\u7684 EXT2 \u6587\u4ef6\u7cfb\u7edf\u4e3a\u4f8b\uff0c\u719f\u6089\u8be5\u6587\u4ef6\u7cfb\u7edf\u5185\u90e8\u6570\u636e\u7ed3\u6784\u7684\u7ec4\u7ec7\u65b9\u5f0f\u548c\u57fa\u672c\u5904\u7406\u6d41\u7a0b\uff0c\u5e76\u57fa\u4e8e FUSE \u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e00\u4e2a\u53ef\u4ee5 \u771f\u6b63\u5728Linux\u4e0a\u8dd1 \u7684\u6587\u4ef6\u7cfb\u7edf\u3002","title":"1.  \u5b9e\u9a8c\u76ee\u7684"},{"location":"lab5/part1/#2","text":"\u672c\u5b9e\u9a8c\u4e3a8\u5b66\u65f6\u3002","title":"2.  \u5b9e\u9a8c\u5b66\u65f6"},{"location":"lab5/part1/#3","text":"","title":"3.  \u5b9e\u9a8c\u5185\u5bb9"},{"location":"lab5/part1/#31","text":"","title":"3.1 \u5fc5\u505a\u90e8\u5206"},{"location":"lab5/part1/#311-ddriver-ddriver","text":"\u672c\u5b9e\u9a8c\u8981\u6c42\u901a\u8fc7 ddriver\uff08disk driver\uff09 \u9a71\u52a8\u6765\u8bbf\u95eeddriver\u8bbe\u5907\uff0c\u4ece\u800c\u7b80\u5316\u78c1\u76d8\u8bbf\u95ee\u64cd\u4f5c\u3002\u6b64\u540e\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u5229\u7528ddriver\u9a71\u52a8\u6765\u7f16\u5199\u81ea\u5df1\u7684\u6587\u4ef6\u7cfb\u7edf\u3002\u201c \u5de5\u6b32\u5584\u5176\u4e8b\uff0c\u5fc5\u5148\u5229\u5176\u5668 \u201d\uff0c\u5728\u5b9e\u9a8c\u8fc7\u7a0b\u4e2d\uff0c \u8bf7\u52a1\u5fc5\u4fdd\u8bc1\u4f60\u5df2\u7ecf\u7406\u89e3tests/test_ddriver.c\u76ee\u5f55\u4e0b\u7ed9\u51fa\u7684\u6848\u4f8b \u3002","title":"3.1.1 \u719f\u6089DDRIVER\u9a71\u52a8 \uff08\u53c2\u8003\u5b9e\u9a8c\u539f\u7406-DDRIVER\u865a\u62df\u78c1\u76d8\u9a71\u52a8\uff09"},{"location":"lab5/part1/#312-fuseext2-fuseext2","text":"\u7cfb\u7edf\u7ed3\u6784\u53c2\u8003EXT2\u6587\u4ef6\u7cfb\u7edf\uff0c\u8981\u6c42\u5177\u6709 SUPER_BLOCK \u3001 DATA_MAP \u3001 INODE_MAP \u7b49\u4e3b\u8981\u7ed3\u6784\u3002\u672c\u5b9e\u9a8c\u57fa\u4e8eFUSE\u67b6\u6784\uff0c\u8981\u6c42\u5c06\u81ea\u5df1\u8bbe\u8ba1\u7684\u6587\u4ef6\u7cfb\u7edf\u63a5\u5165FUSE\uff0c\u4f7f\u5f97\u6211\u4eec\u80fd\u591f\u5728Linux\u7cfb\u7edf\u4e2d\u76f4\u63a5\u8bbf\u95ee\u6211\u4eec\u81ea\u5df1\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u662f\u4e0d\u662f\u5f88\u9177\u70ab\u5462\uff1f\u8a00\u5f52\u6b63\u4f20\uff0c\u672c\u6b21\u5b9e\u9a8c\u4ec5\u8981\u6c42\u5b8c\u6210\u5982\u4e0b\u51e0\u4e2a\u529f\u80fd\uff1a \u6302\u8f7d\u6587\u4ef6\u7cfb\u7edf\uff1b \u5378\u8f7d\u6587\u4ef6\u7cfb\u7edf\uff1b \u521b\u5efa\u6587\u4ef6/\u6587\u4ef6\u5939\uff08\u6570\u636e\u5757\u53ef\u9884\u5206\u914d\uff09\uff1b \u67e5\u770b\u6587\u4ef6\u5939\u4e0b\u7684\u6587\u4ef6\uff08\u8bfb\u53d6\u6587\u4ef6\u5939\u5185\u5bb9\uff09\uff1b \u4e0a\u8ff0\u529f\u80fd\u5bf9\u5e94\u7684\u547d\u4ee4\u4e3a\uff1a mount umount touch/mkdir ls \u4ee5\u4e0a\u672a\u63d0\u53ca\u7684\u529f\u80fd\uff08\u5982\u590d\u5236\u3001\u5220\u9664\u3001\u8bfb\u5199\u6587\u4ef6\u7b49\uff09 \u4e0d\u8981\u6c42\u5b9e\u73b0 \u3002 \u5177\u4f53\u8981\u6c42\u53c2\u89c1\u5b9e\u9a8c\u8981\u6c42 \u3002","title":"3.1.2  \u57fa\u4e8eFUSE\u5b9e\u73b0\u9752\u6625\u7248EXT2\u6587\u4ef6\u7cfb\u7edf\uff08\u53c2\u8003\u5b9e\u9a8c\u539f\u7406-FUSE\u4ecb\u7ecd\u4e0eExt2\u6587\u4ef6\u7cfb\u7edf\u539f\u7406\u7b80\u4ecb\uff09"},{"location":"lab5/part1/#32","text":"\u672c\u9009\u505a\u90e8\u5206\u4ec5\u4e3a\u5b66\u6709\u4f59\u529b\u7684\u5927\u4f6c\u79c0\u64cd\u4f5c\u63d0\u4f9b\u65b9\u5411\u3002\u4e3a\u9632\u6b62\u5185\u5377\uff0c\u5b9e\u73b0\u672c\u90e8\u5206\u4e0d\u4f1a\u5e26 \u6765\u989d\u5916\u52a0\u5206\uff08\u4f46\u6216\u8bb8\u4f1a\u6709\u5176\u4ed6\u610f\u60f3\u4e0d\u5230\u7684\u60ca\u559c\uff09\uff0c\u79c0\u7ffb\u8f66\u4e86\u4e5f\u4e0d\u4f1a\u6263\u5206\u3002 EXPERT\uff1a\u5b8c\u5584\u6587\u4ef6\u7cfb\u7edf\u57fa\u672c\u64cd\u4f5c \u6309\u9700\u5206\u914d \u6587\u4ef6\u6570\u636e\u5757 \u95f4\u63a5\u7d22\u5f15\u548c\u4e8c\u7ea7\u95f4\u63a5\u7d22\u5f15 \u5220\u9664\u64cd\u4f5c\uff08 rm \u547d\u4ee4\uff0c\u9700\u8981\u652f\u6301 rm -r \uff09 \u6587\u4ef6\u79fb\u52a8\uff08 mv \u547d\u4ee4\uff09 \u8bfb\u5199\u6587\u4ef6\uff08\u652f\u6301vim\u3001vscode\u76f4\u63a5\u4fee\u6539\u6587\u4ef6\uff09 \u8f6f\u786c\u8fde\u63a5\uff08 ln \u547d\u4ee4\uff09 SUPERME\uff1a\u4e1d\u6ed1\u7684\u6587\u4ef6\u8bfb\u5199\u4f53\u9a8c \u5b9e\u73b0\u7f13\u5b58\u7ed3\u6784\uff08\u53c2\u8003 \u5b9e\u9a8c\u539f\u7406-\u78c1\u76d8\u7f13\u5b58\u7b80\u4ecb \uff09 EPIC\uff1a\u8d85\u5f3a\u7684\u9c81\u68d2\u6027 \u542f\u52a8\u65f6\u68c0\u67e5\u7cfb\u7edf\u4e00\u81f4\u6027\uff08\u5b64\u513f\u8282\u70b9\u3001\u7a7a\u95f2\u8282\u70b9\u4e0e\u4f4d\u56fe\u662f\u5426\u4e00\u81f4\u3001\u66f4\u591a\u4e00\u81f4\u6027\u68c0\u6d4b\uff09 \u574f\u5757\u8bc6\u522b\u4e0e\u5904\u7406\uff08\u52a8\u6001\u8bc6\u522b\u574f\u5757\uff0c\u5e76\u907f\u514d\u4f7f\u7528\uff09 \u65e5\u5fd7\uff08\u53c2\u8003 \u5b9e\u9a8c\u539f\u7406-\u65e5\u5fd7\u6587\u4ef6\u7cfb\u7edf\u7b80\u4ecb \uff09","title":"3.2 \u9009\u505a\u90e8\u5206"},{"location":"lab5/part1/#4","text":"\u672c\u5c0f\u8282\u7ed9\u51fa\u4e86sfs\uff08simplefs\uff09\u6587\u4ef6\u7cfb\u7edf\u7684\u8fd0\u884c\u793a\u4f8b\u3002\u4f60\u9700\u8981\u53c2\u7167\u8fd9\u4e2a\u793a\u4f8b\u8c03\u8bd5\u8fd0\u884c\u4f60\u81ea\u5df1\u7f16\u5199\u7684\u201cnewfs\u201d\uff08\u4f60\u81ea\u5df1\u7684\u9879\u76ee\u540d\u79f0\uff09\u6587\u4ef6\u7cfb\u7edf\uff0c\u8c03\u8bd5\u8fd0\u884c\u53c2\u8003\u5b9e\u9a8c\u6b65\u9aa4\u7684\u9879\u76ee\u7f16\u8bd1\u3002\u5f53\u81ea\u6d4b\u5b8c\u6210\u540e\uff0c\u4f60\u8fd8\u9700\u8981\u901a\u8fc7./tests/test.sh\u811a\u672c\u7684\u57fa\u7840\u529f\u80fd\u6d4b\u8bd5\uff0c\u663e\u793a\u201c\u606d\u559c\u4f60\uff0c\u901a\u8fc7\u6240\u6709\u6d4b\u8bd5\u201d\uff0c\u5373\u53ef\u5b8c\u6210\u672c\u6b21\u5b9e\u9a8c\u3002 bilibili\u4e0a\u89c2\u770b\uff1a https://www.bilibili.com/video/BV1KB4y1z7f2/?spm_id_from=333.999.0.0 \u4e3a\u4e86\u7ed9\u540c\u5b66\u4eec\u6f14\u793a\u5982\u4f55\u4e0b\u8f7d\u3001\u7f16\u8bd1\u3001\u8fd0\u884csimplefs\u6587\u4ef6\u7cfb\u7edf\uff0c\u6211\u4eec\u5f55\u5236\u4e86\u4e24\u4e2a\u6f14\u793a\u89c6\u9891\uff1a\u201cHITSZ FUSE\u6587\u4ef6\u7cfb\u7edf\u5b9e\u9a8c\uff08\u672c\u5730\u7248\uff09\u201d\u548c\u201cHITSZ FUSE\u6587\u4ef6\u7cfb\u7edf\uff08\u8fdc\u7a0b\u8ba1\u7b97\u8282\u70b9\u7248\uff09\u201d\u3002 \u5982\u679c\u89c6\u9891\u4e0d\u592a\u6e05\u6670\uff0c\u5efa\u8bae\u5230bilibili\u4e0a\u89c2\u770b\u3002 FUSE\u6587\u4ef6\u7cfb\u7edf\u5b9e\u9a8c\uff08\u672c\u5730\u7248\uff09\uff1a https://www.bilibili.com/video/BV1Af4y1K7FX/ HITSZ FUSE\u6587\u4ef6\u7cfb\u7edf\uff08\u8fdc\u7a0b\u8ba1\u7b97\u8282\u70b9\u7248\uff09\uff1a https://www.bilibili.com/video/BV1TR4y1b7M3/","title":"4.  \u8fd0\u884c\u5b9e\u4f8b"},{"location":"lab5/part2/","text":"\u5b9e\u9a8c\u539f\u7406 \u00b6 1. EXT2\u6587\u4ef6\u7cfb\u7edf\u539f\u7406\u7b80\u4ecb \u00b6 1.1 \u6587\u4ef6\u7cfb\u7edf\u662f\u4ec0\u4e48 \u00b6 \u6587\u4ef6\u7cfb\u7edf\u662f\u64cd\u4f5c\u7cfb\u7edf\u7528\u4e8e\u660e\u786e \u5b58\u50a8\u8bbe\u5907 \uff08\u78c1\u76d8\uff09\u6216 \u5206\u533a \u4e0a\u7684 \u6587\u4ef6\uff08\u5305\u62ec\u6587\u4ef6\u3001\u76ee\u5f55\u3001\u5feb\u6377\u65b9\u5f0f\u7b49\uff09 \u7684\u65b9\u6cd5\u548c\u6570\u636e\u7ed3\u6784\uff0c\u5373 \u5728\u7279\u5b9a\u5b58\u50a8\u8bbe\u5907\u4e0a\u7ec4\u7ec7\u6587\u4ef6\u7684\u65b9\u6cd5 \u3002 \u7b80\u5355\u5730\u8bf4 \uff0c\u6587\u4ef6\u7cfb\u7edf\u5c31\u662f\u5728 \u7279\u5b9a\u5b58\u50a8\u8bbe\u5907\u4e0a\u7ec4\u7ec7\u6587\u4ef6 \u7684\u65b9\u6cd5\u3002 \u6587\u4ef6\u7cfb\u7edf \u4e3b\u8981\u4f5c\u7528 \uff1a \u7ba1\u7406\u548c\u8c03\u5ea6 \u8bbe\u5907\u7684\u5b58\u50a8\u7a7a\u95f4 \uff0c\u63d0\u4f9b\u6587\u4ef6\u7684\u903b\u8f91\u7ed3\u6784\u3001\u7269\u7406\u7ed3\u6784\u548c\u5b58\u50a8\u65b9\u6cd5; \u5b9e\u73b0\u6587\u4ef6 \u4ece\u6807\u8bc6\u5230\u5b9e\u9645\u5730\u5740\u7684\u6620\u5c04 \uff0c\u5b9e\u73b0\u6587\u4ef6\u7684\u63a7\u5236\u64cd\u4f5c\u548c\u5b58\u53d6\u64cd\u4f5c\uff0c\u63d0\u9ad8 \u4ece\u8bbe\u5907\u4e0a\u67e5\u627e\u6570\u636e \u7684\u6548\u7387\uff1b \u5b9e\u73b0\u6587\u4ef6\u4fe1\u606f\u7684\u5171\u4eab\u5e76\u63d0\u4f9b\u53ef\u9760\u7684 \u6587\u4ef6\u4fdd\u5bc6\u548c\u4fdd\u62a4\u63aa\u65bd \uff0c\u63d0\u4f9b\u6587\u4ef6\u7684 \u5b89\u5168\u63aa\u65bd \u3002 \u4f18\u5316\u8bbe\u5907\u7a7a\u95f4\u5229\u7528\u7387\uff1b \u76ee\u524d\u5728\u5404\u79cd\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5b58\u5728\u7740\u5404\u79cd\u5404\u6837\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u5728Windows\u5e73\u53f0\u4e3b\u6d41\u6709\uff1a FAT\u3001FAT16\u3001FAT32\u3001NTFS \u7b49\uff1b\u5728Unix\u5e73\u53f0\u4e3b\u6d41\u7684\u6709\uff1a EXT2\u3001EXT3\u3001EXT4 \u7b49\u3002\u8fd9\u4e9b\u6587\u4ef6\u7cfb\u7edf\u5728 \u7ba1\u7406\u78c1\u76d8\u8bbe\u5907 \u65f6\u90fd\u6709\u5404\u81ea\u7684\u4e00\u5957\u7b56\u7565\u548c\u65b9\u6cd5\uff0c\u968f\u4e4b\u4e5f\u5e26\u6765\u4e0d\u540c\u7684\u4f18\u7f3a\u70b9\u3002 EXT2 \u662fGNU/Linux\u7cfb\u7edf\u4e2d\u6807\u51c6\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u5176\u7279\u70b9\u662f \u5b58\u53d6\u6587\u4ef6\u7684\u6027\u80fd\u8f83\u597d \uff0c\u5bf9\u4e8e\u4e2d\u5c0f\u578b\u7684\u6587\u4ef6\u66f4\u663e\u793a\u5176\u4f18\u52bf\u3002\u672c\u5b9e\u9a8c\u4ee5 EXT2 \u4e3a\u6a21\u677f\uff0c\u5b9e\u73b0\u4e00\u4e2a\u9752\u6625\u7248\u6587\u4ef6\u7cfb\u7edf\u3002 1.2 \u6587\u4ef6\u7cfb\u7edf\u7684\u57fa\u672c\u64cd\u4f5c \u00b6 1.2.1 \u6302\u8f7d \u00b6 \u8fd9\u91cc \u6709\u66f4\u591a\u8bb2\u89e3\u6302\u8f7d\u7684\u8d44\u6599 \u901a\u5e38\u6765\u8bb2\uff0c\u4f7f\u7528\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u7684\u7b2c\u4e00\u6b65\u662f \u6302\u8f7d\uff08mount\uff09 \uff0c\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u5728\u4f7f\u7528Linux\u7684\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u8fd9\u4e2a\u6b65\u9aa4\u5462\uff1f\u8fd9\u662f\u7531\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u4e3a\u4e86\u7b80\u5316\u7528\u6237\u64cd\u4f5c\uff0c \u81ea\u52a8\u5e2e\u52a9 \u6211\u4eec\u8fdb\u884c\u4e86\u8fd9\u4e2a\u6b65\u9aa4\u3002\u76f8\u5173\u6587\u4ef6\u53ef\u4ee5\u5728 /etc/fstab \u4e2d\u67e5\u770b\uff1a [root@localhost tests]# cat /etc/fstab # # /etc/fstab # Created by anaconda on Sun Oct 3 03 :53:55 2021 # # Accessible filesystems, by reference, are maintained under '/dev/disk/' . # See man pages fstab ( 5 ) , findfs ( 8 ) , mount ( 8 ) and/or blkid ( 8 ) for more info. # # After editing this file, run 'systemctl daemon-reload' to update systemd # units generated from this file. # /dev/mapper/openeuler-root / ext4 defaults 1 1 UUID=ee2c1ea8-62de-4241-8742-7cba36a7eaf9 /boot ext4 defaults 1 2 /dev/mapper/openeuler-swap none swap defaults 0 0 \u8fd9\u91cc\u4ee5\u7b2c\u4e00\u884c\u4e3a\u4f8b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5c06\u8bbe\u5907 /dev/mapper/openeuler-root \u4ee5 EXT4 \u6587\u4ef6\u7cfb\u7edf\u5f62\u5f0f\uff0c\u6302\u8f7d\u5230\u6839\u76ee\u5f55 / \u4e0b\uff0c\u4ece\u800c\u8ba9\u6211\u4eec\u6709\u4e86\u8bbf\u95ee /dev/mapper/openeuler-root \u5b58\u50a8\u8bbe\u5907\u7684\u80fd\u529b\u3002 \u7b49\u7b49 \uff0c\u4ec0\u4e48\u53eb \u5c06\u8bbe\u5907xxx \u4ee5 xxx\u6587\u4ef6\u7cfb\u7edf \u5f62\u5f0f\uff0c \u6302\u8f7d \u5230 xxx\u76ee\u5f55 \u4e0b\uff1f\u6302\u8f7d\u5230\u5e95\u662f\u4ec0\u4e48\uff1f\u6211\u4eec\u6765\u4e3e\u4e2a\u4f8b\u5b50\u4f83\u4e00\u4f83\u3002 Step1\uff1a\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u624b\u91cc\u6709\u4e00\u4e2a\u91d1\u58eb\u987fU\u76d8 Step2\uff1a\u73b0\u5728\uff0c\u6211\u4eec\u5728\u4e3b\u673a\u4e0a\u63d2\u5165\u8fd9\u4e2aU\u76d8 \u5728 Windows \u7cfb\u7edf\u4e0a\uff0c\u53ef\u4ee5\u770b\u5230\u4e0b\u9762\u7684\u663e\u793a\uff1a \u5e73\u65f6\u53ef\u80fd\u6ca1\u6709\u6ce8\u610f \uff0c\u4f46\u8fd9\u65f6\uff0c\u4f60\u53ef\u80fd\u6ce8\u610f\u5230\u4e86\u91d1\u58eb\u987fU\u76d8\u7684 \u5c5e\u6027 \u4e2d\uff0c\u6709\u4e00\u680f\u544a\u8bc9\u4e86\u6211\u4eec\u8fd9\u4e2aU\u76d8\u662f FAT32\u6587\u4ef6\u7cfb\u7edf \u3002 \u4e8b\u5b9e\u4e0a \uff0c\u5f53\u6211\u4eec\u63d2\u5165U\u76d8\u540e\uff0cWindows \u81ea\u52a8\u8bc6\u522b \u51fa\u8be5U\u76d8\u4e0a\u6587\u4ef6\u5b58\u50a8\u7684\u683c\u5f0f\u662fFAT32\uff0c\u56e0\u6b64 \u5b83\u81ea\u52a8\u5c06\u91d1\u58eb\u987fU\u76d8\u4ee5FAT32\u6587\u4ef6\u7cfb\u7edf\u683c\u5f0f\u6302\u8f7d\u5230\u4e86Windows\u76ee\u5f55\u7ed3\u6784 \u4e2d\u3002 \u800c\u5728 Linux \u7cfb\u7edf\u4e0a\uff0c\u6211\u4eec\u53ef\u80fd\u5e76\u6ca1\u6709\u8fd9\u4e48\u597d\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u5f53\u63d2\u5165\u91d1\u58eb\u987fU\u76d8\u540e\uff0c\u6211\u4eec\u53ea\u53d1\u73b0\u5728 /dev \u76ee\u5f55\u4e0b\u591a\u51fa\u4e86\u4e00\u4e2a\u5f02\u7c7b\uff1a \u4e00\u822c\u6765\u8bf4\uff0c\u8bbe\u5907 sdb1 \u88c5\u6587\u4ef6\u7684\u8bbe\u5907\u3002\u90a3\u4e48\uff0c\u6211\u4eec \u662f\u5426\u53ef\u4ee5\u5411Windows\u90a3\u6837\uff0c\u76f4\u63a5\u5bf9\u5b83\u8bbf\u95ee\u5462 \uff1f\u6765\u8bd5\u8bd5\uff1a [root@localhost dev]# cd sdb1 bash: cd: sdb1: Not a directory [root@localhost dev]# ls sdb1/ ls: cannot access 'sdb1/': Not a directory \u5f88\u9057\u61be\uff0c\u5e76\u4e0d\u884c\u3002\u8fd9\u662f\u56e0\u4e3a U\u76d8sdb1 \u8fd8\u6ca1\u6709\u88ab \u6302\u8f7d \u5230Linux\u76ee\u5f55\u4e0b\uff0c\u6b64\u65f6Linux\u4e0d\u77e5\u9053\u8fd9\u4e2aU\u76d8\u91cc\u9762\u7684\u6587\u4ef6\u662f\u4ec0\u4e48\uff0c\u53ea\u80fd\u77e5\u9053\u8fd9\u91cc\u8fd9\u4e2a\u6709\u4e2aU\u76d8\u8bbe\u5907\u3002 \u6211\u4eec\u77e5\u9053\u8fd9\u4e2aU\u76d8\u91cc\u88c5\u7684\u662f FAT32 \u6587\u4ef6\u7cfb\u7edf\uff0c\u5728Linux\u4e2d\uff0c FAT32 \u53c8\u540d VFAT \uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5 \u5c06\u8bbe\u5907sdb1 \u4ee5 VFAT\u6587\u4ef6\u7cfb\u7edf \u5f62\u5f0f\uff0c \u6302\u8f7d \u5230 /mnt\u76ee\u5f55 \u4e0b\uff0c\u901a\u8fc7\u8bbf\u95ee /mnt \u76ee\u5f55\u6765 \u67e5\u770bU\u76d8\u4e2d\u7684\u6587\u4ef6 \uff1a [root@localhost dev]# mount -t vfat sdb1 /mnt/ [root@localhost dev]# ls /mnt/ '???' '????PPT.pptx' '?????' '???????.pptx' '??????' '???_???_??_??_????.pptx' '???????' pynq_z2_v2.6.0.zip '????????' Deadpool \u8fd8\u771f\u6210\u4e86\uff01 Step3\uff1a\u73b0\u5728\uff0c\u6211\u4eec\u6765\u7f15\u4e00\u7f15\u6302\u8f7d\u7684\u903b\u8f91 \u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06U\u76d8\u62bd\u8c61\u770b\u4f5c\u4e00\u6bb5\u8fde\u7eed\u7684\u5b58\u50a8\u7a7a\u95f4\uff1a \u8fd9\u4e2a\u7269\u7406\u5b58\u50a8\u7a7a\u95f4\u4e0a\u7528 FAT32\u7c7b\u578b \u7684\u6587\u4ef6\u7cfb\u7edf\u4fdd\u5b58\u7740\u8bb8\u591a\u6587\u4ef6\uff08\u53ef\u80fdFAT32\u6587\u4ef6\u5e03\u5c40\u4e0d\u957f\u4e0b\u9762\u8fd9\u6837\uff0c \u4e0d\u8fc7\u5dee\u4e0d\u591a\u7406\u89e3\u5c31\u884c\u4e86 \uff09 \u63a5\u7740\uff0c\u6211\u4eec\u4f7f\u7528 mount \u547d\u4ee4\u544a\u8bc9Linux\uff0c\u8fd9\u4e2aU\u76d8\u7528\u7684\u662fFAT32\u6587\u4ef6\u7cfb\u7edf\uff0c \u4f60\u7528FAT32\u6587\u4ef6\u7cfb\u7edf\u4ee3\u7801\u89c4\u5219\u6765\u8bbf\u95ee\u5b83\u5c31\u884c\u4e86 \u3002\u63a5\u7740\uff0c\u6211\u4eec\u540c\u6837\u8981\u8bf4\u660e\u6211\u4eec\u60f3 \u5c06\u54ea\u4e2a\u76ee\u5f55\u4f5c\u4e3a\u8bbf\u95eeU\u76d8\u7684\u5165\u53e3 \uff0c\u5c31\u5728 /mnt \u76ee\u5f55\u4e0b\u5427\uff01\u4e8e\u662f\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u5728 /mnt \u76ee\u5f55\u4e0b\uff0c\u4ee5 FAT32 \u6587\u4ef6\u7cfb\u7edf\u6765\u8bbf\u95eeU\u76d8\u4e0a\u7684\u6587\u4ef6\u4e86\u3002 \u5728\u6211\u4eec\u7528\u6237\u6765\u770b\uff0c\u6302\u8f7d\u4e86U\u76d8\u540e\uff0cLinux\u7684\u76ee\u5f55\u6811\u5c31\u53d8\u6210\u4e0b\u9762\u8fd9\u4e2a\u6837\u5b50\u4e86\uff1a 1.2.2 \u5378\u8f7d \u00b6 \u5378\u8f7d\u64cd\u4f5c \u4e0e \u6302\u8f7d\u64cd\u4f5c \u76f8\u5bf9\u5e94\uff0c\u5728Windows\u4e0a\u6765\u8bf4\uff0c\u5c31\u7c7b\u4f3c\u4e8e \u201d\u53f3\u952eU\u76d8\uff0c\u5b89\u5168\u5f39\u51fa\u201c \u4e00\u6837\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6bcf\u4e2a\u6587\u4ef6\u7cfb\u7edf\u5728\u5f00\u53d1\u7684\u65f6\u5019\u90fd\u8981\u8bbe\u8ba1\u5bf9\u5e94\u7684 \u6302\u8f7d\u4e0e\u5378\u8f7d \u65b9\u6cd5\uff0c\u5b83\u4eec\u9700\u8981 \u5728\u5378\u8f7d\u65f6 \u4fdd\u5b58\u8bbe\u5907\u7684\u5fc5\u8981\u72b6\u6001\uff08\u6bd4\u5982 \u5f53\u524d\u8bbe\u5907\u7684\u7a7a\u95f2\u5927\u5c0f \u7b49\uff09\u3002 \u4e0d\u6b63\u5e38\u7684\u5378\u8f7d\u4f1a\u5bfc\u81f4\u9c81\u68d2\u6027\u5dee\u7684\u6587\u4ef6\u7cfb\u7edf\u76f4\u63a5\u5d29\u6e83\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0b\u4e00\u6b21\u7684\u6302\u8f7d\u5f88\u53ef\u80fd\u76f4\u63a5\u5931\u8d25 \u5728Linux\u4e2d\uff0c\u5378\u8f7d\u6587\u4ef6\u7cfb\u7edf\u7684\u65b9\u5f0f\u5982\u4e0b\uff0c\u6211\u4eec\u8fd8\u662f\u4ee5\u521a\u624d\u6302\u8f7d\u7684\u91d1\u58eb\u987fU\u76d8\u4e3a\u4f8b\uff1a [root@localhost dev]# umount /mnt/ [root@localhost dev]# ls /mnt/ [root@localhost dev]# \u6b64\u65f6\uff0cU\u76d8\u5bf9\u5e94\u7684\u6240\u6709\u6587\u4ef6\u4eceLinux\u76ee\u5f55\u6811\u4e2d\u79fb\u9664\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5 \u6b63\u5e38\u62d4\u9664U\u76d8 \u4e86\u3002 1.2.3 \u66f4\u591a\u64cd\u4f5c \u00b6 \u5176\u4ed6\u66f4\u591a\u76f8\u5173\u6587\u4ef6\u7cfb\u7edf\u7684\u64cd\u4f5c\u90fd\u6bd4\u8f83\u5e38\u89c1\uff0c\u8fd9\u91cc\u5c06\u4e00\u4e9b\u5e38\u7528\u6307\u4ee4\u518d\u7b80\u5355\u63d0\u4e00\u4e0b\uff1a ls ls \u6307\u4ee4\u662f list \u7684\u7f29\u5199\uff0c\u5176\u529f\u80fd\u5c31\u662f \u5217\u51fa\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6/\u76ee\u5f55 \uff0c\u5927\u5bb6\u5728\u5b66\u4e60 xv6 \u7684\u8fc7\u7a0b\u4e2d\u4e5f\u6709\u6240\u63a5\u89e6\uff0c\u8fd9\u91cc\u4e0d\u5728\u4ecb\u7ecd\uff1b mv mv \u6307\u4ee4\u662f move \u7684\u7f29\u5199\uff0c\u5176\u529f\u80fd\u662f \u526a\u5207 \u67d0\u4e2a\u6587\u4ef6\u3002\u4e8b\u5b9e\u4e0a\uff0c mv \u6307\u4ee4\u8fd8\u5e38\u5e38\u88ab\u7528\u4e8e \u6587\u4ef6\u7684\u91cd\u547d\u540d \u64cd\u4f5c\uff0c\u4f8b\u5982\uff1a [root@localhost mnt]# touch her [root@localhost mnt]# ls her [root@localhost mnt]# mv her me [root@localhost mnt]# ls me [root@localhost mnt]# cp cp \u6307\u4ee4\u662f copy \u7684\u7f29\u5199\uff0c\u5176\u529f\u80fd\u662f \u590d\u5236 \u67d0\u4e2a\u6587\u4ef6\uff0c cp -r \u53ef\u4ee5\u590d\u5236\u76ee\u5f55\uff1b rm rm \u6307\u4ee4\u662f remove \u7684\u7f29\u5199\uff0c\u5176\u529f\u80fd\u662f \u5220\u9664 \u67d0\u4e2a\u6587\u4ef6\uff0c\u540c\u6837 rm -r \u53ef\u4ee5\u5220\u9664\u76ee\u5f55\u3002\u5f53\u7136\uff0c\u6709\u4e00\u4e2a\u4e1a\u754c\u6897\uff1a rm -rf \u5220\u5e93\u8dd1\u8def \uff0c\u8fd9\u91cc f \u4ee3\u8868 force \uff0c\u4e5f\u5c31\u662f\u5f3a\u5236\u5220\u9664\u3002\u5982\u679c\u4f60\u4e00\u4e0d\u5c0f\u5fc3\u4f7f\u7528\u4e86 rm -rf / \uff0c\u90a3\u4e48\u4f60\u7684Linux\u56de\u5929\u4e4f\u672f\u4e86\uff1b cd cd \u6307\u4ee4\u662f change directory \u7684\u7f29\u5199\uff0c\u6211\u4eec\u7ecf\u5e38\u4f7f\u7528 cd \u6307\u4ee4\u6765\u8fdb\u884c\u8def\u5f84\u7684\u5207\u6362\uff1b --help \u4e0a\u9762\u8bf4\u4e86\u4e00\u5927\u5806\uff0c\u4f46\u8fdc\u8fdc\u8fd8\u6ca1\u628a\u6240\u6709\u547d\u4ee4\u90fd\u4ecb\u7ecd\u5f97\u5b8c\u6574\u3001\u6e05\u695a\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u6bcf\u4e2a\u547d\u4ee4\u90fd\u6709\u4e2a --help \u53c2\u6570\u53ef\u9009\uff0c\u67e5\u770b --help \u53ef\u4ee5\u5f88\u5feb\u8ba9\u4f60\u77e5\u9053\u5404\u4e2a\u547d\u4ee4\u7684\u7528\u6cd5\u3001\u53c2\u6570\u7684\u610f\u4e49\uff0c\u4f8b\u5982\uff1a [root@localhost mnt]# ln --help Usage: ln [OPTION]... [-T] TARGET LINK_NAME or: ln [OPTION]... TARGET or: ln [OPTION]... TARGET... DIRECTORY or: ln [OPTION]... -t DIRECTORY TARGET.. ... ln ln\u662flink\u7684\u7f29\u5199\uff0c\u4f7f\u7528\u6b64\u547d\u4ee4\u7528\u6765\u4e3a\u6587\u4ef6\u521b\u4ef6\u94fe\u63a5\uff0c\u8fde\u63a5\u7c7b\u578b\u5206\u4e3a\u786c\u94fe\u63a5\u548c\u8f6f\u94fe\u63a5\u4e24\u79cd\uff0c\u9ed8\u8ba4\u7684\u8fde\u63a5\u7c7b\u578b\u662f\u786c\u94fe\u63a5\u3002\u786c\u94fe\u63a5\u8bf4\u767d\u4e86\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u6587\u4ef6\u7d22\u5f15\u8282\u70b9\uff0c\u7cfb\u7edf\u5e76\u4e0d\u4e3a\u5b83\u91cd\u65b0\u5206\u914dinode\uff1b\u8f6f\u94fe\u63a5\u53c8\u53eb\u7b26\u53f7\u94fe\u63a5\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5305\u542b\u4e86\u53e6\u4e00\u4e2a\u6587\u4ef6\u7684\u8def\u5f84\u540d\u3002\u53ef\u4ee5\u662f\u4efb\u610f\u6587\u4ef6\u6216\u76ee\u5f55\uff0c\u53ef\u4ee5\u94fe\u63a5\u4e0d\u540c\u6587\u4ef6\u7cfb\u7edf\u7684\u6587\u4ef6\uff0c\u548cwin\u4e0b\u7684\u5feb\u6377\u65b9\u5f0f\u5dee\u4e0d\u591a\u3002 1.3 EXT2\u6587\u4ef6\u7cfb\u7edf\u7684\u6784\u6210 \u00b6 \u4ecb\u7ecd\u5b8c\u4e86\u6587\u4ef6\u7cfb\u7edf\u4ee5\u53ca\u6587\u4ef6\u7cfb\u7edf\u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u6211\u4eec\u6765\u6b63\u5f0f\u770b\u770bEXT2\u6587\u4ef6\u7cfb\u7edf\u3002 EXT2\u6587\u4ef6\u7cfb\u7edf\u5e38\u5e38\u88ab\u7528\u4e8e \u78c1\u76d8\u8bbe\u5907 \u7684\u8bbf\u95ee\u3002\u4e00\u4e2a\u7269\u7406\u78c1\u76d8\u53ef\u4ee5\u5212\u5206\u4e3a\u591a\u4e2a\u78c1\u76d8\u5206\u533a\uff0c\u6bcf\u4e2a\u78c1\u76d8\u5206\u533a\u53ef\u4ee5\u4ece\u903b\u8f91\u4e0a\u770b\u6210\u662f\u4ece0\u5f00\u59cb\u7f16\u53f7\u7684\u5927\u91cf\u6247\u533a\uff0c\u5404\u81ea\u53ef\u4ee5\u683c\u5f0f\u5316\u7a0b\u4e0d\u540c\u7c7b\u578b\u7684\u6587\u4ef6\u7cfb\u7edf\uff08\u5982EXT2\u3001NTFS\u7b49\uff09\u3002\u5982\u679c \u683c\u5f0f\u5316 \u6210EXT2\u6587\u4ef6\u7cfb\u7edf\uff0c\u5219\u5176\u5185\u90e8\u6309\u7167EXT2\u7684\u89c4\u8303\uff0c\u5c06\u78c1\u76d8\u76d8\u5757\u7ec4\u7ec7\u6210 \u8d85\u7ea7\u5757 \u3001 \u7ec4\u63cf\u8ff0\u7b26 \u548c \u4f4d\u56fe \u3001 \u7d22\u5f15\u8282\u70b9 \u3001 \u76ee\u5f55 \u7b49\u7ba1\u7406\u6570\u636e\uff0c\u653e\u5728\u5206\u533a\u524d\u7aef\u79f0\u4e3a \u5143\u6570\u636e\u533a \uff0c\u5269\u4f59\u7a7a\u95f4\u7528\u4e8e \u4fdd\u5b58\u6587\u4ef6\u6570\u636e \u3002 \u8fd9\u4e00\u6bb5\u4ecb\u7ecd\u4e2d\u51fa\u73b0\u4e86\u4e24\u4e2a\u65b0\u6982\u5ff5\uff1a \u78c1\u76d8\u5206\u533a \u4e0e \u683c\u5f0f\u5316 \uff0c\u6211\u4eec\u6765\u7b80\u5355\u7406\u89e3\u4e00\u4e0b\uff1a \u78c1\u76d8\u5206\u533a \u6211\u4eec\u7684\u7b14\u8bb0\u672c\u901a\u5e38\u53ea\u6709\u4e00\u5757SATA\u78c1\u76d8\uff0c\u4e3a\u4e86\u65b9\u4fbf\u7528\u6237\u8fdb\u884c\u6570\u636e\u7ba1\u7406\uff0c\u6bd4\u5982\uff1a\u6211\u60f3\u5212\u5206\u78c1\u76d8\u7684100\u4e2aG\u4f5c\u4e3a\u6e38\u620f\u5b58\u653e\u76d8\uff0c400\u4e2aG\u4f5c\u4e3a \u5b66\u4e60\u8d44\u6599 \u3002\u6211\u60f3\u8ba9\u6e38\u620f\u76d8\u7528 EXT2 \u7ba1\u7406\uff0c\u5b66\u4e60\u8d44\u6599\u7528 EXT3 \u7ba1\u7406\uff0c\u90a3\u4e48\u4fbf\u6709\u4e86\u78c1\u76d8\u5206\u533a\u7684\u6982\u5ff5\uff1a \u683c\u5f0f\u5316 \u6211\u4eec\u8fd8\u662f\u4ee5\u91d1\u58eb\u987fU\u76d8\u4e3a\u4f8b\uff0cU\u76d8\u4e00\u751f\u4ea7\u51fa\u6765\u5c31\u6709\u6587\u4ef6\u7cfb\u7edf\u5417\uff1f\u53ef\u80fd\u6709\uff1a\uff09\uff0c\u4f46\u662f\u5f88\u591a\u65f6\u5019\u521a\u51fa\u5382\u7684U\u76d8\u90fd\u662f \u5e72\u5e72\u51c0\u51c0 \u7684\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u5176\u8fdb\u884c \u683c\u5f0f\u5316 \uff0c\u4f7f\u4e4b\u5e26\u6709\u7279\u5b9a\u6587\u4ef6\u7cfb\u7edf\u7684\u7279\u5f81\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u60f3\u7528 EXT2 \u6587\u4ef6\u7cfb\u7edf\u6765\u8bbf\u95ee\u8fd9\u4e2aU\u76d8\uff0c\u5728Linux\u4e2d\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\uff1a [root@localhost mnt]# mkfs.EXT2 sdb1 [root@localhost mnt]# \u8fd9\u6837\u505a\u5c31\u628a\u6574\u4e2a\u8bbe\u5907\u7ed9\u683c\u5f0f\u5316\u4e86\uff0c\u63a5\u7740\u5c31\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u6302\u8f7dU\u76d8\uff1a [root@localhost mnt]# mount -t EXT2 sdb1 /mnt/ [root@localhost mnt]# 1.3.1 \u6574\u4f53\u5e03\u5c40 \u00b6 EXT2\u6587\u4ef6\u7cfb\u7edf\u5c06\u76d8\u5757\u5206\u6210\u4e24\u5927\u7c7b\uff1a\u4fdd\u5b58\u5143\u6570\u636e\uff08\u7ba1\u7406\u6570\u636e\uff09\u7684 \u5143\u6570\u636e\u76d8\u5757 \uff0c\u4ee5\u53ca\u5b58\u653e\u6587\u4ef6\u5185\u5bb9\u6570\u636e\u7684 \u6570\u636e\u76d8\u5757 \u3002\u672c\u5b9e\u9a8c\u4e2d\uff0c\u4e3a\u4e86\u964d\u4f4e\u5b9e\u9a8c\u96be\u5ea6\uff0c\u7b80\u5316\u4e86\u5143\u6570\u636e\u533a\u7684\u7ed3\u6784\uff08\u7531\u8d85\u7ea7\u5757\u548cinode\u6570\u7ec4\u6784\u6210\uff09\u3002\u7b80\u5316\u540e\u7684EXT2\u6587\u4ef6\u7cfb\u7edf\u7684\u57fa\u672c\u5e03\u5c40\u5982\u4e0b\u6240\u793a\uff1a \u7cfb\u7edf\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b\u4e94\u4e2a\u90e8\u5206\uff1a superblock \uff1a\u8d85\u7ea7\u5757\uff0c\u5305\u542b\u6574\u4e2a\u7cfb\u7edf\u7684\u603b\u4f53\u4fe1\u606f; \u7d22\u5f15\u8282\u70b9\u4f4d\u56fe \uff1a\u8bb0\u5f55\u7740 \u7d22\u5f15\u8282\u70b9 \u8868\u7684\u4f7f\u7528\u60c5\u51b5\uff0c \u75281\u4e2a\u6bd4\u7279 \u8bb0\u5f55\u67d0\u4e00\u4e2a\u7d22\u5f15\u8282\u70b9\u662f\u5426\u88ab\u4f7f\u7528\uff1b \u6570\u636e\u5757\u4f4d\u56fe \uff1a\u8bb0\u5f55\u7740 \u6570\u636e\u5757 \u7684\u4f7f\u7528\u60c5\u51b5\uff0c \u75281\u4e2a\u6bd4\u7279 \u8bb0\u5f55\u67d0\u4e00\u4e2a\u6570\u636e\u5757\u662f\u5426\u88ab\u5360\u7528\uff1b \u7d22\u5f15\u8282\u70b9 \uff08inode\uff09 \uff1a\u8bb0\u5f55\u7740\u6587\u4ef6\u7684\u5143\u6570\u636e\uff0c\u6bcf\u4e2a\u6587\u4ef6\u90fd\u4e0e\u4e00\u4e2ainode\u5bf9\u5e94\uff0c\u4f46\u4e00\u4e2ainode\u53ef\u80fd\u5bf9\u5e94\u591a\u4e2a\u6587\u4ef6\uff08\u786c\u94fe\u63a5\uff09\u3002\u5728 \u672c\u5b9e\u9a8c\u4e2d\u53ef\u4ee5\u8ba4\u4e3a\u4e00\u4e2ainode\u5bf9\u5e94\u4e00\u4e2a\u6587\u4ef6 \u3002 \u6570\u636e\u5757 \uff1a\u8bb0\u5f55\u6587\u4ef6\u5185\u5bb9. 1.3.2 \u8d85\u7ea7\u5757 \u00b6 \u8d85\u7ea7\u5757\u662f\u6587\u4ef6\u7cfb\u7edf\u7684 \u8d77\u70b9\u7ed3\u6784 \uff0c\u8bb0\u5f55\u4e86\u6587\u4ef6\u7cfb\u7edf\u5168\u5c40\u6027\u7684\u4e00\u4e9b\u4fe1\u606f\u3002\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u53c2\u8003\u7684\u8d85\u7ea7\u5757\u7ed3\u6784\u4f53\u793a\u4f8b\uff1a struct super_block_d { uint32_t magic_num ; // \u5e7b\u6570 int max_ino ; // \u6700\u591a\u652f\u6301\u7684\u6587\u4ef6\u6570 int map_inode_blks ; // inode\u4f4d\u56fe\u5360\u7528\u7684\u5757\u6570 int map_inode_offset ; // inode\u4f4d\u56fe\u5728\u78c1\u76d8\u4e0a\u7684\u504f\u79fb int map_data_blks ; // data\u4f4d\u56fe\u5360\u7528\u7684\u5757\u6570 int map_data_offset ; // data\u4f4d\u56fe\u5728\u78c1\u76d8\u4e0a\u7684\u504f\u79fb }; magic_num \uff1a\u5e7b\u6570\u3002\u7528\u4e8e\u8bc6\u522b\u6587\u4ef6\u7cfb\u7edf\u3002\u6bd4\u5982\u8bf4\uff0c\u5982\u679c\u5b9e\u73b0\u7684\u6587\u4ef6\u7cfb\u7edf\u5e7b\u6570\u4e3a 0x52415453 \uff0c\u90a3\u4e48\u5982\u679c\u8bfb\u5230\u7684\u5e7b\u6570\u4e0d\u7b49\u4e8e 0x52415453 \uff0c\u5219\u8868\u793a\u5f53\u524d\u78c1\u76d8\u4e2d\u65e0\u7cfb\u7edf\uff0c\u7cfb\u7edf\u635f\u574f\uff0c\u6216\u8005\u662f\u5176\u4ed6\u4e0d\u8bc6\u522b\u7684\u6587\u4ef6\u7cfb\u7edf\uff1b max_ino \uff1a\u6700\u591a\u652f\u6301\u7684\u6587\u4ef6\u6570\u3002\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u5141\u8bb8\u8be5\u6587\u4ef6\u7cfb\u7edf\u5177\u6709\u6587\u4ef6\u6570\u4e0a\u9650\uff1b map_inode_blks \uff1ainode\u4f4d\u56fe\u5360\u7528\u7684\u5757\u6570\u3002\u6bcf\u4e2a \u5757\u7684\u5927\u5c0f\u7b49\u4e8e\u78c1\u76d8\u8bbe\u5907\u7684IO\u5927\u5c0f\uff08\u5229\u7528ddriver\u7684ioctl\u83b7\u53d6\uff09 \uff1b map_inode_offset \uff1ainode\u4f4d\u56fe\u5728\u78c1\u76d8\u4e0a\u7684\u504f\u79fb\u3002\u901a\u8fc7 map_inode_offset \u548c map_inode_blks \u5b57\u6bb5\uff0c\u4fbf\u53ef\u8bfb\u51fa\u6574\u4e2ainode\u4f4d\u56fe\uff1b map_data_blks \uff1a\u4e0e map_inode_blks \u76f8\u540c\uff0c\u4e0d\u518d\u8d58\u8ff0\uff1b map_data_offset \uff1a\u4e0e map_inode_offset \u76f8\u540c\uff0c\u4e0d\u518d\u8d58\u8ff0\uff1b \u5982\u4f55\u51b3\u5b9a\u4f4d\u56fe\u5927\u5c0f\u5462 \uff1f\u8fd9\u91cc\u7ed9\u51fa\u51e0\u4e2a\u65b9\u6848\uff1a \u5047\u8bbe\u4f30\u7b97\u3002 \u5047\u5b9a\u6bcf\u4e2a\u6587\u4ef6\u5177\u6709\u56fa\u5b9a\u5927\u5c0f \uff0c\u4ece\u800c\u4f30\u7b97\u6574\u4e2a\u6587\u4ef6\u7cfb\u7edf\u53ef\u4ee5 \u7ba1\u7406\u591a\u5c11\u6587\u4ef6 \uff0c\u4ece\u800c\u8ba1\u7b97\u4f4d\u56fe\u5927\u5c0f\uff1b \u89c4\u5b9a\u5927\u5c0f\u3002\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u884c \u89c4\u5b9a\u4f4d\u56fe \u7684\u5927\u5c0f\uff0c\u53ea\u8981 \u4fdd\u8bc1\u6307\u4ee4\u8fd0\u884c\u6210\u529f \u5373\u53ef\uff1b 1.3.3 \u6587\u4ef6\u7684\u8868\u793a \u00b6 \u5bf9\u4e8e\u6bcf\u4e2a\u6587\u4ef6\uff0c\u90fd\u4f1a\u6709\u4e00\u4e2ainode\u7ed3\u6784\u4f53\u5305\u542b\u5176\u5143\u6570\u636e\uff08\u6587\u4ef6\u7c7b\u578b\uff0c\u6587\u4ef6\u5927\u5c0f\uff09\u7b49\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5316\u7684inode\u793a\u4f8b\u3002 struct inode_d { int ino ; // \u5728inode\u4f4d\u56fe\u4e2d\u7684\u4e0b\u6807 int size ; // \u6587\u4ef6\u5df2\u5360\u7528\u7a7a\u95f4 int link ; // \u94fe\u63a5\u6570 FILE_TYPE ftype ; // \u6587\u4ef6\u7c7b\u578b\uff08\u76ee\u5f55\u7c7b\u578b\u3001\u666e\u901a\u6587\u4ef6\u7c7b\u578b\uff09 int dir_cnt ; // \u5982\u679c\u662f\u76ee\u5f55\u7c7b\u578b\u6587\u4ef6\uff0c\u4e0b\u9762\u6709\u51e0\u4e2a\u76ee\u5f55\u9879 int block_pointer [ 6 ]; // \u6570\u636e\u5757\u6307\u9488\uff08\u53ef\u56fa\u5b9a\u5206\u914d\uff09 }; \u6587\u4ef6\u7684\u5185\u5bb9\u5e76 \u4e0d\u4f1a\u4fdd\u5b58 \u5728inode\u91cc\uff0c\u800c\u662f \u4fdd\u5b58 \u5728\u53e6\u5916\u7684 \u6570\u636e\u5757 \u4e2d\u3002inode\u91cc \u4fdd\u5b58\u4e86\u76f8\u5e94\u6570\u636e\u5757\u7684\u7d22\u5f15\u503c \u3002\u8bfb\u5199\u6587\u4ef6\u65f6\u5219\u901a\u8fc7\u7d22\u5f15\u503c\u627e\u5230\u76f8\u5e94\u7684\u6570\u636e\u5757\u6765\u8bfb\u5199\u3002\u539f\u7406\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u6bcf\u4e2a\u7d22\u5f15\u8282\u70b9\u5185\u5305\u542b block_point \u6570\u7ec4\u7528\u4e8e\u8bb0\u5f55\u6587\u4ef6\u7684\u6570\u636e\u5757\u6240\u5728\u4f4d\u7f6e\uff08\u7f16\u53f7\uff09\u3002 EXT2 \u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684 \u6bcf\u4e2a\u6570\u636e\u5757\u5927\u5c0f\u4e3a\u4e24\u4e2a512B\u7684\u7269\u7406\u78c1\u76d8\u5757 \uff08\u53731KiB\uff09\uff0c\u90a3\u4e48\u91c7\u7528\u76f4\u63a5\u7d22\u5f15\u65b9\u5f0f\uff0c\u4e00\u4e2a\u6587\u4ef6\u4e0d\u80fd\u8d85\u8fc7 6\u4e2a\uff08\u6570\u636e\u5757\uff09 * 1KB\uff08\u6570\u636e\u5757\u5927\u5c0f\uff09= 6KB\u5927\u5c0f\uff1b\u5f53\u6587\u4ef6\u8d85\u8fc76KB\u65f6\uff0c\u9700\u8981\u7528\u4e00\u7ea7\u95f4\u63a5\u7d22\u5f15\uff0c\u5982\u679c\u6587\u4ef6\u7ee7\u7eed\u589e\u5927\uff0c\u5c31\u9700\u8981\u4e8c\u7ea7\u6216\u4e8c\u7ea7\u4ee5\u4e0a\u95f4\u63a5\u7d22\u5f15\u3002\uff08 \u6ce8\uff1a\u95f4\u63a5\u7d22\u5f15\u5c5e\u4e8e\u9009\u505a\u529f\u80fd \uff09 link \uff1a\u6587\u4ef6\u94fe\u63a5\u6570\uff08 \u6ce8\uff1a\u6587\u4ef6\u8f6f\u94fe\u63a5\u4e0e\u786c\u94fe\u63a5\u5c5e\u4e8e\u9009\u505a\u529f\u80fd \uff09 ftype \uff1a\u6587\u4ef6\u7c7b\u578b\u3002\u53ef\u81ea\u5b9a\u4e49\u679a\u4e3e\u7c7b\u578b\uff0c\u65b9\u4fbf\u7f16\u7801\uff0c\u4f8b\u5982\uff1a typedef enum file_type { FILE , // \u666e\u901a\u6587\u4ef6 DIR // \u76ee\u5f55\u6587\u4ef6 } FILE_TYPE ; 1.3.4 \u6587\u4ef6\u5939\uff08\u76ee\u5f55\uff09\u7684\u8868\u793a \u00b6 \u6587\u4ef6\u5939\uff08\u76ee\u5f55\uff09\u7528\u4e8e\u5c06\u6574\u4e2a\u6587\u4ef6\u7cfb\u7edf\u7684\u6587\u4ef6\u7ed3\u6784 \u6309\u8def\u5f84\u540d\u8bbf\u95ee\u7684\u6811\u5f62\u7ec4\u7ec7\u7ed3\u6784\u6392\u5217 \u3002Ext2\u6587\u4ef6\u7cfb\u7edf\u5e76\u6ca1\u6709\u5355\u72ec\u5f62\u6210\u7528\u4e8e\u76ee\u5f55\u6570\u636e\u7684\u6570\u636e\u5757\uff0c\u800c\u662f \u5c06\u76ee\u5f55\u4e0e\u666e\u901a\u6587\u4ef6\u4e00\u6837\u5b58\u653e\u5728\u6570\u636e\u5757\u4e2d \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c \u6587\u4ef6\u5939\uff08\u76ee\u5f55\uff09\u5728Ext2\u4e2d\u7684\u5b58\u50a8\u65b9\u5f0f\u4e0e\u6587\u4ef6\u4e00\u81f4 \u3002\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u76ee\u5f55\u5728\u6570\u636e\u5757\u4e2d\u7684\u5185\u5bb9\u7531\u6587\u4ef6\u7cfb\u7edf\u76f4\u63a5\u7ba1\u7406\uff0c\u7528\u6237\u5e76\u4e0d\u80fd\u50cf\u5199\u666e\u901a\u6587\u4ef6\u4e00\u6837\u76f4\u63a5\u4f7f\u7528\u7f16\u8f91\u5668\u5199\u76ee\u5f55\u6570\u636e\u5757\u4e2d\u7684\u5185\u5bb9\u3002 \u76ee\u5f55\u5728\u5b58\u50a8\u7ba1\u7406\u4e0a\u548c\u666e\u901a\u6587\u4ef6\u76f8\u540c\u2014\u2014\u4e5f\u662f \u901a\u8fc7\u7d22\u5f15\u8282\u70b9\u6765\u7ba1\u7406\u76ee\u5f55\u9879\u6570\u636e\u7684 \uff0c\u53ea\u4e0d\u8fc7\u76ee\u5f55\u6570\u636e\u5757\u5185\u5bb9\u542b\u6709\u591a\u6761\u76ee\u5f55\u9879\u6570\u636e\u7ed3\u6784\uff0c\u5373\u76ee\u5f55\u6570\u636e\u5757\u4e2d\u7684\u5185\u5bb9\u662f\u76ee\u5f55\u9879\u7684\u6570\u7ec4\uff0c\u901a\u8fc7\u4e0a\u4e00\u7ea7\u76ee\u5f55\u9879\u5c06\u5176\u7c7b\u578b\u6807\u8bc6\u4e3a\u201c\u76ee\u5f55\u201d\u4ee5\u533a\u5206\u666e\u901a\u6587\u4ef6\u3002 \u6839\u76ee\u5f55\u6709\u56fa\u5b9a\u7684\u8d77\u70b9 \uff08\u4f8b\u5982Ext2\u6587\u4ef6\u7cfb\u7edf\u6839\u76ee\u5f55\u7684\u7d22\u5f15\u53f7\u4e3a2\uff09\uff0c\u56e0\u6b64\u6839\u76ee\u5f55\u6587\u4ef6\u5c31\u4e0d\u9700\u8981\u4e0a\u7ea7\u76ee\u5f55\u6765\u5b9a\u4f4d\u4e86\u3002 \u4e0b\u9762\u662f\u7b80\u5316\u7684 \u76ee\u5f55\u9879 \u7ed3\u6784\u4f53\u793a\u4f8b\uff1a struct dentry_d { char fname [ MAX_FILE_NAME ]; // \u6307\u5411\u7684ino\u6587\u4ef6\u540d FILE_TYPE ftype ; // \u6307\u5411\u7684ino\u6587\u4ef6\u7c7b\u578b int ino ; // \u6307\u5411\u7684ino\u53f7 int valid ; // \u8be5\u76ee\u5f55\u9879\u662f\u5426\u6709\u6548 }; \u5bf9\u4e8e\u76ee\u5f55\u4e2d\u7684\u6bcf\u4e00\u4e2a\u76ee\u5f55\u9879\u90fd\u5bf9\u5e94\u4e86\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u4e00\u4e2a\u6587\u4ef6/\u76ee\u5f55\u3002\u5177\u4f53\u8868\u793a\u65b9\u5f0f\u89c1\u4e0b\u56fe\uff1a \u56fe\u4e2d / \u76ee\u5f55\u4e0b\u7b2c\u4e8c\u4e2a\u540d\u4e3a JINX \u7684\u76ee\u5f55\u9879\u7684 valid \u5b57\u6bb5\u88ab\u6807\u8bb0\u4e3a0\uff0c \u8868\u793a\u8fd9\u4e00\u6587\u4ef6\u5df2\u88ab\u5220\u9664 \u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u7684\u5220\u9664\u65b9\u5f0f\uff0c\u6bd4\u5982 \u7528\u540e\u9762\u7684\u76ee\u5f55\u9879\u8986\u76d6\u88ab\u5220\u9664\u7684\u76ee\u5f55\u9879 \u3002 \u56fe\u4e2d /demo/ \u76ee\u5f55\u6307\u5411\u7684\u6570\u636e\u5757\u6ca1\u6709\u753b\u51fa\uff0c\u5176\u539f\u7406\u4e0e\u6839\u76ee\u5f55\u4e00\u81f4\u3002 1.3.5 \u5185\u5bb9\u7ed3\u6784\u7684\u8868\u793a \u00b6 \u5927\u5bb6\u53ef\u80fd\u6ce8\u610f\u5230\u6211\u4eec \u524d\u9762\u5c55\u793a\u7684\u6570\u636e\u7ed3\u6784 \u540e\u9762\u90fd\u5e26\u6709\u4e00\u4e2a _d \uff0c\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4ee3\u8868\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u662f\u5b58\u5728\u4e8e\u771f\u5b9e\u8bbe\u5907\u4e4b\u4e0a\u7684\uff0c\u5b83\u4eec\u5171\u540c\u6784\u5efa\u4e86\u6587\u4ef6\u7cfb\u7edf\u7684\u5e03\u5c40\u3002\u4f46\u6587\u4ef6\u7cfb\u7edf \u7ed3\u6784\u5e03\u5c40 \u4e0e \u6587\u4ef6\u7cfb\u7edf \u4e24\u8005\u8fd8\u662f\u6709\u4e00\u5b9a\u7684\u504f\u5dee\u3002\u8fd9\u662f\u56e0\u4e3a\u6587\u4ef6\u7cfb\u7edf\u4e0d\u5149\u8981\u8bbe\u8ba1\u5e03\u5c40\uff0c\u8fd8\u9700\u8981 \u9488\u5bf9\u5e03\u5c40 \u8bbe\u8ba1\u76f8\u5e94\u7684 \u5185\u5b58\u6570\u636e\u7ed3\u6784 \u6765\u65b9\u4fbf\u7ba1\u7406\u3002 \u6211\u4eec\u4e3e\u4e24\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u8fd9\u4e2a\u95ee\u9898\u3002 super_block \u7684\u5185\u5b58\u8868\u793a \u5728\u8bbe\u5907\u4e0a\uff0c\u8d85\u7ea7\u5757\u4e2d\u4ec5\u4ec5\u4fdd\u5b58\u4e86\u6587\u4ef6\u7cfb\u7edf\u7684\u4f4d\u56fe\u4f4d\u7f6e\uff0c\u6211\u4eec\u9700\u8981 \u5c06\u4f4d\u56fe\u8bfb\u5230\u5185\u5b58\u4e2d\u4ee5\u4fbf\u6211\u4eec\u8fdb\u884c\u8bbf\u95ee \uff1b\u6b64\u5916\uff0c\u4e3a\u4e86\u65b9\u4fbf\u67e5\u627e\u6839\u76ee\u5f55\uff0c\u6211\u4eec\u4e5f\u5b8c\u5168\u53ef\u4ee5\u5c06\u6839\u76ee\u5f55\u7ef4\u62a4\u5728\u8d85\u7ea7\u5757\u7684\u5185\u5b58\u8868\u793a\u4e2d\uff0c\u4ee5\u4fbf\u6211\u4eec\u5168\u5c40\u8bbf\u95ee\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u7b80\u5355\u8bbe\u8ba1\u8d85\u7ea7\u5757\u7684\u5185\u5b58\u8868\u793a\u5982\u4e0b\uff1a struct super_block { int max_ino ; uint8_t * map_inode ; // inode\u4f4d\u56fe uint8_t * map_data ; // data\u4f4d\u56fe struct dentry * root_dentry ; // \u6839\u76ee\u5f55dentry }; \u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u80fd\u65b9\u4fbf\u5730\u5bf9 inode \u4f4d\u56fe \u548c data \u4f4d\u56fe \u8fdb\u884c\u7ba1\u7406\uff0c\u5e76\u80fd\u591f\u901a\u8fc7 root_dentry \u8f7b\u677e\u8bbf\u95ee\u6839\u76ee\u5f55\uff0c\u4ece\u800c\u8fbe\u5230 \u5feb\u901f\u89e3\u6790\u8def\u5f84 \u7684\u76ee\u7684\u3002 inode \u7684\u5185\u5b58\u8868\u793a \u5728\u78c1\u76d8\u5e03\u5c40\u4e2d\uff0c\u6211\u4eec\u7684 inode \u5b9a\u4e49\u5982\u4e0b\uff1a struct inode_d { int ino ; // \u5728inode\u4f4d\u56fe\u4e2d\u7684\u4e0b\u6807 int size ; // \u6587\u4ef6\u5df2\u5360\u7528\u7a7a\u95f4 int link ; // \u94fe\u63a5\u6570 FILE_TYPE ftype ; // \u6587\u4ef6\u7c7b\u578b\uff08\u76ee\u5f55\u7c7b\u578b\u3001\u666e\u901a\u6587\u4ef6\u7c7b\u578b\uff09 int dir_cnt ; // \u5982\u679c\u662f\u76ee\u5f55\u7c7b\u578b\u6587\u4ef6\uff0c\u4e0b\u9762\u6709\u51e0\u4e2a\u76ee\u5f55\u9879 int block_pointer [ 6 ]; // \u6570\u636e\u5757\u6307\u9488\uff08\u53ef\u56fa\u5b9a\u5206\u914d\uff09 }; \u8fd9\u4e2a\u7ed3\u6784\u96be\u4ee5\u5bf9\u6307\u5411 inode \u7684 dentry \u8fdb\u884c\u8bbf\u95ee\uff0c\u4e5f\u5c31\u96be\u4ee5\u83b7\u5f97\u8be5\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u3002\u6b64\u5916\uff0c\u5bf9\u4e8e \u76ee\u5f55\u6587\u4ef6 \u800c\u8a00\uff0c\u5b83\u7f3a\u5c11\u4e00\u79cd \u5feb\u6377\u904d\u5386\u6bcf\u4e2a\u76ee\u5f55\u9879 \u7684\u65b9\u6cd5\uff0c\u56e0\u6b64\uff0c\u53ef\u4ee5\u7b80\u5355\u8bbe\u7f6e inode \u7684\u5185\u5b58\u7ed3\u6784\u5982\u4e0b\uff1a struct inode { int ino ; // \u5728inode\u4f4d\u56fe\u4e2d\u7684\u4e0b\u6807 int size ; // \u6587\u4ef6\u5df2\u5360\u7528\u7a7a\u95f4 int dir_cnt ; // \u76ee\u5f55\u9879\u6570\u91cf struct dentry * dentry ; // \u6307\u5411\u8be5inode\u7684dentry struct dentry * dentrys ; // \u6240\u6709\u76ee\u5f55\u9879 int block_pointer [ 6 ]; // \u6570\u636e\u5757\u6307\u9488 }; \u8fd9\u6837\u4e00\u6765\uff0c\u6211\u4eec\u901a\u8fc7\u7ef4\u62a4 dentry \u548c dentrys \u5c31\u80fd\u591f\u5f88\u8f7b\u677e\u5730\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\u3002 \u8fd9\u91cc\u7ed9\u51fa\u7684\u4f8b\u5b50\u4ec5\u8d77\u4e00\u4e2a\u629b\u7816\u5f15\u7389\u7684\u4f5c\u7528\uff0c\u4f60 \u751a\u81f3\u53ef\u4ee5\u4e0d\u8bbe\u8ba1\u8fd9\u79cd\u5185\u5b58\u7ed3\u6784 \uff0c\u4f8b\u5982\uff1a\u76f4\u63a5\u58f0\u660e \u4f4d\u56fe \u3001 \u6839\u76ee\u5f55dentry \u4e3a\u5168\u5c40\u53d8\u91cf\u7b49\u3002 2. FUSE\uff08Filesystem in User SpacE\uff09\u67b6\u6784 \u00b6 \u4f20\u7edf\u7684\u3001\u57fa\u4e8eLinux\u7684\u6587\u4ef6\u7cfb\u7edf\u5f00\u53d1\u90fd\u662f\u4ee5\u5185\u6838\u6a21\u5757\uff08 Kernel Module \uff09\u7684\u65b9\u5f0f\u8fdb\u884c\uff0c\u8fd9\u4f7f\u5f97\u5f00\u53d1\u8c03\u8bd5\u53d8\u5f97\u5f02\u5e38\u7e41\u7410\u3002\u6b64\u5916\uff0c\u5185\u6838\u7684\u5f00\u53d1\u4e0e\u4f20\u7edfC\u7a0b\u5e8f\u5f00\u53d1\u4e0d\u540c\uff0c\u4f60\u9700\u8981\u4f7f\u7528\u5185\u6838\u7684API\uff0c\u50cf malloc \u4e4b\u7c7b\u7684\u7528\u6237\u6001\u51fd\u6570\u5728\u5185\u6838\u5f00\u53d1\u4e2d\u5df2\u4e0d\u518d\u9002\u7528\u3002\u5982\u679c\u6709\u540c\u5b66\u5e0c\u671b\u4e86\u89e3\u66f4\u591a\u5185\u6838\u6a21\u5757\u5f00\u53d1\u76f8\u5173\u77e5\u8bc6\uff0c\u53ef\u4ee5\u81ea\u884cgoogle\u6216\u767e\u5ea6\u3002 \u7531\u4e8e\u5185\u6838\u6587\u4ef6\u7cfb\u7edf\u5f00\u53d1\u7684\u56f0\u96be\uff0cFUSE\u67b6\u6784\u7531\u6b64\u767b\u4e0a\u4e86\u53f0\u9762\u3002FUSE\u5168\u79f0Filesystem in User SpacE\uff0c\u5b83\u5c06 \u6587\u4ef6\u7cfb\u7edf\u7684\u5b9e\u73b0\u4ece\u5185\u6838\u6001\u642c\u5230\u4e86\u7528\u6237\u6001 \uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u53ef\u4ee5 \u5728\u7528\u6237\u6001\u5b9e\u73b0\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf \u3002 \u672c\u6b21\u5b9e\u9a8c\u6211\u4eec\u4fbf\u662f\u57fa\u4e8eFUSE\u67b6\u6784\uff0c \u5728\u7528\u6237\u6001 \u5b9e\u73b0\u6211\u4eec\u7684\u9752\u6625\u7248EXT2\u6587\u4ef6\u7cfb\u7edf\uff0c\u4ece\u800c\u5b8c\u7f8e\u63a5\u5165Linux\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0bFUSE\uff0c\u5f53\u7136\uff0c\u5982\u679c\u5bf9FUSE\u4e0d\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u7565\u8fc7\u8fd9\u4e00\u7ae0\u8282\u3002\u5728\u201c\u4efb\u52a1\u4e8c\u201d \u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u5982\u4f55\u63a5\u5165FUSE\u3002 \u4ee5\u4e0b\u5185\u5bb9\u53c2\u8003\u81ea \u7528\u6237\u6001\u6587\u4ef6\u7cfb\u7edf\u6846\u67b6FUSE\u7684\u4ecb\u7ecd\u53ca\u793a\u4f8b - \u77e5\u4e4e (zhihu.com) 2.1 FUSE\u57fa\u672c\u539f\u7406 \u00b6 \u7b80\u5355\u7684\u7406\u89e3\uff0c FUSE\u5b9e\u73b0\u4e86\u4e00\u4e2a\u5bf9\u6587\u4ef6\u7cfb\u7edf\u8bbf\u95ee\u7684\u56de\u8c03 \u3002FUSE\u5206\u4e3a \u5185\u6838\u6001\u7684\u6a21\u5757\u548c\u7528\u6237\u6001\u7684\u5e93 \u4e24\u90e8\u5206\u3002\u5176\u4e2d \u7528\u6237\u6001\u7684\u5e93 \u4e3a \u7528\u6237\u6001\u7a0b\u5e8f\u5f00\u53d1 \u63d0\u4f9b\u63a5\u53e3\uff0c\u6211\u4eec\u901a\u8fc7\u8fd9\u4e9b\u63a5\u53e3 \u5c06\u8bf7\u6c42\u5904\u7406\u529f\u80fd\u6ce8\u518c\u5230FUSE\u4e2d \u3002 \u5185\u6838\u6001\u6a21\u5757 \u662f\u5177\u4f53\u7684\u6570\u636e\u6d41\u7a0b\u7684\u529f\u80fd\u5b9e\u73b0\uff0c\u5b83 \u622a\u83b7\u6587\u4ef6\u7684\u8bbf\u95ee\u8bf7\u6c42\uff0c\u7136\u540e\u8c03\u7528\u7528\u6237\u6001\u6ce8\u518c\u7684\u51fd\u6570\u8fdb\u884c\u5904\u7406 \u3002 \u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5176\u4e2d hello \u662f\u7528\u6237\u6001\u7684\u6587\u4ef6\u7cfb\u7edf\u7a0b\u5e8f\uff0c \u8be5\u7a0b\u5e8f\u542f\u52a8\u7684\u65f6\u5019\u4f1a\u5c06\u81ea\u5df1\u5f00\u53d1\u7684\u63a5\u53e3\u6ce8\u518c\u5230FUSE\u4e2d \uff0c \u6bd4\u5982\u8bfb\u5199\u6587\u4ef6\u7684\u63a5\u53e3\uff0c\u904d\u5386\u76ee\u5f55\u7684\u63a5\u53e3 \u7b49\u7b49\u3002\u540c\u65f6\uff0c \u901a\u8fc7\u8be5\u7a0b\u5e8f\u5728\u7cfb\u7edf\u67d0\u4e2a\u8def\u5f84\u6302\u8f7dFUSE\u6587\u4ef6\u7cfb\u7edf \uff0c\u6bd4\u5982 /tmp/fuse \u3002\u6b64\u65f6 \u5982\u679c\u5728\u8be5\u76ee\u5f55\u4e2d\u6709\u76f8\u5173\u64cd\u4f5c \u65f6\uff0c\u8bf7\u6c42\u4f1a\u7ecf\u8fc7 Linux\u865a\u62df\u6587\u4ef6\u7cfb\u7edf \uff08 VFS \uff09\u5c42 \u5230FUSE\u7684\u5185\u6838\u6a21\u5757 \uff08\u5982\u8c03\u7528 ls \u547d\u4ee4\uff0c\u5982\u4e0a\u56fe\u4e2d\u7684\u6b65\u9aa4\u2460\uff09\uff0c FUSE\u5185\u6838\u6a21\u5757\u6839\u636e\u8bf7\u6c42\u7c7b\u578b \uff0c\u8c03\u7528 \u7528\u6237\u6001\u5e94\u7528\u6ce8\u518c \u7684\u51fd\u6570\uff08\u4e0a\u56fe\u4e2d\u6b65\u9aa4\u2461\uff09\uff0c\u7136\u540e \u5c06\u5904\u7406\u7ed3\u679c\u901a\u8fc7VFS\u8fd4\u56de\u7ed9\u7cfb\u7edf\u8c03\u7528 \uff08\u6b65\u9aa4\u2462\uff09\u3002 2.2 \u793a\u4f8b\u53ca\u8bf4\u660e \u00b6 \u83b7\u53d6\u5b9e\u9a8c\u5305\u53c2\u8003 \u73af\u5883\u642d\u5efa\u4e0e\u4e0a\u624b \u3002 \u5728\u6211\u4eec\u63d0\u4f9b\u7684\u5b9e\u9a8c\u5305\u4e2d\uff0c\u5df2\u7ecf\u6709\u4e24\u4e2a\u5b8c\u5168\u642d\u5efa\u597d\u7684FUSE\u6587\u4ef6\u7cfb\u7edf\uff1a simplefs \uff08 fs/simplefs \u6587\u4ef6\u5939\u4e0b\uff09\u548c myfs \uff08 fs/samples \u6587\u4ef6\u5939\u4e0b\uff09\uff0c\u5176\u4e2d simplefs \u662f\u4e00\u4e2a\u7c7bEXT2\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u4f46 \u6ca1\u6709\u7ed9\u4e88\u6570\u636e\u4f4d\u56fe \u7684\u5b9e\u73b0\uff1b myfs \u662f github \u4e0a\u7684\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u4e5f\u662f\u4e00\u4e2aFUSE\u6587\u4ef6\u7cfb\u7edf\u5b9e\u4f8b\u3002 \u6b64\u5916\uff0c\u8fd9\u91cc\u6211\u4eec\u7ed9\u4e00\u4e2a\u6781\u7b80\u7684Demo\u3002\u8be5Demo\u975e\u5e38\u7b80\u5355\uff0c\u5b83\u5e76\u4e0d\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c \u4e5f\u4e0d\u4f1a\u8bbf\u95ee\u8bbe\u5907 \uff0c\u800c\u662f\u5728 \u8be5\u6587\u4ef6\u7cfb\u7edf \u7684\u6839\u76ee\u5f55\u4e2d \u663e\u793a\u4e00\u4e2a\u56fa\u5b9a\u7684\u6587\u4ef6 \uff0c\u4e5f\u5c31\u662f Hello-FUSE \u6587\u4ef6\u3002 /* main.c\u6e90\u7801 */ #define FUSE_USE_VERSION 26 #include <stdio.h> #include <fuse.h> /* \u8fd9\u91cc\u5b9e\u73b0\u4e86\u4e00\u4e2a\u904d\u5386\u76ee\u5f55\u7684\u529f\u80fd\uff0c\u5f53\u7528\u6237\u5728\u76ee\u5f55\u6267\u884cls\u65f6\uff0c\u4f1a\u56de\u8c03\u5230\u8be5\u51fd\u6570\uff0c\u6211\u4eec\u8fd9\u91cc\u53ea\u662f\u8fd4\u56de\u4e00\u4e2a\u56fa\u5b9a\u7684\u6587\u4ef6Hello-FUSE\u3002 */ static int test_readdir ( const char * path , void * buf , fuse_fill_dir_t filler , off_t offset , struct fuse_file_info * fi ) { return filler ( buf , \"Hello-FUSE\" , NULL , 0 ); } /* \u663e\u793a\u6587\u4ef6\u5c5e\u6027 */ static int test_getattr ( const char * path , struct stat * stbuf ) { if ( strcmp ( path , \"/\" ) == 0 ) stbuf -> st_mode = 0755 | S_IFDIR ; // \u8bf4\u660e\u8be5\u6587\u4ef6\u662f\u76ee\u5f55\u6587\u4ef6 else stbuf -> st_mode = 0644 | S_IFREG ; // \u8bf4\u660e\u8be5\u6587\u4ef6\u662f\u666e\u901a\u6587\u4ef6 return 0 ; } /*\u8fd9\u91cc\u662f\u56de\u8c03\u51fd\u6570\u96c6\u5408\uff0c\u8fd9\u91cc\u5b9e\u73b0\u7684\u5f88\u7b80\u5355*/ static struct fuse_operations ops = { . readdir = test_readdir , . getattr = test_getattr , }; int main ( int argc , char * argv []) { int ret = 0 ; ret = fuse_main ( argc , argv , & ops , NULL ); return ret ; } \u63a5\u4e0b\u6765\uff0c\u7f16\u8bd1\u8fd0\u884c main.c \u6587\u4ef6 gcc -o hello main.c -D_FILE_OFFSET_BITS = 64 -lfuse \u5047\u8bbe\u5728 /tmp \u76ee\u5f55\u4e0b\u9762\u6709\u4e00\u4e2a fuse \u76ee\u5f55\uff0c\u5982\u679c\u6ca1\u6709\u53ef\u4ee5\u624b\u52a8\u521b\u5efa\u4e00\u4e2a\u3002\u7136\u540e\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u53ef\u4ee5\u5728\u8be5\u76ee\u5f55\u6302\u8f7d\u65b0\u7684\u6587\u4ef6\u7cfb\u7edf\u3002 [ root@localhost test ] # ./hello /tmp/fuse \u6ce8\u610f \uff0c FUSE\u6587\u4ef6\u7cfb\u7edf\u7684\u6302\u8f7d\u4e0e\u4f20\u7edf\u6587\u4ef6\u7cfb\u7edf \u7684\u6302\u8f7d\u7565\u6709\u4e0d\u540c\uff0c\u5b83 \u4e0d\u7528mount\u9009\u9879 \uff0c\u76f4\u63a5\u8fd0\u884c\u4e8c\u8fdb\u5236\u6587\u4ef6\u5c31\u53ef\u5b8c\u6210\u6302\u8f7d\u3002\u4e0a\u9762\u547d\u4ee4\u7684\u610f\u601d\u662f\u5c06\u6587\u4ef6\u7cfb\u7edf hello \u6302\u8f7d\u5230 /tmp/fuse \u3002 \u6b64\u65f6\u8fd0\u884c ls \u547d\u4ee4\u770b\u770b\u6548\u679c\uff1a [ root@localhost tmp ] # ls /fuse Hello-FUSE [ root@localhost tmp ] # \u53ef\u4ee5\u770b\u51fa\u6b63\u5f0f\u6211\u4eec\u671f\u671b\u7684\u5185\u5bb9\uff0c\u4e5f\u5c31\u662f\u53ea\u6709\u4e00\u4e2a\u540d\u4e3a Hello-FUSE \u7684\u6587\u4ef6\u3002 \u81f3\u4e8e\u5982\u4f55 \u5229\u7528FUSE\u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u8bbe\u5907 \u3001 \u5982\u4f55\u521b\u5efa\u6587\u4ef6 \uff0c\u6211\u4eec\u5c06\u5728 \u4efb\u52a1\u4e8c \u4e2d\u8fdb\u884c\u8be6\u7ec6\u63cf\u8ff0\u3002 3. DDRIVER\u865a\u62df\u78c1\u76d8\u9a71\u52a8 \u00b6 \u672c\u6b21\u5b9e\u9a8c\u63d0\u4f9b\u4e86\u865a\u62df\u78c1\u76d8\u63a5\u53e3\uff0c\u5934\u6587\u4ef6 ddriver.h \u4e2d\u63d0\u4f9b\u4e86\u5b8c\u5907\u7684\u6ce8\u91ca\u3002\u8be5\u63a5\u53e3\u5e95\u5c42\u5b9e\u73b0\u7b80\u5355\uff0c\u4e14\u57fa\u672c\u7b26\u5408POSIX\u89c4\u8303\uff08\u5373\u4e0e\u6807\u51c6 write \u3001 read \u3001 lseek \u3001 ioctl \u7b49\u63a5\u53e3\u4fdd\u6301\u4e00\u81f4\uff09\u3002 \u552f\u4e00\u9700\u8981\u6ce8\u610f\u7684\u662f\u6211\u4eec\u5bf9\u5355\u6b21\u8bfb\u53d6\u3001\u5199\u5165\u7684IO\u5927\u5c0f\u505a\u51fa\u4e86\u9650\u5236\uff0c\u4fdd\u8bc1\u5176\u4e0e\u78c1\u76d8\u5757\u5927\u5c0f\u5bf9\u9f50 \u3002\u5176\u4e2d\uff0cIO\u5927\u5c0f\u4e3a512B\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7 ddriver_ioctl \u6765\u8bf7\u6c42IO\u5927\u5c0f\uff0c\u5177\u4f53\u6211\u4eec\u5728 \u4efb\u52a1\u4e8c \u4e2d\u4ecb\u7ecd\u3002 DDRIVER\u9a71\u52a8 \u6a21\u62df\u4e86 \u5bf9\u4e00\u4e2a\u5bb9\u91cf\u4e3a4MiB\u7684\u78c1\u76d8 \u7684\u64cd\u4f5c\uff0c\u540c\u6837\uff0c4MiB\u53ef\u4ee5\u901a\u8fc7 ddriver_ioctl \u51fd\u6570\u8bbf\u95ee\u5f97\u5230\u3002\u5176\u4e2d\u9700\u8981\u6ce8\u610f\u7684\u662f\u5b83 \u4fdd\u7559\u4e86\u78c1\u76d8\u7684\u8bbf\u95ee\u7279\u6027 \uff0c\u5373 \u6309\u5757\u8bbf\u95ee \uff0c\u6bcf\u6b21\u8bfb\u5199\u90fd\u9700\u8981 \u8bfb\u5199\u5b8c\u6574\u7684512B \u7684\u78c1\u76d8\u5757\u3002\u8fd9\u5c06\u5f15\u8d77\u4e00\u4e9b\u5f88\u9ebb\u70e6\u7684\u60c5\u51b5\uff0c\u6bd4\u5982\u8bf4\u8981\u66f4\u65b0\u67d0\u4e2a\u78c1\u76d8\u5757\u4e2d\u7684\u67d0\u4e2ainode\u65f6\uff0c\u9700\u8981\u5148\u628a\u6574\u4e2a\u78c1\u76d8\u5757\u8bfb\u51fa\u6765\uff0c\u66f4\u65b0\u76f8\u5e94inode\uff0c\u518d\u5199\u56de\u53bb\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5f80\u78c1\u76d8\u91cc\u5199\uff08\u9664\u975e\u4e00\u4e2ainode\u6bd4\u4e00\u4e2a\u78c1\u76d8\u5757\u5927\uff09\u3002 \u4ee5\u4e0b\u662fDDRIVER\u9a71\u52a8\u63d0\u4f9b\u7684\u5934\u6587\u4ef6 ddriver.h #ifndef _DDRIVER_H_ #define _DDRIVER_H_ #include \"ddriver_ctl_user.h\" #include \"stdio.h\" /** * @brief \u6253\u5f00ddriver\u8bbe\u5907 * * @param path ddriver\u8bbe\u5907\u8def\u5f84 * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int ddriver_open ( char * path ); /** * @brief \u79fb\u52a8ddriver\u78c1\u76d8\u5934 * * @param fd ddriver\u8bbe\u5907handler * @param offset \u79fb\u52a8\u5230\u7684\u4f4d\u7f6e\uff0c\u6ce8\u610f\u8981\u548c\u8bbe\u5907IO\u5355\u4f4d\u5bf9\u9f50 * @param whence SEEK_SET\u5373\u53ef * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int ddriver_seek ( int fd , off_t offset , int whence ); /** * @brief \u5199\u5165\u6570\u636e * * @param fd ddriver\u8bbe\u5907handler * @param buf \u8981\u5199\u5165\u7684\u6570\u636eBuf * @param size \u8981\u5199\u5165\u7684\u6570\u636e\u5927\u5c0f\uff0c\u6ce8\u610f\u4e00\u5b9a\u8981\u7b49\u4e8e\u5355\u6b21\u8bbe\u5907IO\u5355\u4f4d * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int ddriver_write ( int fd , char * buf , size_t size ); /** * @brief \u8bfb\u51fa\u6570\u636e * * @param fd ddriver\u8bbe\u5907handler * @param buf \u8981\u8bfb\u51fa\u7684\u6570\u636eBuf * @param size \u8981\u8bfb\u51fa\u7684\u6570\u636e\u5927\u5c0f\uff0c\u6ce8\u610f\u4e00\u5b9a\u8981\u7b49\u4e8e\u5355\u6b21\u8bbe\u5907IO\u5355\u4f4d * @return int */ int ddriver_read ( int fd , char * buf , size_t size ); /** * @brief ddriver IO\u63a7\u5236 * * @param fd ddriver\u8bbe\u5907handler * @param cmd \u547d\u4ee4\u53f7\uff0c\u67e5\u770bddriver_ctl_user\uff0cIOC_\u5f00\u5934 * @param ret \u8fd4\u56de\u503c * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int ddriver_ioctl ( int fd , unsigned long cmd , void * ret ); /** * @brief \u5173\u95edddriver\u8bbe\u5907 * * @param fd ddriver\u8bbe\u5907handler * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int ddriver_close ( int fd ); #endif /* _DDRIVER_H_ * \u503c\u5f97\u4e00\u63d0\u7684\u662f \uff0c DDRIVER \u7684\u5b9e\u73b0\u6709\u4e24\u4e2a\u7248\u672c\uff1a \u5185\u6838\u7248\u672c \u548c \u7528\u6237\u7248\u672c \u3002\u5176\u4e2d\uff0c \u5185\u6838\u7248\u672c \u7684\u7f16\u5199\u662f\u91c7\u7528 \u5185\u6838\u6a21\u5757 \u7684\u65b9\u5f0f\uff0c\u4ee3\u7801\u4f4d\u4e8e user-land-filesystem/driver/kernel_ddriver \u4e0b\uff0c\u7531\u4e8e\u672c\u6b21\u5b9e\u9a8c\u73af\u5883\u6240\u81f4\uff0c\u5185\u6838\u7248\u672c\u6682\u505c\u4f7f\u7528\uff0c\u5982\u679c\u5927\u5bb6\u6709\u5174\u8da3\u4e5f\u53ef\u4ee5\u53bb\u53c2\u8003\u4e00\u4e0b\u4e00\u4e2a\u5185\u6838\u6a21\u5757\u7684\u7f16\u7a0b\u65b9\u6cd5\uff1b \u7528\u6237\u7248\u672c \u4f4d\u4e8e user-land-filesystem/driver/user_ddriver \u4e0b\uff0c\u7528\u6237\u7248\u672c\u7684\u7f16\u8bd1\u65b9\u5f0f\u662f\u9759\u6001\u94fe\u63a5\u5e93\uff0c\u56e0\u6b64\u4f60\u65e0\u6cd5\u76f4\u63a5\u901a\u8fc7Debug\u8c03\u8bd5\u8fdb\u5165\u5230\u4e0a\u8ff0\u63a5\u53e3\u5b9e\u73b0\u7684\u4ee3\u7801\u4e2d\uff0c \u8fd9\u4e5f\u662f\u4e3a\u4e86\u6a21\u62df\u771f\u5b9e\u9a71\u52a8\u6240\u505a\u7684\u8003\u8651 \u3002","title":"\u5b9e\u9a8c\u539f\u7406"},{"location":"lab5/part2/#_1","text":"","title":"\u5b9e\u9a8c\u539f\u7406"},{"location":"lab5/part2/#1-ext2","text":"","title":"1.  EXT2\u6587\u4ef6\u7cfb\u7edf\u539f\u7406\u7b80\u4ecb"},{"location":"lab5/part2/#11","text":"\u6587\u4ef6\u7cfb\u7edf\u662f\u64cd\u4f5c\u7cfb\u7edf\u7528\u4e8e\u660e\u786e \u5b58\u50a8\u8bbe\u5907 \uff08\u78c1\u76d8\uff09\u6216 \u5206\u533a \u4e0a\u7684 \u6587\u4ef6\uff08\u5305\u62ec\u6587\u4ef6\u3001\u76ee\u5f55\u3001\u5feb\u6377\u65b9\u5f0f\u7b49\uff09 \u7684\u65b9\u6cd5\u548c\u6570\u636e\u7ed3\u6784\uff0c\u5373 \u5728\u7279\u5b9a\u5b58\u50a8\u8bbe\u5907\u4e0a\u7ec4\u7ec7\u6587\u4ef6\u7684\u65b9\u6cd5 \u3002 \u7b80\u5355\u5730\u8bf4 \uff0c\u6587\u4ef6\u7cfb\u7edf\u5c31\u662f\u5728 \u7279\u5b9a\u5b58\u50a8\u8bbe\u5907\u4e0a\u7ec4\u7ec7\u6587\u4ef6 \u7684\u65b9\u6cd5\u3002 \u6587\u4ef6\u7cfb\u7edf \u4e3b\u8981\u4f5c\u7528 \uff1a \u7ba1\u7406\u548c\u8c03\u5ea6 \u8bbe\u5907\u7684\u5b58\u50a8\u7a7a\u95f4 \uff0c\u63d0\u4f9b\u6587\u4ef6\u7684\u903b\u8f91\u7ed3\u6784\u3001\u7269\u7406\u7ed3\u6784\u548c\u5b58\u50a8\u65b9\u6cd5; \u5b9e\u73b0\u6587\u4ef6 \u4ece\u6807\u8bc6\u5230\u5b9e\u9645\u5730\u5740\u7684\u6620\u5c04 \uff0c\u5b9e\u73b0\u6587\u4ef6\u7684\u63a7\u5236\u64cd\u4f5c\u548c\u5b58\u53d6\u64cd\u4f5c\uff0c\u63d0\u9ad8 \u4ece\u8bbe\u5907\u4e0a\u67e5\u627e\u6570\u636e \u7684\u6548\u7387\uff1b \u5b9e\u73b0\u6587\u4ef6\u4fe1\u606f\u7684\u5171\u4eab\u5e76\u63d0\u4f9b\u53ef\u9760\u7684 \u6587\u4ef6\u4fdd\u5bc6\u548c\u4fdd\u62a4\u63aa\u65bd \uff0c\u63d0\u4f9b\u6587\u4ef6\u7684 \u5b89\u5168\u63aa\u65bd \u3002 \u4f18\u5316\u8bbe\u5907\u7a7a\u95f4\u5229\u7528\u7387\uff1b \u76ee\u524d\u5728\u5404\u79cd\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5b58\u5728\u7740\u5404\u79cd\u5404\u6837\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u5728Windows\u5e73\u53f0\u4e3b\u6d41\u6709\uff1a FAT\u3001FAT16\u3001FAT32\u3001NTFS \u7b49\uff1b\u5728Unix\u5e73\u53f0\u4e3b\u6d41\u7684\u6709\uff1a EXT2\u3001EXT3\u3001EXT4 \u7b49\u3002\u8fd9\u4e9b\u6587\u4ef6\u7cfb\u7edf\u5728 \u7ba1\u7406\u78c1\u76d8\u8bbe\u5907 \u65f6\u90fd\u6709\u5404\u81ea\u7684\u4e00\u5957\u7b56\u7565\u548c\u65b9\u6cd5\uff0c\u968f\u4e4b\u4e5f\u5e26\u6765\u4e0d\u540c\u7684\u4f18\u7f3a\u70b9\u3002 EXT2 \u662fGNU/Linux\u7cfb\u7edf\u4e2d\u6807\u51c6\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u5176\u7279\u70b9\u662f \u5b58\u53d6\u6587\u4ef6\u7684\u6027\u80fd\u8f83\u597d \uff0c\u5bf9\u4e8e\u4e2d\u5c0f\u578b\u7684\u6587\u4ef6\u66f4\u663e\u793a\u5176\u4f18\u52bf\u3002\u672c\u5b9e\u9a8c\u4ee5 EXT2 \u4e3a\u6a21\u677f\uff0c\u5b9e\u73b0\u4e00\u4e2a\u9752\u6625\u7248\u6587\u4ef6\u7cfb\u7edf\u3002","title":"1.1  \u6587\u4ef6\u7cfb\u7edf\u662f\u4ec0\u4e48"},{"location":"lab5/part2/#12","text":"","title":"1.2  \u6587\u4ef6\u7cfb\u7edf\u7684\u57fa\u672c\u64cd\u4f5c"},{"location":"lab5/part2/#121","text":"\u8fd9\u91cc \u6709\u66f4\u591a\u8bb2\u89e3\u6302\u8f7d\u7684\u8d44\u6599 \u901a\u5e38\u6765\u8bb2\uff0c\u4f7f\u7528\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u7684\u7b2c\u4e00\u6b65\u662f \u6302\u8f7d\uff08mount\uff09 \uff0c\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u5728\u4f7f\u7528Linux\u7684\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u8fd9\u4e2a\u6b65\u9aa4\u5462\uff1f\u8fd9\u662f\u7531\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u4e3a\u4e86\u7b80\u5316\u7528\u6237\u64cd\u4f5c\uff0c \u81ea\u52a8\u5e2e\u52a9 \u6211\u4eec\u8fdb\u884c\u4e86\u8fd9\u4e2a\u6b65\u9aa4\u3002\u76f8\u5173\u6587\u4ef6\u53ef\u4ee5\u5728 /etc/fstab \u4e2d\u67e5\u770b\uff1a [root@localhost tests]# cat /etc/fstab # # /etc/fstab # Created by anaconda on Sun Oct 3 03 :53:55 2021 # # Accessible filesystems, by reference, are maintained under '/dev/disk/' . # See man pages fstab ( 5 ) , findfs ( 8 ) , mount ( 8 ) and/or blkid ( 8 ) for more info. # # After editing this file, run 'systemctl daemon-reload' to update systemd # units generated from this file. # /dev/mapper/openeuler-root / ext4 defaults 1 1 UUID=ee2c1ea8-62de-4241-8742-7cba36a7eaf9 /boot ext4 defaults 1 2 /dev/mapper/openeuler-swap none swap defaults 0 0 \u8fd9\u91cc\u4ee5\u7b2c\u4e00\u884c\u4e3a\u4f8b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5c06\u8bbe\u5907 /dev/mapper/openeuler-root \u4ee5 EXT4 \u6587\u4ef6\u7cfb\u7edf\u5f62\u5f0f\uff0c\u6302\u8f7d\u5230\u6839\u76ee\u5f55 / \u4e0b\uff0c\u4ece\u800c\u8ba9\u6211\u4eec\u6709\u4e86\u8bbf\u95ee /dev/mapper/openeuler-root \u5b58\u50a8\u8bbe\u5907\u7684\u80fd\u529b\u3002 \u7b49\u7b49 \uff0c\u4ec0\u4e48\u53eb \u5c06\u8bbe\u5907xxx \u4ee5 xxx\u6587\u4ef6\u7cfb\u7edf \u5f62\u5f0f\uff0c \u6302\u8f7d \u5230 xxx\u76ee\u5f55 \u4e0b\uff1f\u6302\u8f7d\u5230\u5e95\u662f\u4ec0\u4e48\uff1f\u6211\u4eec\u6765\u4e3e\u4e2a\u4f8b\u5b50\u4f83\u4e00\u4f83\u3002 Step1\uff1a\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u624b\u91cc\u6709\u4e00\u4e2a\u91d1\u58eb\u987fU\u76d8 Step2\uff1a\u73b0\u5728\uff0c\u6211\u4eec\u5728\u4e3b\u673a\u4e0a\u63d2\u5165\u8fd9\u4e2aU\u76d8 \u5728 Windows \u7cfb\u7edf\u4e0a\uff0c\u53ef\u4ee5\u770b\u5230\u4e0b\u9762\u7684\u663e\u793a\uff1a \u5e73\u65f6\u53ef\u80fd\u6ca1\u6709\u6ce8\u610f \uff0c\u4f46\u8fd9\u65f6\uff0c\u4f60\u53ef\u80fd\u6ce8\u610f\u5230\u4e86\u91d1\u58eb\u987fU\u76d8\u7684 \u5c5e\u6027 \u4e2d\uff0c\u6709\u4e00\u680f\u544a\u8bc9\u4e86\u6211\u4eec\u8fd9\u4e2aU\u76d8\u662f FAT32\u6587\u4ef6\u7cfb\u7edf \u3002 \u4e8b\u5b9e\u4e0a \uff0c\u5f53\u6211\u4eec\u63d2\u5165U\u76d8\u540e\uff0cWindows \u81ea\u52a8\u8bc6\u522b \u51fa\u8be5U\u76d8\u4e0a\u6587\u4ef6\u5b58\u50a8\u7684\u683c\u5f0f\u662fFAT32\uff0c\u56e0\u6b64 \u5b83\u81ea\u52a8\u5c06\u91d1\u58eb\u987fU\u76d8\u4ee5FAT32\u6587\u4ef6\u7cfb\u7edf\u683c\u5f0f\u6302\u8f7d\u5230\u4e86Windows\u76ee\u5f55\u7ed3\u6784 \u4e2d\u3002 \u800c\u5728 Linux \u7cfb\u7edf\u4e0a\uff0c\u6211\u4eec\u53ef\u80fd\u5e76\u6ca1\u6709\u8fd9\u4e48\u597d\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u5f53\u63d2\u5165\u91d1\u58eb\u987fU\u76d8\u540e\uff0c\u6211\u4eec\u53ea\u53d1\u73b0\u5728 /dev \u76ee\u5f55\u4e0b\u591a\u51fa\u4e86\u4e00\u4e2a\u5f02\u7c7b\uff1a \u4e00\u822c\u6765\u8bf4\uff0c\u8bbe\u5907 sdb1 \u88c5\u6587\u4ef6\u7684\u8bbe\u5907\u3002\u90a3\u4e48\uff0c\u6211\u4eec \u662f\u5426\u53ef\u4ee5\u5411Windows\u90a3\u6837\uff0c\u76f4\u63a5\u5bf9\u5b83\u8bbf\u95ee\u5462 \uff1f\u6765\u8bd5\u8bd5\uff1a [root@localhost dev]# cd sdb1 bash: cd: sdb1: Not a directory [root@localhost dev]# ls sdb1/ ls: cannot access 'sdb1/': Not a directory \u5f88\u9057\u61be\uff0c\u5e76\u4e0d\u884c\u3002\u8fd9\u662f\u56e0\u4e3a U\u76d8sdb1 \u8fd8\u6ca1\u6709\u88ab \u6302\u8f7d \u5230Linux\u76ee\u5f55\u4e0b\uff0c\u6b64\u65f6Linux\u4e0d\u77e5\u9053\u8fd9\u4e2aU\u76d8\u91cc\u9762\u7684\u6587\u4ef6\u662f\u4ec0\u4e48\uff0c\u53ea\u80fd\u77e5\u9053\u8fd9\u91cc\u8fd9\u4e2a\u6709\u4e2aU\u76d8\u8bbe\u5907\u3002 \u6211\u4eec\u77e5\u9053\u8fd9\u4e2aU\u76d8\u91cc\u88c5\u7684\u662f FAT32 \u6587\u4ef6\u7cfb\u7edf\uff0c\u5728Linux\u4e2d\uff0c FAT32 \u53c8\u540d VFAT \uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5 \u5c06\u8bbe\u5907sdb1 \u4ee5 VFAT\u6587\u4ef6\u7cfb\u7edf \u5f62\u5f0f\uff0c \u6302\u8f7d \u5230 /mnt\u76ee\u5f55 \u4e0b\uff0c\u901a\u8fc7\u8bbf\u95ee /mnt \u76ee\u5f55\u6765 \u67e5\u770bU\u76d8\u4e2d\u7684\u6587\u4ef6 \uff1a [root@localhost dev]# mount -t vfat sdb1 /mnt/ [root@localhost dev]# ls /mnt/ '???' '????PPT.pptx' '?????' '???????.pptx' '??????' '???_???_??_??_????.pptx' '???????' pynq_z2_v2.6.0.zip '????????' Deadpool \u8fd8\u771f\u6210\u4e86\uff01 Step3\uff1a\u73b0\u5728\uff0c\u6211\u4eec\u6765\u7f15\u4e00\u7f15\u6302\u8f7d\u7684\u903b\u8f91 \u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06U\u76d8\u62bd\u8c61\u770b\u4f5c\u4e00\u6bb5\u8fde\u7eed\u7684\u5b58\u50a8\u7a7a\u95f4\uff1a \u8fd9\u4e2a\u7269\u7406\u5b58\u50a8\u7a7a\u95f4\u4e0a\u7528 FAT32\u7c7b\u578b \u7684\u6587\u4ef6\u7cfb\u7edf\u4fdd\u5b58\u7740\u8bb8\u591a\u6587\u4ef6\uff08\u53ef\u80fdFAT32\u6587\u4ef6\u5e03\u5c40\u4e0d\u957f\u4e0b\u9762\u8fd9\u6837\uff0c \u4e0d\u8fc7\u5dee\u4e0d\u591a\u7406\u89e3\u5c31\u884c\u4e86 \uff09 \u63a5\u7740\uff0c\u6211\u4eec\u4f7f\u7528 mount \u547d\u4ee4\u544a\u8bc9Linux\uff0c\u8fd9\u4e2aU\u76d8\u7528\u7684\u662fFAT32\u6587\u4ef6\u7cfb\u7edf\uff0c \u4f60\u7528FAT32\u6587\u4ef6\u7cfb\u7edf\u4ee3\u7801\u89c4\u5219\u6765\u8bbf\u95ee\u5b83\u5c31\u884c\u4e86 \u3002\u63a5\u7740\uff0c\u6211\u4eec\u540c\u6837\u8981\u8bf4\u660e\u6211\u4eec\u60f3 \u5c06\u54ea\u4e2a\u76ee\u5f55\u4f5c\u4e3a\u8bbf\u95eeU\u76d8\u7684\u5165\u53e3 \uff0c\u5c31\u5728 /mnt \u76ee\u5f55\u4e0b\u5427\uff01\u4e8e\u662f\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u5728 /mnt \u76ee\u5f55\u4e0b\uff0c\u4ee5 FAT32 \u6587\u4ef6\u7cfb\u7edf\u6765\u8bbf\u95eeU\u76d8\u4e0a\u7684\u6587\u4ef6\u4e86\u3002 \u5728\u6211\u4eec\u7528\u6237\u6765\u770b\uff0c\u6302\u8f7d\u4e86U\u76d8\u540e\uff0cLinux\u7684\u76ee\u5f55\u6811\u5c31\u53d8\u6210\u4e0b\u9762\u8fd9\u4e2a\u6837\u5b50\u4e86\uff1a","title":"1.2.1  \u6302\u8f7d"},{"location":"lab5/part2/#122","text":"\u5378\u8f7d\u64cd\u4f5c \u4e0e \u6302\u8f7d\u64cd\u4f5c \u76f8\u5bf9\u5e94\uff0c\u5728Windows\u4e0a\u6765\u8bf4\uff0c\u5c31\u7c7b\u4f3c\u4e8e \u201d\u53f3\u952eU\u76d8\uff0c\u5b89\u5168\u5f39\u51fa\u201c \u4e00\u6837\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6bcf\u4e2a\u6587\u4ef6\u7cfb\u7edf\u5728\u5f00\u53d1\u7684\u65f6\u5019\u90fd\u8981\u8bbe\u8ba1\u5bf9\u5e94\u7684 \u6302\u8f7d\u4e0e\u5378\u8f7d \u65b9\u6cd5\uff0c\u5b83\u4eec\u9700\u8981 \u5728\u5378\u8f7d\u65f6 \u4fdd\u5b58\u8bbe\u5907\u7684\u5fc5\u8981\u72b6\u6001\uff08\u6bd4\u5982 \u5f53\u524d\u8bbe\u5907\u7684\u7a7a\u95f2\u5927\u5c0f \u7b49\uff09\u3002 \u4e0d\u6b63\u5e38\u7684\u5378\u8f7d\u4f1a\u5bfc\u81f4\u9c81\u68d2\u6027\u5dee\u7684\u6587\u4ef6\u7cfb\u7edf\u76f4\u63a5\u5d29\u6e83\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0b\u4e00\u6b21\u7684\u6302\u8f7d\u5f88\u53ef\u80fd\u76f4\u63a5\u5931\u8d25 \u5728Linux\u4e2d\uff0c\u5378\u8f7d\u6587\u4ef6\u7cfb\u7edf\u7684\u65b9\u5f0f\u5982\u4e0b\uff0c\u6211\u4eec\u8fd8\u662f\u4ee5\u521a\u624d\u6302\u8f7d\u7684\u91d1\u58eb\u987fU\u76d8\u4e3a\u4f8b\uff1a [root@localhost dev]# umount /mnt/ [root@localhost dev]# ls /mnt/ [root@localhost dev]# \u6b64\u65f6\uff0cU\u76d8\u5bf9\u5e94\u7684\u6240\u6709\u6587\u4ef6\u4eceLinux\u76ee\u5f55\u6811\u4e2d\u79fb\u9664\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5 \u6b63\u5e38\u62d4\u9664U\u76d8 \u4e86\u3002","title":"1.2.2  \u5378\u8f7d"},{"location":"lab5/part2/#123","text":"\u5176\u4ed6\u66f4\u591a\u76f8\u5173\u6587\u4ef6\u7cfb\u7edf\u7684\u64cd\u4f5c\u90fd\u6bd4\u8f83\u5e38\u89c1\uff0c\u8fd9\u91cc\u5c06\u4e00\u4e9b\u5e38\u7528\u6307\u4ee4\u518d\u7b80\u5355\u63d0\u4e00\u4e0b\uff1a ls ls \u6307\u4ee4\u662f list \u7684\u7f29\u5199\uff0c\u5176\u529f\u80fd\u5c31\u662f \u5217\u51fa\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6/\u76ee\u5f55 \uff0c\u5927\u5bb6\u5728\u5b66\u4e60 xv6 \u7684\u8fc7\u7a0b\u4e2d\u4e5f\u6709\u6240\u63a5\u89e6\uff0c\u8fd9\u91cc\u4e0d\u5728\u4ecb\u7ecd\uff1b mv mv \u6307\u4ee4\u662f move \u7684\u7f29\u5199\uff0c\u5176\u529f\u80fd\u662f \u526a\u5207 \u67d0\u4e2a\u6587\u4ef6\u3002\u4e8b\u5b9e\u4e0a\uff0c mv \u6307\u4ee4\u8fd8\u5e38\u5e38\u88ab\u7528\u4e8e \u6587\u4ef6\u7684\u91cd\u547d\u540d \u64cd\u4f5c\uff0c\u4f8b\u5982\uff1a [root@localhost mnt]# touch her [root@localhost mnt]# ls her [root@localhost mnt]# mv her me [root@localhost mnt]# ls me [root@localhost mnt]# cp cp \u6307\u4ee4\u662f copy \u7684\u7f29\u5199\uff0c\u5176\u529f\u80fd\u662f \u590d\u5236 \u67d0\u4e2a\u6587\u4ef6\uff0c cp -r \u53ef\u4ee5\u590d\u5236\u76ee\u5f55\uff1b rm rm \u6307\u4ee4\u662f remove \u7684\u7f29\u5199\uff0c\u5176\u529f\u80fd\u662f \u5220\u9664 \u67d0\u4e2a\u6587\u4ef6\uff0c\u540c\u6837 rm -r \u53ef\u4ee5\u5220\u9664\u76ee\u5f55\u3002\u5f53\u7136\uff0c\u6709\u4e00\u4e2a\u4e1a\u754c\u6897\uff1a rm -rf \u5220\u5e93\u8dd1\u8def \uff0c\u8fd9\u91cc f \u4ee3\u8868 force \uff0c\u4e5f\u5c31\u662f\u5f3a\u5236\u5220\u9664\u3002\u5982\u679c\u4f60\u4e00\u4e0d\u5c0f\u5fc3\u4f7f\u7528\u4e86 rm -rf / \uff0c\u90a3\u4e48\u4f60\u7684Linux\u56de\u5929\u4e4f\u672f\u4e86\uff1b cd cd \u6307\u4ee4\u662f change directory \u7684\u7f29\u5199\uff0c\u6211\u4eec\u7ecf\u5e38\u4f7f\u7528 cd \u6307\u4ee4\u6765\u8fdb\u884c\u8def\u5f84\u7684\u5207\u6362\uff1b --help \u4e0a\u9762\u8bf4\u4e86\u4e00\u5927\u5806\uff0c\u4f46\u8fdc\u8fdc\u8fd8\u6ca1\u628a\u6240\u6709\u547d\u4ee4\u90fd\u4ecb\u7ecd\u5f97\u5b8c\u6574\u3001\u6e05\u695a\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u6bcf\u4e2a\u547d\u4ee4\u90fd\u6709\u4e2a --help \u53c2\u6570\u53ef\u9009\uff0c\u67e5\u770b --help \u53ef\u4ee5\u5f88\u5feb\u8ba9\u4f60\u77e5\u9053\u5404\u4e2a\u547d\u4ee4\u7684\u7528\u6cd5\u3001\u53c2\u6570\u7684\u610f\u4e49\uff0c\u4f8b\u5982\uff1a [root@localhost mnt]# ln --help Usage: ln [OPTION]... [-T] TARGET LINK_NAME or: ln [OPTION]... TARGET or: ln [OPTION]... TARGET... DIRECTORY or: ln [OPTION]... -t DIRECTORY TARGET.. ... ln ln\u662flink\u7684\u7f29\u5199\uff0c\u4f7f\u7528\u6b64\u547d\u4ee4\u7528\u6765\u4e3a\u6587\u4ef6\u521b\u4ef6\u94fe\u63a5\uff0c\u8fde\u63a5\u7c7b\u578b\u5206\u4e3a\u786c\u94fe\u63a5\u548c\u8f6f\u94fe\u63a5\u4e24\u79cd\uff0c\u9ed8\u8ba4\u7684\u8fde\u63a5\u7c7b\u578b\u662f\u786c\u94fe\u63a5\u3002\u786c\u94fe\u63a5\u8bf4\u767d\u4e86\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u6587\u4ef6\u7d22\u5f15\u8282\u70b9\uff0c\u7cfb\u7edf\u5e76\u4e0d\u4e3a\u5b83\u91cd\u65b0\u5206\u914dinode\uff1b\u8f6f\u94fe\u63a5\u53c8\u53eb\u7b26\u53f7\u94fe\u63a5\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5305\u542b\u4e86\u53e6\u4e00\u4e2a\u6587\u4ef6\u7684\u8def\u5f84\u540d\u3002\u53ef\u4ee5\u662f\u4efb\u610f\u6587\u4ef6\u6216\u76ee\u5f55\uff0c\u53ef\u4ee5\u94fe\u63a5\u4e0d\u540c\u6587\u4ef6\u7cfb\u7edf\u7684\u6587\u4ef6\uff0c\u548cwin\u4e0b\u7684\u5feb\u6377\u65b9\u5f0f\u5dee\u4e0d\u591a\u3002","title":"1.2.3  \u66f4\u591a\u64cd\u4f5c"},{"location":"lab5/part2/#13-ext2","text":"\u4ecb\u7ecd\u5b8c\u4e86\u6587\u4ef6\u7cfb\u7edf\u4ee5\u53ca\u6587\u4ef6\u7cfb\u7edf\u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u6211\u4eec\u6765\u6b63\u5f0f\u770b\u770bEXT2\u6587\u4ef6\u7cfb\u7edf\u3002 EXT2\u6587\u4ef6\u7cfb\u7edf\u5e38\u5e38\u88ab\u7528\u4e8e \u78c1\u76d8\u8bbe\u5907 \u7684\u8bbf\u95ee\u3002\u4e00\u4e2a\u7269\u7406\u78c1\u76d8\u53ef\u4ee5\u5212\u5206\u4e3a\u591a\u4e2a\u78c1\u76d8\u5206\u533a\uff0c\u6bcf\u4e2a\u78c1\u76d8\u5206\u533a\u53ef\u4ee5\u4ece\u903b\u8f91\u4e0a\u770b\u6210\u662f\u4ece0\u5f00\u59cb\u7f16\u53f7\u7684\u5927\u91cf\u6247\u533a\uff0c\u5404\u81ea\u53ef\u4ee5\u683c\u5f0f\u5316\u7a0b\u4e0d\u540c\u7c7b\u578b\u7684\u6587\u4ef6\u7cfb\u7edf\uff08\u5982EXT2\u3001NTFS\u7b49\uff09\u3002\u5982\u679c \u683c\u5f0f\u5316 \u6210EXT2\u6587\u4ef6\u7cfb\u7edf\uff0c\u5219\u5176\u5185\u90e8\u6309\u7167EXT2\u7684\u89c4\u8303\uff0c\u5c06\u78c1\u76d8\u76d8\u5757\u7ec4\u7ec7\u6210 \u8d85\u7ea7\u5757 \u3001 \u7ec4\u63cf\u8ff0\u7b26 \u548c \u4f4d\u56fe \u3001 \u7d22\u5f15\u8282\u70b9 \u3001 \u76ee\u5f55 \u7b49\u7ba1\u7406\u6570\u636e\uff0c\u653e\u5728\u5206\u533a\u524d\u7aef\u79f0\u4e3a \u5143\u6570\u636e\u533a \uff0c\u5269\u4f59\u7a7a\u95f4\u7528\u4e8e \u4fdd\u5b58\u6587\u4ef6\u6570\u636e \u3002 \u8fd9\u4e00\u6bb5\u4ecb\u7ecd\u4e2d\u51fa\u73b0\u4e86\u4e24\u4e2a\u65b0\u6982\u5ff5\uff1a \u78c1\u76d8\u5206\u533a \u4e0e \u683c\u5f0f\u5316 \uff0c\u6211\u4eec\u6765\u7b80\u5355\u7406\u89e3\u4e00\u4e0b\uff1a \u78c1\u76d8\u5206\u533a \u6211\u4eec\u7684\u7b14\u8bb0\u672c\u901a\u5e38\u53ea\u6709\u4e00\u5757SATA\u78c1\u76d8\uff0c\u4e3a\u4e86\u65b9\u4fbf\u7528\u6237\u8fdb\u884c\u6570\u636e\u7ba1\u7406\uff0c\u6bd4\u5982\uff1a\u6211\u60f3\u5212\u5206\u78c1\u76d8\u7684100\u4e2aG\u4f5c\u4e3a\u6e38\u620f\u5b58\u653e\u76d8\uff0c400\u4e2aG\u4f5c\u4e3a \u5b66\u4e60\u8d44\u6599 \u3002\u6211\u60f3\u8ba9\u6e38\u620f\u76d8\u7528 EXT2 \u7ba1\u7406\uff0c\u5b66\u4e60\u8d44\u6599\u7528 EXT3 \u7ba1\u7406\uff0c\u90a3\u4e48\u4fbf\u6709\u4e86\u78c1\u76d8\u5206\u533a\u7684\u6982\u5ff5\uff1a \u683c\u5f0f\u5316 \u6211\u4eec\u8fd8\u662f\u4ee5\u91d1\u58eb\u987fU\u76d8\u4e3a\u4f8b\uff0cU\u76d8\u4e00\u751f\u4ea7\u51fa\u6765\u5c31\u6709\u6587\u4ef6\u7cfb\u7edf\u5417\uff1f\u53ef\u80fd\u6709\uff1a\uff09\uff0c\u4f46\u662f\u5f88\u591a\u65f6\u5019\u521a\u51fa\u5382\u7684U\u76d8\u90fd\u662f \u5e72\u5e72\u51c0\u51c0 \u7684\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u5176\u8fdb\u884c \u683c\u5f0f\u5316 \uff0c\u4f7f\u4e4b\u5e26\u6709\u7279\u5b9a\u6587\u4ef6\u7cfb\u7edf\u7684\u7279\u5f81\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u60f3\u7528 EXT2 \u6587\u4ef6\u7cfb\u7edf\u6765\u8bbf\u95ee\u8fd9\u4e2aU\u76d8\uff0c\u5728Linux\u4e2d\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\uff1a [root@localhost mnt]# mkfs.EXT2 sdb1 [root@localhost mnt]# \u8fd9\u6837\u505a\u5c31\u628a\u6574\u4e2a\u8bbe\u5907\u7ed9\u683c\u5f0f\u5316\u4e86\uff0c\u63a5\u7740\u5c31\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u6302\u8f7dU\u76d8\uff1a [root@localhost mnt]# mount -t EXT2 sdb1 /mnt/ [root@localhost mnt]#","title":"1.3  EXT2\u6587\u4ef6\u7cfb\u7edf\u7684\u6784\u6210"},{"location":"lab5/part2/#131","text":"EXT2\u6587\u4ef6\u7cfb\u7edf\u5c06\u76d8\u5757\u5206\u6210\u4e24\u5927\u7c7b\uff1a\u4fdd\u5b58\u5143\u6570\u636e\uff08\u7ba1\u7406\u6570\u636e\uff09\u7684 \u5143\u6570\u636e\u76d8\u5757 \uff0c\u4ee5\u53ca\u5b58\u653e\u6587\u4ef6\u5185\u5bb9\u6570\u636e\u7684 \u6570\u636e\u76d8\u5757 \u3002\u672c\u5b9e\u9a8c\u4e2d\uff0c\u4e3a\u4e86\u964d\u4f4e\u5b9e\u9a8c\u96be\u5ea6\uff0c\u7b80\u5316\u4e86\u5143\u6570\u636e\u533a\u7684\u7ed3\u6784\uff08\u7531\u8d85\u7ea7\u5757\u548cinode\u6570\u7ec4\u6784\u6210\uff09\u3002\u7b80\u5316\u540e\u7684EXT2\u6587\u4ef6\u7cfb\u7edf\u7684\u57fa\u672c\u5e03\u5c40\u5982\u4e0b\u6240\u793a\uff1a \u7cfb\u7edf\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b\u4e94\u4e2a\u90e8\u5206\uff1a superblock \uff1a\u8d85\u7ea7\u5757\uff0c\u5305\u542b\u6574\u4e2a\u7cfb\u7edf\u7684\u603b\u4f53\u4fe1\u606f; \u7d22\u5f15\u8282\u70b9\u4f4d\u56fe \uff1a\u8bb0\u5f55\u7740 \u7d22\u5f15\u8282\u70b9 \u8868\u7684\u4f7f\u7528\u60c5\u51b5\uff0c \u75281\u4e2a\u6bd4\u7279 \u8bb0\u5f55\u67d0\u4e00\u4e2a\u7d22\u5f15\u8282\u70b9\u662f\u5426\u88ab\u4f7f\u7528\uff1b \u6570\u636e\u5757\u4f4d\u56fe \uff1a\u8bb0\u5f55\u7740 \u6570\u636e\u5757 \u7684\u4f7f\u7528\u60c5\u51b5\uff0c \u75281\u4e2a\u6bd4\u7279 \u8bb0\u5f55\u67d0\u4e00\u4e2a\u6570\u636e\u5757\u662f\u5426\u88ab\u5360\u7528\uff1b \u7d22\u5f15\u8282\u70b9 \uff08inode\uff09 \uff1a\u8bb0\u5f55\u7740\u6587\u4ef6\u7684\u5143\u6570\u636e\uff0c\u6bcf\u4e2a\u6587\u4ef6\u90fd\u4e0e\u4e00\u4e2ainode\u5bf9\u5e94\uff0c\u4f46\u4e00\u4e2ainode\u53ef\u80fd\u5bf9\u5e94\u591a\u4e2a\u6587\u4ef6\uff08\u786c\u94fe\u63a5\uff09\u3002\u5728 \u672c\u5b9e\u9a8c\u4e2d\u53ef\u4ee5\u8ba4\u4e3a\u4e00\u4e2ainode\u5bf9\u5e94\u4e00\u4e2a\u6587\u4ef6 \u3002 \u6570\u636e\u5757 \uff1a\u8bb0\u5f55\u6587\u4ef6\u5185\u5bb9.","title":"1.3.1  \u6574\u4f53\u5e03\u5c40"},{"location":"lab5/part2/#132","text":"\u8d85\u7ea7\u5757\u662f\u6587\u4ef6\u7cfb\u7edf\u7684 \u8d77\u70b9\u7ed3\u6784 \uff0c\u8bb0\u5f55\u4e86\u6587\u4ef6\u7cfb\u7edf\u5168\u5c40\u6027\u7684\u4e00\u4e9b\u4fe1\u606f\u3002\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u53c2\u8003\u7684\u8d85\u7ea7\u5757\u7ed3\u6784\u4f53\u793a\u4f8b\uff1a struct super_block_d { uint32_t magic_num ; // \u5e7b\u6570 int max_ino ; // \u6700\u591a\u652f\u6301\u7684\u6587\u4ef6\u6570 int map_inode_blks ; // inode\u4f4d\u56fe\u5360\u7528\u7684\u5757\u6570 int map_inode_offset ; // inode\u4f4d\u56fe\u5728\u78c1\u76d8\u4e0a\u7684\u504f\u79fb int map_data_blks ; // data\u4f4d\u56fe\u5360\u7528\u7684\u5757\u6570 int map_data_offset ; // data\u4f4d\u56fe\u5728\u78c1\u76d8\u4e0a\u7684\u504f\u79fb }; magic_num \uff1a\u5e7b\u6570\u3002\u7528\u4e8e\u8bc6\u522b\u6587\u4ef6\u7cfb\u7edf\u3002\u6bd4\u5982\u8bf4\uff0c\u5982\u679c\u5b9e\u73b0\u7684\u6587\u4ef6\u7cfb\u7edf\u5e7b\u6570\u4e3a 0x52415453 \uff0c\u90a3\u4e48\u5982\u679c\u8bfb\u5230\u7684\u5e7b\u6570\u4e0d\u7b49\u4e8e 0x52415453 \uff0c\u5219\u8868\u793a\u5f53\u524d\u78c1\u76d8\u4e2d\u65e0\u7cfb\u7edf\uff0c\u7cfb\u7edf\u635f\u574f\uff0c\u6216\u8005\u662f\u5176\u4ed6\u4e0d\u8bc6\u522b\u7684\u6587\u4ef6\u7cfb\u7edf\uff1b max_ino \uff1a\u6700\u591a\u652f\u6301\u7684\u6587\u4ef6\u6570\u3002\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u5141\u8bb8\u8be5\u6587\u4ef6\u7cfb\u7edf\u5177\u6709\u6587\u4ef6\u6570\u4e0a\u9650\uff1b map_inode_blks \uff1ainode\u4f4d\u56fe\u5360\u7528\u7684\u5757\u6570\u3002\u6bcf\u4e2a \u5757\u7684\u5927\u5c0f\u7b49\u4e8e\u78c1\u76d8\u8bbe\u5907\u7684IO\u5927\u5c0f\uff08\u5229\u7528ddriver\u7684ioctl\u83b7\u53d6\uff09 \uff1b map_inode_offset \uff1ainode\u4f4d\u56fe\u5728\u78c1\u76d8\u4e0a\u7684\u504f\u79fb\u3002\u901a\u8fc7 map_inode_offset \u548c map_inode_blks \u5b57\u6bb5\uff0c\u4fbf\u53ef\u8bfb\u51fa\u6574\u4e2ainode\u4f4d\u56fe\uff1b map_data_blks \uff1a\u4e0e map_inode_blks \u76f8\u540c\uff0c\u4e0d\u518d\u8d58\u8ff0\uff1b map_data_offset \uff1a\u4e0e map_inode_offset \u76f8\u540c\uff0c\u4e0d\u518d\u8d58\u8ff0\uff1b \u5982\u4f55\u51b3\u5b9a\u4f4d\u56fe\u5927\u5c0f\u5462 \uff1f\u8fd9\u91cc\u7ed9\u51fa\u51e0\u4e2a\u65b9\u6848\uff1a \u5047\u8bbe\u4f30\u7b97\u3002 \u5047\u5b9a\u6bcf\u4e2a\u6587\u4ef6\u5177\u6709\u56fa\u5b9a\u5927\u5c0f \uff0c\u4ece\u800c\u4f30\u7b97\u6574\u4e2a\u6587\u4ef6\u7cfb\u7edf\u53ef\u4ee5 \u7ba1\u7406\u591a\u5c11\u6587\u4ef6 \uff0c\u4ece\u800c\u8ba1\u7b97\u4f4d\u56fe\u5927\u5c0f\uff1b \u89c4\u5b9a\u5927\u5c0f\u3002\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u884c \u89c4\u5b9a\u4f4d\u56fe \u7684\u5927\u5c0f\uff0c\u53ea\u8981 \u4fdd\u8bc1\u6307\u4ee4\u8fd0\u884c\u6210\u529f \u5373\u53ef\uff1b","title":"1.3.2  \u8d85\u7ea7\u5757"},{"location":"lab5/part2/#133","text":"\u5bf9\u4e8e\u6bcf\u4e2a\u6587\u4ef6\uff0c\u90fd\u4f1a\u6709\u4e00\u4e2ainode\u7ed3\u6784\u4f53\u5305\u542b\u5176\u5143\u6570\u636e\uff08\u6587\u4ef6\u7c7b\u578b\uff0c\u6587\u4ef6\u5927\u5c0f\uff09\u7b49\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5316\u7684inode\u793a\u4f8b\u3002 struct inode_d { int ino ; // \u5728inode\u4f4d\u56fe\u4e2d\u7684\u4e0b\u6807 int size ; // \u6587\u4ef6\u5df2\u5360\u7528\u7a7a\u95f4 int link ; // \u94fe\u63a5\u6570 FILE_TYPE ftype ; // \u6587\u4ef6\u7c7b\u578b\uff08\u76ee\u5f55\u7c7b\u578b\u3001\u666e\u901a\u6587\u4ef6\u7c7b\u578b\uff09 int dir_cnt ; // \u5982\u679c\u662f\u76ee\u5f55\u7c7b\u578b\u6587\u4ef6\uff0c\u4e0b\u9762\u6709\u51e0\u4e2a\u76ee\u5f55\u9879 int block_pointer [ 6 ]; // \u6570\u636e\u5757\u6307\u9488\uff08\u53ef\u56fa\u5b9a\u5206\u914d\uff09 }; \u6587\u4ef6\u7684\u5185\u5bb9\u5e76 \u4e0d\u4f1a\u4fdd\u5b58 \u5728inode\u91cc\uff0c\u800c\u662f \u4fdd\u5b58 \u5728\u53e6\u5916\u7684 \u6570\u636e\u5757 \u4e2d\u3002inode\u91cc \u4fdd\u5b58\u4e86\u76f8\u5e94\u6570\u636e\u5757\u7684\u7d22\u5f15\u503c \u3002\u8bfb\u5199\u6587\u4ef6\u65f6\u5219\u901a\u8fc7\u7d22\u5f15\u503c\u627e\u5230\u76f8\u5e94\u7684\u6570\u636e\u5757\u6765\u8bfb\u5199\u3002\u539f\u7406\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u6bcf\u4e2a\u7d22\u5f15\u8282\u70b9\u5185\u5305\u542b block_point \u6570\u7ec4\u7528\u4e8e\u8bb0\u5f55\u6587\u4ef6\u7684\u6570\u636e\u5757\u6240\u5728\u4f4d\u7f6e\uff08\u7f16\u53f7\uff09\u3002 EXT2 \u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684 \u6bcf\u4e2a\u6570\u636e\u5757\u5927\u5c0f\u4e3a\u4e24\u4e2a512B\u7684\u7269\u7406\u78c1\u76d8\u5757 \uff08\u53731KiB\uff09\uff0c\u90a3\u4e48\u91c7\u7528\u76f4\u63a5\u7d22\u5f15\u65b9\u5f0f\uff0c\u4e00\u4e2a\u6587\u4ef6\u4e0d\u80fd\u8d85\u8fc7 6\u4e2a\uff08\u6570\u636e\u5757\uff09 * 1KB\uff08\u6570\u636e\u5757\u5927\u5c0f\uff09= 6KB\u5927\u5c0f\uff1b\u5f53\u6587\u4ef6\u8d85\u8fc76KB\u65f6\uff0c\u9700\u8981\u7528\u4e00\u7ea7\u95f4\u63a5\u7d22\u5f15\uff0c\u5982\u679c\u6587\u4ef6\u7ee7\u7eed\u589e\u5927\uff0c\u5c31\u9700\u8981\u4e8c\u7ea7\u6216\u4e8c\u7ea7\u4ee5\u4e0a\u95f4\u63a5\u7d22\u5f15\u3002\uff08 \u6ce8\uff1a\u95f4\u63a5\u7d22\u5f15\u5c5e\u4e8e\u9009\u505a\u529f\u80fd \uff09 link \uff1a\u6587\u4ef6\u94fe\u63a5\u6570\uff08 \u6ce8\uff1a\u6587\u4ef6\u8f6f\u94fe\u63a5\u4e0e\u786c\u94fe\u63a5\u5c5e\u4e8e\u9009\u505a\u529f\u80fd \uff09 ftype \uff1a\u6587\u4ef6\u7c7b\u578b\u3002\u53ef\u81ea\u5b9a\u4e49\u679a\u4e3e\u7c7b\u578b\uff0c\u65b9\u4fbf\u7f16\u7801\uff0c\u4f8b\u5982\uff1a typedef enum file_type { FILE , // \u666e\u901a\u6587\u4ef6 DIR // \u76ee\u5f55\u6587\u4ef6 } FILE_TYPE ;","title":"1.3.3  \u6587\u4ef6\u7684\u8868\u793a"},{"location":"lab5/part2/#134","text":"\u6587\u4ef6\u5939\uff08\u76ee\u5f55\uff09\u7528\u4e8e\u5c06\u6574\u4e2a\u6587\u4ef6\u7cfb\u7edf\u7684\u6587\u4ef6\u7ed3\u6784 \u6309\u8def\u5f84\u540d\u8bbf\u95ee\u7684\u6811\u5f62\u7ec4\u7ec7\u7ed3\u6784\u6392\u5217 \u3002Ext2\u6587\u4ef6\u7cfb\u7edf\u5e76\u6ca1\u6709\u5355\u72ec\u5f62\u6210\u7528\u4e8e\u76ee\u5f55\u6570\u636e\u7684\u6570\u636e\u5757\uff0c\u800c\u662f \u5c06\u76ee\u5f55\u4e0e\u666e\u901a\u6587\u4ef6\u4e00\u6837\u5b58\u653e\u5728\u6570\u636e\u5757\u4e2d \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c \u6587\u4ef6\u5939\uff08\u76ee\u5f55\uff09\u5728Ext2\u4e2d\u7684\u5b58\u50a8\u65b9\u5f0f\u4e0e\u6587\u4ef6\u4e00\u81f4 \u3002\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u76ee\u5f55\u5728\u6570\u636e\u5757\u4e2d\u7684\u5185\u5bb9\u7531\u6587\u4ef6\u7cfb\u7edf\u76f4\u63a5\u7ba1\u7406\uff0c\u7528\u6237\u5e76\u4e0d\u80fd\u50cf\u5199\u666e\u901a\u6587\u4ef6\u4e00\u6837\u76f4\u63a5\u4f7f\u7528\u7f16\u8f91\u5668\u5199\u76ee\u5f55\u6570\u636e\u5757\u4e2d\u7684\u5185\u5bb9\u3002 \u76ee\u5f55\u5728\u5b58\u50a8\u7ba1\u7406\u4e0a\u548c\u666e\u901a\u6587\u4ef6\u76f8\u540c\u2014\u2014\u4e5f\u662f \u901a\u8fc7\u7d22\u5f15\u8282\u70b9\u6765\u7ba1\u7406\u76ee\u5f55\u9879\u6570\u636e\u7684 \uff0c\u53ea\u4e0d\u8fc7\u76ee\u5f55\u6570\u636e\u5757\u5185\u5bb9\u542b\u6709\u591a\u6761\u76ee\u5f55\u9879\u6570\u636e\u7ed3\u6784\uff0c\u5373\u76ee\u5f55\u6570\u636e\u5757\u4e2d\u7684\u5185\u5bb9\u662f\u76ee\u5f55\u9879\u7684\u6570\u7ec4\uff0c\u901a\u8fc7\u4e0a\u4e00\u7ea7\u76ee\u5f55\u9879\u5c06\u5176\u7c7b\u578b\u6807\u8bc6\u4e3a\u201c\u76ee\u5f55\u201d\u4ee5\u533a\u5206\u666e\u901a\u6587\u4ef6\u3002 \u6839\u76ee\u5f55\u6709\u56fa\u5b9a\u7684\u8d77\u70b9 \uff08\u4f8b\u5982Ext2\u6587\u4ef6\u7cfb\u7edf\u6839\u76ee\u5f55\u7684\u7d22\u5f15\u53f7\u4e3a2\uff09\uff0c\u56e0\u6b64\u6839\u76ee\u5f55\u6587\u4ef6\u5c31\u4e0d\u9700\u8981\u4e0a\u7ea7\u76ee\u5f55\u6765\u5b9a\u4f4d\u4e86\u3002 \u4e0b\u9762\u662f\u7b80\u5316\u7684 \u76ee\u5f55\u9879 \u7ed3\u6784\u4f53\u793a\u4f8b\uff1a struct dentry_d { char fname [ MAX_FILE_NAME ]; // \u6307\u5411\u7684ino\u6587\u4ef6\u540d FILE_TYPE ftype ; // \u6307\u5411\u7684ino\u6587\u4ef6\u7c7b\u578b int ino ; // \u6307\u5411\u7684ino\u53f7 int valid ; // \u8be5\u76ee\u5f55\u9879\u662f\u5426\u6709\u6548 }; \u5bf9\u4e8e\u76ee\u5f55\u4e2d\u7684\u6bcf\u4e00\u4e2a\u76ee\u5f55\u9879\u90fd\u5bf9\u5e94\u4e86\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u4e00\u4e2a\u6587\u4ef6/\u76ee\u5f55\u3002\u5177\u4f53\u8868\u793a\u65b9\u5f0f\u89c1\u4e0b\u56fe\uff1a \u56fe\u4e2d / \u76ee\u5f55\u4e0b\u7b2c\u4e8c\u4e2a\u540d\u4e3a JINX \u7684\u76ee\u5f55\u9879\u7684 valid \u5b57\u6bb5\u88ab\u6807\u8bb0\u4e3a0\uff0c \u8868\u793a\u8fd9\u4e00\u6587\u4ef6\u5df2\u88ab\u5220\u9664 \u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u7684\u5220\u9664\u65b9\u5f0f\uff0c\u6bd4\u5982 \u7528\u540e\u9762\u7684\u76ee\u5f55\u9879\u8986\u76d6\u88ab\u5220\u9664\u7684\u76ee\u5f55\u9879 \u3002 \u56fe\u4e2d /demo/ \u76ee\u5f55\u6307\u5411\u7684\u6570\u636e\u5757\u6ca1\u6709\u753b\u51fa\uff0c\u5176\u539f\u7406\u4e0e\u6839\u76ee\u5f55\u4e00\u81f4\u3002","title":"1.3.4  \u6587\u4ef6\u5939\uff08\u76ee\u5f55\uff09\u7684\u8868\u793a"},{"location":"lab5/part2/#135","text":"\u5927\u5bb6\u53ef\u80fd\u6ce8\u610f\u5230\u6211\u4eec \u524d\u9762\u5c55\u793a\u7684\u6570\u636e\u7ed3\u6784 \u540e\u9762\u90fd\u5e26\u6709\u4e00\u4e2a _d \uff0c\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4ee3\u8868\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u662f\u5b58\u5728\u4e8e\u771f\u5b9e\u8bbe\u5907\u4e4b\u4e0a\u7684\uff0c\u5b83\u4eec\u5171\u540c\u6784\u5efa\u4e86\u6587\u4ef6\u7cfb\u7edf\u7684\u5e03\u5c40\u3002\u4f46\u6587\u4ef6\u7cfb\u7edf \u7ed3\u6784\u5e03\u5c40 \u4e0e \u6587\u4ef6\u7cfb\u7edf \u4e24\u8005\u8fd8\u662f\u6709\u4e00\u5b9a\u7684\u504f\u5dee\u3002\u8fd9\u662f\u56e0\u4e3a\u6587\u4ef6\u7cfb\u7edf\u4e0d\u5149\u8981\u8bbe\u8ba1\u5e03\u5c40\uff0c\u8fd8\u9700\u8981 \u9488\u5bf9\u5e03\u5c40 \u8bbe\u8ba1\u76f8\u5e94\u7684 \u5185\u5b58\u6570\u636e\u7ed3\u6784 \u6765\u65b9\u4fbf\u7ba1\u7406\u3002 \u6211\u4eec\u4e3e\u4e24\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u8fd9\u4e2a\u95ee\u9898\u3002 super_block \u7684\u5185\u5b58\u8868\u793a \u5728\u8bbe\u5907\u4e0a\uff0c\u8d85\u7ea7\u5757\u4e2d\u4ec5\u4ec5\u4fdd\u5b58\u4e86\u6587\u4ef6\u7cfb\u7edf\u7684\u4f4d\u56fe\u4f4d\u7f6e\uff0c\u6211\u4eec\u9700\u8981 \u5c06\u4f4d\u56fe\u8bfb\u5230\u5185\u5b58\u4e2d\u4ee5\u4fbf\u6211\u4eec\u8fdb\u884c\u8bbf\u95ee \uff1b\u6b64\u5916\uff0c\u4e3a\u4e86\u65b9\u4fbf\u67e5\u627e\u6839\u76ee\u5f55\uff0c\u6211\u4eec\u4e5f\u5b8c\u5168\u53ef\u4ee5\u5c06\u6839\u76ee\u5f55\u7ef4\u62a4\u5728\u8d85\u7ea7\u5757\u7684\u5185\u5b58\u8868\u793a\u4e2d\uff0c\u4ee5\u4fbf\u6211\u4eec\u5168\u5c40\u8bbf\u95ee\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u7b80\u5355\u8bbe\u8ba1\u8d85\u7ea7\u5757\u7684\u5185\u5b58\u8868\u793a\u5982\u4e0b\uff1a struct super_block { int max_ino ; uint8_t * map_inode ; // inode\u4f4d\u56fe uint8_t * map_data ; // data\u4f4d\u56fe struct dentry * root_dentry ; // \u6839\u76ee\u5f55dentry }; \u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u80fd\u65b9\u4fbf\u5730\u5bf9 inode \u4f4d\u56fe \u548c data \u4f4d\u56fe \u8fdb\u884c\u7ba1\u7406\uff0c\u5e76\u80fd\u591f\u901a\u8fc7 root_dentry \u8f7b\u677e\u8bbf\u95ee\u6839\u76ee\u5f55\uff0c\u4ece\u800c\u8fbe\u5230 \u5feb\u901f\u89e3\u6790\u8def\u5f84 \u7684\u76ee\u7684\u3002 inode \u7684\u5185\u5b58\u8868\u793a \u5728\u78c1\u76d8\u5e03\u5c40\u4e2d\uff0c\u6211\u4eec\u7684 inode \u5b9a\u4e49\u5982\u4e0b\uff1a struct inode_d { int ino ; // \u5728inode\u4f4d\u56fe\u4e2d\u7684\u4e0b\u6807 int size ; // \u6587\u4ef6\u5df2\u5360\u7528\u7a7a\u95f4 int link ; // \u94fe\u63a5\u6570 FILE_TYPE ftype ; // \u6587\u4ef6\u7c7b\u578b\uff08\u76ee\u5f55\u7c7b\u578b\u3001\u666e\u901a\u6587\u4ef6\u7c7b\u578b\uff09 int dir_cnt ; // \u5982\u679c\u662f\u76ee\u5f55\u7c7b\u578b\u6587\u4ef6\uff0c\u4e0b\u9762\u6709\u51e0\u4e2a\u76ee\u5f55\u9879 int block_pointer [ 6 ]; // \u6570\u636e\u5757\u6307\u9488\uff08\u53ef\u56fa\u5b9a\u5206\u914d\uff09 }; \u8fd9\u4e2a\u7ed3\u6784\u96be\u4ee5\u5bf9\u6307\u5411 inode \u7684 dentry \u8fdb\u884c\u8bbf\u95ee\uff0c\u4e5f\u5c31\u96be\u4ee5\u83b7\u5f97\u8be5\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u3002\u6b64\u5916\uff0c\u5bf9\u4e8e \u76ee\u5f55\u6587\u4ef6 \u800c\u8a00\uff0c\u5b83\u7f3a\u5c11\u4e00\u79cd \u5feb\u6377\u904d\u5386\u6bcf\u4e2a\u76ee\u5f55\u9879 \u7684\u65b9\u6cd5\uff0c\u56e0\u6b64\uff0c\u53ef\u4ee5\u7b80\u5355\u8bbe\u7f6e inode \u7684\u5185\u5b58\u7ed3\u6784\u5982\u4e0b\uff1a struct inode { int ino ; // \u5728inode\u4f4d\u56fe\u4e2d\u7684\u4e0b\u6807 int size ; // \u6587\u4ef6\u5df2\u5360\u7528\u7a7a\u95f4 int dir_cnt ; // \u76ee\u5f55\u9879\u6570\u91cf struct dentry * dentry ; // \u6307\u5411\u8be5inode\u7684dentry struct dentry * dentrys ; // \u6240\u6709\u76ee\u5f55\u9879 int block_pointer [ 6 ]; // \u6570\u636e\u5757\u6307\u9488 }; \u8fd9\u6837\u4e00\u6765\uff0c\u6211\u4eec\u901a\u8fc7\u7ef4\u62a4 dentry \u548c dentrys \u5c31\u80fd\u591f\u5f88\u8f7b\u677e\u5730\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\u3002 \u8fd9\u91cc\u7ed9\u51fa\u7684\u4f8b\u5b50\u4ec5\u8d77\u4e00\u4e2a\u629b\u7816\u5f15\u7389\u7684\u4f5c\u7528\uff0c\u4f60 \u751a\u81f3\u53ef\u4ee5\u4e0d\u8bbe\u8ba1\u8fd9\u79cd\u5185\u5b58\u7ed3\u6784 \uff0c\u4f8b\u5982\uff1a\u76f4\u63a5\u58f0\u660e \u4f4d\u56fe \u3001 \u6839\u76ee\u5f55dentry \u4e3a\u5168\u5c40\u53d8\u91cf\u7b49\u3002","title":"1.3.5  \u5185\u5bb9\u7ed3\u6784\u7684\u8868\u793a"},{"location":"lab5/part2/#2-fusefilesystem-in-user-space","text":"\u4f20\u7edf\u7684\u3001\u57fa\u4e8eLinux\u7684\u6587\u4ef6\u7cfb\u7edf\u5f00\u53d1\u90fd\u662f\u4ee5\u5185\u6838\u6a21\u5757\uff08 Kernel Module \uff09\u7684\u65b9\u5f0f\u8fdb\u884c\uff0c\u8fd9\u4f7f\u5f97\u5f00\u53d1\u8c03\u8bd5\u53d8\u5f97\u5f02\u5e38\u7e41\u7410\u3002\u6b64\u5916\uff0c\u5185\u6838\u7684\u5f00\u53d1\u4e0e\u4f20\u7edfC\u7a0b\u5e8f\u5f00\u53d1\u4e0d\u540c\uff0c\u4f60\u9700\u8981\u4f7f\u7528\u5185\u6838\u7684API\uff0c\u50cf malloc \u4e4b\u7c7b\u7684\u7528\u6237\u6001\u51fd\u6570\u5728\u5185\u6838\u5f00\u53d1\u4e2d\u5df2\u4e0d\u518d\u9002\u7528\u3002\u5982\u679c\u6709\u540c\u5b66\u5e0c\u671b\u4e86\u89e3\u66f4\u591a\u5185\u6838\u6a21\u5757\u5f00\u53d1\u76f8\u5173\u77e5\u8bc6\uff0c\u53ef\u4ee5\u81ea\u884cgoogle\u6216\u767e\u5ea6\u3002 \u7531\u4e8e\u5185\u6838\u6587\u4ef6\u7cfb\u7edf\u5f00\u53d1\u7684\u56f0\u96be\uff0cFUSE\u67b6\u6784\u7531\u6b64\u767b\u4e0a\u4e86\u53f0\u9762\u3002FUSE\u5168\u79f0Filesystem in User SpacE\uff0c\u5b83\u5c06 \u6587\u4ef6\u7cfb\u7edf\u7684\u5b9e\u73b0\u4ece\u5185\u6838\u6001\u642c\u5230\u4e86\u7528\u6237\u6001 \uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u53ef\u4ee5 \u5728\u7528\u6237\u6001\u5b9e\u73b0\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf \u3002 \u672c\u6b21\u5b9e\u9a8c\u6211\u4eec\u4fbf\u662f\u57fa\u4e8eFUSE\u67b6\u6784\uff0c \u5728\u7528\u6237\u6001 \u5b9e\u73b0\u6211\u4eec\u7684\u9752\u6625\u7248EXT2\u6587\u4ef6\u7cfb\u7edf\uff0c\u4ece\u800c\u5b8c\u7f8e\u63a5\u5165Linux\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0bFUSE\uff0c\u5f53\u7136\uff0c\u5982\u679c\u5bf9FUSE\u4e0d\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u7565\u8fc7\u8fd9\u4e00\u7ae0\u8282\u3002\u5728\u201c\u4efb\u52a1\u4e8c\u201d \u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u5982\u4f55\u63a5\u5165FUSE\u3002 \u4ee5\u4e0b\u5185\u5bb9\u53c2\u8003\u81ea \u7528\u6237\u6001\u6587\u4ef6\u7cfb\u7edf\u6846\u67b6FUSE\u7684\u4ecb\u7ecd\u53ca\u793a\u4f8b - \u77e5\u4e4e (zhihu.com)","title":"2.  FUSE\uff08Filesystem in User SpacE\uff09\u67b6\u6784"},{"location":"lab5/part2/#21-fuse","text":"\u7b80\u5355\u7684\u7406\u89e3\uff0c FUSE\u5b9e\u73b0\u4e86\u4e00\u4e2a\u5bf9\u6587\u4ef6\u7cfb\u7edf\u8bbf\u95ee\u7684\u56de\u8c03 \u3002FUSE\u5206\u4e3a \u5185\u6838\u6001\u7684\u6a21\u5757\u548c\u7528\u6237\u6001\u7684\u5e93 \u4e24\u90e8\u5206\u3002\u5176\u4e2d \u7528\u6237\u6001\u7684\u5e93 \u4e3a \u7528\u6237\u6001\u7a0b\u5e8f\u5f00\u53d1 \u63d0\u4f9b\u63a5\u53e3\uff0c\u6211\u4eec\u901a\u8fc7\u8fd9\u4e9b\u63a5\u53e3 \u5c06\u8bf7\u6c42\u5904\u7406\u529f\u80fd\u6ce8\u518c\u5230FUSE\u4e2d \u3002 \u5185\u6838\u6001\u6a21\u5757 \u662f\u5177\u4f53\u7684\u6570\u636e\u6d41\u7a0b\u7684\u529f\u80fd\u5b9e\u73b0\uff0c\u5b83 \u622a\u83b7\u6587\u4ef6\u7684\u8bbf\u95ee\u8bf7\u6c42\uff0c\u7136\u540e\u8c03\u7528\u7528\u6237\u6001\u6ce8\u518c\u7684\u51fd\u6570\u8fdb\u884c\u5904\u7406 \u3002 \u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5176\u4e2d hello \u662f\u7528\u6237\u6001\u7684\u6587\u4ef6\u7cfb\u7edf\u7a0b\u5e8f\uff0c \u8be5\u7a0b\u5e8f\u542f\u52a8\u7684\u65f6\u5019\u4f1a\u5c06\u81ea\u5df1\u5f00\u53d1\u7684\u63a5\u53e3\u6ce8\u518c\u5230FUSE\u4e2d \uff0c \u6bd4\u5982\u8bfb\u5199\u6587\u4ef6\u7684\u63a5\u53e3\uff0c\u904d\u5386\u76ee\u5f55\u7684\u63a5\u53e3 \u7b49\u7b49\u3002\u540c\u65f6\uff0c \u901a\u8fc7\u8be5\u7a0b\u5e8f\u5728\u7cfb\u7edf\u67d0\u4e2a\u8def\u5f84\u6302\u8f7dFUSE\u6587\u4ef6\u7cfb\u7edf \uff0c\u6bd4\u5982 /tmp/fuse \u3002\u6b64\u65f6 \u5982\u679c\u5728\u8be5\u76ee\u5f55\u4e2d\u6709\u76f8\u5173\u64cd\u4f5c \u65f6\uff0c\u8bf7\u6c42\u4f1a\u7ecf\u8fc7 Linux\u865a\u62df\u6587\u4ef6\u7cfb\u7edf \uff08 VFS \uff09\u5c42 \u5230FUSE\u7684\u5185\u6838\u6a21\u5757 \uff08\u5982\u8c03\u7528 ls \u547d\u4ee4\uff0c\u5982\u4e0a\u56fe\u4e2d\u7684\u6b65\u9aa4\u2460\uff09\uff0c FUSE\u5185\u6838\u6a21\u5757\u6839\u636e\u8bf7\u6c42\u7c7b\u578b \uff0c\u8c03\u7528 \u7528\u6237\u6001\u5e94\u7528\u6ce8\u518c \u7684\u51fd\u6570\uff08\u4e0a\u56fe\u4e2d\u6b65\u9aa4\u2461\uff09\uff0c\u7136\u540e \u5c06\u5904\u7406\u7ed3\u679c\u901a\u8fc7VFS\u8fd4\u56de\u7ed9\u7cfb\u7edf\u8c03\u7528 \uff08\u6b65\u9aa4\u2462\uff09\u3002","title":"2.1  FUSE\u57fa\u672c\u539f\u7406"},{"location":"lab5/part2/#22","text":"\u83b7\u53d6\u5b9e\u9a8c\u5305\u53c2\u8003 \u73af\u5883\u642d\u5efa\u4e0e\u4e0a\u624b \u3002 \u5728\u6211\u4eec\u63d0\u4f9b\u7684\u5b9e\u9a8c\u5305\u4e2d\uff0c\u5df2\u7ecf\u6709\u4e24\u4e2a\u5b8c\u5168\u642d\u5efa\u597d\u7684FUSE\u6587\u4ef6\u7cfb\u7edf\uff1a simplefs \uff08 fs/simplefs \u6587\u4ef6\u5939\u4e0b\uff09\u548c myfs \uff08 fs/samples \u6587\u4ef6\u5939\u4e0b\uff09\uff0c\u5176\u4e2d simplefs \u662f\u4e00\u4e2a\u7c7bEXT2\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u4f46 \u6ca1\u6709\u7ed9\u4e88\u6570\u636e\u4f4d\u56fe \u7684\u5b9e\u73b0\uff1b myfs \u662f github \u4e0a\u7684\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u4e5f\u662f\u4e00\u4e2aFUSE\u6587\u4ef6\u7cfb\u7edf\u5b9e\u4f8b\u3002 \u6b64\u5916\uff0c\u8fd9\u91cc\u6211\u4eec\u7ed9\u4e00\u4e2a\u6781\u7b80\u7684Demo\u3002\u8be5Demo\u975e\u5e38\u7b80\u5355\uff0c\u5b83\u5e76\u4e0d\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c \u4e5f\u4e0d\u4f1a\u8bbf\u95ee\u8bbe\u5907 \uff0c\u800c\u662f\u5728 \u8be5\u6587\u4ef6\u7cfb\u7edf \u7684\u6839\u76ee\u5f55\u4e2d \u663e\u793a\u4e00\u4e2a\u56fa\u5b9a\u7684\u6587\u4ef6 \uff0c\u4e5f\u5c31\u662f Hello-FUSE \u6587\u4ef6\u3002 /* main.c\u6e90\u7801 */ #define FUSE_USE_VERSION 26 #include <stdio.h> #include <fuse.h> /* \u8fd9\u91cc\u5b9e\u73b0\u4e86\u4e00\u4e2a\u904d\u5386\u76ee\u5f55\u7684\u529f\u80fd\uff0c\u5f53\u7528\u6237\u5728\u76ee\u5f55\u6267\u884cls\u65f6\uff0c\u4f1a\u56de\u8c03\u5230\u8be5\u51fd\u6570\uff0c\u6211\u4eec\u8fd9\u91cc\u53ea\u662f\u8fd4\u56de\u4e00\u4e2a\u56fa\u5b9a\u7684\u6587\u4ef6Hello-FUSE\u3002 */ static int test_readdir ( const char * path , void * buf , fuse_fill_dir_t filler , off_t offset , struct fuse_file_info * fi ) { return filler ( buf , \"Hello-FUSE\" , NULL , 0 ); } /* \u663e\u793a\u6587\u4ef6\u5c5e\u6027 */ static int test_getattr ( const char * path , struct stat * stbuf ) { if ( strcmp ( path , \"/\" ) == 0 ) stbuf -> st_mode = 0755 | S_IFDIR ; // \u8bf4\u660e\u8be5\u6587\u4ef6\u662f\u76ee\u5f55\u6587\u4ef6 else stbuf -> st_mode = 0644 | S_IFREG ; // \u8bf4\u660e\u8be5\u6587\u4ef6\u662f\u666e\u901a\u6587\u4ef6 return 0 ; } /*\u8fd9\u91cc\u662f\u56de\u8c03\u51fd\u6570\u96c6\u5408\uff0c\u8fd9\u91cc\u5b9e\u73b0\u7684\u5f88\u7b80\u5355*/ static struct fuse_operations ops = { . readdir = test_readdir , . getattr = test_getattr , }; int main ( int argc , char * argv []) { int ret = 0 ; ret = fuse_main ( argc , argv , & ops , NULL ); return ret ; } \u63a5\u4e0b\u6765\uff0c\u7f16\u8bd1\u8fd0\u884c main.c \u6587\u4ef6 gcc -o hello main.c -D_FILE_OFFSET_BITS = 64 -lfuse \u5047\u8bbe\u5728 /tmp \u76ee\u5f55\u4e0b\u9762\u6709\u4e00\u4e2a fuse \u76ee\u5f55\uff0c\u5982\u679c\u6ca1\u6709\u53ef\u4ee5\u624b\u52a8\u521b\u5efa\u4e00\u4e2a\u3002\u7136\u540e\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u53ef\u4ee5\u5728\u8be5\u76ee\u5f55\u6302\u8f7d\u65b0\u7684\u6587\u4ef6\u7cfb\u7edf\u3002 [ root@localhost test ] # ./hello /tmp/fuse \u6ce8\u610f \uff0c FUSE\u6587\u4ef6\u7cfb\u7edf\u7684\u6302\u8f7d\u4e0e\u4f20\u7edf\u6587\u4ef6\u7cfb\u7edf \u7684\u6302\u8f7d\u7565\u6709\u4e0d\u540c\uff0c\u5b83 \u4e0d\u7528mount\u9009\u9879 \uff0c\u76f4\u63a5\u8fd0\u884c\u4e8c\u8fdb\u5236\u6587\u4ef6\u5c31\u53ef\u5b8c\u6210\u6302\u8f7d\u3002\u4e0a\u9762\u547d\u4ee4\u7684\u610f\u601d\u662f\u5c06\u6587\u4ef6\u7cfb\u7edf hello \u6302\u8f7d\u5230 /tmp/fuse \u3002 \u6b64\u65f6\u8fd0\u884c ls \u547d\u4ee4\u770b\u770b\u6548\u679c\uff1a [ root@localhost tmp ] # ls /fuse Hello-FUSE [ root@localhost tmp ] # \u53ef\u4ee5\u770b\u51fa\u6b63\u5f0f\u6211\u4eec\u671f\u671b\u7684\u5185\u5bb9\uff0c\u4e5f\u5c31\u662f\u53ea\u6709\u4e00\u4e2a\u540d\u4e3a Hello-FUSE \u7684\u6587\u4ef6\u3002 \u81f3\u4e8e\u5982\u4f55 \u5229\u7528FUSE\u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u8bbe\u5907 \u3001 \u5982\u4f55\u521b\u5efa\u6587\u4ef6 \uff0c\u6211\u4eec\u5c06\u5728 \u4efb\u52a1\u4e8c \u4e2d\u8fdb\u884c\u8be6\u7ec6\u63cf\u8ff0\u3002","title":"2.2  \u793a\u4f8b\u53ca\u8bf4\u660e"},{"location":"lab5/part2/#3-ddriver","text":"\u672c\u6b21\u5b9e\u9a8c\u63d0\u4f9b\u4e86\u865a\u62df\u78c1\u76d8\u63a5\u53e3\uff0c\u5934\u6587\u4ef6 ddriver.h \u4e2d\u63d0\u4f9b\u4e86\u5b8c\u5907\u7684\u6ce8\u91ca\u3002\u8be5\u63a5\u53e3\u5e95\u5c42\u5b9e\u73b0\u7b80\u5355\uff0c\u4e14\u57fa\u672c\u7b26\u5408POSIX\u89c4\u8303\uff08\u5373\u4e0e\u6807\u51c6 write \u3001 read \u3001 lseek \u3001 ioctl \u7b49\u63a5\u53e3\u4fdd\u6301\u4e00\u81f4\uff09\u3002 \u552f\u4e00\u9700\u8981\u6ce8\u610f\u7684\u662f\u6211\u4eec\u5bf9\u5355\u6b21\u8bfb\u53d6\u3001\u5199\u5165\u7684IO\u5927\u5c0f\u505a\u51fa\u4e86\u9650\u5236\uff0c\u4fdd\u8bc1\u5176\u4e0e\u78c1\u76d8\u5757\u5927\u5c0f\u5bf9\u9f50 \u3002\u5176\u4e2d\uff0cIO\u5927\u5c0f\u4e3a512B\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7 ddriver_ioctl \u6765\u8bf7\u6c42IO\u5927\u5c0f\uff0c\u5177\u4f53\u6211\u4eec\u5728 \u4efb\u52a1\u4e8c \u4e2d\u4ecb\u7ecd\u3002 DDRIVER\u9a71\u52a8 \u6a21\u62df\u4e86 \u5bf9\u4e00\u4e2a\u5bb9\u91cf\u4e3a4MiB\u7684\u78c1\u76d8 \u7684\u64cd\u4f5c\uff0c\u540c\u6837\uff0c4MiB\u53ef\u4ee5\u901a\u8fc7 ddriver_ioctl \u51fd\u6570\u8bbf\u95ee\u5f97\u5230\u3002\u5176\u4e2d\u9700\u8981\u6ce8\u610f\u7684\u662f\u5b83 \u4fdd\u7559\u4e86\u78c1\u76d8\u7684\u8bbf\u95ee\u7279\u6027 \uff0c\u5373 \u6309\u5757\u8bbf\u95ee \uff0c\u6bcf\u6b21\u8bfb\u5199\u90fd\u9700\u8981 \u8bfb\u5199\u5b8c\u6574\u7684512B \u7684\u78c1\u76d8\u5757\u3002\u8fd9\u5c06\u5f15\u8d77\u4e00\u4e9b\u5f88\u9ebb\u70e6\u7684\u60c5\u51b5\uff0c\u6bd4\u5982\u8bf4\u8981\u66f4\u65b0\u67d0\u4e2a\u78c1\u76d8\u5757\u4e2d\u7684\u67d0\u4e2ainode\u65f6\uff0c\u9700\u8981\u5148\u628a\u6574\u4e2a\u78c1\u76d8\u5757\u8bfb\u51fa\u6765\uff0c\u66f4\u65b0\u76f8\u5e94inode\uff0c\u518d\u5199\u56de\u53bb\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5f80\u78c1\u76d8\u91cc\u5199\uff08\u9664\u975e\u4e00\u4e2ainode\u6bd4\u4e00\u4e2a\u78c1\u76d8\u5757\u5927\uff09\u3002 \u4ee5\u4e0b\u662fDDRIVER\u9a71\u52a8\u63d0\u4f9b\u7684\u5934\u6587\u4ef6 ddriver.h #ifndef _DDRIVER_H_ #define _DDRIVER_H_ #include \"ddriver_ctl_user.h\" #include \"stdio.h\" /** * @brief \u6253\u5f00ddriver\u8bbe\u5907 * * @param path ddriver\u8bbe\u5907\u8def\u5f84 * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int ddriver_open ( char * path ); /** * @brief \u79fb\u52a8ddriver\u78c1\u76d8\u5934 * * @param fd ddriver\u8bbe\u5907handler * @param offset \u79fb\u52a8\u5230\u7684\u4f4d\u7f6e\uff0c\u6ce8\u610f\u8981\u548c\u8bbe\u5907IO\u5355\u4f4d\u5bf9\u9f50 * @param whence SEEK_SET\u5373\u53ef * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int ddriver_seek ( int fd , off_t offset , int whence ); /** * @brief \u5199\u5165\u6570\u636e * * @param fd ddriver\u8bbe\u5907handler * @param buf \u8981\u5199\u5165\u7684\u6570\u636eBuf * @param size \u8981\u5199\u5165\u7684\u6570\u636e\u5927\u5c0f\uff0c\u6ce8\u610f\u4e00\u5b9a\u8981\u7b49\u4e8e\u5355\u6b21\u8bbe\u5907IO\u5355\u4f4d * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int ddriver_write ( int fd , char * buf , size_t size ); /** * @brief \u8bfb\u51fa\u6570\u636e * * @param fd ddriver\u8bbe\u5907handler * @param buf \u8981\u8bfb\u51fa\u7684\u6570\u636eBuf * @param size \u8981\u8bfb\u51fa\u7684\u6570\u636e\u5927\u5c0f\uff0c\u6ce8\u610f\u4e00\u5b9a\u8981\u7b49\u4e8e\u5355\u6b21\u8bbe\u5907IO\u5355\u4f4d * @return int */ int ddriver_read ( int fd , char * buf , size_t size ); /** * @brief ddriver IO\u63a7\u5236 * * @param fd ddriver\u8bbe\u5907handler * @param cmd \u547d\u4ee4\u53f7\uff0c\u67e5\u770bddriver_ctl_user\uff0cIOC_\u5f00\u5934 * @param ret \u8fd4\u56de\u503c * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int ddriver_ioctl ( int fd , unsigned long cmd , void * ret ); /** * @brief \u5173\u95edddriver\u8bbe\u5907 * * @param fd ddriver\u8bbe\u5907handler * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int ddriver_close ( int fd ); #endif /* _DDRIVER_H_ * \u503c\u5f97\u4e00\u63d0\u7684\u662f \uff0c DDRIVER \u7684\u5b9e\u73b0\u6709\u4e24\u4e2a\u7248\u672c\uff1a \u5185\u6838\u7248\u672c \u548c \u7528\u6237\u7248\u672c \u3002\u5176\u4e2d\uff0c \u5185\u6838\u7248\u672c \u7684\u7f16\u5199\u662f\u91c7\u7528 \u5185\u6838\u6a21\u5757 \u7684\u65b9\u5f0f\uff0c\u4ee3\u7801\u4f4d\u4e8e user-land-filesystem/driver/kernel_ddriver \u4e0b\uff0c\u7531\u4e8e\u672c\u6b21\u5b9e\u9a8c\u73af\u5883\u6240\u81f4\uff0c\u5185\u6838\u7248\u672c\u6682\u505c\u4f7f\u7528\uff0c\u5982\u679c\u5927\u5bb6\u6709\u5174\u8da3\u4e5f\u53ef\u4ee5\u53bb\u53c2\u8003\u4e00\u4e0b\u4e00\u4e2a\u5185\u6838\u6a21\u5757\u7684\u7f16\u7a0b\u65b9\u6cd5\uff1b \u7528\u6237\u7248\u672c \u4f4d\u4e8e user-land-filesystem/driver/user_ddriver \u4e0b\uff0c\u7528\u6237\u7248\u672c\u7684\u7f16\u8bd1\u65b9\u5f0f\u662f\u9759\u6001\u94fe\u63a5\u5e93\uff0c\u56e0\u6b64\u4f60\u65e0\u6cd5\u76f4\u63a5\u901a\u8fc7Debug\u8c03\u8bd5\u8fdb\u5165\u5230\u4e0a\u8ff0\u63a5\u53e3\u5b9e\u73b0\u7684\u4ee3\u7801\u4e2d\uff0c \u8fd9\u4e5f\u662f\u4e3a\u4e86\u6a21\u62df\u771f\u5b9e\u9a71\u52a8\u6240\u505a\u7684\u8003\u8651 \u3002","title":"3.  DDRIVER\u865a\u62df\u78c1\u76d8\u9a71\u52a8"},{"location":"lab5/part3-1/","text":"\u73af\u5883\u642d\u5efa\u4e0e\u4e0a\u624b \u00b6 1. \u5b9e\u9a8c\u5305\u7ed3\u6784\u4ecb\u7ecd \u00b6 \u672c\u6b21\u5b9e\u9a8c\u5145\u5206\u8003\u8651\u5230 \u4e0a\u624b\u6210\u672c \uff0c\u56e0\u6b64\u6211\u4eec\u7f16\u5199\u4e86\u7b80\u5355\u7684\u73af\u5883\u914d\u7f6e\u811a\u672c\uff0c\u5e2e\u52a9\u5927\u5bb6\u4e00\u952e\u914d\u7f6e\u5f00\u53d1\u73af\u5883\u3002\u5b9e\u9a8c\u5305\u4ee3\u7801\u83b7\u53d6\u9014\u5f84\uff1a # git clone https://gitee.com/ftutorials/user-land-filesystem.git \u5b9e\u9a8c\u5305\u7684\u7ed3\u6784\u5982\u4e0b\uff1a user-land-filesystem/ \u251c\u2500\u2500 driver \u2502 \u251c\u2500\u2500 ddriver.sh \u2502 \u251c\u2500\u2500 kernel_ddriver \u2502 \u2514\u2500\u2500 user_ddriver \u251c\u2500\u2500 fs \u2502 \u251c\u2500\u2500 samples \u2502 \u251c\u2500\u2500 simplefs \u2502 \u2514\u2500\u2500 template \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 setenv.sh \u2514\u2500\u2500 tests \u251c\u2500\u2500 README.md \u2514\u2500\u2500 test_ddriver driver \u5b58\u653e\u9a71\u52a8\u4ee3\u7801\u3002\u5176\u4e2d kernel_ddriver \u4e3a\u5185\u6838\u9a71\u52a8\uff0c user_ddriver \u4e3a\u7528\u6237\u9a71\u52a8\uff0c ddriver.sh \u4e3a\u63a7\u5236 ddriver \u9a71\u52a8\u7684\u811a\u672c\u3002\u8fdb\u5165user-land-filesystem\u76ee\u5f55\uff0c\u53ef\u4ee5\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\u5c1d\u9c9c\uff1a [root@localhost user-land-filesystem]# ./driver/ddriver.sh fs \u5b58\u653e \u5b9e\u73b0\u7684FUSE\u6587\u4ef6\u7cfb\u7edf \u3002\u5176\u4e2d samples \u4e3a myfs \u6587\u4ef6\u7cfb\u7edf\uff0c simplefs \u4e3a\u7c7b EXT2 \u6587\u4ef6\u7cfb\u7edf\uff08\u7f3a\u5c11\u6570\u636e\u4f4d\u56fe\uff09\uff0c template \u7528\u4e8e\u751f\u6210\u6587\u4ef6\u7cfb\u7edf\u7684\u4ee3\u7801\u7ed3\u6784\uff0c\u53ef\u5ffd\u7565\u3002 LICENSE \u5f00\u6e90\u8bb8\u53ef\uff0c\u672c\u5b9e\u9a8c\u9075\u5faa GPL v3 \u5f00\u6e90\u8bb8\u53ef\u3002 tests \u8be5\u6587\u4ef6\u5939\u5b58\u653eDDRIVER\u7528\u6237\u9a71\u52a8\u4ee3\u7801\u3002 setenv.sh \u7528\u4e8e\u914d\u7f6eFUSE\u6587\u4ef6\u7cfb\u7edf\u5f00\u53d1\u73af\u5883\u3002 2. \u914d\u7f6e\u5f00\u53d1\u73af\u5883 \u00b6 \u8fd0\u884c ./setenv.sh \u540e\uff0c\u5373\u53ef\u6309\u7167\u6307\u5bfc\u4e00\u6b65\u4e00\u6b65\u6765\u5efa\u7acb\u73af\u5883\uff1a teststu_8@OSLabExecNode0:~/user-land-filesystem$ ./setenv.sh \u8bf7\u8f93\u5165\u5de5\u4f5c\u76ee\u5f55\u540d\u79f0 ([\u5de5\u4f5c]\u76ee\u5f55\u5c06\u88ab\u81f3\u4e8e./fs\u76ee\u5f55\u4e0b): newfs ... \u751f\u6210\u5de5\u4f5c\u8def\u5f84: /home/guests/teststu_8/user-land-filesystem/fs/newfs \u8bf7\u8f93\u5165\u9879\u76ee\u540d\u79f0: newfs ... \u5176\u4e2d\uff0c\u5de5\u4f5c\u76ee\u5f55\u540d\u79f0\u5373\u5f00\u53d1\u8be5\u6587\u4ef6\u7cfb\u7edf\u7684 \u6587\u4ef6\u5939\u540d\u79f0 \u3002\u53ef\u4ee5\u770b\u5230\uff0c\u5b83\u5728 fs \u76ee\u5f55\u4e0b\u65b0\u5efa\u4e86\u4e00\u4e2a newfs \u76ee\u5f55\u4f5c\u4e3a\u5de5\u4f5c\u76ee\u5f55\u3002 \u63a5\u7740\uff0c\u9879\u76ee\u540d\u79f0\u5373\u771f\u6b63\u7684\u6587\u4ef6\u7cfb\u7edf\u540d\u79f0\uff0c\u53ef\u4ee5\u662f\u6587\u4ef6\u7cfb\u7edf\u7684\u7b80\u5199\uff0c\u4f8b\u5982\uff1anfs\uff08\u4ee3\u8868newfs\uff09\uff0c\u8fd9\u91cc\u8981\u6ce8\u610f\u9879\u76ee\u540d\u4e0d\u80fd\u6709 \u7279\u6b8a\u7b26\u53f7\u3001\u7a7a\u683c \u7b49\u3002 \u9879\u76ee\u5efa\u7acb\u5b8c\u6210\u4e4b\u540e\u7684\u7ed3\u6784 newfs \u5982\u4e0b\u6240\u793a\uff1a ./fs/newfs/ \u251c\u2500\u2500 .vscode \u251c\u2500\u2500 CMake \u2502 \u2514\u2500\u2500 FindFUSE.cmake \u251c\u2500\u2500 CMakeLists.txt \u251c\u2500\u2500 include \u2502 \u251c\u2500\u2500 ddriver_ctl_user.h \u2502 \u251c\u2500\u2500 ddriver.h \u2502 \u251c\u2500\u2500 fs.layout \u2502 \u251c\u2500\u2500 newfs.h \u2502 \u2514\u2500\u2500 types.h \u251c\u2500\u2500 README.md \u251c\u2500\u2500 SPEC.txt \u251c\u2500\u2500 src \u2502 \u2514\u2500\u2500 newfs.c \u2514\u2500\u2500 tests \u251c\u2500\u2500 checkbm \u2502 \u251c\u2500\u2500 checkbm.py \u2502 \u251c\u2500\u2500 golden-sfs.json \u2502 \u2514\u2500\u2500 golden.json \u251c\u2500\u2500 mnt \u251c\u2500\u2500 stages \u2502 \u251c\u2500\u2500 cp.sh \u2502 \u251c\u2500\u2500 ls.sh \u2502 \u251c\u2500\u2500 mkdir.sh \u2502 \u251c\u2500\u2500 mount.sh \u2502 \u251c\u2500\u2500 remount.sh \u2502 \u251c\u2500\u2500 rw.sh \u2502 \u2514\u2500\u2500 touch.sh \u251c\u2500\u2500 fs_test.sh \u251c\u2500\u2500 main.sh \u2514\u2500\u2500 test.sh \u8fd9\u4e2a\u7ed3\u6784\u53ef\u4ee5\u81ea\u884c\u4fee\u6539\u6dfb\u52a0\uff0c\u4e0d\u8fc7\u8981\u8bb0\u5f97 \u91cd\u65b0\u914d\u7f6eCMake \u3002\u672c\u6b21\u5b9e\u9a8c\u8981\u6c42\u5f88\u7b80\u5355\uff0c \u8dd1\u8fc7 tests \u4e0b\u7684 test.sh \u7684\u57fa\u7840\u529f\u80fd\u6d4b\u8bd5\u5c31\u7b97\u5b8c\u6210 \u3002 3. DDRIVER\u811a\u672c\u7684\u8fd0\u7528 \u00b6 \u4e3a\u4e86\u65b9\u4fbf\u5bf9 ddriver \u8bbe\u5907\u8fdb\u884c\u63a7\u5236\uff0c\u6211\u4eec\u5c06ddriver.sh\u811a\u672c\u94fe\u63a5\u5230\u4e86 Linux\u547d\u4ee4\u7cfb\u7edf \u4e2d\uff0c\u63a5\u4e0b\u6765\uff0c\u5927\u5bb6\u5148\u5230 \u4e2a\u4eba\u76ee\u5f55 \u4e0b\u8fd0\u884csource ~/.bashrc\uff0c\u7136\u540e\u540c\u5b66\u4eec\u5c31\u53ef\u4ee5\u5728\u4efb\u4f55\u76ee\u5f55\u4e0b\u8bbf\u95ee\u5230ddriver.sh\u811a\u672c\u3002\u8be5\u811a\u672c\u7684\u4e3b\u8981\u7528\u9014\u5982\u4e0b\uff1a teststu_8@OSLabExecNode0:~/$ source ~/.bashrc teststu_8@OSLabExecNode0:~/$ ddriver ==================================================================== ]]]]]]]] ]]]]]]]] ] ]] ] ]] ] ]] ]] ]] ]] ]-------] ] ]] ] ] ] ] ] ]] ]] ]] ]] ]_______/ ] ]] ] ]] ] ]] ]] ]] ] ] \\ ]] ]]]]]]]] ]]]]]]]] ]] ]] ]] ]]]]]]]] ]] ==================================================================== \u7528\u6cd5: ddriver [options] options: -i [k|u] \u5b89\u88c5ddriver: [k] - kernel / [u] - user -t \u6d4b\u8bd5ddriver[\u8bf7\u5ffd\u7565] -d \u5bfc\u51faddriver\u81f3\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55[PWD] -r \u64e6\u9664ddriver -l \u663e\u793addriver\u7684Log -v \u663e\u793addriver\u7684\u7c7b\u578b[\u5185\u6838\u6a21\u5757 / \u7528\u6237\u9759\u6001\u94fe\u63a5\u5e93] -h \u6253\u5370\u672c\u5e2e\u52a9\u83dc\u5355 ==================================================================== \u5e38\u7528\u7684\u529f\u80fd\u662f -v \u3001 -d \u4e0e -r \uff0c\u5b83\u4eec\u7684\u7528\u9014\u5206\u522b\u662f \u67e5\u770bddriver\u8bbe\u5907\u7c7b\u578b\u53ca\u8bbe\u5907\u4f4d\u7f6e \u3001 \u5c06ddriver\u8bbe\u5907\u955c\u50cf\u5bfc\u51fa\u5230\u5f53\u524d\u76ee\u5f55\u4e0b \u3001 \u5c06ddriver\u8bbe\u5907\u64e6\u9664\u5e72\u51c0 \u3002\u7528\u6cd5\u5982\u4e0b\uff1a ==================================================================== # \u67e5\u770b\u8bbe\u5907\u4f4d\u7f6e\u548c\u7c7b\u578b teststu_8@OSLabExecNode0:~$ ddriver -v \u9759\u6001\u94fe\u63a5\u5e93\u8bbe\u5907: /home/guests/teststu_8/ddriver teststu_8@OSLabExecNode0:~$ ==================================================================== # \u5c06ddriver\u8bbe\u5907\u5bfc\u51fa\u5230\u5f53\u524d\u76ee\u5f55\u4e0b teststu_8@OSLabExecNode0:~/$ ddriver -d [sudo] password for teststu_8: \u76ee\u6807\u8bbe\u5907 /home/guests/teststu_8/ddriver 8192+0 records in 8192+0 records out 4194304 bytes (4.2 MB, 4.0 MiB) copied, 0.094218 s, 44.5 MB/s \u6587\u4ef6\u5df2\u5bfc\u51fa\u81f3/home/guests/teststu_8/ddriver_dump\uff0c\u8bf7\u5b89\u88c5HexEditor\u63d2\u4ef6\u67e5\u770b\u5176\u5185\u5bb9 teststu_8@OSLabExecNode0:~/$ ls ddriver_dump teststu_8@OSLabExecNode0:~/$ ==================================================================== # \u5c06ddriver\u8bbe\u5907\u64e6\u9664\u5e72\u51c0 teststu_8@OSLabExecNode0:~/$ ddriver -r \u76ee\u6807\u8bbe\u5907 /home/guests/teststu_8/ddriver 8192+0 records in 8192+0 records out 4194304 bytes (4.2 MB, 4.0 MiB) copied, 0.0506111 s, 82.9 MB/s teststu_8@OSLabExecNode0:~/$ cat ./ddriver_dump teststu_8@OSLabExecNode0:~/$ 4. \u9879\u76ee\u7f16\u8bd1 \u00b6 \u9879\u76ee\u7f16\u8bd1\u7684\u8fc7\u7a0b\u5728\u65b0\u5efa\u9879\u76ee\u7684SPEC.txt\u6587\u4ef6\u4e2d\u6709\u6240\u4ea4\u4ee3\uff0c\u8fd9\u91cc\u63d0\u51fa\u6765\u8bb2\u4e00\u8bb2\uff1a Step 1 . SSH\u6253\u5f00 ./fs/newfs \u3002\u6253\u5f00VS Code\u8f6f\u4ef6\uff0c\u70b9\u51fb\u5de6\u4e0a\u89d2 \"\u6587\u4ef6\" \u2192 \"\u6253\u5f00\u6587\u4ef6\u5939\"\uff0c\u9009\u62e9\u5b9e\u9a8c\u5305\u76ee\u5f55\u4e0b\u7684fs/newfs\u6587\u4ef6\u5939\u3002 Step 2 . \u5728\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u4e0a\u5b89\u88c5CMake\u548cCMake Tools\u4e24\u4e2a\u63d2\u4ef6\u3002 Step 3 . \u6253\u5f00CMakeLists.txt\u6587\u4ef6 Step 4 . ctrl + shift + p\u547c\u51fa\u547d\u4ee4\u83dc\u5355 Step 5 . \u8f93\u5165CMake: Configure Step 6 . \u9009\u62e9X86_64\u7248\u672c\u7684GCC\uff1a Step 7 . \u70b9\u51fbVSCode\u5de6\u4e0b\u89d2\u201c\u7ba1\u7406\u201d\u6309\u94ae\uff0c\u9009\u62e9\u201c\u8bbe\u7f6e\u201d\uff0c\u7136\u540e\u5728\u5f39\u51fa\u7684\u7a97\u53e3\u4e2d\u8f93\u5165 @ext:ms-vscode.cmake-tools generator \uff0c\u518d\u70b9\u51fb\u201c\u8fdc\u7a0b[SSH:10.249.12.98]\u201d\u9009\u9879\u680f\uff0c\u5728Cmake: Generator\u9009\u9879\u6846\u4e2d\u586b\u5165 Unix Makefiles \u3002 Step 8 . \u518d\u6b21\u7528ctrl + shift + p\u547c\u51fa\u547d\u4ee4\u83dc\u5355\uff0c\u8f93\u5165CMake: Configure\uff0c\u67e5\u770b\u8f93\u51fa\u7a97\u53e3\u662f\u5426\u6709\u201cGenerator\u201d (\u5df2\u7528!!!!!\u6807\u8bb0) \u82e5 CMAKE_GENERATOR \u4e3a Unix Makefiles \uff0c\u8bf7\u624b\u52a8\u4fee\u6539 .vscode/tasks.json \u7684 command \u4e3a make \uff0c\u82e5\u4e3a Ninja \uff0c\u8bf7\u624b\u52a8\u4fee\u6539 .vscode/tasks.json \u7684 command \u4e3a ninja \uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a Step 9 . \u5230 newfs/src/newfs.c \u76ee\u5f55\uff0c\u6253\u65ad\u70b9 Step 10 . \u6309\u4e0bF5\u8fdb\u884c\u8c03\u8bd5 \u7f16\u8bd1\u8fd0\u884c\u539f\u7406\uff1a \u7f16\u8bd1\u3002 \u7f16\u8bd1\u73af\u8282\u5229\u7528CMakeLists\u5de5\u7a0b\u81ea\u52a8\u5e2e\u52a9\u6211\u4eec\u7f16\u8bd1\uff0c\u8fd9\u91cc\u8981\u5b89\u88c5CMake Tools\u7b49\u62d3\u5c55\uff0c\u76f8\u4fe1\u5927\u5bb6\u524d\u9762\u4e5f\u88c5\u8fc7\u4e86\u3002\u5176\u4e2d\uff0c\u6309\u4e0bF5\u540e\uff0cVSCode\u4f1a\u9996\u5148\u8fd0\u884c .vscode \u76ee\u5f55\u4e0b tasks.json \u4e2d\u7684\u547d\u4ee4\uff1a \u8be5\u547d\u4ee4\u6267\u884c\u7684\u64cd\u4f5c\u5c31\u662f\u5728CMakeLists\u751f\u6210\u7684 build \u76ee\u5f55\u4e0b\u8fd0\u884c make \uff0c\u7531\u6b64\u5b8c\u6210\u81ea\u52a8\u7f16\u8bd1\u3002 \u8fd0\u884c\u3002 \u8fd0\u884c\u8fc7\u7a0b\u662f\u5728 .vscode \u76ee\u5f55\u4e0b launch.json \u4e2d\u5b9a\u4e49\uff1a \u628a\u8fd0\u884c\u547d\u4ee4\u5c55\u5f00\u5b9e\u9645\u4e0a\u662f\uff1a teststu_8@OSLabExecNode0:~/user-land-filesystem/fs/newfs$ ./build/newfs --device = /home/guests/teststu_8/ddriver -f -d -s ./tests/mnt/ \u6b63\u5982\u6211\u4eec\u524d\u9762 \u5b9e\u9a8c\u539f\u7406 - FUSE\u67b6\u6784 \u4e2d\u8bf4\u5230\u7684\u90a3\u6837\uff0c FUSE\u6587\u4ef6\u7cfb\u7edf \u7684\u6302\u8f7d\u4e0d\u9700\u8981\u4f7f\u7528 mount \u547d\u4ee4\uff0c\u800c\u662f\u76f4\u63a5\u7528\u7f16\u8bd1\u51fa\u6765\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u4e0a\u8ff0\u547d\u4ee4\u7684\u610f\u4e49\u4e3a\uff1a \u5c06\u8bbe\u5907/home/guests/teststu_8/ddriver \u4ee5 newfs\u6587\u4ef6\u7cfb\u7edf \u5f62\u5f0f\uff0c \u6302\u8f7d \u5230 ./tests/mnt\u76ee\u5f55 \u4e0b\u3002 \u8fdb\u800c\u884d\u751f\u51fa FUSE\u6587\u4ef6\u7cfb\u7edf \u7684 \u5378\u8f7d \uff0c\u540c\u6837\uff0c\u4e0e\u4f20\u7edf\u5185\u6838\u6587\u4ef6\u7cfb\u7edf\u5378\u8f7d\u4e0d\u540c\uff0c\u5b83\u7684\u5378\u8f7d\u547d\u4ee4\u4e3a\uff1a teststu_8@OSLabExecNode0:~/user-land-filesystem/fs/newfs$ fusermount -u ./tests/mnt teststu_8@OSLabExecNode0:~/user-land-filesystem/fs/newfs$ \u8fd9\u91cc\u4f7f\u7528 fusermount -u \u547d\u4ee4\u8fdb\u884cFUSE\u6587\u4ef6\u7cfb\u7edf\u7684\u5378\u8f7d\u3002","title":"\u73af\u5883\u642d\u5efa\u4e0e\u4e0a\u624b"},{"location":"lab5/part3-1/#_1","text":"","title":"\u73af\u5883\u642d\u5efa\u4e0e\u4e0a\u624b"},{"location":"lab5/part3-1/#1","text":"\u672c\u6b21\u5b9e\u9a8c\u5145\u5206\u8003\u8651\u5230 \u4e0a\u624b\u6210\u672c \uff0c\u56e0\u6b64\u6211\u4eec\u7f16\u5199\u4e86\u7b80\u5355\u7684\u73af\u5883\u914d\u7f6e\u811a\u672c\uff0c\u5e2e\u52a9\u5927\u5bb6\u4e00\u952e\u914d\u7f6e\u5f00\u53d1\u73af\u5883\u3002\u5b9e\u9a8c\u5305\u4ee3\u7801\u83b7\u53d6\u9014\u5f84\uff1a # git clone https://gitee.com/ftutorials/user-land-filesystem.git \u5b9e\u9a8c\u5305\u7684\u7ed3\u6784\u5982\u4e0b\uff1a user-land-filesystem/ \u251c\u2500\u2500 driver \u2502 \u251c\u2500\u2500 ddriver.sh \u2502 \u251c\u2500\u2500 kernel_ddriver \u2502 \u2514\u2500\u2500 user_ddriver \u251c\u2500\u2500 fs \u2502 \u251c\u2500\u2500 samples \u2502 \u251c\u2500\u2500 simplefs \u2502 \u2514\u2500\u2500 template \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 setenv.sh \u2514\u2500\u2500 tests \u251c\u2500\u2500 README.md \u2514\u2500\u2500 test_ddriver driver \u5b58\u653e\u9a71\u52a8\u4ee3\u7801\u3002\u5176\u4e2d kernel_ddriver \u4e3a\u5185\u6838\u9a71\u52a8\uff0c user_ddriver \u4e3a\u7528\u6237\u9a71\u52a8\uff0c ddriver.sh \u4e3a\u63a7\u5236 ddriver \u9a71\u52a8\u7684\u811a\u672c\u3002\u8fdb\u5165user-land-filesystem\u76ee\u5f55\uff0c\u53ef\u4ee5\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\u5c1d\u9c9c\uff1a [root@localhost user-land-filesystem]# ./driver/ddriver.sh fs \u5b58\u653e \u5b9e\u73b0\u7684FUSE\u6587\u4ef6\u7cfb\u7edf \u3002\u5176\u4e2d samples \u4e3a myfs \u6587\u4ef6\u7cfb\u7edf\uff0c simplefs \u4e3a\u7c7b EXT2 \u6587\u4ef6\u7cfb\u7edf\uff08\u7f3a\u5c11\u6570\u636e\u4f4d\u56fe\uff09\uff0c template \u7528\u4e8e\u751f\u6210\u6587\u4ef6\u7cfb\u7edf\u7684\u4ee3\u7801\u7ed3\u6784\uff0c\u53ef\u5ffd\u7565\u3002 LICENSE \u5f00\u6e90\u8bb8\u53ef\uff0c\u672c\u5b9e\u9a8c\u9075\u5faa GPL v3 \u5f00\u6e90\u8bb8\u53ef\u3002 tests \u8be5\u6587\u4ef6\u5939\u5b58\u653eDDRIVER\u7528\u6237\u9a71\u52a8\u4ee3\u7801\u3002 setenv.sh \u7528\u4e8e\u914d\u7f6eFUSE\u6587\u4ef6\u7cfb\u7edf\u5f00\u53d1\u73af\u5883\u3002","title":"1. \u5b9e\u9a8c\u5305\u7ed3\u6784\u4ecb\u7ecd"},{"location":"lab5/part3-1/#2","text":"\u8fd0\u884c ./setenv.sh \u540e\uff0c\u5373\u53ef\u6309\u7167\u6307\u5bfc\u4e00\u6b65\u4e00\u6b65\u6765\u5efa\u7acb\u73af\u5883\uff1a teststu_8@OSLabExecNode0:~/user-land-filesystem$ ./setenv.sh \u8bf7\u8f93\u5165\u5de5\u4f5c\u76ee\u5f55\u540d\u79f0 ([\u5de5\u4f5c]\u76ee\u5f55\u5c06\u88ab\u81f3\u4e8e./fs\u76ee\u5f55\u4e0b): newfs ... \u751f\u6210\u5de5\u4f5c\u8def\u5f84: /home/guests/teststu_8/user-land-filesystem/fs/newfs \u8bf7\u8f93\u5165\u9879\u76ee\u540d\u79f0: newfs ... \u5176\u4e2d\uff0c\u5de5\u4f5c\u76ee\u5f55\u540d\u79f0\u5373\u5f00\u53d1\u8be5\u6587\u4ef6\u7cfb\u7edf\u7684 \u6587\u4ef6\u5939\u540d\u79f0 \u3002\u53ef\u4ee5\u770b\u5230\uff0c\u5b83\u5728 fs \u76ee\u5f55\u4e0b\u65b0\u5efa\u4e86\u4e00\u4e2a newfs \u76ee\u5f55\u4f5c\u4e3a\u5de5\u4f5c\u76ee\u5f55\u3002 \u63a5\u7740\uff0c\u9879\u76ee\u540d\u79f0\u5373\u771f\u6b63\u7684\u6587\u4ef6\u7cfb\u7edf\u540d\u79f0\uff0c\u53ef\u4ee5\u662f\u6587\u4ef6\u7cfb\u7edf\u7684\u7b80\u5199\uff0c\u4f8b\u5982\uff1anfs\uff08\u4ee3\u8868newfs\uff09\uff0c\u8fd9\u91cc\u8981\u6ce8\u610f\u9879\u76ee\u540d\u4e0d\u80fd\u6709 \u7279\u6b8a\u7b26\u53f7\u3001\u7a7a\u683c \u7b49\u3002 \u9879\u76ee\u5efa\u7acb\u5b8c\u6210\u4e4b\u540e\u7684\u7ed3\u6784 newfs \u5982\u4e0b\u6240\u793a\uff1a ./fs/newfs/ \u251c\u2500\u2500 .vscode \u251c\u2500\u2500 CMake \u2502 \u2514\u2500\u2500 FindFUSE.cmake \u251c\u2500\u2500 CMakeLists.txt \u251c\u2500\u2500 include \u2502 \u251c\u2500\u2500 ddriver_ctl_user.h \u2502 \u251c\u2500\u2500 ddriver.h \u2502 \u251c\u2500\u2500 fs.layout \u2502 \u251c\u2500\u2500 newfs.h \u2502 \u2514\u2500\u2500 types.h \u251c\u2500\u2500 README.md \u251c\u2500\u2500 SPEC.txt \u251c\u2500\u2500 src \u2502 \u2514\u2500\u2500 newfs.c \u2514\u2500\u2500 tests \u251c\u2500\u2500 checkbm \u2502 \u251c\u2500\u2500 checkbm.py \u2502 \u251c\u2500\u2500 golden-sfs.json \u2502 \u2514\u2500\u2500 golden.json \u251c\u2500\u2500 mnt \u251c\u2500\u2500 stages \u2502 \u251c\u2500\u2500 cp.sh \u2502 \u251c\u2500\u2500 ls.sh \u2502 \u251c\u2500\u2500 mkdir.sh \u2502 \u251c\u2500\u2500 mount.sh \u2502 \u251c\u2500\u2500 remount.sh \u2502 \u251c\u2500\u2500 rw.sh \u2502 \u2514\u2500\u2500 touch.sh \u251c\u2500\u2500 fs_test.sh \u251c\u2500\u2500 main.sh \u2514\u2500\u2500 test.sh \u8fd9\u4e2a\u7ed3\u6784\u53ef\u4ee5\u81ea\u884c\u4fee\u6539\u6dfb\u52a0\uff0c\u4e0d\u8fc7\u8981\u8bb0\u5f97 \u91cd\u65b0\u914d\u7f6eCMake \u3002\u672c\u6b21\u5b9e\u9a8c\u8981\u6c42\u5f88\u7b80\u5355\uff0c \u8dd1\u8fc7 tests \u4e0b\u7684 test.sh \u7684\u57fa\u7840\u529f\u80fd\u6d4b\u8bd5\u5c31\u7b97\u5b8c\u6210 \u3002","title":"2. \u914d\u7f6e\u5f00\u53d1\u73af\u5883"},{"location":"lab5/part3-1/#3-ddriver","text":"\u4e3a\u4e86\u65b9\u4fbf\u5bf9 ddriver \u8bbe\u5907\u8fdb\u884c\u63a7\u5236\uff0c\u6211\u4eec\u5c06ddriver.sh\u811a\u672c\u94fe\u63a5\u5230\u4e86 Linux\u547d\u4ee4\u7cfb\u7edf \u4e2d\uff0c\u63a5\u4e0b\u6765\uff0c\u5927\u5bb6\u5148\u5230 \u4e2a\u4eba\u76ee\u5f55 \u4e0b\u8fd0\u884csource ~/.bashrc\uff0c\u7136\u540e\u540c\u5b66\u4eec\u5c31\u53ef\u4ee5\u5728\u4efb\u4f55\u76ee\u5f55\u4e0b\u8bbf\u95ee\u5230ddriver.sh\u811a\u672c\u3002\u8be5\u811a\u672c\u7684\u4e3b\u8981\u7528\u9014\u5982\u4e0b\uff1a teststu_8@OSLabExecNode0:~/$ source ~/.bashrc teststu_8@OSLabExecNode0:~/$ ddriver ==================================================================== ]]]]]]]] ]]]]]]]] ] ]] ] ]] ] ]] ]] ]] ]] ]-------] ] ]] ] ] ] ] ] ]] ]] ]] ]] ]_______/ ] ]] ] ]] ] ]] ]] ]] ] ] \\ ]] ]]]]]]]] ]]]]]]]] ]] ]] ]] ]]]]]]]] ]] ==================================================================== \u7528\u6cd5: ddriver [options] options: -i [k|u] \u5b89\u88c5ddriver: [k] - kernel / [u] - user -t \u6d4b\u8bd5ddriver[\u8bf7\u5ffd\u7565] -d \u5bfc\u51faddriver\u81f3\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55[PWD] -r \u64e6\u9664ddriver -l \u663e\u793addriver\u7684Log -v \u663e\u793addriver\u7684\u7c7b\u578b[\u5185\u6838\u6a21\u5757 / \u7528\u6237\u9759\u6001\u94fe\u63a5\u5e93] -h \u6253\u5370\u672c\u5e2e\u52a9\u83dc\u5355 ==================================================================== \u5e38\u7528\u7684\u529f\u80fd\u662f -v \u3001 -d \u4e0e -r \uff0c\u5b83\u4eec\u7684\u7528\u9014\u5206\u522b\u662f \u67e5\u770bddriver\u8bbe\u5907\u7c7b\u578b\u53ca\u8bbe\u5907\u4f4d\u7f6e \u3001 \u5c06ddriver\u8bbe\u5907\u955c\u50cf\u5bfc\u51fa\u5230\u5f53\u524d\u76ee\u5f55\u4e0b \u3001 \u5c06ddriver\u8bbe\u5907\u64e6\u9664\u5e72\u51c0 \u3002\u7528\u6cd5\u5982\u4e0b\uff1a ==================================================================== # \u67e5\u770b\u8bbe\u5907\u4f4d\u7f6e\u548c\u7c7b\u578b teststu_8@OSLabExecNode0:~$ ddriver -v \u9759\u6001\u94fe\u63a5\u5e93\u8bbe\u5907: /home/guests/teststu_8/ddriver teststu_8@OSLabExecNode0:~$ ==================================================================== # \u5c06ddriver\u8bbe\u5907\u5bfc\u51fa\u5230\u5f53\u524d\u76ee\u5f55\u4e0b teststu_8@OSLabExecNode0:~/$ ddriver -d [sudo] password for teststu_8: \u76ee\u6807\u8bbe\u5907 /home/guests/teststu_8/ddriver 8192+0 records in 8192+0 records out 4194304 bytes (4.2 MB, 4.0 MiB) copied, 0.094218 s, 44.5 MB/s \u6587\u4ef6\u5df2\u5bfc\u51fa\u81f3/home/guests/teststu_8/ddriver_dump\uff0c\u8bf7\u5b89\u88c5HexEditor\u63d2\u4ef6\u67e5\u770b\u5176\u5185\u5bb9 teststu_8@OSLabExecNode0:~/$ ls ddriver_dump teststu_8@OSLabExecNode0:~/$ ==================================================================== # \u5c06ddriver\u8bbe\u5907\u64e6\u9664\u5e72\u51c0 teststu_8@OSLabExecNode0:~/$ ddriver -r \u76ee\u6807\u8bbe\u5907 /home/guests/teststu_8/ddriver 8192+0 records in 8192+0 records out 4194304 bytes (4.2 MB, 4.0 MiB) copied, 0.0506111 s, 82.9 MB/s teststu_8@OSLabExecNode0:~/$ cat ./ddriver_dump teststu_8@OSLabExecNode0:~/$","title":"3. DDRIVER\u811a\u672c\u7684\u8fd0\u7528"},{"location":"lab5/part3-1/#4","text":"\u9879\u76ee\u7f16\u8bd1\u7684\u8fc7\u7a0b\u5728\u65b0\u5efa\u9879\u76ee\u7684SPEC.txt\u6587\u4ef6\u4e2d\u6709\u6240\u4ea4\u4ee3\uff0c\u8fd9\u91cc\u63d0\u51fa\u6765\u8bb2\u4e00\u8bb2\uff1a Step 1 . SSH\u6253\u5f00 ./fs/newfs \u3002\u6253\u5f00VS Code\u8f6f\u4ef6\uff0c\u70b9\u51fb\u5de6\u4e0a\u89d2 \"\u6587\u4ef6\" \u2192 \"\u6253\u5f00\u6587\u4ef6\u5939\"\uff0c\u9009\u62e9\u5b9e\u9a8c\u5305\u76ee\u5f55\u4e0b\u7684fs/newfs\u6587\u4ef6\u5939\u3002 Step 2 . \u5728\u8fdc\u7a0b\u5b9e\u9a8c\u5e73\u53f0\u4e0a\u5b89\u88c5CMake\u548cCMake Tools\u4e24\u4e2a\u63d2\u4ef6\u3002 Step 3 . \u6253\u5f00CMakeLists.txt\u6587\u4ef6 Step 4 . ctrl + shift + p\u547c\u51fa\u547d\u4ee4\u83dc\u5355 Step 5 . \u8f93\u5165CMake: Configure Step 6 . \u9009\u62e9X86_64\u7248\u672c\u7684GCC\uff1a Step 7 . \u70b9\u51fbVSCode\u5de6\u4e0b\u89d2\u201c\u7ba1\u7406\u201d\u6309\u94ae\uff0c\u9009\u62e9\u201c\u8bbe\u7f6e\u201d\uff0c\u7136\u540e\u5728\u5f39\u51fa\u7684\u7a97\u53e3\u4e2d\u8f93\u5165 @ext:ms-vscode.cmake-tools generator \uff0c\u518d\u70b9\u51fb\u201c\u8fdc\u7a0b[SSH:10.249.12.98]\u201d\u9009\u9879\u680f\uff0c\u5728Cmake: Generator\u9009\u9879\u6846\u4e2d\u586b\u5165 Unix Makefiles \u3002 Step 8 . \u518d\u6b21\u7528ctrl + shift + p\u547c\u51fa\u547d\u4ee4\u83dc\u5355\uff0c\u8f93\u5165CMake: Configure\uff0c\u67e5\u770b\u8f93\u51fa\u7a97\u53e3\u662f\u5426\u6709\u201cGenerator\u201d (\u5df2\u7528!!!!!\u6807\u8bb0) \u82e5 CMAKE_GENERATOR \u4e3a Unix Makefiles \uff0c\u8bf7\u624b\u52a8\u4fee\u6539 .vscode/tasks.json \u7684 command \u4e3a make \uff0c\u82e5\u4e3a Ninja \uff0c\u8bf7\u624b\u52a8\u4fee\u6539 .vscode/tasks.json \u7684 command \u4e3a ninja \uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a Step 9 . \u5230 newfs/src/newfs.c \u76ee\u5f55\uff0c\u6253\u65ad\u70b9 Step 10 . \u6309\u4e0bF5\u8fdb\u884c\u8c03\u8bd5 \u7f16\u8bd1\u8fd0\u884c\u539f\u7406\uff1a \u7f16\u8bd1\u3002 \u7f16\u8bd1\u73af\u8282\u5229\u7528CMakeLists\u5de5\u7a0b\u81ea\u52a8\u5e2e\u52a9\u6211\u4eec\u7f16\u8bd1\uff0c\u8fd9\u91cc\u8981\u5b89\u88c5CMake Tools\u7b49\u62d3\u5c55\uff0c\u76f8\u4fe1\u5927\u5bb6\u524d\u9762\u4e5f\u88c5\u8fc7\u4e86\u3002\u5176\u4e2d\uff0c\u6309\u4e0bF5\u540e\uff0cVSCode\u4f1a\u9996\u5148\u8fd0\u884c .vscode \u76ee\u5f55\u4e0b tasks.json \u4e2d\u7684\u547d\u4ee4\uff1a \u8be5\u547d\u4ee4\u6267\u884c\u7684\u64cd\u4f5c\u5c31\u662f\u5728CMakeLists\u751f\u6210\u7684 build \u76ee\u5f55\u4e0b\u8fd0\u884c make \uff0c\u7531\u6b64\u5b8c\u6210\u81ea\u52a8\u7f16\u8bd1\u3002 \u8fd0\u884c\u3002 \u8fd0\u884c\u8fc7\u7a0b\u662f\u5728 .vscode \u76ee\u5f55\u4e0b launch.json \u4e2d\u5b9a\u4e49\uff1a \u628a\u8fd0\u884c\u547d\u4ee4\u5c55\u5f00\u5b9e\u9645\u4e0a\u662f\uff1a teststu_8@OSLabExecNode0:~/user-land-filesystem/fs/newfs$ ./build/newfs --device = /home/guests/teststu_8/ddriver -f -d -s ./tests/mnt/ \u6b63\u5982\u6211\u4eec\u524d\u9762 \u5b9e\u9a8c\u539f\u7406 - FUSE\u67b6\u6784 \u4e2d\u8bf4\u5230\u7684\u90a3\u6837\uff0c FUSE\u6587\u4ef6\u7cfb\u7edf \u7684\u6302\u8f7d\u4e0d\u9700\u8981\u4f7f\u7528 mount \u547d\u4ee4\uff0c\u800c\u662f\u76f4\u63a5\u7528\u7f16\u8bd1\u51fa\u6765\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u4e0a\u8ff0\u547d\u4ee4\u7684\u610f\u4e49\u4e3a\uff1a \u5c06\u8bbe\u5907/home/guests/teststu_8/ddriver \u4ee5 newfs\u6587\u4ef6\u7cfb\u7edf \u5f62\u5f0f\uff0c \u6302\u8f7d \u5230 ./tests/mnt\u76ee\u5f55 \u4e0b\u3002 \u8fdb\u800c\u884d\u751f\u51fa FUSE\u6587\u4ef6\u7cfb\u7edf \u7684 \u5378\u8f7d \uff0c\u540c\u6837\uff0c\u4e0e\u4f20\u7edf\u5185\u6838\u6587\u4ef6\u7cfb\u7edf\u5378\u8f7d\u4e0d\u540c\uff0c\u5b83\u7684\u5378\u8f7d\u547d\u4ee4\u4e3a\uff1a teststu_8@OSLabExecNode0:~/user-land-filesystem/fs/newfs$ fusermount -u ./tests/mnt teststu_8@OSLabExecNode0:~/user-land-filesystem/fs/newfs$ \u8fd9\u91cc\u4f7f\u7528 fusermount -u \u547d\u4ee4\u8fdb\u884cFUSE\u6587\u4ef6\u7cfb\u7edf\u7684\u5378\u8f7d\u3002","title":"4. \u9879\u76ee\u7f16\u8bd1"},{"location":"lab5/part3-2/","text":"\u4efb\u52a1\u4e00\uff1a \u719f\u6089DDRIVER\u9a71\u52a8 \u00b6 \u4efb\u52a1\u4e00\u8981\u6c42\u719f\u6089DDRIVER\u9a71\u52a8\uff0c\u6211\u4eec\u8981\u6c42\u5927\u5bb6\u6839\u636e\u6ce8\u91ca\u770b\u61c2 user-land-filesystem/tests/test_ddriver/src/test.c \u7684\u4ee3\u7801\uff0c\u5e76 \u6839\u636e\u63d0\u793a \u4fee\u6539\u5176\u4e2d\u7684 \u4e00\u5904\u9519\u8bef \uff1a \u7f16\u8bd1\u8fd0\u884c\u6d4b\u8bd5\u7a0b\u5e8f\u7684\u6b65\u9aa4\uff1a teststu_8@OSLabExecNode0:~/user-land-filesystem/tests/test_ddriver$ cmake CMakeLists.txt ... teststu_8@OSLabExecNode0:~/user-land-filesystem/tests/test_ddriver$ make ... teststu_8@OSLabExecNode0:~/user-land-filesystem/tests/test_ddriver$ ./ddriver_test","title":"\u4efb\u52a1\u4e00\uff1a\u719f\u6089DDRIVER\u9a71\u52a8"},{"location":"lab5/part3-2/#ddriver","text":"\u4efb\u52a1\u4e00\u8981\u6c42\u719f\u6089DDRIVER\u9a71\u52a8\uff0c\u6211\u4eec\u8981\u6c42\u5927\u5bb6\u6839\u636e\u6ce8\u91ca\u770b\u61c2 user-land-filesystem/tests/test_ddriver/src/test.c \u7684\u4ee3\u7801\uff0c\u5e76 \u6839\u636e\u63d0\u793a \u4fee\u6539\u5176\u4e2d\u7684 \u4e00\u5904\u9519\u8bef \uff1a \u7f16\u8bd1\u8fd0\u884c\u6d4b\u8bd5\u7a0b\u5e8f\u7684\u6b65\u9aa4\uff1a teststu_8@OSLabExecNode0:~/user-land-filesystem/tests/test_ddriver$ cmake CMakeLists.txt ... teststu_8@OSLabExecNode0:~/user-land-filesystem/tests/test_ddriver$ make ... teststu_8@OSLabExecNode0:~/user-land-filesystem/tests/test_ddriver$ ./ddriver_test","title":"\u4efb\u52a1\u4e00\uff1a\u719f\u6089DDRIVER\u9a71\u52a8"},{"location":"lab5/part3-3/","text":"\u4efb\u52a1\u4e8c\uff1a\u57fa\u4e8eFUSE\u5b9e\u73b0\u9752\u6625\u7248EXT2\u6587\u4ef6\u7cfb\u7edf \u00b6 \u719f\u6089\u4e86\u9a71\u52a8\u540e\uff0c\u6211\u4eec\u4e5f\u5c31\u57fa\u672c\u638c\u63e1\u4e86\u8bbf\u95ee DDRIVER \u8bbe\u5907\u7684\u65b9\u6cd5\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u53ef\u4ee5\u57fa\u4e8eFUSE\u6765\u6b63\u5f0f\u7f16\u5199 \u9752\u6625\u7248EXT2\u6587\u4ef6\u7cfb\u7edf \u4e86\u3002\u6211\u4eec\u5df2\u7ecf\u5728 \u73af\u5883\u914d\u7f6e \u9636\u6bb5\u5c31\u4e3a\u5927\u5bb6\u642d\u5efa\u597d\u4e86FUSE\u6587\u4ef6\u7cfb\u7edf\u9879\u76ee\u6846\u67b6\u3002 \u672c\u6b21\u5b9e\u9a8c\u53ef\u4ee5\u53c2\u8003\u4e24\u4e2a\u5b8c\u5168\u642d\u5efa\u597d\u7684FUSE\u6587\u4ef6\u7cfb\u7edf\uff1a simplefs \uff08 fs/simplefs \u6587\u4ef6\u5939\u4e0b\uff09\u548c myfs \uff08 fs/samples \u6587\u4ef6\u5939\u4e0b\uff09\uff0c\u5176\u4e2d simplefs \u662f\u4e00\u4e2a\u7c7bEXT2\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u4f46 \u6ca1\u6709\u7ed9\u4e88\u6570\u636e\u4f4d\u56fe \u7684\u5b9e\u73b0\uff1b myfs \u662f github \u4e0a\u7684\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u4e5f\u662f\u4e00\u4e2aFUSE\u6587\u4ef6\u7cfb\u7edf\u5b9e\u4f8b\u3002 \u6ce8\u610f\uff0c\u5728\u672c\u5b9e\u9a8c\u4e2d\uff0csimplefs\u548csfs\u90fd\u4ee3\u8868Simple File System\u3002 1. \u5b9e\u73b0\u6b65\u9aa4\u5efa\u8bae \u00b6 \u5c01\u88c5\u5bf9 ddriver \u7684\u8bbf\u95ee\u4ee3\u7801\uff0c\u65b9\u4fbf\u8bbe\u5907\u8bfb\u5199\u3002\u6ce8\u610f\u9a71\u52a8\u8bfb\u5199IO\u4e3a512B\uff0c\u4f46\u662fEXT2\u6587\u4ef6\u7cfb\u7edf\u4e00\u4e2a\u5757\u5927\u5c0f\u4e3a1024B\uff0c\u4e5f\u5c31\u662f\u4e24\u4e2aIO\u5355\u4f4d\u3002\u5728simplefs\u6587\u4ef6\u7cfb\u7edf\u4e2d\u4e5f\u5c01\u88c5\u4e86 ddriver \u7684\u8bbf\u95ee\u4ee3\u7801\uff0c\u7136\u800csimplefs\u662f\u6309\u4e00\u4e2a\u5757\u5927\u5c0f\u4e3a512B\u6765\u5c01\u88c5\u7684\uff08\u8be6\u89c1sfs_utils.c\u7684sfs_driver_read\u51fd\u6570\uff09\u3002 \u8bbe\u8ba1\u4ecb\u8d28\u6570\u636e\u7ed3\u6784\uff08\u4f4d\u4e8e types.h \uff09\uff1b \u8bbe\u8ba1\u5185\u5b58\u6570\u636e\u7ed3\u6784\uff08\u53ef\u8bbe\u8ba1\u3001\u53ef\u4e0d\u8bbe\u8ba1\uff09\uff1b \u4ed4\u7ec6\u9605\u8bfb include/fs.layout \u6587\u4ef6\uff0c\u5e76\u6309\u8981\u6c42\u8bbe\u8ba1\u586b\u5199\u81ea\u5df1\u7684\u6587\u4ef6\u7cfb\u7edf\u5e03\u5c40\uff0c\u5728\u6d4b\u8bd5umount\u65f6\u4f1a\u5bf9\u6587\u4ef6\u7cfb\u7edf\u5e03\u5c40\u8fdb\u884c\u68c0\u6d4b\uff1b \u5b8c\u6210 .init \u94a9\u5b50\uff1a\u8bfb \u8d85\u7ea7\u5757 \u3001\u521d\u59cb\u5316\u6587\u4ef6\u7cfb\u7edf\uff1b \u5b8c\u6210 .destroy \u94a9\u5b50\uff1a \u56de\u5199\u5fc5\u8981\u7ed3\u6784 \uff0c\u4fdd\u8bc1\u4e0b\u4e00\u6b21\u6302\u8f7d\u6b63\u5e38\uff1b \u9a8c\u8bc1\u6302\u8f7d\u5378\u8f7d\u6d41\u7a0b\u7684\u6b63\u786e\u6027\uff08 \u4e3b\u8981\u770b\u8bfb\u5199\u662f\u5426\u6b63\u786e \uff09\uff1b \u5b8c\u6210\u5de5\u5177\u51fd\u6570\uff08\u53ef\u81ea\u884c\u8bbe\u8ba1\uff09\uff1a \u5b8c\u6210 \u5206\u914dinode \u51fd\u6570\uff1a\u521b\u5efa\u4e00\u4e2aInode\u3001\u521d\u59cb\u5316\u5176\u4e0a\u7684\u5b57\u6bb5\u3001\u4fee\u6539\u4f4d\u56fe\u7ed3\u6784\uff0c\u53ef\u80fd\u8fd8\u9700\u8981\u4fee\u6539\u8d85\u7ea7\u5757\uff1b \u5b8c\u6210 \u5206\u914ddentry \u51fd\u6570\uff1a\u521b\u5efa\u4e00\u4e2adentry\u3001\u521d\u59cb\u5316\u5176\u4e0a\u7684\u5b57\u6bb5\uff1b \u5b8c\u6210\u5c06 dentry\u52a0\u5165\u5230inode \u4e2d\u7684\u51fd\u6570\uff1a\u5c06\u751f\u6210\u7684dentry\u5199\u5165\u5230inode\u4e2d\uff1b \u5b8c\u6210 \u8def\u5f84\u89e3\u6790\u51fd\u6570 \uff0c\u8981\u4e48\u8fd4\u56dedentry\uff0c\u8981\u4e48\u8fd4\u56deinode\uff0c\u53ef\u81ea\u884c\u8bbe\u8ba1\uff1b \u6839\u636e\u5de5\u5177\u51fd\u6570\uff0c\u5b8c\u6210 .get_attr \u94a9\u5b50\uff1b \u6839\u636e\u5de5\u5177\u51fd\u6570\uff0c\u5b8c\u6210 .mknod \u94a9\u5b50\uff1b \u6839\u636e\u5de5\u5177\u51fd\u6570\uff0c\u5b8c\u6210 .mkdir \u94a9\u5b50\uff1b \u6839\u636e\u5de5\u5177\u51fd\u6570\uff0c\u5b8c\u6210 .readdir \u94a9\u5b50\uff1b \u624b\u5de5\u6d4b\u8bd5 touch \u3001 ls \u3001 mkdir \u3001 fusermount -u \u7b49\u547d\u4ee4\u7684\u6b63\u786e\u6027\uff1b \u901a\u8fc7 ./tests/test.sh \u811a\u672c\u7684\u57fa\u672c\u529f\u80fd\u6d4b\u8bd5\u3002 2. simplefs\u6587\u4ef6\u7cfb\u7edf\u53c2\u8003\u5b9e\u73b0 \u00b6 \u63d0\u793a \u4e3a\u964d\u4f4e\u540c\u5b66\u4eec\u7684\u4e0a\u624b\u6210\u672c\uff0c\u672c\u8282\u5bf9Simple File System\u4ee3\u7801\u8fdb\u884c\u5939\u53d9\u5939\u8bae\u5730\u6df1\u5165\u5206\u6790\uff0c\u5e0c\u671b\u80fd\u5bf9\u5404\u4f4d\u540c\u5b66\u6709\u6240\u5e2e\u52a9: ) \u6837\u4f8b\u6587\u4ef6\u7cfb\u7edf\uff08SFS\uff09\u7684\u7cfb\u7edf\u5e03\u5c40\u5982\u4e0b\uff1a \u8981\u63a5\u5165\u4e00\u4e2a\u6846\u67b6\uff0c\u90a3\u4e48\u5c11\u4e0d\u4e86\u94a9\u5b50\u51fd\u6570\uff08\u4e5f\u53ef\u79f0\u4e3a \u51fd\u6570\u6307\u9488 \uff09\u3002\u94a9\u5b50\u51fd\u6570 \u662f\u4e00\u7cfb\u5217\u51fd\u6570\u7684\u62bd\u8c61 \uff0c\u4ece\u800c\u8ba9C\u8bed\u8a00\u5177\u6709\u591a\u6001\u7684\u6027\u8d28\u3002\u5bf9\u4e8eFUSE\u6846\u67b6\uff0c\u5176\u7ed9\u6211\u4eec\u7684\u63a5\u53e3 \u5982\u4e0b \u3002 struct fuse_operations { int ( * getattr ) ( const char * , struct stat * ); int ( * readlink ) ( const char * , char * , size_t ); int ( * getdir ) ( const char * , fuse_dirh_t , fuse_dirfil_t ); int ( * mknod ) ( const char * , mode_t , dev_t ); int ( * mkdir ) ( const char * , mode_t ); int ( * unlink ) ( const char * ); int ( * rmdir ) ( const char * ); int ( * symlink ) ( const char * , const char * ); int ( * rename ) ( const char * , const char * ); int ( * link ) ( const char * , const char * ); int ( * chmod ) ( const char * , mode_t ); int ( * chown ) ( const char * , uid_t , gid_t ); int ( * truncate ) ( const char * , off_t ); int ( * utime ) ( const char * , struct utimbuf * ); int ( * open ) ( const char * , struct fuse_file_info * ); int ( * read ) ( const char * , char * , size_t , off_t , struct fuse_file_info * ); int ( * write ) ( const char * , const char * , size_t , off_t , struct fuse_file_info * ); int ( * statfs ) ( const char * , struct statvfs * ); int ( * flush ) ( const char * , struct fuse_file_info * ); int ( * release ) ( const char * , struct fuse_file_info * ); int ( * fsync ) ( const char * , int , struct fuse_file_info * ); int ( * setxattr ) ( const char * , const char * , const char * , size_t , int ); int ( * getxattr ) ( const char * , const char * , char * , size_t ); int ( * listxattr ) ( const char * , char * , size_t ); int ( * removexattr ) ( const char * , const char * ); int ( * opendir ) ( const char * , struct fuse_file_info * ); int ( * readdir ) ( const char * , void * , fuse_fill_dir_t , off_t , struct fuse_file_info * ); int ( * releasedir ) ( const char * , struct fuse_file_info * ); int ( * fsyncdir ) ( const char * , int , struct fuse_file_info * ); void * ( * init ) ( struct fuse_conn_info * conn ); void ( * destroy ) ( void * ); int ( * access ) ( const char * , int ); int ( * create ) ( const char * , mode_t , struct fuse_file_info * ); int ( * ftruncate ) ( const char * , off_t , struct fuse_file_info * ); int ( * fgetattr ) ( const char * , struct stat * , struct fuse_file_info * ); int ( * lock ) ( const char * , struct fuse_file_info * , int cmd , struct flock * ); int ( * utimens ) ( const char * , const struct timespec tv [ 2 ]); int ( * bmap ) ( const char * , size_t blocksize , uint64_t * idx ); int ( * ioctl ) ( const char * , int cmd , void * arg , struct fuse_file_info * , unsigned int flags , void * data ); int ( * poll ) ( const char * , struct fuse_file_info * , struct fuse_pollhandle * ph , unsigned * reventsp ); int ( * write_buf ) ( const char * , struct fuse_bufvec * buf , off_t off , struct fuse_file_info * ); int ( * read_buf ) ( const char * , struct fuse_bufvec ** bufp , size_t size , off_t off , struct fuse_file_info * ); int ( * flock ) ( const char * , struct fuse_file_info * , int op ); int ( * fallocate ) ( const char * , int , off_t , off_t , struct fuse_file_info * ); }; \u4ee5\u4e0b\u9762\u4e00\u884c\u4ee3\u7801\u4e3a\u4f8b\uff1a int ( * mkdir ) ( const char * , mode_t ); \u8fd9\u4e2a\u94a9\u5b50\u51fd\u6570 \u62bd\u8c61\u4e86\u6240\u6709 mkdir \u7684\u64cd\u4f5c\uff1a\u6240\u6709 mkdir \u90fd\u9700\u8981\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\u4f5c\u4e3a \u8def\u5f84 \u3001\u53e6\u4e00\u4e2a\u53c2\u6570\u4f5c\u4e3a \u521b\u5efa\u6a21\u5f0f \uff08\u53ea\u8bfb/\u53ea\u5199/\u53ef\u8bfb\u53ef\u5199\uff09\u3002\u4e0d\u540c\u7684\u6587\u4ef6\u7cfb\u7edf\u53ef\u4ee5\u57fa\u4e8e\u6b64\u5b9e\u73b0\u4e0d\u540c\u7684 mkdir \u4ee3\u7801\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff1a // \u6587\u4ef6\u7cfb\u7edf\u4e00\u5b9e\u73b0mkdir int mkdir ( const char * path , mode_t mode ) { printf ( \"\u6211\u4e0d\u7ed9\u4f60\u521b\u5efa %s \\n \" , path ); return 0 ; } // \u6587\u4ef6\u7cfb\u7edf\u4e8c\u5b9e\u73b0mkdir int mkdir ( const char * path , mode_t mode ) { dentry = lookup ( path ); // \u67e5\u627e\u8def\u5f84\uff0c\u627e\u5230\u7236\u7ea7dentry inode = new_inode (); // \u521b\u5efa\u8be5\u76ee\u5f55\u6587\u4ef6\u7684inode new_dentry = new_dentry (); // \u521b\u5efa\u5c5e\u4e8e\u8be5inode\u7684dentry bond ( new_dentry , inode ); // \u8ba9\u8be5dentry\u6307\u5411inode add ( dentry , new_dentry ); // \u5c06\u65b0\u521b\u5efa\u7684dentry\u52a0\u5165\u5230\u7236\u7ea7dentry\u5bf9\u5e94\u7684\u76ee\u5f55\u6587\u4ef6\u4e2d return 0 ; } FUSE\u6846\u67b6 \u901a\u8fc7\u5411 fuse_main \u51fd\u6570\u4f20\u5165\u4e00\u4e2a\u88ab\u590d\u5236\u7684 fuse_operations \u7ed3\u6784\u4f53\u5373\u53ef\u5b8c\u6210\u64cd\u4f5c\u7684\u6ce8\u518c\uff0c\u4ece\u800c\u4f7f\u5f97\u6587\u4ef6\u7cfb\u7edf\u80fd\u591f\u6309\u7167\u6211\u4eec\u65e2\u5b9a\u7684\u65b9\u5f0f\u6765\u5904\u7406\u547d\u4ee4\u3002\u4e0b\u56fe\u4e3a \u5c06\u64cd\u4f5c\u63a5\u5165FUSE\u7684\u5165\u53e3 \uff1a \u672c\u6b21\u5b9e\u9a8c\u7531\u4e8e\u5b9e\u73b0\u7684\u529f\u80fd\u8f83\u4e3a\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u8981\u6c42\u540c\u5b66\u4eec\u5b9e\u73b0\u4ee5\u4e0b\u94a9\u5b50\uff08\u5176\u4e2d\u6807\u8bb0\u4e3a NULL \u7684\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\u4e0d\u8981\u6c42\u5b9e\u73b0\uff09\uff1a // Line 21 static struct fuse_operations operations = { . init = newfs_init , /* mount\u6587\u4ef6\u7cfb\u7edf */ . destroy = newfs_destroy , /* umount\u6587\u4ef6\u7cfb\u7edf */ . mkdir = newfs_mkdir , /* \u5efa\u76ee\u5f55\uff0cmkdir */ . getattr = newfs_getattr , /* \u83b7\u53d6\u6587\u4ef6\u5c5e\u6027\uff0c\u7c7b\u4f3cstat\uff0c\u5fc5\u987b\u5b8c\u6210 */ . readdir = newfs_readdir , /* \u586b\u5145dentrys */ . mknod = newfs_mknod , /* \u521b\u5efa\u6587\u4ef6\uff0ctouch\u76f8\u5173 */ . write = NULL , /* \u5199\u5165\u6587\u4ef6 */ . read = NULL , /* \u8bfb\u6587\u4ef6 */ . utimens = newfs_utimens , /* \u4fee\u6539\u65f6\u95f4\uff0c\u5ffd\u7565\uff0c\u907f\u514dtouch\u62a5\u9519 */ . truncate = NULL , /* \u6539\u53d8\u6587\u4ef6\u5927\u5c0f */ . unlink = NULL , /* \u5220\u9664\u6587\u4ef6 */ . rmdir = NULL , /* \u5220\u9664\u76ee\u5f55\uff0c rm -r */ . rename = NULL , /* \u91cd\u547d\u540d\uff0cmv */ . open = NULL , . opendir = NULL , . access = NULL }; \u5148\u6765\u770b\u4e00\u4e0bsfs\u6587\u4ef6\u7cfb\u7edf\u7ed9\u51fa\u7684\u6570\u636e\u7ed3\u6784\u5b9a\u4e49\uff1a struct custom_options { const char * device ; //\u9a71\u52a8\u7684\u8def\u5f84 boolean show_help ; }; struct sfs_inode /*\u5185\u5b58\u4e2dinode\u7684\u6570\u636e\u7ed3\u6784*/ { int ino ; /* \u5728inode\u4f4d\u56fe\u4e2d\u7684\u4e0b\u6807 */ int size ; /* \u6587\u4ef6\u5df2\u5360\u7528\u7a7a\u95f4 */ int dir_cnt ; struct sfs_dentry * dentry ; /* \u6307\u5411\u8be5inode\u7684dentry */ struct sfs_dentry * dentrys ; /* \u6240\u6709\u76ee\u5f55\u9879 */ uint8_t * data ; }; struct sfs_dentry /*\u5185\u5b58\u4e2d\u76ee\u5f55\u9879\u7684\u6570\u636e\u7ed3\u6784*/ { char fname [ SFS_MAX_FILE_NAME ]; struct sfs_dentry * parent ; /* \u7236\u4eb2Inode\u7684dentry */ struct sfs_dentry * brother ; /* \u5144\u5f1f */ int ino ; struct sfs_inode * inode ; /* \u6307\u5411inode */ SFS_FILE_TYPE ftype ; }; struct sfs_super /*\u5185\u5b58\u4e2d\u8d85\u7ea7\u5757\u7684\u6570\u636e\u7ed3\u6784*/ { int driver_fd ; int sz_io ; /*inode\u7684\u5927\u5c0f*/ int sz_disk ; /*\u78c1\u76d8\u5927\u5c0f*/ int sz_usage ; int max_ino ; /*inode\u7684\u6570\u76ee*/ uint8_t * map_inode ; /*inode\u4f4d\u56fe*/ int map_inode_blks ; /*inode\u4f4d\u56fe\u6240\u5360\u7684\u6570\u636e\u5757*/ int map_inode_offset ; /*inode\u4f4d\u56fe\u7684\u8d77\u59cb\u5730\u5740*/ int data_offset ; /*\u6570\u636e\u5757\u7684\u8d77\u59cb\u5730\u5740*/ boolean is_mounted ; struct sfs_dentry * root_dentry ; /*\u6839\u76ee\u5f55*/ }; /****************************************************************************** * \u78c1\u76d8\u4e2d\u7684\u6570\u636e\u7ed3\u6784 *******************************************************************************/ struct sfs_super_d { uint32_t magic_num ; int sz_usage ; int max_ino ; int map_inode_blks ; int map_inode_offset ; int data_offset ; }; struct sfs_inode_d { int ino ; /* \u5728inode\u4f4d\u56fe\u4e2d\u7684\u4e0b\u6807 */ int size ; /* \u6587\u4ef6\u5df2\u5360\u7528\u7a7a\u95f4 */ int dir_cnt ; SFS_FILE_TYPE ftype ; }; struct sfs_dentry_d { char fname [ SFS_MAX_FILE_NAME ]; SFS_FILE_TYPE ftype ; int ino ; /* \u6307\u5411\u7684ino\u53f7 */ }; \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u518d\u5206\u522b\u4ecb\u7ecd\u5404\u4e2a\u64cd\u4f5c\u5b9e\u73b0\u8981\u7ecf\u8fc7\u7684\u94a9\u5b50\u51fd\u6570\uff0c\u4ee5\u4fbf\u8ba9\u540c\u5b66\u4eec\u6709\u4e2a\u66f4\u76f4\u89c2\u7684\u7406\u89e3\u3002 2.1 \u5b9e\u73b0mount \u00b6 \u5f53\u6302\u8f7dFUSE\u6587\u4ef6\u7cfb\u7edf\u65f6\uff0c\u4f1a \u6267\u884c\u7684\u94a9\u5b50 \u662f .init \uff0c\u6211\u4eec\u53ef\u4ee5\u5728 .init \u94a9\u5b50\u4e2d\u5b8c\u6210 \u8d85\u7ea7\u5757\u7684\u8bfb\u53d6 \u3001 \u4f4d\u56fe\u7684\u5efa\u7acb \u3001 \u9a71\u52a8\u7684\u521d\u59cb\u5316 \u7b49\u64cd\u4f5c\uff1a /** * @brief \u6302\u8f7d\uff08mount\uff09\u6587\u4ef6\u7cfb\u7edf * * @param conn_info \u53ef\u5ffd\u7565\uff0c\u4e00\u4e9b\u5efa\u7acb\u8fde\u63a5\u76f8\u5173\u7684\u4fe1\u606f * @return void* */ void * newfs_init ( struct fuse_conn_info * conn_info ) { /* TODO: \u5728\u8fd9\u91cc\u8fdb\u884c\u6302\u8f7d */ /* \u4e0b\u9762\u662f\u4e00\u4e2a\u63a7\u5236\u8bbe\u5907\u7684\u793a\u4f8b */ super . fd = ddriver_open ( newfs_options . device ); return NULL ; } \u4e0a\u9762\u7684\u793a\u4f8b\u662f\u521d\u59cb\u5316\u9a71\u52a8\u8bbe\u5907\uff0c\u5176\u4e2d newfs_options \u4e3a\u81ea\u5b9a\u4e49\u53c2\u6570\uff0c\u8fd9\u91cc\u6211\u4eec\u4e0d\u5bf9 \u81ea\u5b9a\u4e49\u53c2\u6570 \u505a\u66f4\u591a\u7684\u4ecb\u7ecd\uff0c\u5927\u5bb6\u4f1a\u7528\u5373\u53ef\u3002 \u6211\u4eec\u901a\u8fc7\u4ee5\u4e0b\u64cd\u4f5c\u6765\u5b9e\u73b0sfs\u6587\u4ef6\u7cfb\u7edf\u7684\u6302\u8f7d\u529f\u80fd\uff08sfs_mount\u51fd\u6570\uff09\uff1a Step 1 . \u9996\u5148\u5b9a\u4e49\u5185\u5b58\u4e2d\u7684\u6570\u636e\u7ed3\u6784\u3002 /*\u5b9a\u4e49\u78c1\u76d8\u5404\u90e8\u5206\u7ed3\u6784*/ int ret = SFS_ERROR_NONE ; int driver_fd ; struct sfs_super_d sfs_super_d ; struct sfs_dentry * root_dentry ; struct sfs_inode * root_inode ; int inode_num ; int map_inode_blks ; int super_blks ; boolean is_init = FALSE ; sfs_super . is_mounted = FALSE ; Step 2 . \u6253\u5f00\u9a71\u52a8\u3002 driver_fd = ddriver_open ( options . device ); /*\u6253\u5f00\u9a71\u52a8*/ if ( driver_fd < 0 ) { return driver_fd ; } Step 3 . \u5411\u5185\u5b58\u8d85\u7ea7\u5757\u4e2d\u6807\u8bb0\u9a71\u52a8\u5e76\u5199\u5165\u78c1\u76d8\u5927\u5c0f\u548c\u5355\u6b21IO\u5927\u5c0f\u3002 sfs_super . driver_fd = driver_fd ; ddriver_ioctl ( SFS_DRIVER (), IOC_REQ_DEVICE_SIZE , & sfs_super . sz_disk ); ddriver_ioctl ( SFS_DRIVER (), IOC_REQ_DEVICE_IO_SZ , & sfs_super . sz_io ); Step 4 . \u521b\u5efa\u6839\u76ee\u5f55\u9879\u5e76\u8bfb\u53d6\u78c1\u76d8\u8d85\u7ea7\u5757\u5230\u5185\u5b58\u3002 root_dentry = new_dentry ( \"/\" , SFS_DIR ); if ( sfs_driver_read ( SFS_SUPER_OFS , ( uint8_t * )( & sfs_super_d ), sizeof ( struct sfs_super_d )) != SFS_ERROR_NONE ) { return - SFS_ERROR_IO ; } Step 5 . \u6839\u636e\u8d85\u7ea7\u5757\u5e7b\u6570\u5224\u65ad\u662f\u5426\u4e3a\u7b2c\u4e00\u6b21\u542f\u52a8\u78c1\u76d8\uff0c\u5982\u679c\u662f\u7b2c\u4e00\u6b21\u542f\u52a8\u78c1\u76d8\uff0c\u5219\u9700\u8981\u5efa\u7acb\u78c1\u76d8\u8d85\u7ea7\u5757\u7684\u5e03\u5c40\u3002 if ( sfs_super_d . magic_num != SFS_MAGIC_NUM ) { /* \u5e7b\u6570\u65e0 */ /* \u4f30\u7b97\u5404\u90e8\u5206\u5927\u5c0f */ super_blks = SFS_ROUND_UP ( sizeof ( struct sfs_super_d ), SFS_IO_SZ ()) / SFS_IO_SZ (); inode_num = SFS_DISK_SZ () / (( SFS_DATA_PER_FILE + SFS_INODE_PER_FILE ) * SFS_IO_SZ ()); map_inode_blks = SFS_ROUND_UP ( SFS_ROUND_UP ( inode_num , UINT32_BITS ), SFS_IO_SZ ()) / SFS_IO_SZ (); /* \u5e03\u5c40layout */ sfs_super . max_ino = ( inode_num - super_blks - map_inode_blks ); sfs_super_d . map_inode_offset = SFS_SUPER_OFS + SFS_BLKS_SZ ( super_blks ); sfs_super_d . data_offset = sfs_super_d . map_inode_offset + SFS_BLKS_SZ ( map_inode_blks ); sfs_super_d . map_inode_blks = map_inode_blks ; sfs_super_d . sz_usage = 0 ; SFS_DBG ( \"inode map blocks: %d \\n \" , map_inode_blks ); is_init = TRUE ; } Step 6 . \u521d\u59cb\u5316\u5185\u5b58\u4e2d\u7684\u8d85\u7ea7\u5757\uff0c\u548c\u6839\u76ee\u5f55\u9879\u3002 sfs_super . sz_usage = sfs_super_d . sz_usage ; /* \u5efa\u7acb in-memory \u7ed3\u6784 */ sfs_super . map_inode = ( uint8_t * ) malloc ( SFS_BLKS_SZ ( sfs_super_d . map_inode_blks )); sfs_super . map_inode_blks = sfs_super_d . map_inode_blks ; sfs_super . map_inode_offset = sfs_super_d . map_inode_offset ; sfs_super . data_offset = sfs_super_d . data_offset ; if ( sfs_driver_read ( sfs_super_d . map_inode_offset , ( uint8_t * )( sfs_super . map_inode ), SFS_BLKS_SZ ( sfs_super_d . map_inode_blks )) != SFS_ERROR_NONE ) { return - SFS_ERROR_IO ; } if ( is_init ) { /* \u5206\u914d\u6839\u8282\u70b9 */ root_inode = sfs_alloc_inode ( root_dentry ); sfs_sync_inode ( root_inode ); } root_inode = sfs_read_inode ( root_dentry , SFS_ROOT_INO ); root_dentry -> inode = root_inode ; sfs_super . root_dentry = root_dentry ; sfs_super . is_mounted = TRUE ; sfs_dump_map (); \u5176\u4e2d\uff0c\u5728Step 4\u4e2d\u7528\u5230\u7684 new_dentry \u51fd\u6570\uff0c\u5176\u4f5c\u7528\u662f\u521b\u5efa\u76ee\u5f55\u9879\uff0c\u539f\u578b\u5982\u4e0b\uff1a static inline struct sfs_dentry * new_dentry ( char * fname , SFS_FILE_TYPE ftype ) { struct sfs_dentry * dentry = ( struct sfs_dentry * ) malloc ( sizeof ( struct sfs_dentry )); memset ( dentry , 0 , sizeof ( struct sfs_dentry )); SFS_ASSIGN_FNAME ( dentry , fname ); dentry -> ftype = ftype ; dentry -> ino = -1 ; dentry -> inode = NULL ; dentry -> parent = NULL ; dentry -> brother = NULL ; } \u5728Step 6\u4e2d\u7684 sfs_alloc_inode \uff0c\u5176\u4f5c\u7528\u662f\u4e3a\u76ee\u5f55\u9879\u521b\u5efainode\u8282\u70b9\uff0c\u5177\u4f53\u6b65\u9aa4\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u6b65\uff1a \u200b \u2460\u5728inode\u4f4d\u56fe\u4e0a\u5bfb\u627e\u672a\u4f7f\u7528\u7684inode\u8282\u70b9\u3002 for ( byte_cursor = 0 ; byte_cursor < SFS_BLKS_SZ ( sfs_super . map_inode_blks ); byte_cursor ++ ) /*\u5728inode\u4f4d\u56fe\u4e0a\u5bfb\u627e\u672a\u4f7f\u7528\u7684inode*/ { for ( bit_cursor = 0 ; bit_cursor < UINT8_BITS ; bit_cursor ++ ) { if (( sfs_super . map_inode [ byte_cursor ] & ( 0x1 << bit_cursor )) == 0 ) { /* \u5f53\u524dino_cursor\u4f4d\u7f6e\u7a7a\u95f2 */ sfs_super . map_inode [ byte_cursor ] |= ( 0x1 << bit_cursor ); is_find_free_entry = TRUE ; break ; } ino_cursor ++ ; } if ( is_find_free_entry ) { break ; } } \u200b \u2461\u4e3a\u76ee\u5f55\u9879\u5206\u914dinode\u8282\u70b9\u5e76\u5efa\u7acb\u4ed6\u4eec\u4e4b\u95f4\u7684\u8fde\u63a5\u3002 if ( ! is_find_free_entry || ino_cursor == sfs_super . max_ino ) return - SFS_ERROR_NOSPACE ; inode = ( struct sfs_inode * ) malloc ( sizeof ( struct sfs_inode )); inode -> ino = ino_cursor ; inode -> size = 0 ; /* dentry\u6307\u5411inode */ dentry -> inode = inode ; dentry -> ino = inode -> ino ; /* inode\u6307\u56dedentry */ inode -> dentry = dentry ; inode -> dir_cnt = 0 ; inode -> dentrys = NULL ; if ( SFS_IS_REG ( inode )) { inode -> data = ( uint8_t * ) malloc ( SFS_BLKS_SZ ( SFS_DATA_PER_FILE )); } \u800c\u5728Step 6\u4e2d\u7684sfs_read_inode\u51fd\u6570\u4f5c\u7528\u662f\u4ece\u78c1\u76d8\u4e2d\u8bfb\u53d6inode\u8282\u70b9\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a \u200b \u2460\u901a\u8fc7\u78c1\u76d8\u9a71\u52a8\u6765\u5c06\u78c1\u76d8\u4e2dino\u53f7\u7684inode\u8bfb\u5165\u5185\u5b58\u3002 if ( sfs_driver_read ( SFS_INO_OFS ( ino ), ( uint8_t * ) & inode_d , sizeof ( struct sfs_inode_d )) != SFS_ERROR_NONE ) { SFS_DBG ( \"[%s] io error \\n \" , __func__ ); return NULL ; } inode -> dir_cnt = 0 ; inode -> ino = inode_d . ino ; inode -> size = inode_d . size ; inode -> dentry = dentry ; \u200b \u2461 \u5224\u65adinode\u7684\u6587\u4ef6\u7c7b\u578b\uff0c\u5982\u679c\u662f\u76ee\u5f55\u7c7b\u578b\u5219\u9700\u8981\u8bfb\u53d6\u6bcf\u4e00\u4e2a\u76ee\u5f55\u9879\u5e76\u5efa\u7acb\u8fde\u63a5\u3002 /*\u5224\u65adiNode\u8282\u70b9\u7684\u6587\u4ef6\u7c7b\u578b*/ if ( SFS_IS_DIR ( inode )) { /*\u5982\u679c\u662f\u76ee\u5f55\u7684\u8bdd\u9700\u8981\u5c06\u76ee\u5f55\u9879\u5efa\u7acb\u8fde\u63a5*/ dir_cnt = inode_d . dir_cnt ; for ( i = 0 ; i < dir_cnt ; i ++ ) { if ( sfs_driver_read ( SFS_DATA_OFS ( ino ) + i * sizeof ( struct sfs_dentry_d ), ( uint8_t * ) & dentry_d , sizeof ( struct sfs_dentry_d )) != SFS_ERROR_NONE ) { SFS_DBG ( \"[%s] io error \\n \" , __func__ ); return NULL ; } sub_dentry = new_dentry ( dentry_d . fname , dentry_d . ftype ); sub_dentry -> parent = inode -> dentry ; sub_dentry -> ino = dentry_d . ino ; sfs_alloc_dentry ( inode , sub_dentry ); } } \u200b \u2462\u5982\u679c\u662f\u6587\u4ef6\u7c7b\u578b\u76f4\u63a5\u8bfb\u53d6\u6570\u636e\u5373\u53ef\u3002 else if ( SFS_IS_REG ( inode )) { /*\u6587\u4ef6\u7c7b\u578b\u76f4\u63a5\u8bfb\u53d6\u6570\u636e\u5373\u53ef*/ inode -> data = ( uint8_t * ) malloc ( SFS_BLKS_SZ ( SFS_DATA_PER_FILE )); if ( sfs_driver_read ( SFS_DATA_OFS ( ino ), ( uint8_t * ) inode -> data , SFS_BLKS_SZ ( SFS_DATA_PER_FILE )) != SFS_ERROR_NONE ) { SFS_DBG ( \"[%s] io error \\n \" , __func__ ); return NULL ; } } 2.2 \u5b9e\u73b0mkdir+touch \u00b6 2.2.1 \u83b7\u53d6\u6587\u4ef6\u5c5e\u6027 \u00b6 FUSE\u6587\u4ef6\u7cfb\u7edf\u4e3a\u4e86\u83b7\u5f97\u6bcf\u4e2a\u6587\u4ef6\u7684\u72b6\u6001 \uff0c\u8981\u4e0d\u65ad\u8c03\u7528 getattr \u94a9\u5b50\uff0c\u8fd9\u4e2a\u94a9\u5b50\u51fd\u6570\u7c7b\u4f3c\u4e8e xv6 \u91cc\u7684 fstat \u3002\u5b9e\u73b0 ls \u3001 mkdir \u3001 touch \u7b49\u64cd\u4f5c\u7684\u524d\u63d0\u5c31\u662f\u5b8c\u6210 getattr \u94a9\u5b50\u7684\u7f16\u5199\uff0c\u8fd9\u91cc\u7ed9\u4e2a\u4f8b\u5b50\uff08\u8be6\u89c1sfs_getattr\u51fd\u6570\uff09\uff1a \u200b \u2460\u9996\u5148\u627e\u5230\u8def\u5f84\u6240\u5bf9\u5e94\u7684\u76ee\u5f55\u9879\u3002 struct sfs_dentry * dentry = sfs_lookup ( path , & is_find , & is_root ); if ( is_find == FALSE ) { return - SFS_ERROR_NOTFOUND ; } \u200b \u2461\u5224\u65ad\u76ee\u5f55\u9879\u7684\u6587\u4ef6\u7c7b\u578b\u5e76\u5bf9\u72b6\u6001\u8fdb\u884c\u7f16\u5199\u3002 if ( SFS_IS_DIR ( dentry -> inode )) { //\u5982\u679c\u662f\u76ee\u5f55\u7c7b\u578b sfs_stat -> st_mode = S_IFDIR | SFS_DEFAULT_PERM ; sfs_stat -> st_size = dentry -> inode -> dir_cnt * sizeof ( struct sfs_dentry_d ); } else if ( SFS_IS_REG ( dentry -> inode )) { //\u5982\u679c\u662f\u6587\u4ef6\u7c7b\u578b sfs_stat -> st_mode = S_IFREG | SFS_DEFAULT_PERM ; sfs_stat -> st_size = dentry -> inode -> size ; } sfs_stat -> st_nlink = 1 ; sfs_stat -> st_uid = getuid (); sfs_stat -> st_gid = getgid (); sfs_stat -> st_atime = time ( NULL ); sfs_stat -> st_mtime = time ( NULL ); sfs_stat -> st_blksize = SFS_IO_SZ (); if ( is_root ) { sfs_stat -> st_size = sfs_super . sz_usage ; sfs_stat -> st_blocks = SFS_DISK_SZ () / SFS_IO_SZ (); sfs_stat -> st_nlink = 2 ; /* !\u7279\u6b8a\uff0c\u6839\u76ee\u5f55link\u6570\u4e3a2 */ } return SFS_ERROR_NONE ; } getattr \u7684\u5b9e\u73b0\u9996\u5148\u662f \u89e3\u6790\u8def\u5f84 \uff0c\u4ece\u800c\u83b7\u53d6\u76f8\u5e94\u6587\u4ef6\u7684 inode\u6216dentry \uff0c\u63a5\u7740\u586b\u5199 struct stat* \u7ed3\u6784\u4f53\u5373\u53ef\u3002 \u5176\u4e2d sfs_lookup \u51fd\u6570\u5f88\u91cd\u8981\uff0c\u8bb8\u591a\u9700\u8981\u5b9e\u73b0\u7684\u94a9\u5b50\u90fd\u9700\u8981\u7528\u5230\u5b83\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u627e\u5230\u8def\u5f84\u6240\u5bf9\u5e94\u7684\u76ee\u5f55\u9879\uff0c\u6216\u8005\u8fd4\u56de\u4e0a\u4e00\u7ea7\u76ee\u5f55\u9879\uff0c\u539f\u578b\u5982\u4e0b\uff08\u8be6\u89c1sfs_lookup\u51fd\u6570\uff09\uff1a \u200b \u2460\u9996\u5148\u8ba1\u7b97\u8def\u5f84\u7684\u7ea7\u6570\uff0c\u5982\u679c\u4e3a0\u8bf4\u660e\u662f\u6839\u76ee\u5f55\u3002 int total_lvl = sfs_calc_lvl ( path ); /*\u8ba1\u7b97\u8def\u5f84\u7ea7\u6570*/ ... if ( total_lvl == 0 ) { /* \u6839\u76ee\u5f55 */ * is_find = TRUE ; * is_root = TRUE ; dentry_ret = sfs_super . root_dentry ; } \u200b \u2461\u4e0d\u4e3a0\u5219\u9700\u8981\u4ece\u6839\u76ee\u5f55\u5f00\u59cb\uff0c\u4f9d\u6b21\u5339\u914d\u8def\u5f84\u4e2d\u7684\u76ee\u5f55\u9879\uff0c\u76f4\u5230\u627e\u5230\u6587\u4ef6\u6240\u5bf9\u5e94\u7684\u76ee\u5f55\u9879\u3002 \u200b \u2462\u5982\u679c\u6ca1\u627e\u5230\u5219\u8fd4\u56de\u6700\u540e\u4e00\u6b21\u5339\u914d\u7684\u76ee\u5f55\u9879\u3002 fname = strtok ( path_cpy , \"/\" ); /*\u5206\u6790\u8def\u5f84\u51fd\u6570\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u5b83\u7684\u7528\u6cd5*/ while ( fname ) { lvl ++ ; if ( dentry_cursor -> inode == NULL ) { /* Cache\u673a\u5236 */ sfs_read_inode ( dentry_cursor , dentry_cursor -> ino ); } inode = dentry_cursor -> inode ; if ( SFS_IS_REG ( inode ) && lvl < total_lvl ) { SFS_DBG ( \"[%s] not a dir \\n \" , __func__ ); dentry_ret = inode -> dentry ; break ; } if ( SFS_IS_DIR ( inode )) { /*\u76ee\u5f55\u7c7b\u578b\u7684\u6587\u4ef6\u9700\u8981\u5c06\u76ee\u5f55\u9879\u548c\u8def\u5f84\u540d\u8fdb\u884c\u6bd4\u8f83*/ dentry_cursor = inode -> dentrys ; is_hit = FALSE ; while ( dentry_cursor ) { if ( memcmp ( dentry_cursor -> fname , fname , strlen ( fname )) == 0 ) { is_hit = TRUE ; break ; } dentry_cursor = dentry_cursor -> brother ; } if ( ! is_hit ) { * is_find = FALSE ; SFS_DBG ( \"[%s] not found %s \\n \" , __func__ , fname ); dentry_ret = inode -> dentry ; break ; } if ( is_hit && lvl == total_lvl ) { * is_find = TRUE ; dentry_ret = dentry_cursor ; break ; } } fname = strtok ( NULL , \"/\" ); } if ( dentry_ret -> inode == NULL ) { dentry_ret -> inode = sfs_read_inode ( dentry_ret , dentry_ret -> ino ); } return dentry_ret ; 2.2.2 \u5efa\u7acb\u76ee\u5f55 \u00b6 \u5f53\u4e3aFUSE\u6587\u4ef6\u7cfb\u7edf\u521b\u5efa\u76ee\u5f55\u65f6\uff0c\u4f1a \u6267\u884c\u7684\u94a9\u5b50 \u662f .mkdir \uff08\u8be6\u89c1sfs_mkdir\u51fd\u6570\uff09\uff1a \u200b \u2460\u5bfb\u627e\u4e0a\u7ea7\u76ee\u5f55\u9879\u3002 \u200b \u2461\u521b\u5efa\u76ee\u5f55\u5e76\u5efa\u7acb\u8fde\u63a5\u3002 /** * @brief \u521b\u5efa\u76ee\u5f55 * * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84 * @param mode \u521b\u5efa\u6a21\u5f0f\uff08\u53ea\u8bfb\uff1f\u53ea\u5199\uff1f\uff09\uff0c\u53ef\u5ffd\u7565 * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int sfs_mkdir ( const char * path , mode_t mode ) { ( void ) mode ; boolean is_find , is_root ; char * fname ; struct sfs_dentry * last_dentry = sfs_lookup ( path , & is_find , & is_root ); //\u5bfb\u627e\u4e0a\u7ea7\u76ee\u5f55\u9879 struct sfs_dentry * dentry ; struct sfs_inode * inode ; if ( is_find ) { //\u76ee\u5f55\u5b58\u5728 return - SFS_ERROR_EXISTS ; } if ( SFS_IS_REG ( last_dentry -> inode )) { return - SFS_ERROR_UNSUPPORTED ; } fname = sfs_get_fname ( path ); dentry = new_dentry ( fname , SFS_DIR ); dentry -> parent = last_dentry ; inode = sfs_alloc_inode ( dentry ); sfs_alloc_dentry ( last_dentry -> inode , dentry ); return SFS_ERROR_NONE ; } 2.3 \u5b9e\u73b0mknod+ls \u00b6 2.3.1 \u5efa\u7acb\u6587\u4ef6 \u00b6 \u5f53\u4e3aFUSE\u6587\u4ef6\u7cfb\u7edf\u521b\u5efa\u6587\u4ef6\u65f6\uff0c\u4f1a \u6267\u884c\u7684\u94a9\u5b50 \u662f .mknod \uff0c\u5728\u6211\u4eec\u7ed9\u7684\u6846\u67b6\u4e2d\uff0c\u7ed9\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u601d\u8def\uff1a /** * @brief \u521b\u5efa\u6587\u4ef6 * * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84 * @param mode \u521b\u5efa\u6587\u4ef6\u7684\u6a21\u5f0f\uff0c\u53ef\u5ffd\u7565 * @param dev \u8bbe\u5907\u7c7b\u578b\uff0c\u53ef\u5ffd\u7565 * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int newfs_mknod ( const char * path , mode_t mode , dev_t dev ) { /* TODO: \u89e3\u6790\u8def\u5f84\uff0c\u5e76\u521b\u5efa\u76f8\u5e94\u7684\u6587\u4ef6 */ return 0 ; } \u800c\u5728sfs\u6587\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u94a9\u5b50\u7684\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\uff1a \u200b \u2460\u627e\u5230\u521b\u5efa\u6587\u4ef6\u8def\u5f84\u4e2d\u6240\u5bf9\u5e94\u7684\u76ee\u5f55\u9879\u3002 \u200b \u2461\u5982\u679c\u6587\u4ef6\u5b58\u5728\u5219\u8fd4\u56de\u9519\u8bef\u3002 \u200b \u2462\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u5728\u521b\u5efa\u76ee\u5f55\u9879\u548c\u5bf9\u5e94\u7684inode\uff0c\u5e76\u548c\u7236\u76ee\u5f55\u9879\u5efa\u7acb\u8fde\u63a5\u3002 /** * @brief \u521b\u5efa\u6587\u4ef6 * * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84 * @param mode \u521b\u5efa\u6587\u4ef6\u7684\u6a21\u5f0f\uff0c\u53ef\u5ffd\u7565 * @param dev \u8bbe\u5907\u7c7b\u578b\uff0c\u53ef\u5ffd\u7565 * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int sfs_mknod ( const char * path , mode_t mode , dev_t dev ) { boolean is_find , is_root ; struct sfs_dentry * last_dentry = sfs_lookup ( path , & is_find , & is_root ); //\u627e\u5230\u521b\u5efa\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55 struct sfs_dentry * dentry ; struct sfs_inode * inode ; char * fname ; if ( is_find == TRUE ) { //\u6587\u4ef6\u5b58\u5728 return - SFS_ERROR_EXISTS ; } fname = sfs_get_fname ( path ); //\u83b7\u53d6\u6587\u4ef6\u540d\u5b57 if ( S_ISREG ( mode )) { dentry = new_dentry ( fname , SFS_REG_FILE ); } else if ( S_ISDIR ( mode )) { dentry = new_dentry ( fname , SFS_DIR ); } dentry -> parent = last_dentry ; inode = sfs_alloc_inode ( dentry ); sfs_alloc_dentry ( last_dentry -> inode , dentry ); return SFS_ERROR_NONE ; } \u4f46\u4ec5\u4ec5\u5b9e\u73b0\u8fd9\u4e2a\u51fd\u6570 touch \u4e00\u4e2a\u6587\u4ef6\u4ecd\u7136\u4f1a\u62a5\u9519\uff0c\u8fd9\u662f\u56e0\u4e3a touch \u8981\u6c42\u4e0d\u4ec5\u4ec5\u662f\u521b\u5efa\u6587\u4ef6\uff0c\u8fd8\u8981\u6c42\u53ef\u4ee5 \u4fee\u6539\u6587\u4ef6\u7684\u8bbf\u95ee\u65f6\u95f4 \uff08\u96be\u602a\u53eb touch \uff0c\u6478\u4e00\u4e0b\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u8fd8\u8981\u5b9e\u73b0 utimens \u94a9\u5b50\uff0c\u8fd9\u4e2a\u94a9\u5b50\u7528\u4e8e\u4fee\u6539\u6587\u4ef6\u7684\u8bbf\u95ee\u65f6\u95f4\uff08\u5176\u5b9e\u53ea\u9700\u8981\u8fd4\u56de0\u5c31\u597d\uff09\u3002\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5b8c\u5584\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u5b8c\u5584\u3002 /** * @brief \u4fee\u6539\u65f6\u95f4\uff0c\u4e3a\u4e86\u4e0d\u8ba9touch\u62a5\u9519 * * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84 * @param tv \u5b9e\u8df5 * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int newfs_utimens ( const char * path , const struct timespec tv [ 2 ]) { ( void ) path ; return 0 ; } 2.3.2 \u8bfb\u53d6\u76ee\u5f55\u9879 \u00b6 \u5f53 \u5728FUSE\u6587\u4ef6\u7cfb\u7edf \u4e0b\u8c03\u7528 ls \u65f6\uff0c\u5c31\u4f1a\u89e6\u53d1 readdir \u94a9\u5b50\uff0c readdir \u5728 ls \u7684\u8fc7\u7a0b\u4e2d\u6bcf\u6b21 \u4ec5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u76ee\u5f55\u9879 \uff0c\u5176\u4e2d offset \u53c2\u6570\u8bb0\u5f55\u7740\u5f53\u524d\u5e94\u8be5\u8fd4\u56de\u7684\u76ee\u5f55\u9879\uff1a /** * @brief * * @param path * @param buf * @param filler \u53c2\u6570\u8bb2\u89e3: * * typedef int (*fuse_fill_dir_t) (void *buf, const char *name, * const struct stat *stbuf, off_t off) * buf: name\u4f1a\u88ab\u590d\u5236\u5230buf\u4e2d * name: dentry\u540d\u5b57 * stbuf: \u6587\u4ef6\u72b6\u6001\uff0c\u53ef\u5ffd\u7565 * off: \u4e0b\u4e00\u6b21offset\u4ece\u54ea\u91cc\u5f00\u59cb\uff0c\u8fd9\u91cc\u53ef\u4ee5\u7406\u89e3\u4e3a\u7b2c\u51e0\u4e2adentry * * @param offset * @param fi * @return int */ int sfs_readdir ( const char * path , void * buf , fuse_fill_dir_t filler , off_t offset , struct fuse_file_info * fi ) { boolean is_find , is_root ; int cur_dir = offset ; struct sfs_dentry * dentry = sfs_lookup ( path , & is_find , & is_root ); struct sfs_dentry * sub_dentry ; struct sfs_inode * inode ; if ( is_find ) { inode = dentry -> inode ; sub_dentry = sfs_get_dentry ( inode , cur_dir ); if ( sub_dentry ) { filler ( buf , sub_dentry -> fname , NULL , ++ offset ); } return SFS_ERROR_NONE ; } return - SFS_ERROR_NOTFOUND ; } \u5176\u4e2d\u6700\u91cd\u8981\u7684 filler \u51fd\u6570\uff0c filler \u51fd\u6570\u539f\u578b\u5982\u4e0b\uff1a typedef int (*fuse_fill_dir_t) (void *buf, const char *name, const struct stat *stbuf, off_t off) \u5bf9\u5404\u4e2a\u53c2\u6570\u505a\u5982\u4e0b\u89e3\u91ca\uff1a buf \uff1aname\u4f1a\u88ab\u590d\u5236\u5230buf\u4e2d\uff1b name \uff1adentry \u540d\u5b57\uff1b stbuf \uff1a\u6587\u4ef6\u72b6\u6001\uff0c\u53ef\u5ffd\u7565\uff1b off \uff1a \u4e0b\u4e00\u6b21offset\u4ece\u54ea\u91cc\u5f00\u59cb\uff0c\u8fd9\u91cc\u53ef\u4ee5\u7406\u89e3\u4e3a\u7b2c\u51e0\u4e2adentry\uff1b \u56e0\u6b64\uff0c\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u8c03\u7528 filler(buf, fname, NULL, ++offset) \u8868\u793a\u5c06 fname \u653e\u5165 buf \u4e2d\uff0c\u5e76\u4f7f\u76ee\u5f55\u9879\u504f\u79fb\u52a0\u4e00\uff0c\u4ee3\u8868\u4e0b\u4e00\u6b21\u8bbf\u95ee\u4e0b\u4e00\u4e2a\u76ee\u5f55\u9879\u3002 \u8865\u5145\u601d\u8003 \uff1a\u7b26\u53f7\u94fe\u63a5\u7684\u5b9e\u73b0 \u00b6 \u80cc\u666f \u00b6 \u7b26\u53f7\u94fe\u63a5\uff08Symbolic Link\uff09\uff0c\u53c8\u79f0\u8f6f\u94fe\u63a5\uff08Soft Link\uff09\uff0c\u5b83\u5305\u542b\u4e86\u5230\u539f\u6587\u4ef6\u7684\u8def\u5f84\u4fe1\u606f\uff0c\u62e5\u6709\u81ea\u5df1\u7684\u7d22\u5f15\u8282\u70b9\uff08inode\uff09\u53ca\u6587\u4ef6\u5c5e\u6027\u53ca\u6743\u9650\u3002 \u786c\u94fe\u63a5\uff08Hard Link\uff09\uff0c\u662f\u5bf9\u539f\u6587\u4ef6\u8d77\u4e86\u4e00\u4e2a\u522b\u540d\u3002\u6587\u4ef6\u6709\u76f8\u540c\u7684 inode \u53ca data block\u3002 \u8be6\u7ec6\u533a\u522b\u8bf7\u81ea\u884c\u67e5\u9605\u8d44\u6599 \u7b26\u53f7\u94fe\u63a5\u7684\u5b9e\u73b0\u65b9\u5f0f \u00b6 \u7531\u7b26\u53f7\u94fe\u63a5\u7684\u539f\u7406\u53ef\u5f97\uff0c\u5efa\u7acb\u7b26\u53f7\u94fe\u63a5\u7684\u5173\u952e\u662f\u5b58\u50a8\u94fe\u63a5\u76ee\u6807\u6587\u4ef6\u7684\u8def\u5f84\u4fe1\u606f\u3002 \u7531\u6b64\u5f15\u51fa\u7b26\u53f7\u94fe\u63a5\u7684\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff1a \u5c06\u8def\u5f84\u4fe1\u606f\u5b58\u50a8\u5728inode\u8282\u70b9\u4e2d \u5c06\u8def\u5f84\u4fe1\u606f\u5b58\u50a8\u5728data block\u4e2d \u6837\u4f8bSimpleFS\u4e2d\u7684\u5b9e\u73b0\uff0c\u5c06\u8def\u5f84\u4fe1\u606f\u5b58\u50a8\u4e8einode\u8282\u70b9\u4e2d\uff0c\u5bf9\u4e8e\u5b58\u50a8\u5728data block\u4e2d\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u53ef\u4ee5\u81ea\u884c\u81ea\u8003\u5e76\u5b9e\u73b0\u3002 \u7b26\u53f7\u94fe\u63a5\u7684\u5b9e\u73b0\u7ec6\u8282 \u00b6 \u7531\u4e8e\u6837\u4f8b\u662f\u5c06\u7b26\u53f7\u94fe\u63a5\u7684\u8def\u5f84\u4fe1\u606f\u5b58\u50a8\u4e8einode\u8282\u70b9\u4e2d\uff0c\u6545\u9700\u8981\u9996\u5148\u4fee\u6539 struct inode \u548c struct inode_d # \u6dfb\u52a0target_path\u7528\u4e8e\u5b58\u50a8\u8def\u5f84\u4fe1\u606f char target_path [ SFS_MAX_FILE_NAME ]; \u5e76\u7531\u6b64\u9700\u8981\u589e\u52a0 sfs_utils.c \u4e2d\uff0c sfs_sync_inode() \u53ca sfs_read_inode() \uff0c\u5bf9\u5185\u5b58inode\u53ca\u78c1\u76d8inode\u95f4\u62f7\u8d1d\u64cd\u4f5c\u65f6\u7684\u8865\u5145\u62f7\u8d1d\u3002\u540c\u65f6\uff0c\u5728\u6587\u4ef6\u7c7b\u578b enum sfs_file_type \u4e2d\u589e\u52a0 SFS_SYM_LINK \u3002 FUSE\u6587\u4ef6\u7cfb\u7edf\u4e3a\u652f\u6301\u7b26\u53f7\u94fe\u63a5\uff0c\u9700\u8981\u5b9e\u73b0 symlink \u94a9\u5b50.\u9996\u5148\uff0c\u7531\u4e8e\u7b26\u53f7\u94fe\u63a5\u672c\u8d28\u662f\u4e00\u4e2a\u7279\u6b8a\u7c7b\u578b\u7684\u6587\u4ef6\uff0c\u9700\u8981\u8c03\u7528 mknod() \u521b\u5efa\u65b0\u7684\u8282\u70b9\uff0c\u5c06\u6b64dentry / inode\u8282\u70b9\u6807\u8bb0\u4f4d\u7b26\u53f7\u94fe\u63a5\u578b\u8282\u70b9\uff0c\u5e76\u5c06\u94fe\u63a5\u7684\u8def\u5f84\u4fe1\u606f\u62f7\u8d1d\u81f3inode\u8282\u70b9\u4e2d\u3002 /** * @brief * * @param path - Where the link points * @param link - The link itself * @return int */ int sfs_symlink ( const char * path , const char * link ){ int ret = SFS_ERROR_NONE ; boolean is_find , is_root ; ret = sfs_mknod ( link , S_IFREG , NULL ); struct sfs_dentry * dentry = sfs_lookup ( link , & is_find , & is_root ); if ( is_find == FALSE ) { return - SFS_ERROR_NOTFOUND ; } dentry -> ftype = SFS_SYM_LINK ; struct sfs_inode * inode = dentry -> inode ; memcpy ( inode -> target_path , path , SFS_MAX_FILE_NAME ); return ret ; } FUSE\u6587\u4ef6\u7cfb\u7edf\u4e3a\u652f\u6301\u94fe\u63a5\uff0c\u9700\u8981\u5b9e\u73b0 readlink \u94a9\u5b50\u3002 readlink \u5373\u5c06path\u5bf9\u5e94\u7684\u7b26\u53f7\u94fe\u63a5\u578b\u6587\u4ef6\u6240\u6307\u5411\u7684\u94fe\u63a5\u8def\u5f84\u4fe1\u606f\u62f7\u8d1d\u81f3buf\u4e2d\uff0c\u4ee5\u5b9e\u73b0\u5bf9\u5bf9\u5e94\u94fe\u63a5\u6587\u4ef6\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c\u3002 /** * @brief * * @param path * @param buf * @param size * @return int */ int sfs_readlink ( const char * path , char * buf , size_t size ){ /* SFS \u6682\u672a\u5b9e\u73b0\u786c\u94fe\u63a5\uff0c\u53ea\u652f\u6301\u8f6f\u94fe\u63a5 */ boolean is_find , is_root ; ssize_t llen ; struct sfs_dentry * dentry = sfs_lookup ( path , & is_find , & is_root ); if ( is_find == FALSE ) { return - SFS_ERROR_NOTFOUND ; } if ( dentry -> ftype != SFS_SYM_LINK ){ return - SFS_ERROR_INVAL ; } struct sfs_inode * inode = dentry -> inode ; llen = strlen ( inode -> target_path ); if ( size < 0 ){ return - SFS_ERROR_INVAL ; } else { if ( llen > size ){ strncpy ( buf , inode -> target_path , size ); buf [ size ] = '\\0' ; } else { strncpy ( buf , inode -> target_path , llen ); buf [ llen ] = '\\0' ; } } return SFS_ERROR_NONE ; } \u4e3a\u4e86\u80fd\u6210\u529f\u8bfb\u53d6\u7b26\u53f7\u94fe\u63a5\u578b\u6587\u4ef6\u7684\u72b6\u6001\u548c\u6743\u9650\uff0c\u8fd8\u9700\u8981\u4fee\u6539 sfs_getattr() \u3002 # \u6dfb\u52a0\u5982\u4e0b\u5206\u652f\u5224\u65ad else if ( SFS_IS_SYM_LINK ( dentry -> inode )) { sfs_stat -> st_mode = S_IFLNK | SFS_DEFAULT_PERM ; sfs_stat -> st_size = dentry -> inode -> size ; } 2.4 \u5b9e\u73b0unmount \u00b6 \u5f53\u5378\u8f7dFUSE\u6587\u4ef6\u7cfb\u7edf\u65f6\uff0c\u4f1a \u6267\u884c\u7684\u94a9\u5b50 \u662f .destroy \uff0c\u6211\u4eec\u53ef\u4ee5\u5728 .destroy \u94a9\u5b50\u4e2d\u5b8c\u6210 \u8d85\u7ea7\u5757\u56de\u5199\u8bbe\u5907 \u3001 \u9a71\u52a8\u7684\u5173\u95ed \u3001 \u66f4\u591a\u5fc5\u8981\u7ed3\u6784\u7684\u56de\u5199 \u7b49\u64cd\u4f5c\uff0c\u4ee5\u4fdd\u8bc1\u4e0b\u4e00\u6b21\u6302\u8f7d\u80fd\u591f \u6062\u590dddriver\u8bbe\u5907\u4e2d\u7684\u6570\u636e \uff1a /** * @brief \u5378\u8f7d\uff08umount\uff09\u6587\u4ef6\u7cfb\u7edf * * @param p \u53ef\u5ffd\u7565 * @return void */ void newfs_destroy ( void * p ) { /* TODO: \u5728\u8fd9\u91cc\u8fdb\u884c\u5378\u8f7d */ ddriver_close ( super . fd ); return ; } \u4e0a\u9762\u7684\u793a\u4f8b\u662f\u5173\u95ed\u9a71\u52a8\u8bbe\u5907\u3002 \u4e0b\u9762\u6211\u4eec\u6765\u770b\u770bsfs\u6587\u4ef6\u7cfb\u7edf\u4e2d\u5bf9\u4e8e\u5378\u8f7d\u7684\u5177\u4f53\u5b9e\u73b0\u6b65\u9aa4\uff08\u8be6\u89c1sfs_umount\u51fd\u6570\uff09\uff1a \u200b \u2460\u4ece\u6839\u8282\u70b9\u9012\u5f52\u5f80\u4e0b\u5237\u5199\u6839\u8282\u70b9\u3002 sfs_sync_inode ( sfs_super . root_dentry -> inode ); /* \u4ece\u6839\u8282\u70b9\u5411\u4e0b\u5237\u5199\u8282\u70b9 */ \u200b \u2461\u5c06\u5185\u5b58\u8d85\u7ea7\u5757\u8f6c\u6362\u4e3a\u78c1\u76d8\u8d85\u7ea7\u5757\u5e76\u5199\u5165\u78c1\u76d8\u3002 sfs_super_d . magic_num = SFS_MAGIC_NUM ; sfs_super_d . map_inode_blks = sfs_super . map_inode_blks ; sfs_super_d . map_inode_offset = sfs_super . map_inode_offset ; sfs_super_d . data_offset = sfs_super . data_offset ; sfs_super_d . sz_usage = sfs_super . sz_usage ; if ( sfs_driver_write ( SFS_SUPER_OFS , ( uint8_t * ) & sfs_super_d , sizeof ( struct sfs_super_d )) != SFS_ERROR_NONE ) { return - SFS_ERROR_IO ; } \u200b \u2462\u5c06inode\u4f4d\u56fe\u5199\u5165\u78c1\u76d8\u3002 if ( sfs_driver_write ( sfs_super_d . map_inode_offset , ( uint8_t * )( sfs_super . map_inode ), SFS_BLKS_SZ ( sfs_super_d . map_inode_blks )) != SFS_ERROR_NONE ) { return - SFS_ERROR_IO ; } free ( sfs_super . map_inode ); \u200b \u2463\u5173\u95ed\u9a71\u52a8\u3002 ddriver_close ( SFS_DRIVER ()); \u5176\u4e2d\u6700\u91cd\u8981\u7684\u51fd\u6570\u662f sfs_sync_inode \uff0c\u5176\u4f5c\u7528\u662f\u5c06\u5185\u5b58inode\u53ca\u5176\u4e0b\u65b9\u7ed3\u6784\u5168\u90e8\u5237\u56de\u78c1\u76d8\uff0c\u64cd\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a \u200b \u2460\u9996\u5148\u5c06inode\u5199\u5165\u78c1\u76d8\u3002 if ( sfs_driver_write ( SFS_INO_OFS ( ino ), ( uint8_t * ) & inode_d , sizeof ( struct sfs_inode_d )) != SFS_ERROR_NONE ) { SFS_DBG ( \"[%s] io error \\n \" , __func__ ); return - SFS_ERROR_IO ; } \u200b \u2461\u5224\u65adinode\u6587\u4ef6\u7c7b\u578b\u3002 \u200b \u2462\u5982\u679c\u662f\u76ee\u5f55\u7c7b\u578b\u5219\u9700\u8981\u9996\u5148\u5c06\u76ee\u5f55\u9879\u5199\u5165\u78c1\u76d8\uff0c\u518d\u9012\u5f52\u5237\u5199\u6bcf\u4e00\u4e2a\u76ee\u5f55\u9879\u6240\u5bf9\u5e94\u7684inode\u8282\u70b9\u3002 /* Cycle 1: \u5199 INODE */ /* Cycle 2: \u5199 \u6570\u636e */ if ( SFS_IS_DIR ( inode )) { dentry_cursor = inode -> dentrys ; offset = SFS_DATA_OFS ( ino ); while ( dentry_cursor != NULL ) { memcpy ( dentry_d . fname , dentry_cursor -> fname , SFS_MAX_FILE_NAME ); dentry_d . ftype = dentry_cursor -> ftype ; dentry_d . ino = dentry_cursor -> ino ; if ( sfs_driver_write ( offset , ( uint8_t * ) & dentry_d , sizeof ( struct sfs_dentry_d )) != SFS_ERROR_NONE ) { SFS_DBG ( \"[%s] io error \\n \" , __func__ ); return - SFS_ERROR_IO ; } if ( dentry_cursor -> inode != NULL ) { /*\u9012\u5f52\u5237\u5199\u8282\u70b9*/ sfs_sync_inode ( dentry_cursor -> inode ); } dentry_cursor = dentry_cursor -> brother ; offset += sizeof ( struct sfs_dentry_d ); } } \u200b \u2463\u5982\u679c\u662f\u6587\u4ef6\u7c7b\u578b\uff0c\u5219\u5c06inode\u6240\u6307\u5411\u7684\u6570\u636e\u76f4\u63a5\u5199\u5165\u78c1\u76d8\u3002 else if ( SFS_IS_REG ( inode )) { if ( sfs_driver_write ( SFS_DATA_OFS ( ino ), inode -> data , SFS_BLKS_SZ ( SFS_DATA_PER_FILE )) != SFS_ERROR_NONE ) { SFS_DBG ( \"[%s] io error \\n \" , __func__ ); return - SFS_ERROR_IO ; } } 2.5 \u5b9e\u73b0read+write\uff08\u9009\u505a\uff09 \u00b6 2.5.1 \u6587\u4ef6\u8bfb \u00b6 \u5f53\u8bfb\u53d6\u6587\u4ef6\u65f6\uff0c\u5c31\u4f1a\u7528\u5230 read \u94a9\u5b50\uff0c\u8fd9\u4e2a\u94a9\u5b50\u5728\u590d\u5236\u6587\u4ef6\u65f6\u4e5f\u4f1a\u7528\u5230\uff0c\u5b83\u901a\u8fc7\u4e0b\u9762\u7684\u6b65\u9aa4\u6765\u5b8c\u6210\u4e00\u6b21\u5bf9\u6587\u4ef6\u7684\u8bfb\u53d6\uff08\u8be6\u89c1sfs_read\u51fd\u6570\uff09\uff1a \u2460\u9996\u5148\u627e\u5230\u6587\u4ef6\u7684\u76ee\u5f55\u9879\uff1a struct sfs_dentry * dentry = sfs_lookup ( path , & is_find , & is_root ); \u2461\u627e\u5230\u76ee\u5f55\u9879\u4e4b\u540e\u5224\u65ad\u6587\u4ef6\u7c7b\u578b\uff0c\u4fdd\u8bc1\u662f\u6587\u4ef6\u7c7b\u578b\u5e76\u4e14\u6587\u4ef6\u5927\u5c0f\u8981\u5927\u4e8e\u6240\u8981\u8bfb\u53d6\u7684\u504f\u79fb\u91cf\uff1a if ( SFS_IS_DIR ( inode )) { return - SFS_ERROR_ISDIR ; } if ( inode -> size < offset ) { return - SFS_ERROR_SEEK ; } \u2462\u4e4b\u540e\u5c06\u6570\u636e\u8bfb\u5165\u5185\u5b58\u5757\u5373\u53ef\uff1a memcpy ( buf , inode -> data + offset , size ); 2.5.2 \u6587\u4ef6\u5199 \u00b6 \u5199\u6587\u4ef6\u662f\uff0c\u7528\u5230 write \u94a9\u5b50\uff0c\u5b83\u5411\u6587\u4ef6\u6240\u5728\u7684\u78c1\u76d8\u4f4d\u7f6e\u4e2d\u5199\u5165\u6570\u636e\uff08\u8be6\u89c1sfs_write\u51fd\u6570\uff09\uff1a \u2460\u548c\u8bfb\u6587\u4ef6\u4e00\u6837\uff0c\u9996\u5148\u627e\u5230\u8def\u5f84\u6240\u5bf9\u5e94\u7684\u76ee\u5f55\u9879\uff1a struct sfs_dentry * dentry = sfs_lookup ( path , & is_find , & is_root ); \u2461\u4e4b\u540e\u4fdd\u8bc1\u6587\u4ef6\u7c7b\u578b\u4e0d\u662f\u76ee\u5f55\u4ee5\u53ca\u4fdd\u8bc1\u6587\u4ef6\u5927\u5c0f\u5927\u4e8e\u504f\u79fb\u91cf\uff1a if ( SFS_IS_DIR ( inode )) { return - SFS_ERROR_ISDIR ; } if ( inode -> size < offset ) { return - SFS_ERROR_SEEK ; } \u2462\u5c06\u5185\u5b58\u4e2d\u6570\u636e\u590d\u5236\u5230\u5bf9\u5e94\u4f4d\u7f6e\u5373\u53ef\uff0c\u5e76\u6539\u5199iNode\u8282\u70b9\u7684\u5927\u5c0f\uff1a memcpy ( inode -> data + offset , buf , size ); inode -> size = offset + size > inode -> size ? offset + size : inode -> size ; \u200b \u200b","title":"\u4efb\u52a1\u4e8c\uff1a\u57fa\u4e8eFUSE\u5b9e\u73b0\u9752\u6625\u7248EXT2\u6587\u4ef6\u7cfb\u7edf"},{"location":"lab5/part3-3/#fuseext2","text":"\u719f\u6089\u4e86\u9a71\u52a8\u540e\uff0c\u6211\u4eec\u4e5f\u5c31\u57fa\u672c\u638c\u63e1\u4e86\u8bbf\u95ee DDRIVER \u8bbe\u5907\u7684\u65b9\u6cd5\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u53ef\u4ee5\u57fa\u4e8eFUSE\u6765\u6b63\u5f0f\u7f16\u5199 \u9752\u6625\u7248EXT2\u6587\u4ef6\u7cfb\u7edf \u4e86\u3002\u6211\u4eec\u5df2\u7ecf\u5728 \u73af\u5883\u914d\u7f6e \u9636\u6bb5\u5c31\u4e3a\u5927\u5bb6\u642d\u5efa\u597d\u4e86FUSE\u6587\u4ef6\u7cfb\u7edf\u9879\u76ee\u6846\u67b6\u3002 \u672c\u6b21\u5b9e\u9a8c\u53ef\u4ee5\u53c2\u8003\u4e24\u4e2a\u5b8c\u5168\u642d\u5efa\u597d\u7684FUSE\u6587\u4ef6\u7cfb\u7edf\uff1a simplefs \uff08 fs/simplefs \u6587\u4ef6\u5939\u4e0b\uff09\u548c myfs \uff08 fs/samples \u6587\u4ef6\u5939\u4e0b\uff09\uff0c\u5176\u4e2d simplefs \u662f\u4e00\u4e2a\u7c7bEXT2\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u4f46 \u6ca1\u6709\u7ed9\u4e88\u6570\u636e\u4f4d\u56fe \u7684\u5b9e\u73b0\uff1b myfs \u662f github \u4e0a\u7684\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u4e5f\u662f\u4e00\u4e2aFUSE\u6587\u4ef6\u7cfb\u7edf\u5b9e\u4f8b\u3002 \u6ce8\u610f\uff0c\u5728\u672c\u5b9e\u9a8c\u4e2d\uff0csimplefs\u548csfs\u90fd\u4ee3\u8868Simple File System\u3002","title":"\u4efb\u52a1\u4e8c\uff1a\u57fa\u4e8eFUSE\u5b9e\u73b0\u9752\u6625\u7248EXT2\u6587\u4ef6\u7cfb\u7edf"},{"location":"lab5/part3-3/#1","text":"\u5c01\u88c5\u5bf9 ddriver \u7684\u8bbf\u95ee\u4ee3\u7801\uff0c\u65b9\u4fbf\u8bbe\u5907\u8bfb\u5199\u3002\u6ce8\u610f\u9a71\u52a8\u8bfb\u5199IO\u4e3a512B\uff0c\u4f46\u662fEXT2\u6587\u4ef6\u7cfb\u7edf\u4e00\u4e2a\u5757\u5927\u5c0f\u4e3a1024B\uff0c\u4e5f\u5c31\u662f\u4e24\u4e2aIO\u5355\u4f4d\u3002\u5728simplefs\u6587\u4ef6\u7cfb\u7edf\u4e2d\u4e5f\u5c01\u88c5\u4e86 ddriver \u7684\u8bbf\u95ee\u4ee3\u7801\uff0c\u7136\u800csimplefs\u662f\u6309\u4e00\u4e2a\u5757\u5927\u5c0f\u4e3a512B\u6765\u5c01\u88c5\u7684\uff08\u8be6\u89c1sfs_utils.c\u7684sfs_driver_read\u51fd\u6570\uff09\u3002 \u8bbe\u8ba1\u4ecb\u8d28\u6570\u636e\u7ed3\u6784\uff08\u4f4d\u4e8e types.h \uff09\uff1b \u8bbe\u8ba1\u5185\u5b58\u6570\u636e\u7ed3\u6784\uff08\u53ef\u8bbe\u8ba1\u3001\u53ef\u4e0d\u8bbe\u8ba1\uff09\uff1b \u4ed4\u7ec6\u9605\u8bfb include/fs.layout \u6587\u4ef6\uff0c\u5e76\u6309\u8981\u6c42\u8bbe\u8ba1\u586b\u5199\u81ea\u5df1\u7684\u6587\u4ef6\u7cfb\u7edf\u5e03\u5c40\uff0c\u5728\u6d4b\u8bd5umount\u65f6\u4f1a\u5bf9\u6587\u4ef6\u7cfb\u7edf\u5e03\u5c40\u8fdb\u884c\u68c0\u6d4b\uff1b \u5b8c\u6210 .init \u94a9\u5b50\uff1a\u8bfb \u8d85\u7ea7\u5757 \u3001\u521d\u59cb\u5316\u6587\u4ef6\u7cfb\u7edf\uff1b \u5b8c\u6210 .destroy \u94a9\u5b50\uff1a \u56de\u5199\u5fc5\u8981\u7ed3\u6784 \uff0c\u4fdd\u8bc1\u4e0b\u4e00\u6b21\u6302\u8f7d\u6b63\u5e38\uff1b \u9a8c\u8bc1\u6302\u8f7d\u5378\u8f7d\u6d41\u7a0b\u7684\u6b63\u786e\u6027\uff08 \u4e3b\u8981\u770b\u8bfb\u5199\u662f\u5426\u6b63\u786e \uff09\uff1b \u5b8c\u6210\u5de5\u5177\u51fd\u6570\uff08\u53ef\u81ea\u884c\u8bbe\u8ba1\uff09\uff1a \u5b8c\u6210 \u5206\u914dinode \u51fd\u6570\uff1a\u521b\u5efa\u4e00\u4e2aInode\u3001\u521d\u59cb\u5316\u5176\u4e0a\u7684\u5b57\u6bb5\u3001\u4fee\u6539\u4f4d\u56fe\u7ed3\u6784\uff0c\u53ef\u80fd\u8fd8\u9700\u8981\u4fee\u6539\u8d85\u7ea7\u5757\uff1b \u5b8c\u6210 \u5206\u914ddentry \u51fd\u6570\uff1a\u521b\u5efa\u4e00\u4e2adentry\u3001\u521d\u59cb\u5316\u5176\u4e0a\u7684\u5b57\u6bb5\uff1b \u5b8c\u6210\u5c06 dentry\u52a0\u5165\u5230inode \u4e2d\u7684\u51fd\u6570\uff1a\u5c06\u751f\u6210\u7684dentry\u5199\u5165\u5230inode\u4e2d\uff1b \u5b8c\u6210 \u8def\u5f84\u89e3\u6790\u51fd\u6570 \uff0c\u8981\u4e48\u8fd4\u56dedentry\uff0c\u8981\u4e48\u8fd4\u56deinode\uff0c\u53ef\u81ea\u884c\u8bbe\u8ba1\uff1b \u6839\u636e\u5de5\u5177\u51fd\u6570\uff0c\u5b8c\u6210 .get_attr \u94a9\u5b50\uff1b \u6839\u636e\u5de5\u5177\u51fd\u6570\uff0c\u5b8c\u6210 .mknod \u94a9\u5b50\uff1b \u6839\u636e\u5de5\u5177\u51fd\u6570\uff0c\u5b8c\u6210 .mkdir \u94a9\u5b50\uff1b \u6839\u636e\u5de5\u5177\u51fd\u6570\uff0c\u5b8c\u6210 .readdir \u94a9\u5b50\uff1b \u624b\u5de5\u6d4b\u8bd5 touch \u3001 ls \u3001 mkdir \u3001 fusermount -u \u7b49\u547d\u4ee4\u7684\u6b63\u786e\u6027\uff1b \u901a\u8fc7 ./tests/test.sh \u811a\u672c\u7684\u57fa\u672c\u529f\u80fd\u6d4b\u8bd5\u3002","title":"1. \u5b9e\u73b0\u6b65\u9aa4\u5efa\u8bae"},{"location":"lab5/part3-3/#2-simplefs","text":"\u63d0\u793a \u4e3a\u964d\u4f4e\u540c\u5b66\u4eec\u7684\u4e0a\u624b\u6210\u672c\uff0c\u672c\u8282\u5bf9Simple File System\u4ee3\u7801\u8fdb\u884c\u5939\u53d9\u5939\u8bae\u5730\u6df1\u5165\u5206\u6790\uff0c\u5e0c\u671b\u80fd\u5bf9\u5404\u4f4d\u540c\u5b66\u6709\u6240\u5e2e\u52a9: ) \u6837\u4f8b\u6587\u4ef6\u7cfb\u7edf\uff08SFS\uff09\u7684\u7cfb\u7edf\u5e03\u5c40\u5982\u4e0b\uff1a \u8981\u63a5\u5165\u4e00\u4e2a\u6846\u67b6\uff0c\u90a3\u4e48\u5c11\u4e0d\u4e86\u94a9\u5b50\u51fd\u6570\uff08\u4e5f\u53ef\u79f0\u4e3a \u51fd\u6570\u6307\u9488 \uff09\u3002\u94a9\u5b50\u51fd\u6570 \u662f\u4e00\u7cfb\u5217\u51fd\u6570\u7684\u62bd\u8c61 \uff0c\u4ece\u800c\u8ba9C\u8bed\u8a00\u5177\u6709\u591a\u6001\u7684\u6027\u8d28\u3002\u5bf9\u4e8eFUSE\u6846\u67b6\uff0c\u5176\u7ed9\u6211\u4eec\u7684\u63a5\u53e3 \u5982\u4e0b \u3002 struct fuse_operations { int ( * getattr ) ( const char * , struct stat * ); int ( * readlink ) ( const char * , char * , size_t ); int ( * getdir ) ( const char * , fuse_dirh_t , fuse_dirfil_t ); int ( * mknod ) ( const char * , mode_t , dev_t ); int ( * mkdir ) ( const char * , mode_t ); int ( * unlink ) ( const char * ); int ( * rmdir ) ( const char * ); int ( * symlink ) ( const char * , const char * ); int ( * rename ) ( const char * , const char * ); int ( * link ) ( const char * , const char * ); int ( * chmod ) ( const char * , mode_t ); int ( * chown ) ( const char * , uid_t , gid_t ); int ( * truncate ) ( const char * , off_t ); int ( * utime ) ( const char * , struct utimbuf * ); int ( * open ) ( const char * , struct fuse_file_info * ); int ( * read ) ( const char * , char * , size_t , off_t , struct fuse_file_info * ); int ( * write ) ( const char * , const char * , size_t , off_t , struct fuse_file_info * ); int ( * statfs ) ( const char * , struct statvfs * ); int ( * flush ) ( const char * , struct fuse_file_info * ); int ( * release ) ( const char * , struct fuse_file_info * ); int ( * fsync ) ( const char * , int , struct fuse_file_info * ); int ( * setxattr ) ( const char * , const char * , const char * , size_t , int ); int ( * getxattr ) ( const char * , const char * , char * , size_t ); int ( * listxattr ) ( const char * , char * , size_t ); int ( * removexattr ) ( const char * , const char * ); int ( * opendir ) ( const char * , struct fuse_file_info * ); int ( * readdir ) ( const char * , void * , fuse_fill_dir_t , off_t , struct fuse_file_info * ); int ( * releasedir ) ( const char * , struct fuse_file_info * ); int ( * fsyncdir ) ( const char * , int , struct fuse_file_info * ); void * ( * init ) ( struct fuse_conn_info * conn ); void ( * destroy ) ( void * ); int ( * access ) ( const char * , int ); int ( * create ) ( const char * , mode_t , struct fuse_file_info * ); int ( * ftruncate ) ( const char * , off_t , struct fuse_file_info * ); int ( * fgetattr ) ( const char * , struct stat * , struct fuse_file_info * ); int ( * lock ) ( const char * , struct fuse_file_info * , int cmd , struct flock * ); int ( * utimens ) ( const char * , const struct timespec tv [ 2 ]); int ( * bmap ) ( const char * , size_t blocksize , uint64_t * idx ); int ( * ioctl ) ( const char * , int cmd , void * arg , struct fuse_file_info * , unsigned int flags , void * data ); int ( * poll ) ( const char * , struct fuse_file_info * , struct fuse_pollhandle * ph , unsigned * reventsp ); int ( * write_buf ) ( const char * , struct fuse_bufvec * buf , off_t off , struct fuse_file_info * ); int ( * read_buf ) ( const char * , struct fuse_bufvec ** bufp , size_t size , off_t off , struct fuse_file_info * ); int ( * flock ) ( const char * , struct fuse_file_info * , int op ); int ( * fallocate ) ( const char * , int , off_t , off_t , struct fuse_file_info * ); }; \u4ee5\u4e0b\u9762\u4e00\u884c\u4ee3\u7801\u4e3a\u4f8b\uff1a int ( * mkdir ) ( const char * , mode_t ); \u8fd9\u4e2a\u94a9\u5b50\u51fd\u6570 \u62bd\u8c61\u4e86\u6240\u6709 mkdir \u7684\u64cd\u4f5c\uff1a\u6240\u6709 mkdir \u90fd\u9700\u8981\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\u4f5c\u4e3a \u8def\u5f84 \u3001\u53e6\u4e00\u4e2a\u53c2\u6570\u4f5c\u4e3a \u521b\u5efa\u6a21\u5f0f \uff08\u53ea\u8bfb/\u53ea\u5199/\u53ef\u8bfb\u53ef\u5199\uff09\u3002\u4e0d\u540c\u7684\u6587\u4ef6\u7cfb\u7edf\u53ef\u4ee5\u57fa\u4e8e\u6b64\u5b9e\u73b0\u4e0d\u540c\u7684 mkdir \u4ee3\u7801\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff1a // \u6587\u4ef6\u7cfb\u7edf\u4e00\u5b9e\u73b0mkdir int mkdir ( const char * path , mode_t mode ) { printf ( \"\u6211\u4e0d\u7ed9\u4f60\u521b\u5efa %s \\n \" , path ); return 0 ; } // \u6587\u4ef6\u7cfb\u7edf\u4e8c\u5b9e\u73b0mkdir int mkdir ( const char * path , mode_t mode ) { dentry = lookup ( path ); // \u67e5\u627e\u8def\u5f84\uff0c\u627e\u5230\u7236\u7ea7dentry inode = new_inode (); // \u521b\u5efa\u8be5\u76ee\u5f55\u6587\u4ef6\u7684inode new_dentry = new_dentry (); // \u521b\u5efa\u5c5e\u4e8e\u8be5inode\u7684dentry bond ( new_dentry , inode ); // \u8ba9\u8be5dentry\u6307\u5411inode add ( dentry , new_dentry ); // \u5c06\u65b0\u521b\u5efa\u7684dentry\u52a0\u5165\u5230\u7236\u7ea7dentry\u5bf9\u5e94\u7684\u76ee\u5f55\u6587\u4ef6\u4e2d return 0 ; } FUSE\u6846\u67b6 \u901a\u8fc7\u5411 fuse_main \u51fd\u6570\u4f20\u5165\u4e00\u4e2a\u88ab\u590d\u5236\u7684 fuse_operations \u7ed3\u6784\u4f53\u5373\u53ef\u5b8c\u6210\u64cd\u4f5c\u7684\u6ce8\u518c\uff0c\u4ece\u800c\u4f7f\u5f97\u6587\u4ef6\u7cfb\u7edf\u80fd\u591f\u6309\u7167\u6211\u4eec\u65e2\u5b9a\u7684\u65b9\u5f0f\u6765\u5904\u7406\u547d\u4ee4\u3002\u4e0b\u56fe\u4e3a \u5c06\u64cd\u4f5c\u63a5\u5165FUSE\u7684\u5165\u53e3 \uff1a \u672c\u6b21\u5b9e\u9a8c\u7531\u4e8e\u5b9e\u73b0\u7684\u529f\u80fd\u8f83\u4e3a\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u8981\u6c42\u540c\u5b66\u4eec\u5b9e\u73b0\u4ee5\u4e0b\u94a9\u5b50\uff08\u5176\u4e2d\u6807\u8bb0\u4e3a NULL \u7684\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\u4e0d\u8981\u6c42\u5b9e\u73b0\uff09\uff1a // Line 21 static struct fuse_operations operations = { . init = newfs_init , /* mount\u6587\u4ef6\u7cfb\u7edf */ . destroy = newfs_destroy , /* umount\u6587\u4ef6\u7cfb\u7edf */ . mkdir = newfs_mkdir , /* \u5efa\u76ee\u5f55\uff0cmkdir */ . getattr = newfs_getattr , /* \u83b7\u53d6\u6587\u4ef6\u5c5e\u6027\uff0c\u7c7b\u4f3cstat\uff0c\u5fc5\u987b\u5b8c\u6210 */ . readdir = newfs_readdir , /* \u586b\u5145dentrys */ . mknod = newfs_mknod , /* \u521b\u5efa\u6587\u4ef6\uff0ctouch\u76f8\u5173 */ . write = NULL , /* \u5199\u5165\u6587\u4ef6 */ . read = NULL , /* \u8bfb\u6587\u4ef6 */ . utimens = newfs_utimens , /* \u4fee\u6539\u65f6\u95f4\uff0c\u5ffd\u7565\uff0c\u907f\u514dtouch\u62a5\u9519 */ . truncate = NULL , /* \u6539\u53d8\u6587\u4ef6\u5927\u5c0f */ . unlink = NULL , /* \u5220\u9664\u6587\u4ef6 */ . rmdir = NULL , /* \u5220\u9664\u76ee\u5f55\uff0c rm -r */ . rename = NULL , /* \u91cd\u547d\u540d\uff0cmv */ . open = NULL , . opendir = NULL , . access = NULL }; \u5148\u6765\u770b\u4e00\u4e0bsfs\u6587\u4ef6\u7cfb\u7edf\u7ed9\u51fa\u7684\u6570\u636e\u7ed3\u6784\u5b9a\u4e49\uff1a struct custom_options { const char * device ; //\u9a71\u52a8\u7684\u8def\u5f84 boolean show_help ; }; struct sfs_inode /*\u5185\u5b58\u4e2dinode\u7684\u6570\u636e\u7ed3\u6784*/ { int ino ; /* \u5728inode\u4f4d\u56fe\u4e2d\u7684\u4e0b\u6807 */ int size ; /* \u6587\u4ef6\u5df2\u5360\u7528\u7a7a\u95f4 */ int dir_cnt ; struct sfs_dentry * dentry ; /* \u6307\u5411\u8be5inode\u7684dentry */ struct sfs_dentry * dentrys ; /* \u6240\u6709\u76ee\u5f55\u9879 */ uint8_t * data ; }; struct sfs_dentry /*\u5185\u5b58\u4e2d\u76ee\u5f55\u9879\u7684\u6570\u636e\u7ed3\u6784*/ { char fname [ SFS_MAX_FILE_NAME ]; struct sfs_dentry * parent ; /* \u7236\u4eb2Inode\u7684dentry */ struct sfs_dentry * brother ; /* \u5144\u5f1f */ int ino ; struct sfs_inode * inode ; /* \u6307\u5411inode */ SFS_FILE_TYPE ftype ; }; struct sfs_super /*\u5185\u5b58\u4e2d\u8d85\u7ea7\u5757\u7684\u6570\u636e\u7ed3\u6784*/ { int driver_fd ; int sz_io ; /*inode\u7684\u5927\u5c0f*/ int sz_disk ; /*\u78c1\u76d8\u5927\u5c0f*/ int sz_usage ; int max_ino ; /*inode\u7684\u6570\u76ee*/ uint8_t * map_inode ; /*inode\u4f4d\u56fe*/ int map_inode_blks ; /*inode\u4f4d\u56fe\u6240\u5360\u7684\u6570\u636e\u5757*/ int map_inode_offset ; /*inode\u4f4d\u56fe\u7684\u8d77\u59cb\u5730\u5740*/ int data_offset ; /*\u6570\u636e\u5757\u7684\u8d77\u59cb\u5730\u5740*/ boolean is_mounted ; struct sfs_dentry * root_dentry ; /*\u6839\u76ee\u5f55*/ }; /****************************************************************************** * \u78c1\u76d8\u4e2d\u7684\u6570\u636e\u7ed3\u6784 *******************************************************************************/ struct sfs_super_d { uint32_t magic_num ; int sz_usage ; int max_ino ; int map_inode_blks ; int map_inode_offset ; int data_offset ; }; struct sfs_inode_d { int ino ; /* \u5728inode\u4f4d\u56fe\u4e2d\u7684\u4e0b\u6807 */ int size ; /* \u6587\u4ef6\u5df2\u5360\u7528\u7a7a\u95f4 */ int dir_cnt ; SFS_FILE_TYPE ftype ; }; struct sfs_dentry_d { char fname [ SFS_MAX_FILE_NAME ]; SFS_FILE_TYPE ftype ; int ino ; /* \u6307\u5411\u7684ino\u53f7 */ }; \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u518d\u5206\u522b\u4ecb\u7ecd\u5404\u4e2a\u64cd\u4f5c\u5b9e\u73b0\u8981\u7ecf\u8fc7\u7684\u94a9\u5b50\u51fd\u6570\uff0c\u4ee5\u4fbf\u8ba9\u540c\u5b66\u4eec\u6709\u4e2a\u66f4\u76f4\u89c2\u7684\u7406\u89e3\u3002","title":"2. simplefs\u6587\u4ef6\u7cfb\u7edf\u53c2\u8003\u5b9e\u73b0"},{"location":"lab5/part3-3/#21-mount","text":"\u5f53\u6302\u8f7dFUSE\u6587\u4ef6\u7cfb\u7edf\u65f6\uff0c\u4f1a \u6267\u884c\u7684\u94a9\u5b50 \u662f .init \uff0c\u6211\u4eec\u53ef\u4ee5\u5728 .init \u94a9\u5b50\u4e2d\u5b8c\u6210 \u8d85\u7ea7\u5757\u7684\u8bfb\u53d6 \u3001 \u4f4d\u56fe\u7684\u5efa\u7acb \u3001 \u9a71\u52a8\u7684\u521d\u59cb\u5316 \u7b49\u64cd\u4f5c\uff1a /** * @brief \u6302\u8f7d\uff08mount\uff09\u6587\u4ef6\u7cfb\u7edf * * @param conn_info \u53ef\u5ffd\u7565\uff0c\u4e00\u4e9b\u5efa\u7acb\u8fde\u63a5\u76f8\u5173\u7684\u4fe1\u606f * @return void* */ void * newfs_init ( struct fuse_conn_info * conn_info ) { /* TODO: \u5728\u8fd9\u91cc\u8fdb\u884c\u6302\u8f7d */ /* \u4e0b\u9762\u662f\u4e00\u4e2a\u63a7\u5236\u8bbe\u5907\u7684\u793a\u4f8b */ super . fd = ddriver_open ( newfs_options . device ); return NULL ; } \u4e0a\u9762\u7684\u793a\u4f8b\u662f\u521d\u59cb\u5316\u9a71\u52a8\u8bbe\u5907\uff0c\u5176\u4e2d newfs_options \u4e3a\u81ea\u5b9a\u4e49\u53c2\u6570\uff0c\u8fd9\u91cc\u6211\u4eec\u4e0d\u5bf9 \u81ea\u5b9a\u4e49\u53c2\u6570 \u505a\u66f4\u591a\u7684\u4ecb\u7ecd\uff0c\u5927\u5bb6\u4f1a\u7528\u5373\u53ef\u3002 \u6211\u4eec\u901a\u8fc7\u4ee5\u4e0b\u64cd\u4f5c\u6765\u5b9e\u73b0sfs\u6587\u4ef6\u7cfb\u7edf\u7684\u6302\u8f7d\u529f\u80fd\uff08sfs_mount\u51fd\u6570\uff09\uff1a Step 1 . \u9996\u5148\u5b9a\u4e49\u5185\u5b58\u4e2d\u7684\u6570\u636e\u7ed3\u6784\u3002 /*\u5b9a\u4e49\u78c1\u76d8\u5404\u90e8\u5206\u7ed3\u6784*/ int ret = SFS_ERROR_NONE ; int driver_fd ; struct sfs_super_d sfs_super_d ; struct sfs_dentry * root_dentry ; struct sfs_inode * root_inode ; int inode_num ; int map_inode_blks ; int super_blks ; boolean is_init = FALSE ; sfs_super . is_mounted = FALSE ; Step 2 . \u6253\u5f00\u9a71\u52a8\u3002 driver_fd = ddriver_open ( options . device ); /*\u6253\u5f00\u9a71\u52a8*/ if ( driver_fd < 0 ) { return driver_fd ; } Step 3 . \u5411\u5185\u5b58\u8d85\u7ea7\u5757\u4e2d\u6807\u8bb0\u9a71\u52a8\u5e76\u5199\u5165\u78c1\u76d8\u5927\u5c0f\u548c\u5355\u6b21IO\u5927\u5c0f\u3002 sfs_super . driver_fd = driver_fd ; ddriver_ioctl ( SFS_DRIVER (), IOC_REQ_DEVICE_SIZE , & sfs_super . sz_disk ); ddriver_ioctl ( SFS_DRIVER (), IOC_REQ_DEVICE_IO_SZ , & sfs_super . sz_io ); Step 4 . \u521b\u5efa\u6839\u76ee\u5f55\u9879\u5e76\u8bfb\u53d6\u78c1\u76d8\u8d85\u7ea7\u5757\u5230\u5185\u5b58\u3002 root_dentry = new_dentry ( \"/\" , SFS_DIR ); if ( sfs_driver_read ( SFS_SUPER_OFS , ( uint8_t * )( & sfs_super_d ), sizeof ( struct sfs_super_d )) != SFS_ERROR_NONE ) { return - SFS_ERROR_IO ; } Step 5 . \u6839\u636e\u8d85\u7ea7\u5757\u5e7b\u6570\u5224\u65ad\u662f\u5426\u4e3a\u7b2c\u4e00\u6b21\u542f\u52a8\u78c1\u76d8\uff0c\u5982\u679c\u662f\u7b2c\u4e00\u6b21\u542f\u52a8\u78c1\u76d8\uff0c\u5219\u9700\u8981\u5efa\u7acb\u78c1\u76d8\u8d85\u7ea7\u5757\u7684\u5e03\u5c40\u3002 if ( sfs_super_d . magic_num != SFS_MAGIC_NUM ) { /* \u5e7b\u6570\u65e0 */ /* \u4f30\u7b97\u5404\u90e8\u5206\u5927\u5c0f */ super_blks = SFS_ROUND_UP ( sizeof ( struct sfs_super_d ), SFS_IO_SZ ()) / SFS_IO_SZ (); inode_num = SFS_DISK_SZ () / (( SFS_DATA_PER_FILE + SFS_INODE_PER_FILE ) * SFS_IO_SZ ()); map_inode_blks = SFS_ROUND_UP ( SFS_ROUND_UP ( inode_num , UINT32_BITS ), SFS_IO_SZ ()) / SFS_IO_SZ (); /* \u5e03\u5c40layout */ sfs_super . max_ino = ( inode_num - super_blks - map_inode_blks ); sfs_super_d . map_inode_offset = SFS_SUPER_OFS + SFS_BLKS_SZ ( super_blks ); sfs_super_d . data_offset = sfs_super_d . map_inode_offset + SFS_BLKS_SZ ( map_inode_blks ); sfs_super_d . map_inode_blks = map_inode_blks ; sfs_super_d . sz_usage = 0 ; SFS_DBG ( \"inode map blocks: %d \\n \" , map_inode_blks ); is_init = TRUE ; } Step 6 . \u521d\u59cb\u5316\u5185\u5b58\u4e2d\u7684\u8d85\u7ea7\u5757\uff0c\u548c\u6839\u76ee\u5f55\u9879\u3002 sfs_super . sz_usage = sfs_super_d . sz_usage ; /* \u5efa\u7acb in-memory \u7ed3\u6784 */ sfs_super . map_inode = ( uint8_t * ) malloc ( SFS_BLKS_SZ ( sfs_super_d . map_inode_blks )); sfs_super . map_inode_blks = sfs_super_d . map_inode_blks ; sfs_super . map_inode_offset = sfs_super_d . map_inode_offset ; sfs_super . data_offset = sfs_super_d . data_offset ; if ( sfs_driver_read ( sfs_super_d . map_inode_offset , ( uint8_t * )( sfs_super . map_inode ), SFS_BLKS_SZ ( sfs_super_d . map_inode_blks )) != SFS_ERROR_NONE ) { return - SFS_ERROR_IO ; } if ( is_init ) { /* \u5206\u914d\u6839\u8282\u70b9 */ root_inode = sfs_alloc_inode ( root_dentry ); sfs_sync_inode ( root_inode ); } root_inode = sfs_read_inode ( root_dentry , SFS_ROOT_INO ); root_dentry -> inode = root_inode ; sfs_super . root_dentry = root_dentry ; sfs_super . is_mounted = TRUE ; sfs_dump_map (); \u5176\u4e2d\uff0c\u5728Step 4\u4e2d\u7528\u5230\u7684 new_dentry \u51fd\u6570\uff0c\u5176\u4f5c\u7528\u662f\u521b\u5efa\u76ee\u5f55\u9879\uff0c\u539f\u578b\u5982\u4e0b\uff1a static inline struct sfs_dentry * new_dentry ( char * fname , SFS_FILE_TYPE ftype ) { struct sfs_dentry * dentry = ( struct sfs_dentry * ) malloc ( sizeof ( struct sfs_dentry )); memset ( dentry , 0 , sizeof ( struct sfs_dentry )); SFS_ASSIGN_FNAME ( dentry , fname ); dentry -> ftype = ftype ; dentry -> ino = -1 ; dentry -> inode = NULL ; dentry -> parent = NULL ; dentry -> brother = NULL ; } \u5728Step 6\u4e2d\u7684 sfs_alloc_inode \uff0c\u5176\u4f5c\u7528\u662f\u4e3a\u76ee\u5f55\u9879\u521b\u5efainode\u8282\u70b9\uff0c\u5177\u4f53\u6b65\u9aa4\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u6b65\uff1a \u200b \u2460\u5728inode\u4f4d\u56fe\u4e0a\u5bfb\u627e\u672a\u4f7f\u7528\u7684inode\u8282\u70b9\u3002 for ( byte_cursor = 0 ; byte_cursor < SFS_BLKS_SZ ( sfs_super . map_inode_blks ); byte_cursor ++ ) /*\u5728inode\u4f4d\u56fe\u4e0a\u5bfb\u627e\u672a\u4f7f\u7528\u7684inode*/ { for ( bit_cursor = 0 ; bit_cursor < UINT8_BITS ; bit_cursor ++ ) { if (( sfs_super . map_inode [ byte_cursor ] & ( 0x1 << bit_cursor )) == 0 ) { /* \u5f53\u524dino_cursor\u4f4d\u7f6e\u7a7a\u95f2 */ sfs_super . map_inode [ byte_cursor ] |= ( 0x1 << bit_cursor ); is_find_free_entry = TRUE ; break ; } ino_cursor ++ ; } if ( is_find_free_entry ) { break ; } } \u200b \u2461\u4e3a\u76ee\u5f55\u9879\u5206\u914dinode\u8282\u70b9\u5e76\u5efa\u7acb\u4ed6\u4eec\u4e4b\u95f4\u7684\u8fde\u63a5\u3002 if ( ! is_find_free_entry || ino_cursor == sfs_super . max_ino ) return - SFS_ERROR_NOSPACE ; inode = ( struct sfs_inode * ) malloc ( sizeof ( struct sfs_inode )); inode -> ino = ino_cursor ; inode -> size = 0 ; /* dentry\u6307\u5411inode */ dentry -> inode = inode ; dentry -> ino = inode -> ino ; /* inode\u6307\u56dedentry */ inode -> dentry = dentry ; inode -> dir_cnt = 0 ; inode -> dentrys = NULL ; if ( SFS_IS_REG ( inode )) { inode -> data = ( uint8_t * ) malloc ( SFS_BLKS_SZ ( SFS_DATA_PER_FILE )); } \u800c\u5728Step 6\u4e2d\u7684sfs_read_inode\u51fd\u6570\u4f5c\u7528\u662f\u4ece\u78c1\u76d8\u4e2d\u8bfb\u53d6inode\u8282\u70b9\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a \u200b \u2460\u901a\u8fc7\u78c1\u76d8\u9a71\u52a8\u6765\u5c06\u78c1\u76d8\u4e2dino\u53f7\u7684inode\u8bfb\u5165\u5185\u5b58\u3002 if ( sfs_driver_read ( SFS_INO_OFS ( ino ), ( uint8_t * ) & inode_d , sizeof ( struct sfs_inode_d )) != SFS_ERROR_NONE ) { SFS_DBG ( \"[%s] io error \\n \" , __func__ ); return NULL ; } inode -> dir_cnt = 0 ; inode -> ino = inode_d . ino ; inode -> size = inode_d . size ; inode -> dentry = dentry ; \u200b \u2461 \u5224\u65adinode\u7684\u6587\u4ef6\u7c7b\u578b\uff0c\u5982\u679c\u662f\u76ee\u5f55\u7c7b\u578b\u5219\u9700\u8981\u8bfb\u53d6\u6bcf\u4e00\u4e2a\u76ee\u5f55\u9879\u5e76\u5efa\u7acb\u8fde\u63a5\u3002 /*\u5224\u65adiNode\u8282\u70b9\u7684\u6587\u4ef6\u7c7b\u578b*/ if ( SFS_IS_DIR ( inode )) { /*\u5982\u679c\u662f\u76ee\u5f55\u7684\u8bdd\u9700\u8981\u5c06\u76ee\u5f55\u9879\u5efa\u7acb\u8fde\u63a5*/ dir_cnt = inode_d . dir_cnt ; for ( i = 0 ; i < dir_cnt ; i ++ ) { if ( sfs_driver_read ( SFS_DATA_OFS ( ino ) + i * sizeof ( struct sfs_dentry_d ), ( uint8_t * ) & dentry_d , sizeof ( struct sfs_dentry_d )) != SFS_ERROR_NONE ) { SFS_DBG ( \"[%s] io error \\n \" , __func__ ); return NULL ; } sub_dentry = new_dentry ( dentry_d . fname , dentry_d . ftype ); sub_dentry -> parent = inode -> dentry ; sub_dentry -> ino = dentry_d . ino ; sfs_alloc_dentry ( inode , sub_dentry ); } } \u200b \u2462\u5982\u679c\u662f\u6587\u4ef6\u7c7b\u578b\u76f4\u63a5\u8bfb\u53d6\u6570\u636e\u5373\u53ef\u3002 else if ( SFS_IS_REG ( inode )) { /*\u6587\u4ef6\u7c7b\u578b\u76f4\u63a5\u8bfb\u53d6\u6570\u636e\u5373\u53ef*/ inode -> data = ( uint8_t * ) malloc ( SFS_BLKS_SZ ( SFS_DATA_PER_FILE )); if ( sfs_driver_read ( SFS_DATA_OFS ( ino ), ( uint8_t * ) inode -> data , SFS_BLKS_SZ ( SFS_DATA_PER_FILE )) != SFS_ERROR_NONE ) { SFS_DBG ( \"[%s] io error \\n \" , __func__ ); return NULL ; } }","title":"2.1 \u5b9e\u73b0mount"},{"location":"lab5/part3-3/#22-mkdirtouch","text":"","title":"2.2 \u5b9e\u73b0mkdir+touch"},{"location":"lab5/part3-3/#221","text":"FUSE\u6587\u4ef6\u7cfb\u7edf\u4e3a\u4e86\u83b7\u5f97\u6bcf\u4e2a\u6587\u4ef6\u7684\u72b6\u6001 \uff0c\u8981\u4e0d\u65ad\u8c03\u7528 getattr \u94a9\u5b50\uff0c\u8fd9\u4e2a\u94a9\u5b50\u51fd\u6570\u7c7b\u4f3c\u4e8e xv6 \u91cc\u7684 fstat \u3002\u5b9e\u73b0 ls \u3001 mkdir \u3001 touch \u7b49\u64cd\u4f5c\u7684\u524d\u63d0\u5c31\u662f\u5b8c\u6210 getattr \u94a9\u5b50\u7684\u7f16\u5199\uff0c\u8fd9\u91cc\u7ed9\u4e2a\u4f8b\u5b50\uff08\u8be6\u89c1sfs_getattr\u51fd\u6570\uff09\uff1a \u200b \u2460\u9996\u5148\u627e\u5230\u8def\u5f84\u6240\u5bf9\u5e94\u7684\u76ee\u5f55\u9879\u3002 struct sfs_dentry * dentry = sfs_lookup ( path , & is_find , & is_root ); if ( is_find == FALSE ) { return - SFS_ERROR_NOTFOUND ; } \u200b \u2461\u5224\u65ad\u76ee\u5f55\u9879\u7684\u6587\u4ef6\u7c7b\u578b\u5e76\u5bf9\u72b6\u6001\u8fdb\u884c\u7f16\u5199\u3002 if ( SFS_IS_DIR ( dentry -> inode )) { //\u5982\u679c\u662f\u76ee\u5f55\u7c7b\u578b sfs_stat -> st_mode = S_IFDIR | SFS_DEFAULT_PERM ; sfs_stat -> st_size = dentry -> inode -> dir_cnt * sizeof ( struct sfs_dentry_d ); } else if ( SFS_IS_REG ( dentry -> inode )) { //\u5982\u679c\u662f\u6587\u4ef6\u7c7b\u578b sfs_stat -> st_mode = S_IFREG | SFS_DEFAULT_PERM ; sfs_stat -> st_size = dentry -> inode -> size ; } sfs_stat -> st_nlink = 1 ; sfs_stat -> st_uid = getuid (); sfs_stat -> st_gid = getgid (); sfs_stat -> st_atime = time ( NULL ); sfs_stat -> st_mtime = time ( NULL ); sfs_stat -> st_blksize = SFS_IO_SZ (); if ( is_root ) { sfs_stat -> st_size = sfs_super . sz_usage ; sfs_stat -> st_blocks = SFS_DISK_SZ () / SFS_IO_SZ (); sfs_stat -> st_nlink = 2 ; /* !\u7279\u6b8a\uff0c\u6839\u76ee\u5f55link\u6570\u4e3a2 */ } return SFS_ERROR_NONE ; } getattr \u7684\u5b9e\u73b0\u9996\u5148\u662f \u89e3\u6790\u8def\u5f84 \uff0c\u4ece\u800c\u83b7\u53d6\u76f8\u5e94\u6587\u4ef6\u7684 inode\u6216dentry \uff0c\u63a5\u7740\u586b\u5199 struct stat* \u7ed3\u6784\u4f53\u5373\u53ef\u3002 \u5176\u4e2d sfs_lookup \u51fd\u6570\u5f88\u91cd\u8981\uff0c\u8bb8\u591a\u9700\u8981\u5b9e\u73b0\u7684\u94a9\u5b50\u90fd\u9700\u8981\u7528\u5230\u5b83\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u627e\u5230\u8def\u5f84\u6240\u5bf9\u5e94\u7684\u76ee\u5f55\u9879\uff0c\u6216\u8005\u8fd4\u56de\u4e0a\u4e00\u7ea7\u76ee\u5f55\u9879\uff0c\u539f\u578b\u5982\u4e0b\uff08\u8be6\u89c1sfs_lookup\u51fd\u6570\uff09\uff1a \u200b \u2460\u9996\u5148\u8ba1\u7b97\u8def\u5f84\u7684\u7ea7\u6570\uff0c\u5982\u679c\u4e3a0\u8bf4\u660e\u662f\u6839\u76ee\u5f55\u3002 int total_lvl = sfs_calc_lvl ( path ); /*\u8ba1\u7b97\u8def\u5f84\u7ea7\u6570*/ ... if ( total_lvl == 0 ) { /* \u6839\u76ee\u5f55 */ * is_find = TRUE ; * is_root = TRUE ; dentry_ret = sfs_super . root_dentry ; } \u200b \u2461\u4e0d\u4e3a0\u5219\u9700\u8981\u4ece\u6839\u76ee\u5f55\u5f00\u59cb\uff0c\u4f9d\u6b21\u5339\u914d\u8def\u5f84\u4e2d\u7684\u76ee\u5f55\u9879\uff0c\u76f4\u5230\u627e\u5230\u6587\u4ef6\u6240\u5bf9\u5e94\u7684\u76ee\u5f55\u9879\u3002 \u200b \u2462\u5982\u679c\u6ca1\u627e\u5230\u5219\u8fd4\u56de\u6700\u540e\u4e00\u6b21\u5339\u914d\u7684\u76ee\u5f55\u9879\u3002 fname = strtok ( path_cpy , \"/\" ); /*\u5206\u6790\u8def\u5f84\u51fd\u6570\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u5b83\u7684\u7528\u6cd5*/ while ( fname ) { lvl ++ ; if ( dentry_cursor -> inode == NULL ) { /* Cache\u673a\u5236 */ sfs_read_inode ( dentry_cursor , dentry_cursor -> ino ); } inode = dentry_cursor -> inode ; if ( SFS_IS_REG ( inode ) && lvl < total_lvl ) { SFS_DBG ( \"[%s] not a dir \\n \" , __func__ ); dentry_ret = inode -> dentry ; break ; } if ( SFS_IS_DIR ( inode )) { /*\u76ee\u5f55\u7c7b\u578b\u7684\u6587\u4ef6\u9700\u8981\u5c06\u76ee\u5f55\u9879\u548c\u8def\u5f84\u540d\u8fdb\u884c\u6bd4\u8f83*/ dentry_cursor = inode -> dentrys ; is_hit = FALSE ; while ( dentry_cursor ) { if ( memcmp ( dentry_cursor -> fname , fname , strlen ( fname )) == 0 ) { is_hit = TRUE ; break ; } dentry_cursor = dentry_cursor -> brother ; } if ( ! is_hit ) { * is_find = FALSE ; SFS_DBG ( \"[%s] not found %s \\n \" , __func__ , fname ); dentry_ret = inode -> dentry ; break ; } if ( is_hit && lvl == total_lvl ) { * is_find = TRUE ; dentry_ret = dentry_cursor ; break ; } } fname = strtok ( NULL , \"/\" ); } if ( dentry_ret -> inode == NULL ) { dentry_ret -> inode = sfs_read_inode ( dentry_ret , dentry_ret -> ino ); } return dentry_ret ;","title":"2.2.1 \u83b7\u53d6\u6587\u4ef6\u5c5e\u6027"},{"location":"lab5/part3-3/#222","text":"\u5f53\u4e3aFUSE\u6587\u4ef6\u7cfb\u7edf\u521b\u5efa\u76ee\u5f55\u65f6\uff0c\u4f1a \u6267\u884c\u7684\u94a9\u5b50 \u662f .mkdir \uff08\u8be6\u89c1sfs_mkdir\u51fd\u6570\uff09\uff1a \u200b \u2460\u5bfb\u627e\u4e0a\u7ea7\u76ee\u5f55\u9879\u3002 \u200b \u2461\u521b\u5efa\u76ee\u5f55\u5e76\u5efa\u7acb\u8fde\u63a5\u3002 /** * @brief \u521b\u5efa\u76ee\u5f55 * * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84 * @param mode \u521b\u5efa\u6a21\u5f0f\uff08\u53ea\u8bfb\uff1f\u53ea\u5199\uff1f\uff09\uff0c\u53ef\u5ffd\u7565 * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int sfs_mkdir ( const char * path , mode_t mode ) { ( void ) mode ; boolean is_find , is_root ; char * fname ; struct sfs_dentry * last_dentry = sfs_lookup ( path , & is_find , & is_root ); //\u5bfb\u627e\u4e0a\u7ea7\u76ee\u5f55\u9879 struct sfs_dentry * dentry ; struct sfs_inode * inode ; if ( is_find ) { //\u76ee\u5f55\u5b58\u5728 return - SFS_ERROR_EXISTS ; } if ( SFS_IS_REG ( last_dentry -> inode )) { return - SFS_ERROR_UNSUPPORTED ; } fname = sfs_get_fname ( path ); dentry = new_dentry ( fname , SFS_DIR ); dentry -> parent = last_dentry ; inode = sfs_alloc_inode ( dentry ); sfs_alloc_dentry ( last_dentry -> inode , dentry ); return SFS_ERROR_NONE ; }","title":"2.2.2 \u5efa\u7acb\u76ee\u5f55"},{"location":"lab5/part3-3/#23-mknodls","text":"","title":"2.3 \u5b9e\u73b0mknod+ls"},{"location":"lab5/part3-3/#231","text":"\u5f53\u4e3aFUSE\u6587\u4ef6\u7cfb\u7edf\u521b\u5efa\u6587\u4ef6\u65f6\uff0c\u4f1a \u6267\u884c\u7684\u94a9\u5b50 \u662f .mknod \uff0c\u5728\u6211\u4eec\u7ed9\u7684\u6846\u67b6\u4e2d\uff0c\u7ed9\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u601d\u8def\uff1a /** * @brief \u521b\u5efa\u6587\u4ef6 * * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84 * @param mode \u521b\u5efa\u6587\u4ef6\u7684\u6a21\u5f0f\uff0c\u53ef\u5ffd\u7565 * @param dev \u8bbe\u5907\u7c7b\u578b\uff0c\u53ef\u5ffd\u7565 * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int newfs_mknod ( const char * path , mode_t mode , dev_t dev ) { /* TODO: \u89e3\u6790\u8def\u5f84\uff0c\u5e76\u521b\u5efa\u76f8\u5e94\u7684\u6587\u4ef6 */ return 0 ; } \u800c\u5728sfs\u6587\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u94a9\u5b50\u7684\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\uff1a \u200b \u2460\u627e\u5230\u521b\u5efa\u6587\u4ef6\u8def\u5f84\u4e2d\u6240\u5bf9\u5e94\u7684\u76ee\u5f55\u9879\u3002 \u200b \u2461\u5982\u679c\u6587\u4ef6\u5b58\u5728\u5219\u8fd4\u56de\u9519\u8bef\u3002 \u200b \u2462\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u5728\u521b\u5efa\u76ee\u5f55\u9879\u548c\u5bf9\u5e94\u7684inode\uff0c\u5e76\u548c\u7236\u76ee\u5f55\u9879\u5efa\u7acb\u8fde\u63a5\u3002 /** * @brief \u521b\u5efa\u6587\u4ef6 * * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84 * @param mode \u521b\u5efa\u6587\u4ef6\u7684\u6a21\u5f0f\uff0c\u53ef\u5ffd\u7565 * @param dev \u8bbe\u5907\u7c7b\u578b\uff0c\u53ef\u5ffd\u7565 * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int sfs_mknod ( const char * path , mode_t mode , dev_t dev ) { boolean is_find , is_root ; struct sfs_dentry * last_dentry = sfs_lookup ( path , & is_find , & is_root ); //\u627e\u5230\u521b\u5efa\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55 struct sfs_dentry * dentry ; struct sfs_inode * inode ; char * fname ; if ( is_find == TRUE ) { //\u6587\u4ef6\u5b58\u5728 return - SFS_ERROR_EXISTS ; } fname = sfs_get_fname ( path ); //\u83b7\u53d6\u6587\u4ef6\u540d\u5b57 if ( S_ISREG ( mode )) { dentry = new_dentry ( fname , SFS_REG_FILE ); } else if ( S_ISDIR ( mode )) { dentry = new_dentry ( fname , SFS_DIR ); } dentry -> parent = last_dentry ; inode = sfs_alloc_inode ( dentry ); sfs_alloc_dentry ( last_dentry -> inode , dentry ); return SFS_ERROR_NONE ; } \u4f46\u4ec5\u4ec5\u5b9e\u73b0\u8fd9\u4e2a\u51fd\u6570 touch \u4e00\u4e2a\u6587\u4ef6\u4ecd\u7136\u4f1a\u62a5\u9519\uff0c\u8fd9\u662f\u56e0\u4e3a touch \u8981\u6c42\u4e0d\u4ec5\u4ec5\u662f\u521b\u5efa\u6587\u4ef6\uff0c\u8fd8\u8981\u6c42\u53ef\u4ee5 \u4fee\u6539\u6587\u4ef6\u7684\u8bbf\u95ee\u65f6\u95f4 \uff08\u96be\u602a\u53eb touch \uff0c\u6478\u4e00\u4e0b\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u8fd8\u8981\u5b9e\u73b0 utimens \u94a9\u5b50\uff0c\u8fd9\u4e2a\u94a9\u5b50\u7528\u4e8e\u4fee\u6539\u6587\u4ef6\u7684\u8bbf\u95ee\u65f6\u95f4\uff08\u5176\u5b9e\u53ea\u9700\u8981\u8fd4\u56de0\u5c31\u597d\uff09\u3002\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5b8c\u5584\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u5b8c\u5584\u3002 /** * @brief \u4fee\u6539\u65f6\u95f4\uff0c\u4e3a\u4e86\u4e0d\u8ba9touch\u62a5\u9519 * * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84 * @param tv \u5b9e\u8df5 * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int newfs_utimens ( const char * path , const struct timespec tv [ 2 ]) { ( void ) path ; return 0 ; }","title":"2.3.1 \u5efa\u7acb\u6587\u4ef6"},{"location":"lab5/part3-3/#232","text":"\u5f53 \u5728FUSE\u6587\u4ef6\u7cfb\u7edf \u4e0b\u8c03\u7528 ls \u65f6\uff0c\u5c31\u4f1a\u89e6\u53d1 readdir \u94a9\u5b50\uff0c readdir \u5728 ls \u7684\u8fc7\u7a0b\u4e2d\u6bcf\u6b21 \u4ec5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u76ee\u5f55\u9879 \uff0c\u5176\u4e2d offset \u53c2\u6570\u8bb0\u5f55\u7740\u5f53\u524d\u5e94\u8be5\u8fd4\u56de\u7684\u76ee\u5f55\u9879\uff1a /** * @brief * * @param path * @param buf * @param filler \u53c2\u6570\u8bb2\u89e3: * * typedef int (*fuse_fill_dir_t) (void *buf, const char *name, * const struct stat *stbuf, off_t off) * buf: name\u4f1a\u88ab\u590d\u5236\u5230buf\u4e2d * name: dentry\u540d\u5b57 * stbuf: \u6587\u4ef6\u72b6\u6001\uff0c\u53ef\u5ffd\u7565 * off: \u4e0b\u4e00\u6b21offset\u4ece\u54ea\u91cc\u5f00\u59cb\uff0c\u8fd9\u91cc\u53ef\u4ee5\u7406\u89e3\u4e3a\u7b2c\u51e0\u4e2adentry * * @param offset * @param fi * @return int */ int sfs_readdir ( const char * path , void * buf , fuse_fill_dir_t filler , off_t offset , struct fuse_file_info * fi ) { boolean is_find , is_root ; int cur_dir = offset ; struct sfs_dentry * dentry = sfs_lookup ( path , & is_find , & is_root ); struct sfs_dentry * sub_dentry ; struct sfs_inode * inode ; if ( is_find ) { inode = dentry -> inode ; sub_dentry = sfs_get_dentry ( inode , cur_dir ); if ( sub_dentry ) { filler ( buf , sub_dentry -> fname , NULL , ++ offset ); } return SFS_ERROR_NONE ; } return - SFS_ERROR_NOTFOUND ; } \u5176\u4e2d\u6700\u91cd\u8981\u7684 filler \u51fd\u6570\uff0c filler \u51fd\u6570\u539f\u578b\u5982\u4e0b\uff1a typedef int (*fuse_fill_dir_t) (void *buf, const char *name, const struct stat *stbuf, off_t off) \u5bf9\u5404\u4e2a\u53c2\u6570\u505a\u5982\u4e0b\u89e3\u91ca\uff1a buf \uff1aname\u4f1a\u88ab\u590d\u5236\u5230buf\u4e2d\uff1b name \uff1adentry \u540d\u5b57\uff1b stbuf \uff1a\u6587\u4ef6\u72b6\u6001\uff0c\u53ef\u5ffd\u7565\uff1b off \uff1a \u4e0b\u4e00\u6b21offset\u4ece\u54ea\u91cc\u5f00\u59cb\uff0c\u8fd9\u91cc\u53ef\u4ee5\u7406\u89e3\u4e3a\u7b2c\u51e0\u4e2adentry\uff1b \u56e0\u6b64\uff0c\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u8c03\u7528 filler(buf, fname, NULL, ++offset) \u8868\u793a\u5c06 fname \u653e\u5165 buf \u4e2d\uff0c\u5e76\u4f7f\u76ee\u5f55\u9879\u504f\u79fb\u52a0\u4e00\uff0c\u4ee3\u8868\u4e0b\u4e00\u6b21\u8bbf\u95ee\u4e0b\u4e00\u4e2a\u76ee\u5f55\u9879\u3002","title":"2.3.2 \u8bfb\u53d6\u76ee\u5f55\u9879"},{"location":"lab5/part3-3/#_1","text":"","title":"\u8865\u5145\u601d\u8003 \uff1a\u7b26\u53f7\u94fe\u63a5\u7684\u5b9e\u73b0"},{"location":"lab5/part3-3/#_2","text":"\u7b26\u53f7\u94fe\u63a5\uff08Symbolic Link\uff09\uff0c\u53c8\u79f0\u8f6f\u94fe\u63a5\uff08Soft Link\uff09\uff0c\u5b83\u5305\u542b\u4e86\u5230\u539f\u6587\u4ef6\u7684\u8def\u5f84\u4fe1\u606f\uff0c\u62e5\u6709\u81ea\u5df1\u7684\u7d22\u5f15\u8282\u70b9\uff08inode\uff09\u53ca\u6587\u4ef6\u5c5e\u6027\u53ca\u6743\u9650\u3002 \u786c\u94fe\u63a5\uff08Hard Link\uff09\uff0c\u662f\u5bf9\u539f\u6587\u4ef6\u8d77\u4e86\u4e00\u4e2a\u522b\u540d\u3002\u6587\u4ef6\u6709\u76f8\u540c\u7684 inode \u53ca data block\u3002 \u8be6\u7ec6\u533a\u522b\u8bf7\u81ea\u884c\u67e5\u9605\u8d44\u6599","title":"\u80cc\u666f"},{"location":"lab5/part3-3/#_3","text":"\u7531\u7b26\u53f7\u94fe\u63a5\u7684\u539f\u7406\u53ef\u5f97\uff0c\u5efa\u7acb\u7b26\u53f7\u94fe\u63a5\u7684\u5173\u952e\u662f\u5b58\u50a8\u94fe\u63a5\u76ee\u6807\u6587\u4ef6\u7684\u8def\u5f84\u4fe1\u606f\u3002 \u7531\u6b64\u5f15\u51fa\u7b26\u53f7\u94fe\u63a5\u7684\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff1a \u5c06\u8def\u5f84\u4fe1\u606f\u5b58\u50a8\u5728inode\u8282\u70b9\u4e2d \u5c06\u8def\u5f84\u4fe1\u606f\u5b58\u50a8\u5728data block\u4e2d \u6837\u4f8bSimpleFS\u4e2d\u7684\u5b9e\u73b0\uff0c\u5c06\u8def\u5f84\u4fe1\u606f\u5b58\u50a8\u4e8einode\u8282\u70b9\u4e2d\uff0c\u5bf9\u4e8e\u5b58\u50a8\u5728data block\u4e2d\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u53ef\u4ee5\u81ea\u884c\u81ea\u8003\u5e76\u5b9e\u73b0\u3002","title":"\u7b26\u53f7\u94fe\u63a5\u7684\u5b9e\u73b0\u65b9\u5f0f"},{"location":"lab5/part3-3/#_4","text":"\u7531\u4e8e\u6837\u4f8b\u662f\u5c06\u7b26\u53f7\u94fe\u63a5\u7684\u8def\u5f84\u4fe1\u606f\u5b58\u50a8\u4e8einode\u8282\u70b9\u4e2d\uff0c\u6545\u9700\u8981\u9996\u5148\u4fee\u6539 struct inode \u548c struct inode_d # \u6dfb\u52a0target_path\u7528\u4e8e\u5b58\u50a8\u8def\u5f84\u4fe1\u606f char target_path [ SFS_MAX_FILE_NAME ]; \u5e76\u7531\u6b64\u9700\u8981\u589e\u52a0 sfs_utils.c \u4e2d\uff0c sfs_sync_inode() \u53ca sfs_read_inode() \uff0c\u5bf9\u5185\u5b58inode\u53ca\u78c1\u76d8inode\u95f4\u62f7\u8d1d\u64cd\u4f5c\u65f6\u7684\u8865\u5145\u62f7\u8d1d\u3002\u540c\u65f6\uff0c\u5728\u6587\u4ef6\u7c7b\u578b enum sfs_file_type \u4e2d\u589e\u52a0 SFS_SYM_LINK \u3002 FUSE\u6587\u4ef6\u7cfb\u7edf\u4e3a\u652f\u6301\u7b26\u53f7\u94fe\u63a5\uff0c\u9700\u8981\u5b9e\u73b0 symlink \u94a9\u5b50.\u9996\u5148\uff0c\u7531\u4e8e\u7b26\u53f7\u94fe\u63a5\u672c\u8d28\u662f\u4e00\u4e2a\u7279\u6b8a\u7c7b\u578b\u7684\u6587\u4ef6\uff0c\u9700\u8981\u8c03\u7528 mknod() \u521b\u5efa\u65b0\u7684\u8282\u70b9\uff0c\u5c06\u6b64dentry / inode\u8282\u70b9\u6807\u8bb0\u4f4d\u7b26\u53f7\u94fe\u63a5\u578b\u8282\u70b9\uff0c\u5e76\u5c06\u94fe\u63a5\u7684\u8def\u5f84\u4fe1\u606f\u62f7\u8d1d\u81f3inode\u8282\u70b9\u4e2d\u3002 /** * @brief * * @param path - Where the link points * @param link - The link itself * @return int */ int sfs_symlink ( const char * path , const char * link ){ int ret = SFS_ERROR_NONE ; boolean is_find , is_root ; ret = sfs_mknod ( link , S_IFREG , NULL ); struct sfs_dentry * dentry = sfs_lookup ( link , & is_find , & is_root ); if ( is_find == FALSE ) { return - SFS_ERROR_NOTFOUND ; } dentry -> ftype = SFS_SYM_LINK ; struct sfs_inode * inode = dentry -> inode ; memcpy ( inode -> target_path , path , SFS_MAX_FILE_NAME ); return ret ; } FUSE\u6587\u4ef6\u7cfb\u7edf\u4e3a\u652f\u6301\u94fe\u63a5\uff0c\u9700\u8981\u5b9e\u73b0 readlink \u94a9\u5b50\u3002 readlink \u5373\u5c06path\u5bf9\u5e94\u7684\u7b26\u53f7\u94fe\u63a5\u578b\u6587\u4ef6\u6240\u6307\u5411\u7684\u94fe\u63a5\u8def\u5f84\u4fe1\u606f\u62f7\u8d1d\u81f3buf\u4e2d\uff0c\u4ee5\u5b9e\u73b0\u5bf9\u5bf9\u5e94\u94fe\u63a5\u6587\u4ef6\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c\u3002 /** * @brief * * @param path * @param buf * @param size * @return int */ int sfs_readlink ( const char * path , char * buf , size_t size ){ /* SFS \u6682\u672a\u5b9e\u73b0\u786c\u94fe\u63a5\uff0c\u53ea\u652f\u6301\u8f6f\u94fe\u63a5 */ boolean is_find , is_root ; ssize_t llen ; struct sfs_dentry * dentry = sfs_lookup ( path , & is_find , & is_root ); if ( is_find == FALSE ) { return - SFS_ERROR_NOTFOUND ; } if ( dentry -> ftype != SFS_SYM_LINK ){ return - SFS_ERROR_INVAL ; } struct sfs_inode * inode = dentry -> inode ; llen = strlen ( inode -> target_path ); if ( size < 0 ){ return - SFS_ERROR_INVAL ; } else { if ( llen > size ){ strncpy ( buf , inode -> target_path , size ); buf [ size ] = '\\0' ; } else { strncpy ( buf , inode -> target_path , llen ); buf [ llen ] = '\\0' ; } } return SFS_ERROR_NONE ; } \u4e3a\u4e86\u80fd\u6210\u529f\u8bfb\u53d6\u7b26\u53f7\u94fe\u63a5\u578b\u6587\u4ef6\u7684\u72b6\u6001\u548c\u6743\u9650\uff0c\u8fd8\u9700\u8981\u4fee\u6539 sfs_getattr() \u3002 # \u6dfb\u52a0\u5982\u4e0b\u5206\u652f\u5224\u65ad else if ( SFS_IS_SYM_LINK ( dentry -> inode )) { sfs_stat -> st_mode = S_IFLNK | SFS_DEFAULT_PERM ; sfs_stat -> st_size = dentry -> inode -> size ; }","title":"\u7b26\u53f7\u94fe\u63a5\u7684\u5b9e\u73b0\u7ec6\u8282"},{"location":"lab5/part3-3/#24-unmount","text":"\u5f53\u5378\u8f7dFUSE\u6587\u4ef6\u7cfb\u7edf\u65f6\uff0c\u4f1a \u6267\u884c\u7684\u94a9\u5b50 \u662f .destroy \uff0c\u6211\u4eec\u53ef\u4ee5\u5728 .destroy \u94a9\u5b50\u4e2d\u5b8c\u6210 \u8d85\u7ea7\u5757\u56de\u5199\u8bbe\u5907 \u3001 \u9a71\u52a8\u7684\u5173\u95ed \u3001 \u66f4\u591a\u5fc5\u8981\u7ed3\u6784\u7684\u56de\u5199 \u7b49\u64cd\u4f5c\uff0c\u4ee5\u4fdd\u8bc1\u4e0b\u4e00\u6b21\u6302\u8f7d\u80fd\u591f \u6062\u590dddriver\u8bbe\u5907\u4e2d\u7684\u6570\u636e \uff1a /** * @brief \u5378\u8f7d\uff08umount\uff09\u6587\u4ef6\u7cfb\u7edf * * @param p \u53ef\u5ffd\u7565 * @return void */ void newfs_destroy ( void * p ) { /* TODO: \u5728\u8fd9\u91cc\u8fdb\u884c\u5378\u8f7d */ ddriver_close ( super . fd ); return ; } \u4e0a\u9762\u7684\u793a\u4f8b\u662f\u5173\u95ed\u9a71\u52a8\u8bbe\u5907\u3002 \u4e0b\u9762\u6211\u4eec\u6765\u770b\u770bsfs\u6587\u4ef6\u7cfb\u7edf\u4e2d\u5bf9\u4e8e\u5378\u8f7d\u7684\u5177\u4f53\u5b9e\u73b0\u6b65\u9aa4\uff08\u8be6\u89c1sfs_umount\u51fd\u6570\uff09\uff1a \u200b \u2460\u4ece\u6839\u8282\u70b9\u9012\u5f52\u5f80\u4e0b\u5237\u5199\u6839\u8282\u70b9\u3002 sfs_sync_inode ( sfs_super . root_dentry -> inode ); /* \u4ece\u6839\u8282\u70b9\u5411\u4e0b\u5237\u5199\u8282\u70b9 */ \u200b \u2461\u5c06\u5185\u5b58\u8d85\u7ea7\u5757\u8f6c\u6362\u4e3a\u78c1\u76d8\u8d85\u7ea7\u5757\u5e76\u5199\u5165\u78c1\u76d8\u3002 sfs_super_d . magic_num = SFS_MAGIC_NUM ; sfs_super_d . map_inode_blks = sfs_super . map_inode_blks ; sfs_super_d . map_inode_offset = sfs_super . map_inode_offset ; sfs_super_d . data_offset = sfs_super . data_offset ; sfs_super_d . sz_usage = sfs_super . sz_usage ; if ( sfs_driver_write ( SFS_SUPER_OFS , ( uint8_t * ) & sfs_super_d , sizeof ( struct sfs_super_d )) != SFS_ERROR_NONE ) { return - SFS_ERROR_IO ; } \u200b \u2462\u5c06inode\u4f4d\u56fe\u5199\u5165\u78c1\u76d8\u3002 if ( sfs_driver_write ( sfs_super_d . map_inode_offset , ( uint8_t * )( sfs_super . map_inode ), SFS_BLKS_SZ ( sfs_super_d . map_inode_blks )) != SFS_ERROR_NONE ) { return - SFS_ERROR_IO ; } free ( sfs_super . map_inode ); \u200b \u2463\u5173\u95ed\u9a71\u52a8\u3002 ddriver_close ( SFS_DRIVER ()); \u5176\u4e2d\u6700\u91cd\u8981\u7684\u51fd\u6570\u662f sfs_sync_inode \uff0c\u5176\u4f5c\u7528\u662f\u5c06\u5185\u5b58inode\u53ca\u5176\u4e0b\u65b9\u7ed3\u6784\u5168\u90e8\u5237\u56de\u78c1\u76d8\uff0c\u64cd\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a \u200b \u2460\u9996\u5148\u5c06inode\u5199\u5165\u78c1\u76d8\u3002 if ( sfs_driver_write ( SFS_INO_OFS ( ino ), ( uint8_t * ) & inode_d , sizeof ( struct sfs_inode_d )) != SFS_ERROR_NONE ) { SFS_DBG ( \"[%s] io error \\n \" , __func__ ); return - SFS_ERROR_IO ; } \u200b \u2461\u5224\u65adinode\u6587\u4ef6\u7c7b\u578b\u3002 \u200b \u2462\u5982\u679c\u662f\u76ee\u5f55\u7c7b\u578b\u5219\u9700\u8981\u9996\u5148\u5c06\u76ee\u5f55\u9879\u5199\u5165\u78c1\u76d8\uff0c\u518d\u9012\u5f52\u5237\u5199\u6bcf\u4e00\u4e2a\u76ee\u5f55\u9879\u6240\u5bf9\u5e94\u7684inode\u8282\u70b9\u3002 /* Cycle 1: \u5199 INODE */ /* Cycle 2: \u5199 \u6570\u636e */ if ( SFS_IS_DIR ( inode )) { dentry_cursor = inode -> dentrys ; offset = SFS_DATA_OFS ( ino ); while ( dentry_cursor != NULL ) { memcpy ( dentry_d . fname , dentry_cursor -> fname , SFS_MAX_FILE_NAME ); dentry_d . ftype = dentry_cursor -> ftype ; dentry_d . ino = dentry_cursor -> ino ; if ( sfs_driver_write ( offset , ( uint8_t * ) & dentry_d , sizeof ( struct sfs_dentry_d )) != SFS_ERROR_NONE ) { SFS_DBG ( \"[%s] io error \\n \" , __func__ ); return - SFS_ERROR_IO ; } if ( dentry_cursor -> inode != NULL ) { /*\u9012\u5f52\u5237\u5199\u8282\u70b9*/ sfs_sync_inode ( dentry_cursor -> inode ); } dentry_cursor = dentry_cursor -> brother ; offset += sizeof ( struct sfs_dentry_d ); } } \u200b \u2463\u5982\u679c\u662f\u6587\u4ef6\u7c7b\u578b\uff0c\u5219\u5c06inode\u6240\u6307\u5411\u7684\u6570\u636e\u76f4\u63a5\u5199\u5165\u78c1\u76d8\u3002 else if ( SFS_IS_REG ( inode )) { if ( sfs_driver_write ( SFS_DATA_OFS ( ino ), inode -> data , SFS_BLKS_SZ ( SFS_DATA_PER_FILE )) != SFS_ERROR_NONE ) { SFS_DBG ( \"[%s] io error \\n \" , __func__ ); return - SFS_ERROR_IO ; } }","title":"2.4 \u5b9e\u73b0unmount"},{"location":"lab5/part3-3/#25-readwrite","text":"","title":"2.5 \u5b9e\u73b0read+write\uff08\u9009\u505a\uff09"},{"location":"lab5/part3-3/#251","text":"\u5f53\u8bfb\u53d6\u6587\u4ef6\u65f6\uff0c\u5c31\u4f1a\u7528\u5230 read \u94a9\u5b50\uff0c\u8fd9\u4e2a\u94a9\u5b50\u5728\u590d\u5236\u6587\u4ef6\u65f6\u4e5f\u4f1a\u7528\u5230\uff0c\u5b83\u901a\u8fc7\u4e0b\u9762\u7684\u6b65\u9aa4\u6765\u5b8c\u6210\u4e00\u6b21\u5bf9\u6587\u4ef6\u7684\u8bfb\u53d6\uff08\u8be6\u89c1sfs_read\u51fd\u6570\uff09\uff1a \u2460\u9996\u5148\u627e\u5230\u6587\u4ef6\u7684\u76ee\u5f55\u9879\uff1a struct sfs_dentry * dentry = sfs_lookup ( path , & is_find , & is_root ); \u2461\u627e\u5230\u76ee\u5f55\u9879\u4e4b\u540e\u5224\u65ad\u6587\u4ef6\u7c7b\u578b\uff0c\u4fdd\u8bc1\u662f\u6587\u4ef6\u7c7b\u578b\u5e76\u4e14\u6587\u4ef6\u5927\u5c0f\u8981\u5927\u4e8e\u6240\u8981\u8bfb\u53d6\u7684\u504f\u79fb\u91cf\uff1a if ( SFS_IS_DIR ( inode )) { return - SFS_ERROR_ISDIR ; } if ( inode -> size < offset ) { return - SFS_ERROR_SEEK ; } \u2462\u4e4b\u540e\u5c06\u6570\u636e\u8bfb\u5165\u5185\u5b58\u5757\u5373\u53ef\uff1a memcpy ( buf , inode -> data + offset , size );","title":"2.5.1 \u6587\u4ef6\u8bfb"},{"location":"lab5/part3-3/#252","text":"\u5199\u6587\u4ef6\u662f\uff0c\u7528\u5230 write \u94a9\u5b50\uff0c\u5b83\u5411\u6587\u4ef6\u6240\u5728\u7684\u78c1\u76d8\u4f4d\u7f6e\u4e2d\u5199\u5165\u6570\u636e\uff08\u8be6\u89c1sfs_write\u51fd\u6570\uff09\uff1a \u2460\u548c\u8bfb\u6587\u4ef6\u4e00\u6837\uff0c\u9996\u5148\u627e\u5230\u8def\u5f84\u6240\u5bf9\u5e94\u7684\u76ee\u5f55\u9879\uff1a struct sfs_dentry * dentry = sfs_lookup ( path , & is_find , & is_root ); \u2461\u4e4b\u540e\u4fdd\u8bc1\u6587\u4ef6\u7c7b\u578b\u4e0d\u662f\u76ee\u5f55\u4ee5\u53ca\u4fdd\u8bc1\u6587\u4ef6\u5927\u5c0f\u5927\u4e8e\u504f\u79fb\u91cf\uff1a if ( SFS_IS_DIR ( inode )) { return - SFS_ERROR_ISDIR ; } if ( inode -> size < offset ) { return - SFS_ERROR_SEEK ; } \u2462\u5c06\u5185\u5b58\u4e2d\u6570\u636e\u590d\u5236\u5230\u5bf9\u5e94\u4f4d\u7f6e\u5373\u53ef\uff0c\u5e76\u6539\u5199iNode\u8282\u70b9\u7684\u5927\u5c0f\uff1a memcpy ( inode -> data + offset , buf , size ); inode -> size = offset + size > inode -> size ? offset + size : inode -> size ; \u200b \u200b","title":"2.5.2 \u6587\u4ef6\u5199"},{"location":"lab5/part3-4/","text":"\u9009\u505a\u4efb\u52a1 \u00b6 1. \u78c1\u76d8\u7f13\u5b58\uff08\u9009\u505a\u4efb\u52a1\uff09 \u00b6 1.1 \u78c1\u76d8\u7f13\u5b58\u7b80\u4ecb \u00b6 \u78c1\u76d8\u7684\u8bbf\u95ee\u901f\u5ea6\u8fdc\u5c0f\u4e8e\u5185\u5b58\u7684\u8bbf\u95ee\u901f\u5ea6 \uff0c\u800c\u73b0\u5b9e\u4e2d\u78c1\u76d8\u7684\u5bb9\u91cf\u4e5f\u8fdc\u5927\u4e8e\u5185\u5b58\uff0c\u6240\u4ee5\u4e3a\u4e86\u63d0\u901f \u628a\u6574\u4e2a\u78c1\u76d8\u5185\u5bb9\u8bfb\u5230\u5185\u5b58\u4e2d\u662f\u4e0d\u73b0\u5b9e\u7684 \u3002\u4f46\u662f\uff0c\u6211\u4eec\u8fd8\u662f\u6709\u4e00\u4e9b\u624b\u6bb5\u63d0\u9ad8\u5bf9\u78c1\u76d8\u7684\u8bbf\u95ee\u901f\u5ea6\u3002 \u6839\u636e\u5c40\u90e8\u6027\u539f\u7406 \uff0c\u6700\u8fd1\u88ab\u8bbf\u95ee\u8fc7\u7684\u7a7a\u95f4\u63a5\u4e0b\u6765\u4e5f\u5f88\u53ef\u80fd\u88ab\u8bbf\u95ee\u5230\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u505a \u4e00\u4e9b\u7f13\u5b58\u5757 \uff0c\u628a \u6700\u8fd1\u6700\u5e38\u88ab\u8bbf\u95ee\u7684\u6570\u636e\u653e\u5165\u7f13\u5b58\u5757\u4e2d \u3002\u5982\u4f55\u7ba1\u7406\u7f13\u5b58\u5757\uff0c\u91c7\u53d6\u600e\u6837\u7684 \u66ff\u6362\u7b56\u7565 \uff0c\u4ee5\u53ca\u5728\u4ec0\u4e48\u65f6\u673a\u4e0b \u5199\u56de \uff0c\u5982\u4f55\u4fdd\u8bc1 \u4e00\u81f4\u6027 \uff0c\u8fd9\u4e9b\u90fd\u662f\u78c1\u76d8\u7f13\u5b58\u9700\u8981\u8003\u8651\u7684\u95ee\u9898\u3002 1.2 \u5b9e\u73b0\u6307\u5357 \u00b6 SFS\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5355\u7684\u7f13\u5b58\u65b9\u6848\u3002 \u7f13\u5b58\u5757\u5206\u914d \uff1a\u5229\u7528\u5185\u5b58\u7ed3\u6784\u67e5\u627e\u7f13\u5b58\u4e2d\u7b2c\u4e00\u4e2a\u7a7a\u95f2\u7f13\u5b58\u5757\uff0c\u82e5\u65e0\u7a7a\u95f2\u7f13\u5b58\u5757\uff0c\u5219\u91c7\u7528\u540e\u8ff0\u66ff\u6362\u7b56\u7565\u91ca\u653e\u7f13\u5b58\u5757\u3002 \u7f13\u5b58\u5757\u66ff\u6362 \uff1a\u88ab\u66ff\u6362\u7f13\u5b58\u5757\u7684\u6311\u9009\u91c7\u7528\u4e00\u79cd\u8f83\u4e3a\u7b80\u5355\u7684 \u8fd1\u4f3c\u5148\u5165\u5148\u51fa \u65b9\u6cd5\u3002\u5047\u8bbe\u7f13\u5b58\u5757\u603b\u5171\u6709 n \u5757\uff0c\u6211\u4eec\u603b\u662f\u8bb0\u5f55\u4e0a\u4e00\u6b21\u88ab\u66ff\u6362\u7684\u7f13\u5b58\u5757 i \uff0c\u5219\u672c\u6b21\u5c06\u8981\u88ab\u66ff\u6362\u7684\u7f13\u5b58\u5757 j = (i + 1) mod n \u3002 \u7f13\u5b58\u5757\u547d\u4e2d \uff1a\u6211\u4eec\u4e3a\u6bcf\u4e2a\u7f13\u5b58\u5757\u90fd\u4f1a\u7ef4\u62a4\u4e00\u4e2a\u5143\u6570\u636e\uff0c\u5143\u6570\u636e\u8bb0\u5f55\u4e86\u8be5\u7f13\u5b58\u5757\u5bf9\u5e94\u4ecb\u8d28\u4e0a\u7684\u7269\u7406\u5730\u5740\uff0c\u6211\u4eec\u901a\u8fc7\u68c0\u67e5\u7269\u7406\u5730\u5740\u662f\u5426\u91cd\u5408\u6765\u5224\u65ad\u7f13\u5b58\u5757\u662f\u5426\u547d\u4e2d\u3002 \u7f13\u5b58\u5757\u7d22\u5f15 \uff1aSFS\u4f7f\u7528\u4f4d\u56fe\u5bf9\u7f13\u5b58\u5757\u7684\u5206\u914d\u60c5\u51b5\u8fdb\u884c\u7ba1\u7406\u3002\u4f46\u662f\u4f4d\u56fe\u9762\u4e34\u7684\u641c\u7d22\u65f6\u95f4\u4e3aO(N)\u3002SFS\u5c06\u4f4d\u56fe\u5212\u5206\u4e3a\u591a\u4e2a\u5b50\u4f4d\u56fe\uff0c\u6bcf\u4e2a\u5b50\u4f4d\u56fe\u7531\u4e00\u4e2a\u5143\u6570\u636e\u8282\u70b9\u7ba1\u7406\uff0c\u7edf\u8ba1\u8be5\u5b50\u4f4d\u56fe\u7684\u5206\u914d\u60c5\u51b5\u3002\u6211\u4eec\u5728\u540e\u9762\u8fdb\u884c\u66f4\u4e3a\u8be6\u7ec6\u7684\u4ecb\u7ecd\u3002 \u7f13\u5b58\u5757\u56de\u5199\u65b9\u5f0f \uff1aWrite-Back\u6a21\u5f0f SFS\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5b9e\u73b0\u5bf9\u6587\u4ef6\u6570\u636e\u7684\u7f13\u5b58\uff0c\u5176\u4f2a\u4ee3\u7801\u53ef\u8868\u793a\u5982\u4e0b\uff1a \u8bfb\u6570\u636e \uff1a if not hit_cache ( offset ) : read_into_cache ( offset ) read_from_cache ( offset ) \u5199\u6570\u636e \uff1a if not hit_cache ( offset ) : read_into_cache ( offset ) write_to_cache ( offset ) 1.2.1 SFS\u7f13\u5b58\u5b9e\u73b0 \u00b6 \u9996\u5148\u5207\u6362\u5230 buf \u5206\u652f\u4ee5\u5b8c\u6210\u5b9e\u9a8c\uff1a git checkout buf \u503c\u5f97\u8bf4\u660e\u7684\u662f \uff0c\u4e3a\u4e86\u66f4\u597d\u5730\u6a21\u62df\u78c1\u76d8\u5ef6\u65f6\uff0c\u6211\u4eec\u5411 user_ddriver \u4e2d\u4eba\u4e3a\u63d2\u5165\u4e86\u5ef6\u8fdf\u51fd\u6570\uff0c\u76f8\u5173\u4ee3\u7801\u53ef\u9605\u8bfb buf \u5206\u652f\u4e0b\u7684 ddriver.c \u3002 1.2.2 \u6570\u636e\u7ed3\u6784 \u00b6 struct sfs_bm_node { int avai ; /* \u8be5\u4f4d\u56fe\u5269\u4f59\u7684\u8bb0\u5f55\u6570 */ uint8_t bm_indicators [ SFS_CACHE_BMID_N ]; /* \u5143\u6570\u636e\u4f4d\u56fe */ uint8_t bm [ SFS_CACHE_BMND_N ]; /* \u6570\u636e\u4f4d\u56fe */ }; sfs_bm_node \u4f4d\u4e8e\u5185\u5b58\u4e2d\uff0c\u7528\u4e8e\u7f13\u5b58\u5757\u7ba1\u7406\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u5b50\u4f4d\u56fe\u7ed3\u6784\uff0c\u5176\u4e2d bm \u5b57\u6bb5\u4ee3\u8868\u6570\u636e\u4f4d\u56fe\uff0c bm_indicators \u8fdb\u800c\u8bb0\u5f55 bm \u4e2d\u6bcf8\u4f4d\u7684\u5206\u914d\u60c5\u51b5\uff1a\u5982\u679c\u4e3a0\uff0c\u4ee3\u8868\u8be58\u4f4d\u4e2d\u65e0\u6709\u6548\uff08\u88ab\u5206\u914d\uff09\u4f4d\uff1b\u4e3a1\u4ee3\u8868\u8be58\u4f4d\u4e2d\u6709\u6709\u6548\u4f4d\u3002 \u503c\u5f97\u8bf4\u660e\u7684\u662f\uff0c\u5982\u679c\u4ec5\u8bb0\u5f55\u6bcf8\u4f4d\u4e00\u7ec4\uff0c\u5b8c\u5168\u53ef\u4ee5\u901a\u8fc7&0xFF\u64cd\u4f5c\u5b9e\u73b0\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u63a8\u5e7f\u5230\u8bb0\u5f55\u6bcf128\u4f4d\u751a\u81f3\u66f4\u9ad8\u7684\u60c5\u51b5 \u3002\u6700\u540e\uff0c avai \u5b57\u6bb5\u8bb0\u5f55\u6539\u4e3a\u56fe\u5269\u4f59\u7684\u8bb0\u5f55\u6570\uff0c\u975e0\u4ee3\u8868\u8fd8\u6709\u7a7a\u95f2\u5757\uff0c0\u4ee3\u8868\u65e0\u7a7a\u95f2\u5757\u3002\u56e0\u6b64\u5355\u4e2a sfs_bm_node \u8282\u70b9\u53ef\u4ee5\u753b\u56fe\u8868\u793a\u4e3a\uff1a struct __attribute__ (( packed )) sfs_cnode_hdr { int phys_ofs ; int flags ; }; struct __attribute__ (( packed )) sfs_cnode { struct sfs_cnode_hdr hdr ; unsigned char data []; }; sfs_cnode \u4ee3\u8868\u4e00\u4e2a\u7f13\u5b58\u5757\u8282\u70b9\uff0c\u5176\u5305\u542b\u4e00\u4e2a\u5143\u6570\u636e\u5934\u4e0d hdr \u4e0e\u7f13\u5b58\u7684\u6570\u636e data \uff0c hdr \u4e2d\u8bb0\u5f55\u4e86\u7f13\u5b58\u5757\u5bf9\u5e94\u7684\u7269\u7406\u5730\u5740 phys_ofs \u4e0e\u4e00\u4e9b\u6807\u5fd7\u4f4d flags \uff08\u662f\u5426\u5199\u810f\uff09\u3002 \u6ce8\u610f\uff0c\u5728SFS\u4e2d\uff0c\u7f13\u5b58\u5757\u5927\u5c0f\u9ed8\u8ba4\u4e0eIO\u5757\u5927\u5c0f\u5bf9\u9f50\uff0c\u56e0\u6b64\u4e0d\u8bb0\u5f55\u5757\u5927\u5c0f \u3002\u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u66f4\u7c97\u7c92\u5ea6\u5730\u53bb\u7ba1\u7406\u4e00\u4e2a\u7f13\u5b58\u5757\uff0c\u4f8b\u59822\u4e2aIO\u5757\u5927\u5c0f\u7b49\u3002 sfs_cnode \u7684\u96c6\u5408\u6784\u6210\u4e86SFS\u7f13\u5b58Buffer\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a struct sfs_cache { int sz_blk ; /* \u6bcf\u4e2a\u7f13\u5b58\u6570\u636e\u5757\u5927\u5c0f = io_sz */ int num_blk ; /* \u7f13\u5b58\u7684\u6570\u636e\u5757\u6570 */ struct sfs_bm_node * bms ; /* Cache\u5206\u914d\u4f4d\u56fe */ int num_bms ; /* \u5206\u914d\u4f4d\u56fe\u7684\u4e2a\u6570 */ int last_evicted ; /* \u4e0a\u4e00\u6b21\u9a71\u9010\u5757 */ unsigned char * buf ; /* Cnode\u5b58\u653e\u533a */ int cache_hit ; int cache_miss ; int cache_wb ; int cache_ld ; }; sfs_cache \u4ee3\u8868\u6574\u4e2a\u7f13\u5b58\u7ed3\u6784\uff0c\u76f8\u5173\u53d8\u91cf\u5b9a\u4e49\u4e0d\u518d\u8d58\u8ff0\u3002\u5176\u4e2d\uff0c cache_ \u5f00\u5934\u7684\u5b57\u6bb5\u4ee3\u8868\u7f13\u5b58\u7684\u547d\u4e2d\u3001\u56de\u5199\u3001\u52a0\u8f7d\u4fe1\u606f\u3002\u8fdb\u800c\uff0c\u6211\u4eec\u7528\u4e0b\u56fe\u6765\u63cf\u8ff0\u7f13\u5b58\u7684\u6574\u4f53\u7ed3\u6784\uff1a \u503c\u5f97\u8bf4\u660e\u7684\u662f\uff0cSFS\u4e2d\u7684\u7f13\u5b58\u7ed3\u6784\u5b8c\u5168\u88ab\u90e8\u7f72\u5728\u5185\u5b58\u4e2d\uff0c\u5e76\u975e\u786c\u4ef6Cache\u3002 1.2.3 \u5173\u952e\u65b9\u6cd5 \u00b6 \u547d\u4e2d\u6216\u7533\u8bf7\u5206\u914d\u7f13\u5b58\u5757 \uff1a \u51fd\u6570\u4ecb\u7ecd \uff1a \u8be5\u65b9\u6cd5\u505a\u4e24\u4e2a\u4e8b\u60c5\uff1a \u6839\u636e\u4f20\u5165\u53c2\u6570 phys_ofs \u5224\u65ad\u662f\u5426\u547d\u4e2dCache\uff0c\u82e5\u672a\u547d\u4e2dCache\uff0c\u5219\u6267\u884c\u6b65\u9aa4\u4e8c \u5206\u914d\u4e00\u4e2a\u7a7a\u95f2\u7684\u7f13\u5b58\u5757\uff0c\u82e5\u6ca1\u6709\u7f13\u5b58\u5757\uff0c\u5219\u6309\u524d\u8ff0\u66ff\u6362\u7b97\u6cd5\u8fdb\u884c\u7f13\u5b58\u5757\u66ff\u6362\u91ca\u653e \u8fd4\u56de\u503c \uff1a\u8be5\u65b9\u6cd5\u8fd4\u56de phys_ofs\u5bf9\u5e94\u7684\u7f13\u5b58\u5757\u5757\u53f7 \u51fd\u6570\u5b9e\u73b0\u5982\u4e0b\uff1a int sfs_cache_hit_or_alloc_blk ( struct sfs_cache * cache , int phys_ofs ) { int blk = -1 ; int bm_id , line , i ; int num_bms = cache -> num_bms ; int bm_lines = SFS_CACHE_BMND_N ; int free_blk = -1 ; int evict_blk = -1 ; struct sfs_bm_node * bm_node ; struct sfs_cnode * cnode ; for ( bm_id = 0 ; bm_id < num_bms ; bm_id ++ ) { /* \u904d\u5386\u6240\u6709\u4e3a\u4f4d\u56fe\uff0c\u67e5\u770bCache\u547d\u4e2d\u548c\u7a7a\u95f2\u5757 */ bm_node = & cache -> bms [ bm_id ]; if ( bm_node -> avai != SFS_CACHE_BMND_N * UINT8_BITS ) { for ( line = 0 ; line < bm_lines ; line ++ ) { if ( bm_test ( bm_node -> bm_indicators , line )) { blk = bm_id * SFS_CACHE_BMND_N * UINT8_BITS + line * UINT8_BITS ; for ( i = 0 ; i < UINT8_BITS ; i ++ ) { if ( bm_test ( bm_node -> bm , blk + i )) { cnode = GET_CNODE ( cache , blk + i ); if ( cnode -> hdr . phys_ofs == phys_ofs ) { cache -> cache_hit += 1 ; return blk + i ; } } else { if ( free_blk == -1 ) { free_blk = blk + i ; } } } } else { if ( free_blk == -1 ) { blk = bm_id * SFS_CACHE_BMND_N * UINT8_BITS + line * UINT8_BITS ; free_blk = blk ; } } } } else { blk = bm_id * SFS_CACHE_BMND_N * UINT8_BITS ; free_blk = blk ; } } cache -> cache_miss += 1 ; if ( free_blk == -1 || free_blk > cache -> num_blk - 1 ) { /* \u9a71\u9010\u7f13\u5b58\u884c */ evict_blk = ( cache -> last_evicted + 1 ) % cache -> num_blk ; sfs_cache_rls_blk ( cache , evict_blk ); cache -> last_evicted = evict_blk ; free_blk = evict_blk ; } blk = free_blk ; sfs_cache_alloc_blk ( cache , blk , phys_ofs ); return blk ; } \u5176\u4e2d\uff0c\u4e0b\u8ff0\u4ee3\u7801\u4e3b\u8981\u5b8c\u6210\u4f4d\u56fe\u7684\u904d\u5386\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a sfs_bm_node \uff0c\u4e25\u683c\u6309\u7167\u987a\u5e8f\u68c0\u67e5\uff1a avai \u2192 bm_indicators \u2192 bm \u3002\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c\u8bb0\u5f55\u4e0b\u7b2c\u4e00\u4e2a\u7a7a\u95f2\u5757 free_blk \uff0c\u4fbf\u4e8e\u7f13\u5b58\u672a\u547d\u4e2d\u65f6\u8fd4\u56de\u3002 for ( bm_id = 0 ; bm_id < num_bms ; bm_id ++ ) { /* \u904d\u5386\u6240\u6709\u4e3a\u4f4d\u56fe\uff0c\u67e5\u770bCache\u547d\u4e2d\u548c\u7a7a\u95f2\u5757 */ bm_node = & cache -> bms [ bm_id ]; if ( bm_node -> avai != SFS_CACHE_BMND_N * UINT8_BITS ) { for ( line = 0 ; line < bm_lines ; line ++ ) { if ( bm_test ( bm_node -> bm_indicators , line )) { blk = bm_id * SFS_CACHE_BMND_N * UINT8_BITS + line * UINT8_BITS ; for ( i = 0 ; i < UINT8_BITS ; i ++ ) { if ( bm_test ( bm_node -> bm , blk + i )) { ... } ... } } ... } } else { ... } } \u4ee5\u4e0b\u4ee3\u7801\u7528\u4e8e\u68c0\u6d4b\u662f\u5426\u547d\u4e2d\u3002\u9996\u5148\u83b7\u53d6\u76ee\u6807\u7f13\u5b58\u5757 sfs_cnode \uff0c\u518d\u6bd4\u5bf9 phys_ofs \u5373\u53ef\u3002 cnode = GET_CNODE ( cache , blk + i ); if ( cnode -> hdr . phys_ofs == phys_ofs ) { cache -> cache_hit += 1 ; return blk + i ; } \u5982\u679c\u53d1\u73b0\u65e2\u672a\u547d\u4e2d\u7f13\u5b58\u5757\uff0c\u53c8\u6ca1\u6709 free_blk \uff0c\u5219\u89e6\u53d1\u7f13\u5b58\u66ff\u6362\uff0c\u88ab\u66ff\u6362\u7684\u5757\u4f5c\u4e3a\u65b0\u7684\u7a7a\u95f2\u5757\u88ab\u5206\u914d\u3002\u5176\u4e2d\uff0c\u9700\u8981\u8bf4\u660e\u4e24\u4e2a\u51fd\u6570\uff1a sfs_cache_rls_blk \uff1a\u8be5\u51fd\u6570\u7528\u4e8e\u5c06\u7f13\u5b58\u5757\u7684\u5185\u5bb9\u8c03\u7528 \u9a71\u52a8\u5199 \u56de\u5199\u5230\u4ecb\u8d28\u4e0a\uff0c\u5e76\u66f4\u65b0\u76f8\u5e94\u7684\u4f4d\u56fe\u7d22\u5f15\u7ed3\u6784 sfs_cache_alloc_blk \uff1a\u8be5\u51fd\u6570\u7528\u4e8e\u5c06\u5bf9\u5e94phys_ofs\u7684\u5185\u5bb9\u8c03\u7528 \u9a71\u52a8\u8bfb \u8bfb\u53d6\u5230\u76f8\u5e94\u7684\u7f13\u5b58\u5757\u4e2d\uff0c\u5e76\u66f4\u65b0\u7f13\u5b58\u5757\u5143\u6570\u636e hdr \uff0c\u66f4\u65b0\u76f8\u5e94\u7684\u4f4d\u56fe\u7d22\u5f15\u7ed3\u6784 int sfs_cache_hit_or_alloc_blk ( struct sfs_cache * cache , int phys_ofs ) { ... cache -> cache_miss += 1 ; if ( free_blk == -1 || free_blk > cache -> num_blk - 1 ) { /* \u9a71\u9010\u7f13\u5b58\u884c */ evict_blk = ( cache -> last_evicted + 1 ) % cache -> num_blk ; sfs_cache_rls_blk ( cache , evict_blk ); cache -> last_evicted = evict_blk ; free_blk = evict_blk ; } blk = free_blk ; sfs_cache_alloc_blk ( cache , blk , phys_ofs ); return blk ; } \u8bfb\u5199\u65b9\u6cd5 \u8bfb\u65b9\u6cd5\u4e3a sfs_try_cache_read \uff0c\u5199\u65b9\u6cd5\u4e3a sfs_try_cache_write \u3002\u4e3b\u8981\u601d\u8def\u51e0\u4e4e\u4e00\u81f4\uff0c\u9996\u5148\u901a\u8fc7\u8c03\u7528 sfs_cache_hit_or_alloc_blk \u83b7\u53d6 offset \u5bf9\u5e94\u7684\u7f13\u5b58\u5757\uff0c\u7136\u540e\u5bf9\u7f13\u5b58\u5757\u8fdb\u884c\u8bfb\u53d6\u6216\u5199\u5165\u5373\u53ef\u3002 int sfs_try_cache_read ( struct sfs_cache * cache , int offset , uint8_t * out_content , int size ) { ... if ( IS_CACHE_ENABLE ( cache )) { blk = sfs_cache_hit_or_alloc_blk ( cache , offset ); cnode = GET_CNODE ( cache , blk ); memcpy ( out_content , cnode -> data , size ); ... } ... } int sfs_try_cache_write ( struct sfs_cache * cache , int offset , uint8_t * in_content , int size ) { ... if ( IS_CACHE_ENABLE ( cache )) { blk = sfs_cache_hit_or_alloc_blk ( cache , offset ); cnode = GET_CNODE ( cache , blk ); memcpy ( cnode -> data , in_content , size ); ... } ... } \u63a5\u4e0b\u6765\uff0c\u4fee\u6539SFS\u5c01\u88c5\u7684 sfs_driver_read \u548c sfs_driver_write \u5373\u53ef\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u539f\u672c\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u9002\u914d\u4efb\u610f offset \u4e0e size \uff0c\u8ba9\u4fee\u6539\u7b26\u5408IO\u5757\u5927\u5c0f\u3002\u4fee\u6539\u65b9\u5f0f\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5c06\u539f\u6765\u7684 ddriver_seek + ddriver_read \u6216 ddriver_write \u66f4\u6362\u4e3a sfs_try_cache_read \u6216 sfs_try_cache_write \u5373\u53ef\uff0c\u76f8\u5173\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a /* sfs_utils.c */ int sfs_driver_read ( int offset , uint8_t * out_content , int size ) { ... // lseek(SFS_DRIVER(), offset_aligned, SEEK_SET); // ddriver_seek(SFS_DRIVER(), offset_aligned, SEEK_SET); while ( size_aligned != 0 ) { // read(SFS_DRIVER(), cur, SFS_IO_SZ()); // ddriver_read(SFS_DRIVER(), cur, SFS_IO_SZ()); sfs_try_cache_read ( SFS_CACHE (), offset_aligned , cur , SFS_IO_SZ ()); cur += SFS_IO_SZ (); size_aligned -= SFS_IO_SZ (); offset_aligned += SFS_IO_SZ (); } memcpy ( out_content , temp_content + bias , size ); ... } int sfs_driver_write ( int offset , uint8_t * in_content , int size ) { ... // lseek(SFS_DRIVER(), offset_aligned, SEEK_SET); // ddriver_seek(SFS_DRIVER(), offset_aligned, SEEK_SET); while ( size_aligned != 0 ) { // write(SFS_DRIVER(), cur, SFS_IO_SZ()); sfs_try_cache_write ( SFS_CACHE (), offset_aligned , cur , SFS_IO_SZ ()); cur += SFS_IO_SZ (); size_aligned -= SFS_IO_SZ (); offset_aligned += SFS_IO_SZ (); } ... } \u6b64\u5916\uff0c\u5728\u539f\u6765\u7684SFS\u8bbe\u8ba1\u4e2d\uff0c\u6211\u4eec\u5b9e\u73b0\u7684 sfs_write \u548c sfs_read \u76f4\u63a5\u5728\u5185\u5b58\u4e2d\u8fdb\u884c\uff0c\u8fd9\u6837\u4e00\u6765\u5e76\u4e0d\u80fd\u4f53\u73b0\u7f13\u5b58\u7684\u4f5c\u7528\uff0c\u4e8e\u662f\u66f4\u6362\u4e86\u8bfb\u5199\u6570\u636e\u51fd\u6570\u5982\u4e0b\uff08\u5c06 memcpy \u66f4\u6362\u4e3a sfs_driver_read \u4e0e sfs_driver_write \uff09\uff1a int sfs_write ( const char * path , const char * buf , size_t size , off_t offset , struct fuse_file_info * fi ) { ... // memcpy(inode->data + offset, buf, size); sfs_driver_write ( SFS_DATA_OFS (( inode -> ino )) + offset , buf , size ); ... } int sfs_read ( const char * path , char * buf , size_t size , off_t offset , struct fuse_file_info * fi ) { ... // memcpy(buf, inode->data + offset, size); sfs_driver_read ( SFS_DATA_OFS (( inode -> ino )) + offset , buf , size ); ... } 1.3 SFS\u7f13\u5b58\u6d4b\u8bd5 \u00b6 \u4e3a\u4e86\u9a8c\u8bc1SFS\u7f13\u5b58\u6709\u6548\u6027\uff0c\u7f16\u5199\u5982\u4e0b\u811a\u672c\u6d4b\u8bd5\uff1a import os import sys import time def process ( loop , cblks ): ... work_set_sz = 16 * 512 # 8KB iter_sz = 512 # 512B num_iters = work_set_sz // iter_sz ... tot_sz = loop * work_set_sz # B start = time . time () with open ( f_path , 'w+' ) as f : content = 'a' * work_set_sz for i in range ( loop ): f . seek ( 0 ) for j in range ( num_iters ): # print(\"Iter: \" + str(j)) f . write ( content [ j * iter_sz : ( j + 1 ) * iter_sz ]) f . seek ( 0 ) data = f . read ( work_set_sz ) if data != content : print ( 'buf: read data is not equal to written data' ) sys . exit ( 1 ) os . system ( 'umount {} ' . format ( mnt_point )) end = time . time () print ( 'Time: {} ms BW: {} MB/s' . format ( 1000 * ( end - start ), tot_sz / 1024 / 1024 / ( end - start ))) loop = 1000000 print ( \"Cache Blks: 512\" ) process ( loop , 512 ) print ( \"Cache Blks: 0\" ) process ( loop , 0 ) \u8be5\u811a\u672c\u4ee5512B\u4e3a\u5355\u4f4d\u5199\u6ee1SFS\u6587\u4ef6\uff08\u5927\u5c0f\u4e3a512B * 16\uff091000000\u6b21\uff0c\u7136\u540e\u8ba1\u7b97\u5199\u5165\u5e26\u5bbd\u3002\u6d4b\u8bd5\u5bf9\u8c61\u662f \u65e0\u7f13\u5b58\u5757 \u4e0e\u6709 512\u4e2a\u7f13\u5b58\u5757 \u4e24\u7c7b\uff0c\u6d4b\u8bd5\u7ed3\u679c\u5982\u4e0b\u8868\u6240\u793a\uff1a \u65e0\u7f13\u5b58\u5757 512\u4e2a\u7f13\u5b58\u5757 84.38797875936444MB/s 101.79038122398883MB/s \u7531\u4e8e\u5728\u865a\u62df\u673a\u4e0a\u6d4b\u8bd5\uff0c\u7ed3\u679c\u96be\u514d\u4e0d\u51c6\uff0c \u4f46\u6709\u7f13\u5b58\u5757\u7684\u65f6\u95f4\u5f00\u9500\u4e00\u822c\u6765\u8bf4\u6bd4\u65e0\u7f13\u5b58\u5757\u5c0f\uff0c\u672c\u5b9e\u9a8c\u8981\u6c42\u5b66\u751f\u901a\u8fc7\u81ea\u5df1\u8bbe\u8ba1\u5b9e\u9a8c\uff0c\u6700\u7ec8\u7ed3\u679c\u80fd\u591f\u4f53\u73b0\u51fa\u52a0\u5165\u7f13\u5b58\u7684\u4f18\u52bf\u5373\u53ef 1.4 \u5b9e\u9a8c\u8981\u6c42 \u00b6 \u7531\u4e8e\u672c\u5b9e\u9a8c\u4ec5\u8981\u6c42\u5728\u865a\u62df\u673a\u4e0a\u5b9e\u73b0\uff0c\u56e0\u6b64\u672c\u5b9e\u9a8c\u4ec5\u8981\u6c42\u5b66\u751f\u901a\u8fc7\u81ea\u5df1\u8bbe\u8ba1\u5b9e\u9a8c\uff0c\u6700\u7ec8\u7ed3\u679c\u80fd\u591f\u4f53\u73b0\u51fa\u52a0\u5165\u7f13\u5b58\u7684\u4f18\u52bf\u5373\u53ef\u3002\u5b66\u751f\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539 driver/user_ddriver/ddriver.c \u4e2d\u7684\u4e0b\u8ff0\u7ed3\u6784\u4f53\u4e2d\u7684\u5bf9\u5e94\u5b57\u6bb5\u6765\u8fdb\u4e00\u6b65\u8c03\u6574\u5ef6\u8fdf\uff1a struct ddriver disk = { ... . read_lat = 2 , /* 2ms */ . write_lat = 1 , /* 1ms */ . seek_lat = 4 , /* 4.17ms per 360 degree */ ... }; \u5176\u4e2d\uff0c read_lat \u4ee3\u8868\u4e3a ddriver_read \u63d2\u5165\u5ef6\u8fdf\uff0c write_lat \u4ee3\u8868\u4e3a ddriver_write \u63d2\u5165\u5ef6\u8fdf\uff0c seek_lat \u7528\u4e8e\u6a21\u62df\u78c1\u76d8\u65cb\u8f6c\uff0c\u4e00\u822c\u6765\u8bf4\u6307\u65cb\u8f6c360\u00b0\u8017\u65f6\uff0c\u5355\u4f4d\u90fd\u662f ms \u3002 \u4fee\u6539 user_ddriver \u540e\uff0c\u9700\u8981\u4f7f\u7528 make \u7f16\u8bd1\uff0c\u4ece\u800c\u4f7f\u4fee\u6539\u751f\u6548\uff1a [ root@localhost user_ddriver ] # pwd /user-land-filesystem/driver/user_ddriver [ root@localhost user_ddriver ] # make gcc -Wall -O -g -c ddriver.c 2. \u65e5\u5fd7\u6587\u4ef6\u7cfb\u7edf\u7b80\u4ecb\uff08\u9009\u505a\u4efb\u52a1\uff09 \u00b6 \u65e5\u5fd7\u673a\u5236\u662f\u63d0\u9ad8\u6587\u4ef6\u7cfb\u7edf\u9c81\u68d2\u6027\u7684\u4e00\u4e2a\u91cd\u8981\u673a\u5236\u3002\u6211\u4eec\u77e5\u9053\uff0c \u6587\u4ef6\u7cfb\u7edf\u7684\u5f88\u591a\u64cd\u4f5c\u5f80\u5f80\u4e0d\u6b62\u4e00\u4e2a\u6b65\u9aa4 \uff0c\u4ee5\u521b\u5efa\u6587\u4ef6\u4e3a\u4f8b\uff0c\u5b83\u8981\u7ecf\u8fc7\uff1a \u5199\u6587\u4ef6inode \u3001 \u5199\u76ee\u5f55\u9879 \u3001 \u66f4\u65b0\u4f4d\u56fe \u4e09\u4e2a\u6b65\u9aa4\u3002 \u5982\u679c\u5728\u5199\u5b8c\u76ee\u5f55\u9879\u4f46\u6ca1\u5f00\u59cb\u5199\u8d85\u7ea7\u5757\u65f6\u53d1\u751f\u4e86 \u7cfb\u7edf\u5d29\u6e83\u6216\u8005\u505c\u7535\u7b49\u56e0\u7d20\u5bfc\u81f4\u5b95\u673a \uff0c\u90a3\u4e48\u7b2c\u4e00\u6b65\u88ab\u5206\u914d\u51fa\u53bb\u7684inode\u5c31\u65e0\u6cd5\u88ab\u8bb0\u5f55\u4e3a\u5df2\u5206\u914d\uff0c\u91cd\u542f\u7cfb\u7edf\u540e\u6587\u4ef6\u7cfb\u7edf\u6709\u53ef\u80fd\u628a\u8fd9\u4e00inode\u5206\u914d\u7ed9\u5176\u4ed6\u6587\u4ef6\u3002 \u4e3a\u4e86\u4fdd\u8bc1\u6574\u4e2a\u8fc7\u7a0b\u7684 \u539f\u5b50\u6027 \uff0c\u6211\u4eec\u53ef\u4ee5\u52a0\u5165\u65e5\u5fd7\u673a\u5236\u3002\u5728\u78c1\u76d8\u4e2d\u5212\u51fa\u4e00\u5757\u533a\u57df\u8bb0\u4e3a\u65e5\u5fd7\u533a\u3002\u4e00\u5f00\u59cb\u4e0d\u628a\u66f4\u65b0\u540e\u7684\u6570\u636e\u5199\u5165\u6570\u636e\u533a\uff0c\u800c\u662f\u628a\u65e5\u5fd7\u533a\u72b6\u6001\u8bb0\u4e3a\u8bb0\u5f55\u4e2d\uff0c\u5e76\u628a\u66f4\u6539\u5199\u5165\u65e5\u5fd7\u533a\u3002\u5199\u5165\u5b8c\u6210\u540e\uff0c\u628a\u65e5\u5fd7\u533a\u72b6\u6001\u6539\u4e3a\u5199\u5165\u4e2d\uff0c\u5e76\u628a\u65e5\u5fd7\u533a\u7684\u66f4\u6539\u66f4\u65b0\u5230\u6570\u636e\u533a\u3002\u5168\u90e8\u66f4\u65b0\u5b8c\u6210\u540e\uff0c\u628a\u65e5\u5fd7\u533a\u72b6\u6001\u8bb0\u4e3a\u7a7a\u95f2\u3002 \u5982\u679c\u5728\u8bb0\u5f55\u65f6\u7cfb\u7edf\u5d29\u6e83\uff0c\u5728\u91cd\u542f\u540e\u4f1a\u53d1\u73b0\u65e5\u5fd7\u533a\u72b6\u6001\u4e3a\u8bb0\u5f55\u4e2d\u3002\u6b64\u65f6\u53ea\u9700\u7b80\u5355\u5730\u4e22\u5f03\u65e5\u5fd7\u5185\u5bb9\uff0c\u6539\u72b6\u6001\u4e3a\u7a7a\u95f2\uff0c\u5373\u53ef\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6587\u4ef6\u521b\u5efa\u5c31\u597d\u50cf\u4ece\u672a\u53d1\u751f\u8fc7\u4e00\u6837\u3002 \u5982\u679c\u5728\u5199\u5165\u65f6\u7cfb\u7edf\u5d29\u6e83\uff0c\u5728\u91cd\u542f\u540e\u4f1a\u53d1\u73b0\u65e5\u5fd7\u533a\u72b6\u6001\u4e3a\u5199\u5165\u4e2d\u3002\u6b64\u65f6\u65e5\u5fd7\u533a\u7684\u66f4\u65b0\u4fe1\u606f\u662f\u5b8c\u6574\u7684\uff0c\u53ea\u662f\u4e0d\u77e5\u9053\u5d29\u6e83\u524d\u5199\u5230\u4e86\u54ea\u4e00\u6b65\u3002\u6b64\u65f6\u53ea\u8981\u628a\u65e5\u5fd7\u533a\u7684\u4fe1\u606f\u5168\u90e8\u91cd\u65b0\u5199\u5165\u5230\u6570\u636e\u533a\uff0c\u518d\u628a\u72b6\u6001\u8bb0\u4e3a\u7a7a\u95f2\uff0c\u5373\u53ef\u6062\u590d\u88ab\u6253\u65ad\u7684\u64cd\u4f5c\u3002","title":"\u9009\u505a\u4efb\u52a1"},{"location":"lab5/part3-4/#_1","text":"","title":"\u9009\u505a\u4efb\u52a1"},{"location":"lab5/part3-4/#1","text":"","title":"1.  \u78c1\u76d8\u7f13\u5b58\uff08\u9009\u505a\u4efb\u52a1\uff09"},{"location":"lab5/part3-4/#11","text":"\u78c1\u76d8\u7684\u8bbf\u95ee\u901f\u5ea6\u8fdc\u5c0f\u4e8e\u5185\u5b58\u7684\u8bbf\u95ee\u901f\u5ea6 \uff0c\u800c\u73b0\u5b9e\u4e2d\u78c1\u76d8\u7684\u5bb9\u91cf\u4e5f\u8fdc\u5927\u4e8e\u5185\u5b58\uff0c\u6240\u4ee5\u4e3a\u4e86\u63d0\u901f \u628a\u6574\u4e2a\u78c1\u76d8\u5185\u5bb9\u8bfb\u5230\u5185\u5b58\u4e2d\u662f\u4e0d\u73b0\u5b9e\u7684 \u3002\u4f46\u662f\uff0c\u6211\u4eec\u8fd8\u662f\u6709\u4e00\u4e9b\u624b\u6bb5\u63d0\u9ad8\u5bf9\u78c1\u76d8\u7684\u8bbf\u95ee\u901f\u5ea6\u3002 \u6839\u636e\u5c40\u90e8\u6027\u539f\u7406 \uff0c\u6700\u8fd1\u88ab\u8bbf\u95ee\u8fc7\u7684\u7a7a\u95f4\u63a5\u4e0b\u6765\u4e5f\u5f88\u53ef\u80fd\u88ab\u8bbf\u95ee\u5230\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u505a \u4e00\u4e9b\u7f13\u5b58\u5757 \uff0c\u628a \u6700\u8fd1\u6700\u5e38\u88ab\u8bbf\u95ee\u7684\u6570\u636e\u653e\u5165\u7f13\u5b58\u5757\u4e2d \u3002\u5982\u4f55\u7ba1\u7406\u7f13\u5b58\u5757\uff0c\u91c7\u53d6\u600e\u6837\u7684 \u66ff\u6362\u7b56\u7565 \uff0c\u4ee5\u53ca\u5728\u4ec0\u4e48\u65f6\u673a\u4e0b \u5199\u56de \uff0c\u5982\u4f55\u4fdd\u8bc1 \u4e00\u81f4\u6027 \uff0c\u8fd9\u4e9b\u90fd\u662f\u78c1\u76d8\u7f13\u5b58\u9700\u8981\u8003\u8651\u7684\u95ee\u9898\u3002","title":"1.1 \u78c1\u76d8\u7f13\u5b58\u7b80\u4ecb"},{"location":"lab5/part3-4/#12","text":"SFS\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5355\u7684\u7f13\u5b58\u65b9\u6848\u3002 \u7f13\u5b58\u5757\u5206\u914d \uff1a\u5229\u7528\u5185\u5b58\u7ed3\u6784\u67e5\u627e\u7f13\u5b58\u4e2d\u7b2c\u4e00\u4e2a\u7a7a\u95f2\u7f13\u5b58\u5757\uff0c\u82e5\u65e0\u7a7a\u95f2\u7f13\u5b58\u5757\uff0c\u5219\u91c7\u7528\u540e\u8ff0\u66ff\u6362\u7b56\u7565\u91ca\u653e\u7f13\u5b58\u5757\u3002 \u7f13\u5b58\u5757\u66ff\u6362 \uff1a\u88ab\u66ff\u6362\u7f13\u5b58\u5757\u7684\u6311\u9009\u91c7\u7528\u4e00\u79cd\u8f83\u4e3a\u7b80\u5355\u7684 \u8fd1\u4f3c\u5148\u5165\u5148\u51fa \u65b9\u6cd5\u3002\u5047\u8bbe\u7f13\u5b58\u5757\u603b\u5171\u6709 n \u5757\uff0c\u6211\u4eec\u603b\u662f\u8bb0\u5f55\u4e0a\u4e00\u6b21\u88ab\u66ff\u6362\u7684\u7f13\u5b58\u5757 i \uff0c\u5219\u672c\u6b21\u5c06\u8981\u88ab\u66ff\u6362\u7684\u7f13\u5b58\u5757 j = (i + 1) mod n \u3002 \u7f13\u5b58\u5757\u547d\u4e2d \uff1a\u6211\u4eec\u4e3a\u6bcf\u4e2a\u7f13\u5b58\u5757\u90fd\u4f1a\u7ef4\u62a4\u4e00\u4e2a\u5143\u6570\u636e\uff0c\u5143\u6570\u636e\u8bb0\u5f55\u4e86\u8be5\u7f13\u5b58\u5757\u5bf9\u5e94\u4ecb\u8d28\u4e0a\u7684\u7269\u7406\u5730\u5740\uff0c\u6211\u4eec\u901a\u8fc7\u68c0\u67e5\u7269\u7406\u5730\u5740\u662f\u5426\u91cd\u5408\u6765\u5224\u65ad\u7f13\u5b58\u5757\u662f\u5426\u547d\u4e2d\u3002 \u7f13\u5b58\u5757\u7d22\u5f15 \uff1aSFS\u4f7f\u7528\u4f4d\u56fe\u5bf9\u7f13\u5b58\u5757\u7684\u5206\u914d\u60c5\u51b5\u8fdb\u884c\u7ba1\u7406\u3002\u4f46\u662f\u4f4d\u56fe\u9762\u4e34\u7684\u641c\u7d22\u65f6\u95f4\u4e3aO(N)\u3002SFS\u5c06\u4f4d\u56fe\u5212\u5206\u4e3a\u591a\u4e2a\u5b50\u4f4d\u56fe\uff0c\u6bcf\u4e2a\u5b50\u4f4d\u56fe\u7531\u4e00\u4e2a\u5143\u6570\u636e\u8282\u70b9\u7ba1\u7406\uff0c\u7edf\u8ba1\u8be5\u5b50\u4f4d\u56fe\u7684\u5206\u914d\u60c5\u51b5\u3002\u6211\u4eec\u5728\u540e\u9762\u8fdb\u884c\u66f4\u4e3a\u8be6\u7ec6\u7684\u4ecb\u7ecd\u3002 \u7f13\u5b58\u5757\u56de\u5199\u65b9\u5f0f \uff1aWrite-Back\u6a21\u5f0f SFS\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5b9e\u73b0\u5bf9\u6587\u4ef6\u6570\u636e\u7684\u7f13\u5b58\uff0c\u5176\u4f2a\u4ee3\u7801\u53ef\u8868\u793a\u5982\u4e0b\uff1a \u8bfb\u6570\u636e \uff1a if not hit_cache ( offset ) : read_into_cache ( offset ) read_from_cache ( offset ) \u5199\u6570\u636e \uff1a if not hit_cache ( offset ) : read_into_cache ( offset ) write_to_cache ( offset )","title":"1.2 \u5b9e\u73b0\u6307\u5357"},{"location":"lab5/part3-4/#121-sfs","text":"\u9996\u5148\u5207\u6362\u5230 buf \u5206\u652f\u4ee5\u5b8c\u6210\u5b9e\u9a8c\uff1a git checkout buf \u503c\u5f97\u8bf4\u660e\u7684\u662f \uff0c\u4e3a\u4e86\u66f4\u597d\u5730\u6a21\u62df\u78c1\u76d8\u5ef6\u65f6\uff0c\u6211\u4eec\u5411 user_ddriver \u4e2d\u4eba\u4e3a\u63d2\u5165\u4e86\u5ef6\u8fdf\u51fd\u6570\uff0c\u76f8\u5173\u4ee3\u7801\u53ef\u9605\u8bfb buf \u5206\u652f\u4e0b\u7684 ddriver.c \u3002","title":"1.2.1 SFS\u7f13\u5b58\u5b9e\u73b0"},{"location":"lab5/part3-4/#122","text":"struct sfs_bm_node { int avai ; /* \u8be5\u4f4d\u56fe\u5269\u4f59\u7684\u8bb0\u5f55\u6570 */ uint8_t bm_indicators [ SFS_CACHE_BMID_N ]; /* \u5143\u6570\u636e\u4f4d\u56fe */ uint8_t bm [ SFS_CACHE_BMND_N ]; /* \u6570\u636e\u4f4d\u56fe */ }; sfs_bm_node \u4f4d\u4e8e\u5185\u5b58\u4e2d\uff0c\u7528\u4e8e\u7f13\u5b58\u5757\u7ba1\u7406\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u5b50\u4f4d\u56fe\u7ed3\u6784\uff0c\u5176\u4e2d bm \u5b57\u6bb5\u4ee3\u8868\u6570\u636e\u4f4d\u56fe\uff0c bm_indicators \u8fdb\u800c\u8bb0\u5f55 bm \u4e2d\u6bcf8\u4f4d\u7684\u5206\u914d\u60c5\u51b5\uff1a\u5982\u679c\u4e3a0\uff0c\u4ee3\u8868\u8be58\u4f4d\u4e2d\u65e0\u6709\u6548\uff08\u88ab\u5206\u914d\uff09\u4f4d\uff1b\u4e3a1\u4ee3\u8868\u8be58\u4f4d\u4e2d\u6709\u6709\u6548\u4f4d\u3002 \u503c\u5f97\u8bf4\u660e\u7684\u662f\uff0c\u5982\u679c\u4ec5\u8bb0\u5f55\u6bcf8\u4f4d\u4e00\u7ec4\uff0c\u5b8c\u5168\u53ef\u4ee5\u901a\u8fc7&0xFF\u64cd\u4f5c\u5b9e\u73b0\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u63a8\u5e7f\u5230\u8bb0\u5f55\u6bcf128\u4f4d\u751a\u81f3\u66f4\u9ad8\u7684\u60c5\u51b5 \u3002\u6700\u540e\uff0c avai \u5b57\u6bb5\u8bb0\u5f55\u6539\u4e3a\u56fe\u5269\u4f59\u7684\u8bb0\u5f55\u6570\uff0c\u975e0\u4ee3\u8868\u8fd8\u6709\u7a7a\u95f2\u5757\uff0c0\u4ee3\u8868\u65e0\u7a7a\u95f2\u5757\u3002\u56e0\u6b64\u5355\u4e2a sfs_bm_node \u8282\u70b9\u53ef\u4ee5\u753b\u56fe\u8868\u793a\u4e3a\uff1a struct __attribute__ (( packed )) sfs_cnode_hdr { int phys_ofs ; int flags ; }; struct __attribute__ (( packed )) sfs_cnode { struct sfs_cnode_hdr hdr ; unsigned char data []; }; sfs_cnode \u4ee3\u8868\u4e00\u4e2a\u7f13\u5b58\u5757\u8282\u70b9\uff0c\u5176\u5305\u542b\u4e00\u4e2a\u5143\u6570\u636e\u5934\u4e0d hdr \u4e0e\u7f13\u5b58\u7684\u6570\u636e data \uff0c hdr \u4e2d\u8bb0\u5f55\u4e86\u7f13\u5b58\u5757\u5bf9\u5e94\u7684\u7269\u7406\u5730\u5740 phys_ofs \u4e0e\u4e00\u4e9b\u6807\u5fd7\u4f4d flags \uff08\u662f\u5426\u5199\u810f\uff09\u3002 \u6ce8\u610f\uff0c\u5728SFS\u4e2d\uff0c\u7f13\u5b58\u5757\u5927\u5c0f\u9ed8\u8ba4\u4e0eIO\u5757\u5927\u5c0f\u5bf9\u9f50\uff0c\u56e0\u6b64\u4e0d\u8bb0\u5f55\u5757\u5927\u5c0f \u3002\u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u66f4\u7c97\u7c92\u5ea6\u5730\u53bb\u7ba1\u7406\u4e00\u4e2a\u7f13\u5b58\u5757\uff0c\u4f8b\u59822\u4e2aIO\u5757\u5927\u5c0f\u7b49\u3002 sfs_cnode \u7684\u96c6\u5408\u6784\u6210\u4e86SFS\u7f13\u5b58Buffer\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a struct sfs_cache { int sz_blk ; /* \u6bcf\u4e2a\u7f13\u5b58\u6570\u636e\u5757\u5927\u5c0f = io_sz */ int num_blk ; /* \u7f13\u5b58\u7684\u6570\u636e\u5757\u6570 */ struct sfs_bm_node * bms ; /* Cache\u5206\u914d\u4f4d\u56fe */ int num_bms ; /* \u5206\u914d\u4f4d\u56fe\u7684\u4e2a\u6570 */ int last_evicted ; /* \u4e0a\u4e00\u6b21\u9a71\u9010\u5757 */ unsigned char * buf ; /* Cnode\u5b58\u653e\u533a */ int cache_hit ; int cache_miss ; int cache_wb ; int cache_ld ; }; sfs_cache \u4ee3\u8868\u6574\u4e2a\u7f13\u5b58\u7ed3\u6784\uff0c\u76f8\u5173\u53d8\u91cf\u5b9a\u4e49\u4e0d\u518d\u8d58\u8ff0\u3002\u5176\u4e2d\uff0c cache_ \u5f00\u5934\u7684\u5b57\u6bb5\u4ee3\u8868\u7f13\u5b58\u7684\u547d\u4e2d\u3001\u56de\u5199\u3001\u52a0\u8f7d\u4fe1\u606f\u3002\u8fdb\u800c\uff0c\u6211\u4eec\u7528\u4e0b\u56fe\u6765\u63cf\u8ff0\u7f13\u5b58\u7684\u6574\u4f53\u7ed3\u6784\uff1a \u503c\u5f97\u8bf4\u660e\u7684\u662f\uff0cSFS\u4e2d\u7684\u7f13\u5b58\u7ed3\u6784\u5b8c\u5168\u88ab\u90e8\u7f72\u5728\u5185\u5b58\u4e2d\uff0c\u5e76\u975e\u786c\u4ef6Cache\u3002","title":"1.2.2 \u6570\u636e\u7ed3\u6784"},{"location":"lab5/part3-4/#123","text":"\u547d\u4e2d\u6216\u7533\u8bf7\u5206\u914d\u7f13\u5b58\u5757 \uff1a \u51fd\u6570\u4ecb\u7ecd \uff1a \u8be5\u65b9\u6cd5\u505a\u4e24\u4e2a\u4e8b\u60c5\uff1a \u6839\u636e\u4f20\u5165\u53c2\u6570 phys_ofs \u5224\u65ad\u662f\u5426\u547d\u4e2dCache\uff0c\u82e5\u672a\u547d\u4e2dCache\uff0c\u5219\u6267\u884c\u6b65\u9aa4\u4e8c \u5206\u914d\u4e00\u4e2a\u7a7a\u95f2\u7684\u7f13\u5b58\u5757\uff0c\u82e5\u6ca1\u6709\u7f13\u5b58\u5757\uff0c\u5219\u6309\u524d\u8ff0\u66ff\u6362\u7b97\u6cd5\u8fdb\u884c\u7f13\u5b58\u5757\u66ff\u6362\u91ca\u653e \u8fd4\u56de\u503c \uff1a\u8be5\u65b9\u6cd5\u8fd4\u56de phys_ofs\u5bf9\u5e94\u7684\u7f13\u5b58\u5757\u5757\u53f7 \u51fd\u6570\u5b9e\u73b0\u5982\u4e0b\uff1a int sfs_cache_hit_or_alloc_blk ( struct sfs_cache * cache , int phys_ofs ) { int blk = -1 ; int bm_id , line , i ; int num_bms = cache -> num_bms ; int bm_lines = SFS_CACHE_BMND_N ; int free_blk = -1 ; int evict_blk = -1 ; struct sfs_bm_node * bm_node ; struct sfs_cnode * cnode ; for ( bm_id = 0 ; bm_id < num_bms ; bm_id ++ ) { /* \u904d\u5386\u6240\u6709\u4e3a\u4f4d\u56fe\uff0c\u67e5\u770bCache\u547d\u4e2d\u548c\u7a7a\u95f2\u5757 */ bm_node = & cache -> bms [ bm_id ]; if ( bm_node -> avai != SFS_CACHE_BMND_N * UINT8_BITS ) { for ( line = 0 ; line < bm_lines ; line ++ ) { if ( bm_test ( bm_node -> bm_indicators , line )) { blk = bm_id * SFS_CACHE_BMND_N * UINT8_BITS + line * UINT8_BITS ; for ( i = 0 ; i < UINT8_BITS ; i ++ ) { if ( bm_test ( bm_node -> bm , blk + i )) { cnode = GET_CNODE ( cache , blk + i ); if ( cnode -> hdr . phys_ofs == phys_ofs ) { cache -> cache_hit += 1 ; return blk + i ; } } else { if ( free_blk == -1 ) { free_blk = blk + i ; } } } } else { if ( free_blk == -1 ) { blk = bm_id * SFS_CACHE_BMND_N * UINT8_BITS + line * UINT8_BITS ; free_blk = blk ; } } } } else { blk = bm_id * SFS_CACHE_BMND_N * UINT8_BITS ; free_blk = blk ; } } cache -> cache_miss += 1 ; if ( free_blk == -1 || free_blk > cache -> num_blk - 1 ) { /* \u9a71\u9010\u7f13\u5b58\u884c */ evict_blk = ( cache -> last_evicted + 1 ) % cache -> num_blk ; sfs_cache_rls_blk ( cache , evict_blk ); cache -> last_evicted = evict_blk ; free_blk = evict_blk ; } blk = free_blk ; sfs_cache_alloc_blk ( cache , blk , phys_ofs ); return blk ; } \u5176\u4e2d\uff0c\u4e0b\u8ff0\u4ee3\u7801\u4e3b\u8981\u5b8c\u6210\u4f4d\u56fe\u7684\u904d\u5386\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a sfs_bm_node \uff0c\u4e25\u683c\u6309\u7167\u987a\u5e8f\u68c0\u67e5\uff1a avai \u2192 bm_indicators \u2192 bm \u3002\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c\u8bb0\u5f55\u4e0b\u7b2c\u4e00\u4e2a\u7a7a\u95f2\u5757 free_blk \uff0c\u4fbf\u4e8e\u7f13\u5b58\u672a\u547d\u4e2d\u65f6\u8fd4\u56de\u3002 for ( bm_id = 0 ; bm_id < num_bms ; bm_id ++ ) { /* \u904d\u5386\u6240\u6709\u4e3a\u4f4d\u56fe\uff0c\u67e5\u770bCache\u547d\u4e2d\u548c\u7a7a\u95f2\u5757 */ bm_node = & cache -> bms [ bm_id ]; if ( bm_node -> avai != SFS_CACHE_BMND_N * UINT8_BITS ) { for ( line = 0 ; line < bm_lines ; line ++ ) { if ( bm_test ( bm_node -> bm_indicators , line )) { blk = bm_id * SFS_CACHE_BMND_N * UINT8_BITS + line * UINT8_BITS ; for ( i = 0 ; i < UINT8_BITS ; i ++ ) { if ( bm_test ( bm_node -> bm , blk + i )) { ... } ... } } ... } } else { ... } } \u4ee5\u4e0b\u4ee3\u7801\u7528\u4e8e\u68c0\u6d4b\u662f\u5426\u547d\u4e2d\u3002\u9996\u5148\u83b7\u53d6\u76ee\u6807\u7f13\u5b58\u5757 sfs_cnode \uff0c\u518d\u6bd4\u5bf9 phys_ofs \u5373\u53ef\u3002 cnode = GET_CNODE ( cache , blk + i ); if ( cnode -> hdr . phys_ofs == phys_ofs ) { cache -> cache_hit += 1 ; return blk + i ; } \u5982\u679c\u53d1\u73b0\u65e2\u672a\u547d\u4e2d\u7f13\u5b58\u5757\uff0c\u53c8\u6ca1\u6709 free_blk \uff0c\u5219\u89e6\u53d1\u7f13\u5b58\u66ff\u6362\uff0c\u88ab\u66ff\u6362\u7684\u5757\u4f5c\u4e3a\u65b0\u7684\u7a7a\u95f2\u5757\u88ab\u5206\u914d\u3002\u5176\u4e2d\uff0c\u9700\u8981\u8bf4\u660e\u4e24\u4e2a\u51fd\u6570\uff1a sfs_cache_rls_blk \uff1a\u8be5\u51fd\u6570\u7528\u4e8e\u5c06\u7f13\u5b58\u5757\u7684\u5185\u5bb9\u8c03\u7528 \u9a71\u52a8\u5199 \u56de\u5199\u5230\u4ecb\u8d28\u4e0a\uff0c\u5e76\u66f4\u65b0\u76f8\u5e94\u7684\u4f4d\u56fe\u7d22\u5f15\u7ed3\u6784 sfs_cache_alloc_blk \uff1a\u8be5\u51fd\u6570\u7528\u4e8e\u5c06\u5bf9\u5e94phys_ofs\u7684\u5185\u5bb9\u8c03\u7528 \u9a71\u52a8\u8bfb \u8bfb\u53d6\u5230\u76f8\u5e94\u7684\u7f13\u5b58\u5757\u4e2d\uff0c\u5e76\u66f4\u65b0\u7f13\u5b58\u5757\u5143\u6570\u636e hdr \uff0c\u66f4\u65b0\u76f8\u5e94\u7684\u4f4d\u56fe\u7d22\u5f15\u7ed3\u6784 int sfs_cache_hit_or_alloc_blk ( struct sfs_cache * cache , int phys_ofs ) { ... cache -> cache_miss += 1 ; if ( free_blk == -1 || free_blk > cache -> num_blk - 1 ) { /* \u9a71\u9010\u7f13\u5b58\u884c */ evict_blk = ( cache -> last_evicted + 1 ) % cache -> num_blk ; sfs_cache_rls_blk ( cache , evict_blk ); cache -> last_evicted = evict_blk ; free_blk = evict_blk ; } blk = free_blk ; sfs_cache_alloc_blk ( cache , blk , phys_ofs ); return blk ; } \u8bfb\u5199\u65b9\u6cd5 \u8bfb\u65b9\u6cd5\u4e3a sfs_try_cache_read \uff0c\u5199\u65b9\u6cd5\u4e3a sfs_try_cache_write \u3002\u4e3b\u8981\u601d\u8def\u51e0\u4e4e\u4e00\u81f4\uff0c\u9996\u5148\u901a\u8fc7\u8c03\u7528 sfs_cache_hit_or_alloc_blk \u83b7\u53d6 offset \u5bf9\u5e94\u7684\u7f13\u5b58\u5757\uff0c\u7136\u540e\u5bf9\u7f13\u5b58\u5757\u8fdb\u884c\u8bfb\u53d6\u6216\u5199\u5165\u5373\u53ef\u3002 int sfs_try_cache_read ( struct sfs_cache * cache , int offset , uint8_t * out_content , int size ) { ... if ( IS_CACHE_ENABLE ( cache )) { blk = sfs_cache_hit_or_alloc_blk ( cache , offset ); cnode = GET_CNODE ( cache , blk ); memcpy ( out_content , cnode -> data , size ); ... } ... } int sfs_try_cache_write ( struct sfs_cache * cache , int offset , uint8_t * in_content , int size ) { ... if ( IS_CACHE_ENABLE ( cache )) { blk = sfs_cache_hit_or_alloc_blk ( cache , offset ); cnode = GET_CNODE ( cache , blk ); memcpy ( cnode -> data , in_content , size ); ... } ... } \u63a5\u4e0b\u6765\uff0c\u4fee\u6539SFS\u5c01\u88c5\u7684 sfs_driver_read \u548c sfs_driver_write \u5373\u53ef\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u539f\u672c\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u9002\u914d\u4efb\u610f offset \u4e0e size \uff0c\u8ba9\u4fee\u6539\u7b26\u5408IO\u5757\u5927\u5c0f\u3002\u4fee\u6539\u65b9\u5f0f\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5c06\u539f\u6765\u7684 ddriver_seek + ddriver_read \u6216 ddriver_write \u66f4\u6362\u4e3a sfs_try_cache_read \u6216 sfs_try_cache_write \u5373\u53ef\uff0c\u76f8\u5173\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a /* sfs_utils.c */ int sfs_driver_read ( int offset , uint8_t * out_content , int size ) { ... // lseek(SFS_DRIVER(), offset_aligned, SEEK_SET); // ddriver_seek(SFS_DRIVER(), offset_aligned, SEEK_SET); while ( size_aligned != 0 ) { // read(SFS_DRIVER(), cur, SFS_IO_SZ()); // ddriver_read(SFS_DRIVER(), cur, SFS_IO_SZ()); sfs_try_cache_read ( SFS_CACHE (), offset_aligned , cur , SFS_IO_SZ ()); cur += SFS_IO_SZ (); size_aligned -= SFS_IO_SZ (); offset_aligned += SFS_IO_SZ (); } memcpy ( out_content , temp_content + bias , size ); ... } int sfs_driver_write ( int offset , uint8_t * in_content , int size ) { ... // lseek(SFS_DRIVER(), offset_aligned, SEEK_SET); // ddriver_seek(SFS_DRIVER(), offset_aligned, SEEK_SET); while ( size_aligned != 0 ) { // write(SFS_DRIVER(), cur, SFS_IO_SZ()); sfs_try_cache_write ( SFS_CACHE (), offset_aligned , cur , SFS_IO_SZ ()); cur += SFS_IO_SZ (); size_aligned -= SFS_IO_SZ (); offset_aligned += SFS_IO_SZ (); } ... } \u6b64\u5916\uff0c\u5728\u539f\u6765\u7684SFS\u8bbe\u8ba1\u4e2d\uff0c\u6211\u4eec\u5b9e\u73b0\u7684 sfs_write \u548c sfs_read \u76f4\u63a5\u5728\u5185\u5b58\u4e2d\u8fdb\u884c\uff0c\u8fd9\u6837\u4e00\u6765\u5e76\u4e0d\u80fd\u4f53\u73b0\u7f13\u5b58\u7684\u4f5c\u7528\uff0c\u4e8e\u662f\u66f4\u6362\u4e86\u8bfb\u5199\u6570\u636e\u51fd\u6570\u5982\u4e0b\uff08\u5c06 memcpy \u66f4\u6362\u4e3a sfs_driver_read \u4e0e sfs_driver_write \uff09\uff1a int sfs_write ( const char * path , const char * buf , size_t size , off_t offset , struct fuse_file_info * fi ) { ... // memcpy(inode->data + offset, buf, size); sfs_driver_write ( SFS_DATA_OFS (( inode -> ino )) + offset , buf , size ); ... } int sfs_read ( const char * path , char * buf , size_t size , off_t offset , struct fuse_file_info * fi ) { ... // memcpy(buf, inode->data + offset, size); sfs_driver_read ( SFS_DATA_OFS (( inode -> ino )) + offset , buf , size ); ... }","title":"1.2.3 \u5173\u952e\u65b9\u6cd5"},{"location":"lab5/part3-4/#13-sfs","text":"\u4e3a\u4e86\u9a8c\u8bc1SFS\u7f13\u5b58\u6709\u6548\u6027\uff0c\u7f16\u5199\u5982\u4e0b\u811a\u672c\u6d4b\u8bd5\uff1a import os import sys import time def process ( loop , cblks ): ... work_set_sz = 16 * 512 # 8KB iter_sz = 512 # 512B num_iters = work_set_sz // iter_sz ... tot_sz = loop * work_set_sz # B start = time . time () with open ( f_path , 'w+' ) as f : content = 'a' * work_set_sz for i in range ( loop ): f . seek ( 0 ) for j in range ( num_iters ): # print(\"Iter: \" + str(j)) f . write ( content [ j * iter_sz : ( j + 1 ) * iter_sz ]) f . seek ( 0 ) data = f . read ( work_set_sz ) if data != content : print ( 'buf: read data is not equal to written data' ) sys . exit ( 1 ) os . system ( 'umount {} ' . format ( mnt_point )) end = time . time () print ( 'Time: {} ms BW: {} MB/s' . format ( 1000 * ( end - start ), tot_sz / 1024 / 1024 / ( end - start ))) loop = 1000000 print ( \"Cache Blks: 512\" ) process ( loop , 512 ) print ( \"Cache Blks: 0\" ) process ( loop , 0 ) \u8be5\u811a\u672c\u4ee5512B\u4e3a\u5355\u4f4d\u5199\u6ee1SFS\u6587\u4ef6\uff08\u5927\u5c0f\u4e3a512B * 16\uff091000000\u6b21\uff0c\u7136\u540e\u8ba1\u7b97\u5199\u5165\u5e26\u5bbd\u3002\u6d4b\u8bd5\u5bf9\u8c61\u662f \u65e0\u7f13\u5b58\u5757 \u4e0e\u6709 512\u4e2a\u7f13\u5b58\u5757 \u4e24\u7c7b\uff0c\u6d4b\u8bd5\u7ed3\u679c\u5982\u4e0b\u8868\u6240\u793a\uff1a \u65e0\u7f13\u5b58\u5757 512\u4e2a\u7f13\u5b58\u5757 84.38797875936444MB/s 101.79038122398883MB/s \u7531\u4e8e\u5728\u865a\u62df\u673a\u4e0a\u6d4b\u8bd5\uff0c\u7ed3\u679c\u96be\u514d\u4e0d\u51c6\uff0c \u4f46\u6709\u7f13\u5b58\u5757\u7684\u65f6\u95f4\u5f00\u9500\u4e00\u822c\u6765\u8bf4\u6bd4\u65e0\u7f13\u5b58\u5757\u5c0f\uff0c\u672c\u5b9e\u9a8c\u8981\u6c42\u5b66\u751f\u901a\u8fc7\u81ea\u5df1\u8bbe\u8ba1\u5b9e\u9a8c\uff0c\u6700\u7ec8\u7ed3\u679c\u80fd\u591f\u4f53\u73b0\u51fa\u52a0\u5165\u7f13\u5b58\u7684\u4f18\u52bf\u5373\u53ef","title":"1.3 SFS\u7f13\u5b58\u6d4b\u8bd5"},{"location":"lab5/part3-4/#14","text":"\u7531\u4e8e\u672c\u5b9e\u9a8c\u4ec5\u8981\u6c42\u5728\u865a\u62df\u673a\u4e0a\u5b9e\u73b0\uff0c\u56e0\u6b64\u672c\u5b9e\u9a8c\u4ec5\u8981\u6c42\u5b66\u751f\u901a\u8fc7\u81ea\u5df1\u8bbe\u8ba1\u5b9e\u9a8c\uff0c\u6700\u7ec8\u7ed3\u679c\u80fd\u591f\u4f53\u73b0\u51fa\u52a0\u5165\u7f13\u5b58\u7684\u4f18\u52bf\u5373\u53ef\u3002\u5b66\u751f\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539 driver/user_ddriver/ddriver.c \u4e2d\u7684\u4e0b\u8ff0\u7ed3\u6784\u4f53\u4e2d\u7684\u5bf9\u5e94\u5b57\u6bb5\u6765\u8fdb\u4e00\u6b65\u8c03\u6574\u5ef6\u8fdf\uff1a struct ddriver disk = { ... . read_lat = 2 , /* 2ms */ . write_lat = 1 , /* 1ms */ . seek_lat = 4 , /* 4.17ms per 360 degree */ ... }; \u5176\u4e2d\uff0c read_lat \u4ee3\u8868\u4e3a ddriver_read \u63d2\u5165\u5ef6\u8fdf\uff0c write_lat \u4ee3\u8868\u4e3a ddriver_write \u63d2\u5165\u5ef6\u8fdf\uff0c seek_lat \u7528\u4e8e\u6a21\u62df\u78c1\u76d8\u65cb\u8f6c\uff0c\u4e00\u822c\u6765\u8bf4\u6307\u65cb\u8f6c360\u00b0\u8017\u65f6\uff0c\u5355\u4f4d\u90fd\u662f ms \u3002 \u4fee\u6539 user_ddriver \u540e\uff0c\u9700\u8981\u4f7f\u7528 make \u7f16\u8bd1\uff0c\u4ece\u800c\u4f7f\u4fee\u6539\u751f\u6548\uff1a [ root@localhost user_ddriver ] # pwd /user-land-filesystem/driver/user_ddriver [ root@localhost user_ddriver ] # make gcc -Wall -O -g -c ddriver.c","title":"1.4 \u5b9e\u9a8c\u8981\u6c42"},{"location":"lab5/part3-4/#2","text":"\u65e5\u5fd7\u673a\u5236\u662f\u63d0\u9ad8\u6587\u4ef6\u7cfb\u7edf\u9c81\u68d2\u6027\u7684\u4e00\u4e2a\u91cd\u8981\u673a\u5236\u3002\u6211\u4eec\u77e5\u9053\uff0c \u6587\u4ef6\u7cfb\u7edf\u7684\u5f88\u591a\u64cd\u4f5c\u5f80\u5f80\u4e0d\u6b62\u4e00\u4e2a\u6b65\u9aa4 \uff0c\u4ee5\u521b\u5efa\u6587\u4ef6\u4e3a\u4f8b\uff0c\u5b83\u8981\u7ecf\u8fc7\uff1a \u5199\u6587\u4ef6inode \u3001 \u5199\u76ee\u5f55\u9879 \u3001 \u66f4\u65b0\u4f4d\u56fe \u4e09\u4e2a\u6b65\u9aa4\u3002 \u5982\u679c\u5728\u5199\u5b8c\u76ee\u5f55\u9879\u4f46\u6ca1\u5f00\u59cb\u5199\u8d85\u7ea7\u5757\u65f6\u53d1\u751f\u4e86 \u7cfb\u7edf\u5d29\u6e83\u6216\u8005\u505c\u7535\u7b49\u56e0\u7d20\u5bfc\u81f4\u5b95\u673a \uff0c\u90a3\u4e48\u7b2c\u4e00\u6b65\u88ab\u5206\u914d\u51fa\u53bb\u7684inode\u5c31\u65e0\u6cd5\u88ab\u8bb0\u5f55\u4e3a\u5df2\u5206\u914d\uff0c\u91cd\u542f\u7cfb\u7edf\u540e\u6587\u4ef6\u7cfb\u7edf\u6709\u53ef\u80fd\u628a\u8fd9\u4e00inode\u5206\u914d\u7ed9\u5176\u4ed6\u6587\u4ef6\u3002 \u4e3a\u4e86\u4fdd\u8bc1\u6574\u4e2a\u8fc7\u7a0b\u7684 \u539f\u5b50\u6027 \uff0c\u6211\u4eec\u53ef\u4ee5\u52a0\u5165\u65e5\u5fd7\u673a\u5236\u3002\u5728\u78c1\u76d8\u4e2d\u5212\u51fa\u4e00\u5757\u533a\u57df\u8bb0\u4e3a\u65e5\u5fd7\u533a\u3002\u4e00\u5f00\u59cb\u4e0d\u628a\u66f4\u65b0\u540e\u7684\u6570\u636e\u5199\u5165\u6570\u636e\u533a\uff0c\u800c\u662f\u628a\u65e5\u5fd7\u533a\u72b6\u6001\u8bb0\u4e3a\u8bb0\u5f55\u4e2d\uff0c\u5e76\u628a\u66f4\u6539\u5199\u5165\u65e5\u5fd7\u533a\u3002\u5199\u5165\u5b8c\u6210\u540e\uff0c\u628a\u65e5\u5fd7\u533a\u72b6\u6001\u6539\u4e3a\u5199\u5165\u4e2d\uff0c\u5e76\u628a\u65e5\u5fd7\u533a\u7684\u66f4\u6539\u66f4\u65b0\u5230\u6570\u636e\u533a\u3002\u5168\u90e8\u66f4\u65b0\u5b8c\u6210\u540e\uff0c\u628a\u65e5\u5fd7\u533a\u72b6\u6001\u8bb0\u4e3a\u7a7a\u95f2\u3002 \u5982\u679c\u5728\u8bb0\u5f55\u65f6\u7cfb\u7edf\u5d29\u6e83\uff0c\u5728\u91cd\u542f\u540e\u4f1a\u53d1\u73b0\u65e5\u5fd7\u533a\u72b6\u6001\u4e3a\u8bb0\u5f55\u4e2d\u3002\u6b64\u65f6\u53ea\u9700\u7b80\u5355\u5730\u4e22\u5f03\u65e5\u5fd7\u5185\u5bb9\uff0c\u6539\u72b6\u6001\u4e3a\u7a7a\u95f2\uff0c\u5373\u53ef\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6587\u4ef6\u521b\u5efa\u5c31\u597d\u50cf\u4ece\u672a\u53d1\u751f\u8fc7\u4e00\u6837\u3002 \u5982\u679c\u5728\u5199\u5165\u65f6\u7cfb\u7edf\u5d29\u6e83\uff0c\u5728\u91cd\u542f\u540e\u4f1a\u53d1\u73b0\u65e5\u5fd7\u533a\u72b6\u6001\u4e3a\u5199\u5165\u4e2d\u3002\u6b64\u65f6\u65e5\u5fd7\u533a\u7684\u66f4\u65b0\u4fe1\u606f\u662f\u5b8c\u6574\u7684\uff0c\u53ea\u662f\u4e0d\u77e5\u9053\u5d29\u6e83\u524d\u5199\u5230\u4e86\u54ea\u4e00\u6b65\u3002\u6b64\u65f6\u53ea\u8981\u628a\u65e5\u5fd7\u533a\u7684\u4fe1\u606f\u5168\u90e8\u91cd\u65b0\u5199\u5165\u5230\u6570\u636e\u533a\uff0c\u518d\u628a\u72b6\u6001\u8bb0\u4e3a\u7a7a\u95f2\uff0c\u5373\u53ef\u6062\u590d\u88ab\u6253\u65ad\u7684\u64cd\u4f5c\u3002","title":"2.  \u65e5\u5fd7\u6587\u4ef6\u7cfb\u7edf\u7b80\u4ecb\uff08\u9009\u505a\u4efb\u52a1\uff09"},{"location":"lab5/part3/","text":"\u5b9e\u9a8c\u6b65\u9aa4 \u00b6 1. \u73af\u5883\u642d\u5efa\u4e0e\u4e0a\u624b \u00b6 1.1 \u5b9e\u9a8c\u5305\u7ed3\u6784\u4ecb\u7ecd \u00b6 \u672c\u6b21\u5b9e\u9a8c\u5145\u5206\u8003\u8651\u5230 \u4e0a\u624b\u6210\u672c \uff0c\u56e0\u6b64\u6211\u4eec\u7f16\u5199\u4e86\u7b80\u5355\u7684\u73af\u5883\u914d\u7f6e\u811a\u672c\uff0c\u5e2e\u52a9\u5927\u5bb6\u4e00\u952e\u914d\u7f6e\u5f00\u53d1\u73af\u5883\u3002\u5b9e\u9a8c\u5305\u4ee3\u7801\u83b7\u53d6\u9014\u5f84\uff1a # git clone https://gitee.com/ftutorials/user-land-filesystem.git \u5b9e\u9a8c\u5305\u7684\u7ed3\u6784\u5982\u4e0b\uff1a user-land-filesystem/ \u251c\u2500\u2500 driver \u2502 \u251c\u2500\u2500 ddriver.sh \u2502 \u251c\u2500\u2500 kernel_ddriver \u2502 \u2514\u2500\u2500 user_ddriver \u251c\u2500\u2500 fs \u2502 \u251c\u2500\u2500 samples \u2502 \u251c\u2500\u2500 simplefs \u2502 \u2514\u2500\u2500 template \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 setenv.sh \u2514\u2500\u2500 tests \u251c\u2500\u2500 README.md \u2514\u2500\u2500 test_ddriver driver \u5b58\u653e\u9a71\u52a8\u4ee3\u7801\u3002\u5176\u4e2d kernel_ddriver \u4e3a\u5185\u6838\u9a71\u52a8\uff0c user_ddriver \u4e3a\u7528\u6237\u9a71\u52a8\uff0c ddriver.sh \u4e3a\u63a7\u5236 ddriver \u9a71\u52a8\u7684\u811a\u672c\uff0c\u53ef\u4ee5\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\u5c1d\u9c9c\uff1a [root@localhost user-land-filesystem]# ./driver/ddriver.sh fs \u5b58\u653e \u5b9e\u73b0\u7684FUSE\u6587\u4ef6\u7cfb\u7edf \u3002\u5176\u4e2d samples \u4e3a myfs \u6587\u4ef6\u7cfb\u7edf\uff0c simplefs \u4e3a\u7c7b EXT2 \u6587\u4ef6\u7cfb\u7edf\uff08\u7f3a\u5c11\u6570\u636e\u4f4d\u56fe\uff09\uff0c template \u7528\u4e8e\u751f\u6210\u6587\u4ef6\u7cfb\u7edf\u7684\u4ee3\u7801\u7ed3\u6784\uff0c\u53ef\u5ffd\u7565\u3002 LICENSE \u5f00\u6e90\u8bb8\u53ef\uff0c\u672c\u5b9e\u9a8c\u9075\u5faa GPL v3 \u5f00\u6e90\u8bb8\u53ef\u3002 tests \u8be5\u6587\u4ef6\u5939\u5b58\u653eDDRIVER\u7528\u6237\u9a71\u52a8\u4ee3\u7801\u3002 setenv.sh \u7528\u4e8e\u914d\u7f6eFUSE\u6587\u4ef6\u7cfb\u7edf\u5f00\u53d1\u73af\u5883\u3002 1.2 \u914d\u7f6e\u5f00\u53d1\u73af\u5883 \u00b6 \u8fd0\u884c ./setenv.sh \u540e\uff0c\u5373\u53ef\u6309\u7167\u6307\u5bfc\u4e00\u6b65\u4e00\u6b65\u6765\u5efa\u7acb\u73af\u5883\uff1a teststu_8@OSLabExecNode0:~/user-land-filesystem$ ./setenv.sh \u8bf7\u8f93\u5165\u5de5\u4f5c\u76ee\u5f55\u540d\u79f0 ([\u5de5\u4f5c]\u76ee\u5f55\u5c06\u88ab\u81f3\u4e8e./fs\u76ee\u5f55\u4e0b): newfs ... \u751f\u6210\u5de5\u4f5c\u8def\u5f84: /home/guests/teststu_8/user-land-filesystem/fs/newfs \u8bf7\u8f93\u5165\u9879\u76ee\u540d\u79f0: newfs ... \u5176\u4e2d\uff0c\u5de5\u4f5c\u76ee\u5f55\u540d\u79f0\u5373\u5f00\u53d1\u8be5\u6587\u4ef6\u7cfb\u7edf\u7684 \u6587\u4ef6\u5939\u540d\u79f0 \u3002\u53ef\u4ee5\u770b\u5230\uff0c\u5b83\u5728 fs \u76ee\u5f55\u4e0b\u65b0\u5efa\u4e86\u4e00\u4e2a newfs \u76ee\u5f55\u4f5c\u4e3a\u5de5\u4f5c\u76ee\u5f55\u3002 \u63a5\u7740\uff0c\u9879\u76ee\u540d\u79f0\u5373\u771f\u6b63\u7684\u6587\u4ef6\u7cfb\u7edf\u540d\u79f0\uff0c\u53ef\u4ee5\u662f\u6587\u4ef6\u7cfb\u7edf\u7684\u7b80\u5199\uff0c\u4f8b\u5982\uff1anfs\uff08\u4ee3\u8868newfs\uff09\uff0c\u8fd9\u91cc\u8981\u6ce8\u610f\u9879\u76ee\u540d\u4e0d\u80fd\u6709 \u7279\u6b8a\u7b26\u53f7\u3001\u7a7a\u683c \u7b49\u3002 \u9879\u76ee\u5efa\u7acb\u5b8c\u6210\u4e4b\u540e\u7684\u7ed3\u6784 newfs \u5982\u4e0b\u6240\u793a\uff1a ./fs/newfs/ \u251c\u2500\u2500 .vscode \u251c\u2500\u2500 CMake \u2502 \u2514\u2500\u2500 FindFUSE.cmake \u251c\u2500\u2500 CMakeLists.txt \u251c\u2500\u2500 include \u2502 \u251c\u2500\u2500 ddriver_ctl_user.h \u2502 \u251c\u2500\u2500 ddriver.h \u2502 \u251c\u2500\u2500 newfs.h \u2502 \u2514\u2500\u2500 types.h \u251c\u2500\u2500 README.md \u251c\u2500\u2500 SPEC.txt \u251c\u2500\u2500 src \u2502 \u2514\u2500\u2500 newfs.c \u2514\u2500\u2500 tests \u2514\u2500\u2500 fs_test.sh \u8fd9\u4e2a\u7ed3\u6784\u53ef\u4ee5\u81ea\u884c\u4fee\u6539\u6dfb\u52a0\uff0c\u4e0d\u8fc7\u8981\u8bb0\u5f97 \u91cd\u65b0\u914d\u7f6eCMake \u3002\u672c\u6b21\u5b9e\u9a8c\u8981\u6c42\u5f88\u7b80\u5355\uff0c \u8dd1\u8fc7 tests \u4e0b\u7684 fs_test.sh \u5c31\u7b97\u5b8c\u6210 \u3002 1.3 DDRIVER\u811a\u672c\u7684\u8fd0\u7528 \u00b6 \u4e3a\u4e86\u65b9\u4fbf\u5bf9 ddriver \u8bbe\u5907\u8fdb\u884c\u63a7\u5236\uff0c\u6211\u4eec\u5c06ddriver.sh\u811a\u672c\u94fe\u63a5\u5230\u4e86 Linux\u547d\u4ee4\u7cfb\u7edf \u4e2d\uff0c\u63a5\u4e0b\u6765\uff0c\u5927\u5bb6\u5148\u8fd0\u884csource ~/.bashrc\uff0c\u7136\u540e\u540c\u5b66\u4eec\u5c31\u53ef\u4ee5\u5728\u4efb\u4f55\u76ee\u5f55\u4e0b\u8bbf\u95ee\u5230ddriver.sh\u811a\u672c\u3002\u8be5\u811a\u672c\u7684\u4e3b\u8981\u7528\u9014\u5982\u4e0b\uff1a teststu_8@OSLabExecNode0:~/$ source ~/.bashrc teststu_8@OSLabExecNode0:~/$ ddriver ==================================================================== ]]]]]]]] ]]]]]]]] ] ]] ] ]] ] ]] ]] ]] ]] ]-------] ] ]] ] ] ] ] ] ]] ]] ]] ]] ]_______/ ] ]] ] ]] ] ]] ]] ]] ] ] \\ ]] ]]]]]]]] ]]]]]]]] ]] ]] ]] ]]]]]]]] ]] ==================================================================== \u7528\u6cd5: ddriver [options] options: -i [k|u] \u5b89\u88c5ddriver: [k] - kernel / [u] - user -t \u6d4b\u8bd5ddriver[\u8bf7\u5ffd\u7565] -d \u5bfc\u51faddriver\u81f3\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55[PWD] -r \u64e6\u9664ddriver -l \u663e\u793addriver\u7684Log -v \u663e\u793addriver\u7684\u7c7b\u578b[\u5185\u6838\u6a21\u5757 / \u7528\u6237\u9759\u6001\u94fe\u63a5\u5e93] -h \u6253\u5370\u672c\u5e2e\u52a9\u83dc\u5355 ==================================================================== \u5e38\u7528\u7684\u529f\u80fd\u662f -v \u3001 -d \u4e0e -r \uff0c\u5b83\u4eec\u7684\u7528\u9014\u5206\u522b\u662f \u67e5\u770bddriver\u8bbe\u5907\u7c7b\u578b\u53ca\u8bbe\u5907\u4f4d\u7f6e \u3001 \u5c06ddriver\u8bbe\u5907\u955c\u50cf\u5bfc\u51fa\u5230\u5f53\u524d\u76ee\u5f55\u4e0b \u3001 \u5c06ddriver\u8bbe\u5907\u64e6\u9664\u5e72\u51c0 \u3002\u7528\u6cd5\u5982\u4e0b\uff1a ==================================================================== # \u67e5\u770b\u8bbe\u5907\u4f4d\u7f6e\u548c\u7c7b\u578b teststu_8@OSLabExecNode0:~$ ddriver -v \u9759\u6001\u94fe\u63a5\u5e93\u8bbe\u5907: /home/guests/teststu_8/ddriver teststu_8@OSLabExecNode0:~$ ==================================================================== # \u5c06ddriver\u8bbe\u5907\u5bfc\u51fa\u5230\u5f53\u524d\u76ee\u5f55\u4e0b teststu_8@OSLabExecNode0:~/$ ddriver -d [sudo] password for teststu_8: \u76ee\u6807\u8bbe\u5907 /home/guests/teststu_8/ddriver 8192+0 records in 8192+0 records out 4194304 bytes (4.2 MB, 4.0 MiB) copied, 0.094218 s, 44.5 MB/s \u6587\u4ef6\u5df2\u5bfc\u51fa\u81f3/home/guests/teststu_8/ddriver_dump\uff0c\u8bf7\u5b89\u88c5HexEditor\u63d2\u4ef6\u67e5\u770b\u5176\u5185\u5bb9 teststu_8@OSLabExecNode0:~/$ ls ddriver_dump teststu_8@OSLabExecNode0:~/$ ==================================================================== # \u5c06ddriver\u8bbe\u5907\u64e6\u9664\u5e72\u51c0 teststu_8@OSLabExecNode0:~/$ ddriver -r \u76ee\u6807\u8bbe\u5907 /home/guests/teststu_8/ddriver 8192+0 records in 8192+0 records out 4194304 bytes (4.2 MB, 4.0 MiB) copied, 0.0506111 s, 82.9 MB/s teststu_8@OSLabExecNode0:~/$ cat ./ddriver_dump teststu_8@OSLabExecNode0:~/$ 1.4 \u9879\u76ee\u7f16\u8bd1 \u00b6 \u9879\u76ee\u7f16\u8bd1\u7684\u8fc7\u7a0b\u5728\u65b0\u5efa\u9879\u76ee\u7684SPEC.txt\u6587\u4ef6\u4e2d\u6709\u6240\u4ea4\u4ee3\uff0c\u8fd9\u91cc\u63d0\u51fa\u6765\u8bb2\u4e00\u8bb2\uff1a Step 1 . SSH\u6253\u5f00 ./fs/newfs \u3002\u6253\u5f00VS Code\u8f6f\u4ef6\uff0c\u70b9\u51fb\u5de6\u4e0a\u89d2 \"\u6587\u4ef6\" \u2192 \"\u6253\u5f00\u6587\u4ef6\u5939\"\uff0c\u9009\u62e9\u5b9e\u9a8c\u5305\u76ee\u5f55\u4e0b\u7684fs/newfs\u6587\u4ef6\u5939\u3002 Step 2 . \u6253\u5f00CMakeLists.txt\u6587\u4ef6 Step 3 . ctrl + shift + p\u547c\u51fa\u547d\u4ee4\u83dc\u5355 Step 4 . \u8f93\u5165CMake: Configure Step 5 . \u67e5\u770bGenerator (\u5df2\u7528!!!!!\u6807\u8bb0) \u82e5 CMAKE_GENERATOR \u4e3a Unix Makefiles \uff0c\u8bf7\u624b\u52a8\u4fee\u6539 .vscode/tasks.json \u7684 command \u4e3a make \uff0c\u82e5\u4e3a Ninja \uff0c\u8bf7\u624b\u52a8\u4fee\u6539 .vscode/tasks.json \u7684 command \u4e3a ninja \uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a Step 6 . \u5230 newfs/src/newfs.c \u76ee\u5f55\uff0c\u6253\u65ad\u70b9 Step 7 . \u6309\u4e0bF5\u8fdb\u884c\u8c03\u8bd5 \u7f16\u8bd1\u8fd0\u884c\u539f\u7406\uff1a \u7f16\u8bd1\u3002 \u7f16\u8bd1\u73af\u8282\u5229\u7528CMakeLists\u5de5\u7a0b\u81ea\u52a8\u5e2e\u52a9\u6211\u4eec\u7f16\u8bd1\uff0c\u8fd9\u91cc\u8981\u5b89\u88c5CMake Tools\u7b49\u62d3\u5c55\uff0c\u76f8\u4fe1\u5927\u5bb6\u524d\u9762\u4e5f\u88c5\u8fc7\u4e86\u3002\u5176\u4e2d\uff0c\u6309\u4e0bF5\u540e\uff0cVSCode\u4f1a\u9996\u5148\u8fd0\u884c .vscode \u76ee\u5f55\u4e0b tasks.json \u4e2d\u7684\u547d\u4ee4\uff1a \u8be5\u547d\u4ee4\u6267\u884c\u7684\u64cd\u4f5c\u5c31\u662f\u5728CMakeLists\u751f\u6210\u7684 build \u76ee\u5f55\u4e0b\u8fd0\u884c make \uff0c\u7531\u6b64\u5b8c\u6210\u81ea\u52a8\u7f16\u8bd1\u3002 \u8fd0\u884c\u3002 \u8fd0\u884c\u8fc7\u7a0b\u662f\u5728 .vscode \u76ee\u5f55\u4e0b launch.json \u4e2d\u5b9a\u4e49\uff1a \u628a\u8fd0\u884c\u547d\u4ee4\u5c55\u5f00\u5b9e\u9645\u4e0a\u662f\uff1a teststu_8@OSLabExecNode0:~/user-land-filesystem/fs/newfs$ ./build/newfs --device = /home/guests/teststu_8/ddriver -f -d -s ./tests/mnt/ \u6b63\u5982\u6211\u4eec\u524d\u9762 \u5b9e\u9a8c\u539f\u7406 - FUSE\u67b6\u6784 \u4e2d\u8bf4\u5230\u7684\u90a3\u6837\uff0c FUSE\u6587\u4ef6\u7cfb\u7edf \u7684\u6302\u8f7d\u4e0d\u9700\u8981\u4f7f\u7528 mount \u547d\u4ee4\uff0c\u800c\u662f\u76f4\u63a5\u7528\u7f16\u8bd1\u51fa\u6765\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u4e0a\u8ff0\u547d\u4ee4\u7684\u610f\u4e49\u4e3a\uff1a \u5c06\u8bbe\u5907/home/guests/teststu_8/ddriver \u4ee5 newfs\u6587\u4ef6\u7cfb\u7edf \u5f62\u5f0f\uff0c \u6302\u8f7d \u5230 ./tests/mnt\u76ee\u5f55 \u4e0b\u3002 \u8fdb\u800c\u884d\u751f\u51fa FUSE\u6587\u4ef6\u7cfb\u7edf \u7684 \u5378\u8f7d \uff0c\u540c\u6837\uff0c\u4e0e\u4f20\u7edf\u5185\u6838\u6587\u4ef6\u7cfb\u7edf\u5378\u8f7d\u4e0d\u540c\uff0c\u5b83\u7684\u5378\u8f7d\u547d\u4ee4\u4e3a\uff1a teststu_8@OSLabExecNode0:~/user-land-filesystem/fs/newfs$ fusermount -u ./tests/mnt teststu_8@OSLabExecNode0:~/user-land-filesystem/fs/newfs$ \u8fd9\u91cc\u4f7f\u7528 fusermount -u \u547d\u4ee4\u8fdb\u884cFUSE\u6587\u4ef6\u7cfb\u7edf\u7684\u5378\u8f7d\u3002 2. \u4efb\u52a1\u4e00\uff1a \u719f\u6089DDRIVER\u9a71\u52a8 \u00b6 \u4efb\u52a1\u4e00\u8981\u6c42\u719f\u6089DDRIVER\u9a71\u52a8\uff0c\u6211\u4eec\u8981\u6c42\u5927\u5bb6\u6839\u636e\u6ce8\u91ca\u770b\u61c2 user-land-filesystem/tests/test_ddriver/src/test.c \u7684\u4ee3\u7801\uff0c\u5e76 \u6839\u636e\u63d0\u793a \u4fee\u6539\u5176\u4e2d\u7684 \u4e00\u5904\u9519\u8bef \uff1a \u7f16\u8bd1\u8fd0\u884c\u6d4b\u8bd5\u7a0b\u5e8f\u7684\u6b65\u9aa4\uff1a teststu_8@OSLabExecNode0:~/user-land-filesystem/tests/test_ddriver$ cmake CMakeLists.txt ... teststu_8@OSLabExecNode0:~/user-land-filesystem/tests/test_ddriver$ make ... teststu_8@OSLabExecNode0:~/user-land-filesystem/tests/test_ddriver$ ./ddriver_test 3. \u4efb\u52a1\u4e8c\uff1a\u57fa\u4e8eFUSE\u5b9e\u73b0\u9752\u6625\u7248EXT2\u6587\u4ef6\u7cfb\u7edf \u00b6 \u719f\u6089\u4e86\u9a71\u52a8\u540e\uff0c\u6211\u4eec\u4e5f\u5c31\u57fa\u672c\u638c\u63e1\u4e86\u8bbf\u95ee DDRIVER \u8bbe\u5907\u7684\u65b9\u6cd5\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u53ef\u4ee5\u57fa\u4e8eFUSE\u6765\u6b63\u5f0f\u7f16\u5199 \u9752\u6625\u7248EXT2\u6587\u4ef6\u7cfb\u7edf \u4e86\u3002\u6211\u4eec\u5df2\u7ecf\u5728 \u73af\u5883\u914d\u7f6e \u9636\u6bb5\u5c31\u4e3a\u5927\u5bb6\u642d\u5efa\u597d\u4e86FUSE\u6587\u4ef6\u7cfb\u7edf\u9879\u76ee\u6846\u67b6\u3002 \u8981\u63a5\u5165\u4e00\u4e2a\u6846\u67b6\uff0c\u90a3\u4e48\u5c11\u4e0d\u4e86\u94a9\u5b50\u51fd\u6570\uff08\u4e5f\u53ef\u79f0\u4e3a \u51fd\u6570\u6307\u9488 \uff09\u3002\u94a9\u5b50\u51fd\u6570 \u662f\u4e00\u7cfb\u5217\u51fd\u6570\u7684\u62bd\u8c61 \uff0c\u4ece\u800c\u8ba9C\u8bed\u8a00\u5177\u6709\u591a\u6001\u7684\u6027\u8d28\u3002\u5bf9\u4e8eFUSE\u6846\u67b6\uff0c\u5176\u7ed9\u6211\u4eec\u7684\u63a5\u53e3 \u5982\u4e0b \u3002 struct fuse_operations { int ( * getattr ) ( const char * , struct stat * ); int ( * readlink ) ( const char * , char * , size_t ); int ( * getdir ) ( const char * , fuse_dirh_t , fuse_dirfil_t ); int ( * mknod ) ( const char * , mode_t , dev_t ); int ( * mkdir ) ( const char * , mode_t ); int ( * unlink ) ( const char * ); int ( * rmdir ) ( const char * ); int ( * symlink ) ( const char * , const char * ); int ( * rename ) ( const char * , const char * ); int ( * link ) ( const char * , const char * ); int ( * chmod ) ( const char * , mode_t ); int ( * chown ) ( const char * , uid_t , gid_t ); int ( * truncate ) ( const char * , off_t ); int ( * utime ) ( const char * , struct utimbuf * ); int ( * open ) ( const char * , struct fuse_file_info * ); int ( * read ) ( const char * , char * , size_t , off_t , struct fuse_file_info * ); int ( * write ) ( const char * , const char * , size_t , off_t , struct fuse_file_info * ); int ( * statfs ) ( const char * , struct statvfs * ); int ( * flush ) ( const char * , struct fuse_file_info * ); int ( * release ) ( const char * , struct fuse_file_info * ); int ( * fsync ) ( const char * , int , struct fuse_file_info * ); int ( * setxattr ) ( const char * , const char * , const char * , size_t , int ); int ( * getxattr ) ( const char * , const char * , char * , size_t ); int ( * listxattr ) ( const char * , char * , size_t ); int ( * removexattr ) ( const char * , const char * ); int ( * opendir ) ( const char * , struct fuse_file_info * ); int ( * readdir ) ( const char * , void * , fuse_fill_dir_t , off_t , struct fuse_file_info * ); int ( * releasedir ) ( const char * , struct fuse_file_info * ); int ( * fsyncdir ) ( const char * , int , struct fuse_file_info * ); void * ( * init ) ( struct fuse_conn_info * conn ); void ( * destroy ) ( void * ); int ( * access ) ( const char * , int ); int ( * create ) ( const char * , mode_t , struct fuse_file_info * ); int ( * ftruncate ) ( const char * , off_t , struct fuse_file_info * ); int ( * fgetattr ) ( const char * , struct stat * , struct fuse_file_info * ); int ( * lock ) ( const char * , struct fuse_file_info * , int cmd , struct flock * ); int ( * utimens ) ( const char * , const struct timespec tv [ 2 ]); int ( * bmap ) ( const char * , size_t blocksize , uint64_t * idx ); int ( * ioctl ) ( const char * , int cmd , void * arg , struct fuse_file_info * , unsigned int flags , void * data ); int ( * poll ) ( const char * , struct fuse_file_info * , struct fuse_pollhandle * ph , unsigned * reventsp ); int ( * write_buf ) ( const char * , struct fuse_bufvec * buf , off_t off , struct fuse_file_info * ); int ( * read_buf ) ( const char * , struct fuse_bufvec ** bufp , size_t size , off_t off , struct fuse_file_info * ); int ( * flock ) ( const char * , struct fuse_file_info * , int op ); int ( * fallocate ) ( const char * , int , off_t , off_t , struct fuse_file_info * ); }; \u4ee5\u4e0b\u9762\u4e00\u884c\u4ee3\u7801\u4e3a\u4f8b\uff1a int ( * mkdir ) ( const char * , mode_t ); \u8fd9\u4e2a\u94a9\u5b50\u51fd\u6570 \u62bd\u8c61\u4e86\u6240\u6709 mkdir \u7684\u64cd\u4f5c\uff1a\u6240\u6709 mkdir \u90fd\u9700\u8981\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\u4f5c\u4e3a \u8def\u5f84 \u3001\u53e6\u4e00\u4e2a\u53c2\u6570\u4f5c\u4e3a \u521b\u5efa\u6a21\u5f0f \uff08\u53ea\u8bfb/\u53ea\u5199/\u53ef\u8bfb\u53ef\u5199\uff09\u3002\u4e0d\u540c\u7684\u6587\u4ef6\u7cfb\u7edf\u53ef\u4ee5\u57fa\u4e8e\u6b64\u5b9e\u73b0\u4e0d\u540c\u7684 mkdir \u4ee3\u7801\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff1a // \u6587\u4ef6\u7cfb\u7edf\u4e00\u5b9e\u73b0mkdir int mkdir ( const char * path , mode_t mode ) { printf ( \"\u6211\u4e0d\u7ed9\u4f60\u521b\u5efa %s \\n \" , path ); return 0 ; } // \u6587\u4ef6\u7cfb\u7edf\u4e8c\u5b9e\u73b0mkdir int mkdir ( const char * path , mode_t mode ) { dentry = lookup ( path ); // \u67e5\u627e\u8def\u5f84\uff0c\u627e\u5230\u7236\u7ea7dentry inode = new_inode (); // \u521b\u5efa\u8be5\u76ee\u5f55\u6587\u4ef6\u7684inode new_dentry = new_dentry (); // \u521b\u5efa\u5c5e\u4e8e\u8be5inode\u7684dentry bond ( new_dentry , inode ); // \u8ba9\u8be5dentry\u6307\u5411inode add ( dentry , new_dentry ); // \u5c06\u65b0\u521b\u5efa\u7684dentry\u52a0\u5165\u5230\u7236\u7ea7dentry\u5bf9\u5e94\u7684\u76ee\u5f55\u6587\u4ef6\u4e2d return 0 ; } FUSE\u6846\u67b6 \u901a\u8fc7\u5411 fuse_main \u51fd\u6570\u4f20\u5165\u4e00\u4e2a\u88ab\u590d\u5236\u7684 fuse_operations \u7ed3\u6784\u4f53\u5373\u53ef\u5b8c\u6210\u64cd\u4f5c\u7684\u6ce8\u518c\uff0c\u4ece\u800c\u4f7f\u5f97\u6587\u4ef6\u7cfb\u7edf\u80fd\u591f\u6309\u7167\u6211\u4eec\u65e2\u5b9a\u7684\u65b9\u5f0f\u6765\u5904\u7406\u547d\u4ee4\u3002\u4e0b\u56fe\u4e3a \u5c06\u64cd\u4f5c\u63a5\u5165FUSE\u7684\u5165\u53e3 \uff1a \u672c\u6b21\u5b9e\u9a8c\u7531\u4e8e\u5b9e\u73b0\u7684\u529f\u80fd\u8f83\u4e3a\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u8981\u6c42\u540c\u5b66\u4eec\u5b9e\u73b0\u4ee5\u4e0b\u94a9\u5b50\uff08\u5176\u4e2d\u6807\u8bb0\u4e3a NULL \u7684\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\u4e0d\u8981\u6c42\u5b9e\u73b0\uff09\uff1a // Line 21 static struct fuse_operations operations = { . init = newfs_init , /* mount\u6587\u4ef6\u7cfb\u7edf */ . destroy = newfs_destroy , /* umount\u6587\u4ef6\u7cfb\u7edf */ . mkdir = newfs_mkdir , /* \u5efa\u76ee\u5f55\uff0cmkdir */ . getattr = newfs_getattr , /* \u83b7\u53d6\u6587\u4ef6\u5c5e\u6027\uff0c\u7c7b\u4f3cstat\uff0c\u5fc5\u987b\u5b8c\u6210 */ . readdir = newfs_readdir , /* \u586b\u5145dentrys */ . mknod = newfs_mknod , /* \u521b\u5efa\u6587\u4ef6\uff0ctouch\u76f8\u5173 */ . write = NULL , /* \u5199\u5165\u6587\u4ef6 */ . read = NULL , /* \u8bfb\u6587\u4ef6 */ . utimens = newfs_utimens , /* \u4fee\u6539\u65f6\u95f4\uff0c\u5ffd\u7565\uff0c\u907f\u514dtouch\u62a5\u9519 */ . truncate = NULL , /* \u6539\u53d8\u6587\u4ef6\u5927\u5c0f */ . unlink = NULL , /* \u5220\u9664\u6587\u4ef6 */ . rmdir = NULL , /* \u5220\u9664\u76ee\u5f55\uff0c rm -r */ . rename = NULL , /* \u91cd\u547d\u540d\uff0cmv */ . open = NULL , . opendir = NULL , . access = NULL }; \u5148\u6765\u770b\u4e00\u4e0bsfs\u6587\u4ef6\u7cfb\u7edf\u7ed9\u51fa\u7684\u6570\u636e\u7ed3\u6784\u5b9a\u4e49\uff1a struct custom_options { const char * device ; //\u9a71\u52a8\u7684\u8def\u5f84 boolean show_help ; }; struct sfs_inode /*\u5185\u5b58\u4e2dinode\u7684\u6570\u636e\u7ed3\u6784*/ { int ino ; /* \u5728inode\u4f4d\u56fe\u4e2d\u7684\u4e0b\u6807 */ int size ; /* \u6587\u4ef6\u5df2\u5360\u7528\u7a7a\u95f4 */ int dir_cnt ; struct sfs_dentry * dentry ; /* \u6307\u5411\u8be5inode\u7684dentry */ struct sfs_dentry * dentrys ; /* \u6240\u6709\u76ee\u5f55\u9879 */ uint8_t * data ; }; struct sfs_dentry /*\u5185\u5b58\u4e2d\u76ee\u5f55\u9879\u7684\u6570\u636e\u7ed3\u6784*/ { char fname [ SFS_MAX_FILE_NAME ]; struct sfs_dentry * parent ; /* \u7236\u4eb2Inode\u7684dentry */ struct sfs_dentry * brother ; /* \u5144\u5f1f */ int ino ; struct sfs_inode * inode ; /* \u6307\u5411inode */ SFS_FILE_TYPE ftype ; }; struct sfs_super /*\u5185\u5b58\u4e2d\u8d85\u7ea7\u5757\u7684\u6570\u636e\u7ed3\u6784*/ { int driver_fd ; int sz_io ; /*inode\u7684\u5927\u5c0f*/ int sz_disk ; /*\u78c1\u76d8\u5927\u5c0f*/ int sz_usage ; int max_ino ; /*inode\u7684\u6570\u76ee*/ uint8_t * map_inode ; /*inode\u4f4d\u56fe*/ int map_inode_blks ; /*inode\u4f4d\u56fe\u6240\u5360\u7684\u6570\u636e\u5757*/ int map_inode_offset ; /*inode\u4f4d\u56fe\u7684\u8d77\u59cb\u5730\u5740*/ int data_offset ; /*\u6570\u636e\u5757\u7684\u8d77\u59cb\u5730\u5740*/ boolean is_mounted ; struct sfs_dentry * root_dentry ; /*\u6839\u76ee\u5f55*/ }; /****************************************************************************** * \u78c1\u76d8\u4e2d\u7684\u6570\u636e\u7ed3\u6784 *******************************************************************************/ struct sfs_super_d { uint32_t magic_num ; int sz_usage ; int max_ino ; int map_inode_blks ; int map_inode_offset ; int data_offset ; }; struct sfs_inode_d { int ino ; /* \u5728inode\u4f4d\u56fe\u4e2d\u7684\u4e0b\u6807 */ int size ; /* \u6587\u4ef6\u5df2\u5360\u7528\u7a7a\u95f4 */ int dir_cnt ; SFS_FILE_TYPE ftype ; }; struct sfs_dentry_d { char fname [ SFS_MAX_FILE_NAME ]; SFS_FILE_TYPE ftype ; int ino ; /* \u6307\u5411\u7684ino\u53f7 */ }; \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u518d\u5206\u522b\u4ecb\u7ecd\u5404\u4e2a\u64cd\u4f5c\u5b9e\u73b0\u8981\u7ecf\u8fc7\u7684\u94a9\u5b50\u51fd\u6570\uff0c\u4ee5\u4fbf\u8ba9\u540c\u5b66\u4eec\u6709\u4e2a\u66f4\u76f4\u89c2\u7684\u7406\u89e3\u3002 3.1 \u6302\u8f7d \u00b6 \u5f53\u6302\u8f7dFUSE\u6587\u4ef6\u7cfb\u7edf\u65f6\uff0c\u4f1a \u6267\u884c\u7684\u94a9\u5b50 \u662f .init \uff0c\u6211\u4eec\u53ef\u4ee5\u5728 .init \u94a9\u5b50\u4e2d\u5b8c\u6210 \u8d85\u7ea7\u5757\u7684\u8bfb\u53d6 \u3001 \u4f4d\u56fe\u7684\u5efa\u7acb \u3001 \u9a71\u52a8\u7684\u521d\u59cb\u5316 \u7b49\u64cd\u4f5c\uff1a /** * @brief \u6302\u8f7d\uff08mount\uff09\u6587\u4ef6\u7cfb\u7edf * * @param conn_info \u53ef\u5ffd\u7565\uff0c\u4e00\u4e9b\u5efa\u7acb\u8fde\u63a5\u76f8\u5173\u7684\u4fe1\u606f * @return void* */ void * newfs_init ( struct fuse_conn_info * conn_info ) { /* TODO: \u5728\u8fd9\u91cc\u8fdb\u884c\u6302\u8f7d */ /* \u4e0b\u9762\u662f\u4e00\u4e2a\u63a7\u5236\u8bbe\u5907\u7684\u793a\u4f8b */ super . fd = ddriver_open ( newfs_options . device ); return NULL ; } \u4e0a\u9762\u7684\u793a\u4f8b\u662f\u521d\u59cb\u5316\u9a71\u52a8\u8bbe\u5907\uff0c\u5176\u4e2d newfs_options \u4e3a\u81ea\u5b9a\u4e49\u53c2\u6570\uff0c\u8fd9\u91cc\u6211\u4eec\u4e0d\u5bf9 \u81ea\u5b9a\u4e49\u53c2\u6570 \u505a\u66f4\u591a\u7684\u4ecb\u7ecd\uff0c\u5927\u5bb6\u4f1a\u7528\u5373\u53ef\u3002 \u6211\u4eec\u901a\u8fc7\u4ee5\u4e0b\u64cd\u4f5c\u6765\u5b9e\u73b0\u6302\u8f7d\u529f\u80fd\uff1a Step 1 . \u9996\u5148\u5b9a\u4e49\u5185\u5b58\u4e2d\u7684\u6570\u636e\u7ed3\u6784\u3002 /*\u5b9a\u4e49\u78c1\u76d8\u5404\u90e8\u5206\u7ed3\u6784*/ int ret = SFS_ERROR_NONE ; int driver_fd ; struct sfs_super_d sfs_super_d ; struct sfs_dentry * root_dentry ; struct sfs_inode * root_inode ; int inode_num ; int map_inode_blks ; int super_blks ; boolean is_init = FALSE ; sfs_super . is_mounted = FALSE ; Step 2 . \u6253\u5f00\u9a71\u52a8\u3002 driver_fd = ddriver_open ( options . device ); /*\u6253\u5f00\u9a71\u52a8*/ if ( driver_fd < 0 ) { return driver_fd ; } Step 3 . \u5411\u5185\u5b58\u8d85\u7ea7\u5757\u4e2d\u6807\u8bb0\u9a71\u52a8\u5e76\u5199\u5165\u78c1\u76d8\u5927\u5c0f\u548c\u5355\u6b21IO\u5927\u5c0f\u3002 sfs_super . driver_fd = driver_fd ; ddriver_ioctl ( SFS_DRIVER (), IOC_REQ_DEVICE_SIZE , & sfs_super . sz_disk ); ddriver_ioctl ( SFS_DRIVER (), IOC_REQ_DEVICE_IO_SZ , & sfs_super . sz_io ); Step 4 . \u521b\u5efa\u6839\u76ee\u5f55\u9879\u5e76\u8bfb\u53d6\u78c1\u76d8\u8d85\u7ea7\u5757\u5230\u5185\u5b58\u3002 if ( driver_fd < 0 ) { return driver_fd ; } Step 5 . \u6839\u636e\u8d85\u7ea7\u5757\u5e7b\u6570\u5224\u65ad\u662f\u5426\u4e3a\u7b2c\u4e00\u6b21\u542f\u52a8\u78c1\u76d8\uff0c\u5982\u679c\u662f\u7b2c\u4e00\u6b21\u542f\u52a8\u78c1\u76d8\uff0c\u5219\u9700\u8981\u5efa\u7acb\u78c1\u76d8\u8d85\u7ea7\u5757\u7684\u5e03\u5c40\u3002 if ( sfs_super_d . magic_num != SFS_MAGIC_NUM ) { /* \u5e7b\u6570\u65e0 */ /* \u4f30\u7b97\u5404\u90e8\u5206\u5927\u5c0f */ super_blks = SFS_ROUND_UP ( sizeof ( struct sfs_super_d ), SFS_IO_SZ ()) / SFS_IO_SZ (); inode_num = SFS_DISK_SZ () / (( SFS_DATA_PER_FILE + SFS_INODE_PER_FILE ) * SFS_IO_SZ ()); map_inode_blks = SFS_ROUND_UP ( SFS_ROUND_UP ( inode_num , UINT32_BITS ), SFS_IO_SZ ()) / SFS_IO_SZ (); /* \u5e03\u5c40layout */ sfs_super . max_ino = ( inode_num - super_blks - map_inode_blks ); sfs_super_d . map_inode_offset = SFS_SUPER_OFS + SFS_BLKS_SZ ( super_blks ); sfs_super_d . data_offset = sfs_super_d . map_inode_offset + SFS_BLKS_SZ ( map_inode_blks ); sfs_super_d . map_inode_blks = map_inode_blks ; sfs_super_d . sz_usage = 0 ; SFS_DBG ( \"inode map blocks: %d \\n \" , map_inode_blks ); is_init = TRUE ; } Step 6 . \u521d\u59cb\u5316\u5185\u5b58\u4e2d\u7684\u8d85\u7ea7\u5757\uff0c\u548c\u6839\u76ee\u5f55\u9879\u3002 sfs_super . sz_usage = sfs_super_d . sz_usage ; /* \u5efa\u7acb in-memory \u7ed3\u6784 */ sfs_super . map_inode = ( uint8_t * ) malloc ( SFS_BLKS_SZ ( sfs_super_d . map_inode_blks )); sfs_super . map_inode_blks = sfs_super_d . map_inode_blks ; sfs_super . map_inode_offset = sfs_super_d . map_inode_offset ; sfs_super . data_offset = sfs_super_d . data_offset ; if ( sfs_driver_read ( sfs_super_d . map_inode_offset , ( uint8_t * )( sfs_super . map_inode ), SFS_BLKS_SZ ( sfs_super_d . map_inode_blks )) != SFS_ERROR_NONE ) { return - SFS_ERROR_IO ; } if ( is_init ) { /* \u5206\u914d\u6839\u8282\u70b9 */ root_inode = sfs_alloc_inode ( root_dentry ); sfs_sync_inode ( root_inode ); } root_inode = sfs_read_inode ( root_dentry , SFS_ROOT_INO ); root_dentry -> inode = root_inode ; sfs_super . root_dentry = root_dentry ; sfs_super . is_mounted = TRUE ; sfs_dump_map (); \u5176\u4e2d newz_dentry \u51fd\u6570\u7684\u4f5c\u7528\u662f\u521b\u5efa\u76ee\u5f55\u9879\uff0c\u539f\u578b\u5982\u4e0b\uff1a static inline struct sfs_dentry * new_dentry ( char * fname , SFS_FILE_TYPE ftype ) { struct sfs_dentry * dentry = ( struct sfs_dentry * ) malloc ( sizeof ( struct sfs_dentry )); memset ( dentry , 0 , sizeof ( struct sfs_dentry )); SFS_ASSIGN_FNAME ( dentry , fname ); dentry -> ftype = ftype ; dentry -> ino = -1 ; dentry -> inode = NULL ; dentry -> parent = NULL ; dentry -> brother = NULL ; } \u5176\u4e2d sfs_alloc_inode \u4f5c\u7528\u662f\u4e3a\u76ee\u5f55\u9879\u521b\u5efainode\u8282\u70b9\uff0c\u5177\u4f53\u6b65\u9aa4\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u6b65\uff1a \u200b \u2460\u5728inode\u4f4d\u56fe\u4e0a\u5bfb\u627e\u672a\u4f7f\u7528\u7684inode\u8282\u70b9\u3002 for ( byte_cursor = 0 ; byte_cursor < SFS_BLKS_SZ ( sfs_super . map_inode_blks ); byte_cursor ++ ) /*\u5728inode\u4f4d\u56fe\u4e0a\u5bfb\u627e\u672a\u4f7f\u7528\u7684inode*/ { for ( bit_cursor = 0 ; bit_cursor < UINT8_BITS ; bit_cursor ++ ) { if (( sfs_super . map_inode [ byte_cursor ] & ( 0x1 << bit_cursor )) == 0 ) { /* \u5f53\u524dino_cursor\u4f4d\u7f6e\u7a7a\u95f2 */ sfs_super . map_inode [ byte_cursor ] |= ( 0x1 << bit_cursor ); is_find_free_entry = TRUE ; break ; } ino_cursor ++ ; } if ( is_find_free_entry ) { break ; } } \u200b \u2461\u4e3a\u76ee\u5f55\u9879\u5206\u914dinode\u8282\u70b9\u5e76\u5efa\u7acb\u4ed6\u4eec\u4e4b\u95f4\u7684\u8fde\u63a5\u3002 if ( ! is_find_free_entry || ino_cursor == sfs_super . max_ino ) return - SFS_ERROR_NOSPACE ; inode = ( struct sfs_inode * ) malloc ( sizeof ( struct sfs_inode )); inode -> ino = ino_cursor ; inode -> size = 0 ; /* dentry\u6307\u5411inode */ dentry -> inode = inode ; dentry -> ino = inode -> ino ; /* inode\u6307\u56dedentry */ inode -> dentry = dentry ; inode -> dir_cnt = 0 ; inode -> dentrys = NULL ; if ( SFS_IS_REG ( inode )) { inode -> data = ( uint8_t * ) malloc ( SFS_BLKS_SZ ( SFS_DATA_PER_FILE )); } \u800csfs_read_inode\u51fd\u6570\u4f5c\u7528\u662f\u4ece\u78c1\u76d8\u4e2d\u8bfb\u53d6inode\u8282\u70b9\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a \u200b \u2460\u901a\u8fc7\u78c1\u76d8\u9a71\u52a8\u6765\u5c06\u78c1\u76d8\u4e2dino\u53f7\u7684inode\u8bfb\u5165\u5185\u5b58\u3002 if ( sfs_driver_read ( SFS_INO_OFS ( ino ), ( uint8_t * ) & inode_d , sizeof ( struct sfs_inode_d )) != SFS_ERROR_NONE ) { SFS_DBG ( \"[%s] io error \\n \" , __func__ ); return NULL ; } inode -> dir_cnt = 0 ; inode -> ino = inode_d . ino ; inode -> size = inode_d . size ; inode -> dentry = dentry ; \u200b \u2461 \u5224\u65adinode\u7684\u6587\u4ef6\u7c7b\u578b\uff0c\u5982\u679c\u662f\u76ee\u5f55\u7c7b\u578b\u5219\u9700\u8981\u8bfb\u53d6\u6bcf\u4e00\u4e2a\u76ee\u5f55\u9879\u5e76\u5efa\u7acb\u8fde\u63a5\u3002 /*\u5224\u65adiNode\u8282\u70b9\u7684\u6587\u4ef6\u7c7b\u578b*/ if ( SFS_IS_DIR ( inode )) { /*\u5982\u679c\u662f\u76ee\u5f55\u7684\u8bdd\u9700\u8981\u5c06\u76ee\u5f55\u9879\u5efa\u7acb\u8fde\u63a5*/ dir_cnt = inode_d . dir_cnt ; for ( i = 0 ; i < dir_cnt ; i ++ ) { if ( sfs_driver_read ( SFS_DATA_OFS ( ino ) + i * sizeof ( struct sfs_dentry_d ), ( uint8_t * ) & dentry_d , sizeof ( struct sfs_dentry_d )) != SFS_ERROR_NONE ) { SFS_DBG ( \"[%s] io error \\n \" , __func__ ); return NULL ; } sub_dentry = new_dentry ( dentry_d . fname , dentry_d . ftype ); sub_dentry -> parent = inode -> dentry ; sub_dentry -> ino = dentry_d . ino ; sfs_alloc_dentry ( inode , sub_dentry ); } } \u200b \u2462\u5982\u679c\u662f\u6587\u4ef6\u7c7b\u578b\u76f4\u63a5\u8bfb\u53d6\u6570\u636e\u5373\u53ef\u3002 else if ( SFS_IS_REG ( inode )) { /*\u6587\u4ef6\u7c7b\u578b\u76f4\u63a5\u8bfb\u53d6\u6570\u636e\u5373\u53ef*/ inode -> data = ( uint8_t * ) malloc ( SFS_BLKS_SZ ( SFS_DATA_PER_FILE )); if ( sfs_driver_read ( SFS_DATA_OFS ( ino ), ( uint8_t * ) inode -> data , SFS_BLKS_SZ ( SFS_DATA_PER_FILE )) != SFS_ERROR_NONE ) { SFS_DBG ( \"[%s] io error \\n \" , __func__ ); return NULL ; } } 3.2 \u83b7\u53d6\u6587\u4ef6\u5c5e\u6027 \u00b6 FUSE\u6587\u4ef6\u7cfb\u7edf\u4e3a\u4e86\u83b7\u5f97\u6bcf\u4e2a\u6587\u4ef6\u7684\u72b6\u6001 \uff0c\u8981\u4e0d\u65ad\u8c03\u7528 getattr \u94a9\u5b50\uff0c\u8fd9\u4e2a\u94a9\u5b50\u51fd\u6570\u7c7b\u4f3c\u4e8e xv6 \u91cc\u7684 fstat \u3002\u5b9e\u73b0 ls \u3001 mkdir \u3001 touch \u7b49\u64cd\u4f5c\u7684\u524d\u63d0\u5c31\u662f\u5b8c\u6210 getattr \u94a9\u5b50\u7684\u7f16\u5199\uff0c\u8fd9\u91cc\u7ed9\u4e2a\u4f8b\u5b50\uff1a \u200b \u2460\u9996\u5148\u627e\u5230\u8def\u5f84\u6240\u5bf9\u5e94\u7684\u76ee\u5f55\u9879\u3002 struct sfs_dentry * dentry = sfs_lookup ( path , & is_find , & is_root ); if ( is_find == FALSE ) { return - SFS_ERROR_NOTFOUND ; } \u200b \u2461\u5224\u65ad\u76ee\u5f55\u9879\u7684\u6587\u4ef6\u7c7b\u578b\u5e76\u5bf9\u72b6\u6001\u8fdb\u884c\u7f16\u5199\u3002 if ( SFS_IS_DIR ( dentry -> inode )) { //\u5982\u679c\u662f\u76ee\u5f55\u7c7b\u578b sfs_stat -> st_mode = S_IFDIR | SFS_DEFAULT_PERM ; sfs_stat -> st_size = dentry -> inode -> dir_cnt * sizeof ( struct sfs_dentry_d ); } else if ( SFS_IS_REG ( dentry -> inode )) { //\u5982\u679c\u662f\u6587\u4ef6\u7c7b\u578b sfs_stat -> st_mode = S_IFREG | SFS_DEFAULT_PERM ; sfs_stat -> st_size = dentry -> inode -> size ; } sfs_stat -> st_nlink = 1 ; sfs_stat -> st_uid = getuid (); sfs_stat -> st_gid = getgid (); sfs_stat -> st_atime = time ( NULL ); sfs_stat -> st_mtime = time ( NULL ); sfs_stat -> st_blksize = SFS_IO_SZ (); if ( is_root ) { sfs_stat -> st_size = sfs_super . sz_usage ; sfs_stat -> st_blocks = SFS_DISK_SZ () / SFS_IO_SZ (); sfs_stat -> st_nlink = 2 ; /* !\u7279\u6b8a\uff0c\u6839\u76ee\u5f55link\u6570\u4e3a2 */ } return SFS_ERROR_NONE ; } getattr \u7684\u5b9e\u73b0\u9996\u5148\u662f \u89e3\u6790\u8def\u5f84 \uff0c\u4ece\u800c\u83b7\u53d6\u76f8\u5e94\u6587\u4ef6\u7684 inode\u6216dentry \uff0c\u63a5\u7740\u586b\u5199 struct stat* \u7ed3\u6784\u4f53\u5373\u53ef\u3002 \u5176\u4e2d sfs_lookup \u51fd\u6570\u5f88\u91cd\u8981\uff0c\u8bb8\u591a\u9700\u8981\u5b9e\u73b0\u7684\u94a9\u5b50\u90fd\u9700\u8981\u7528\u5230\u5b83\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u627e\u5230\u8def\u5f84\u6240\u5bf9\u5e94\u7684\u76ee\u5f55\u9879\uff0c\u6216\u8005\u8fd4\u56de\u4e0a\u4e00\u7ea7\u76ee\u5f55\u9879\uff0c\u539f\u578b\u5982\u4e0b\uff1a \u200b \u2460\u9996\u5148\u8ba1\u7b97\u8def\u5f84\u7684\u7ea7\u6570\uff0c\u5982\u679c\u4e3a0\u8bf4\u660e\u662f\u6839\u76ee\u5f55\u3002 int total_lvl = sfs_calc_lvl ( path ); /*\u8ba1\u7b97\u8def\u5f84\u7ea7\u6570*/ ... if ( total_lvl == 0 ) { /* \u6839\u76ee\u5f55 */ * is_find = TRUE ; * is_root = TRUE ; dentry_ret = sfs_super . root_dentry ; } \u200b \u2461\u4e0d\u4e3a0\u5219\u9700\u8981\u4ece\u6839\u76ee\u5f55\u5f00\u59cb\uff0c\u4f9d\u6b21\u5339\u914d\u8def\u5f84\u4e2d\u7684\u76ee\u5f55\u9879\uff0c\u76f4\u5230\u627e\u5230\u6587\u4ef6\u6240\u5bf9\u5e94\u7684\u76ee\u5f55\u9879\u3002 \u200b \u2462\u5982\u679c\u6ca1\u627e\u5230\u5219\u8fd4\u56de\u6700\u540e\u4e00\u6b21\u5339\u914d\u7684\u76ee\u5f55\u9879\u3002 fname = strtok ( path_cpy , \"/\" ); /*\u5206\u6790\u8def\u5f84\u51fd\u6570\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u5b83\u7684\u7528\u6cd5*/ while ( fname ) { lvl ++ ; if ( dentry_cursor -> inode == NULL ) { /* Cache\u673a\u5236 */ sfs_read_inode ( dentry_cursor , dentry_cursor -> ino ); } inode = dentry_cursor -> inode ; if ( SFS_IS_REG ( inode ) && lvl < total_lvl ) { SFS_DBG ( \"[%s] not a dir \\n \" , __func__ ); dentry_ret = inode -> dentry ; break ; } if ( SFS_IS_DIR ( inode )) { /*\u76ee\u5f55\u7c7b\u578b\u7684\u6587\u4ef6\u9700\u8981\u5c06\u76ee\u5f55\u9879\u548c\u8def\u5f84\u540d\u8fdb\u884c\u6bd4\u8f83*/ dentry_cursor = inode -> dentrys ; is_hit = FALSE ; while ( dentry_cursor ) { if ( memcmp ( dentry_cursor -> fname , fname , strlen ( fname )) == 0 ) { is_hit = TRUE ; break ; } dentry_cursor = dentry_cursor -> brother ; } if ( ! is_hit ) { * is_find = FALSE ; SFS_DBG ( \"[%s] not found %s \\n \" , __func__ , fname ); dentry_ret = inode -> dentry ; break ; } if ( is_hit && lvl == total_lvl ) { * is_find = TRUE ; dentry_ret = dentry_cursor ; break ; } } fname = strtok ( NULL , \"/\" ); } if ( dentry_ret -> inode == NULL ) { dentry_ret -> inode = sfs_read_inode ( dentry_ret , dentry_ret -> ino ); } return dentry_ret ; 3.3 \u5efa\u7acb\u76ee\u5f55 \u00b6 \u5f53\u4e3aFUSE\u6587\u4ef6\u7cfb\u7edf\u521b\u5efa\u76ee\u5f55\u65f6\uff0c\u4f1a \u6267\u884c\u7684\u94a9\u5b50 \u662f .mkdir \uff1a \u200b \u2460\u5bfb\u627e\u4e0a\u7ea7\u76ee\u5f55\u9879\u3002 \u200b \u2461\u521b\u5efa\u76ee\u5f55\u5e76\u5efa\u7acb\u8fde\u63a5\u3002 /** * @brief \u521b\u5efa\u76ee\u5f55 * * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84 * @param mode \u521b\u5efa\u6a21\u5f0f\uff08\u53ea\u8bfb\uff1f\u53ea\u5199\uff1f\uff09\uff0c\u53ef\u5ffd\u7565 * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int sfs_mkdir ( const char * path , mode_t mode ) { ( void ) mode ; boolean is_find , is_root ; char * fname ; struct sfs_dentry * last_dentry = sfs_lookup ( path , & is_find , & is_root ); //\u5bfb\u627e\u4e0a\u7ea7\u76ee\u5f55\u9879 struct sfs_dentry * dentry ; struct sfs_inode * inode ; if ( is_find ) { //\u76ee\u5f55\u5b58\u5728 return - SFS_ERROR_EXISTS ; } if ( SFS_IS_REG ( last_dentry -> inode )) { return - SFS_ERROR_UNSUPPORTED ; } fname = sfs_get_fname ( path ); dentry = new_dentry ( fname , SFS_DIR ); dentry -> parent = last_dentry ; inode = sfs_alloc_inode ( dentry ); sfs_alloc_dentry ( last_dentry -> inode , dentry ); return SFS_ERROR_NONE ; } 3.4 \u5efa\u7acb\u6587\u4ef6 \u00b6 \u5f53\u4e3aFUSE\u6587\u4ef6\u7cfb\u7edf\u521b\u5efa\u6587\u4ef6\u65f6\uff0c\u4f1a \u6267\u884c\u7684\u94a9\u5b50 \u662f .mknod \uff0c\u5728\u6211\u4eec\u7ed9\u7684\u6846\u67b6\u4e2d\uff0c\u7ed9\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u601d\u8def\uff1a /** * @brief \u521b\u5efa\u6587\u4ef6 * * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84 * @param mode \u521b\u5efa\u6587\u4ef6\u7684\u6a21\u5f0f\uff0c\u53ef\u5ffd\u7565 * @param dev \u8bbe\u5907\u7c7b\u578b\uff0c\u53ef\u5ffd\u7565 * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int newfs_mknod ( const char * path , mode_t mode , dev_t dev ) { /* TODO: \u89e3\u6790\u8def\u5f84\uff0c\u5e76\u521b\u5efa\u76f8\u5e94\u7684\u6587\u4ef6 */ return 0 ; } \u800c\u5728sfs\u6587\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u94a9\u5b50\u7684\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\uff1a \u200b \u2460\u627e\u5230\u521b\u5efa\u6587\u4ef6\u8def\u5f84\u4e2d\u6240\u5bf9\u5e94\u7684\u76ee\u5f55\u9879\u3002 \u200b \u2461\u5982\u679c\u6587\u4ef6\u5b58\u5728\u5219\u8fd4\u56de\u9519\u8bef\u3002 \u200b \u2462\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u5728\u521b\u5efa\u76ee\u5f55\u9879\u548c\u5bf9\u5e94\u7684inode\uff0c\u5e76\u548c\u7236\u76ee\u5f55\u9879\u5efa\u7acb\u8fde\u63a5\u3002 /** * @brief \u521b\u5efa\u6587\u4ef6 * * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84 * @param mode \u521b\u5efa\u6587\u4ef6\u7684\u6a21\u5f0f\uff0c\u53ef\u5ffd\u7565 * @param dev \u8bbe\u5907\u7c7b\u578b\uff0c\u53ef\u5ffd\u7565 * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int sfs_mknod ( const char * path , mode_t mode , dev_t dev ) { boolean is_find , is_root ; struct sfs_dentry * last_dentry = sfs_lookup ( path , & is_find , & is_root ); //\u627e\u5230\u521b\u5efa\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55 struct sfs_dentry * dentry ; struct sfs_inode * inode ; char * fname ; if ( is_find == TRUE ) { //\u6587\u4ef6\u5b58\u5728 return - SFS_ERROR_EXISTS ; } fname = sfs_get_fname ( path ); //\u83b7\u53d6\u6587\u4ef6\u540d\u5b57 if ( S_ISREG ( mode )) { dentry = new_dentry ( fname , SFS_REG_FILE ); } else if ( S_ISDIR ( mode )) { dentry = new_dentry ( fname , SFS_DIR ); } dentry -> parent = last_dentry ; inode = sfs_alloc_inode ( dentry ); sfs_alloc_dentry ( last_dentry -> inode , dentry ); return SFS_ERROR_NONE ; } \u4f46\u4ec5\u4ec5\u5b9e\u73b0\u8fd9\u4e2a\u51fd\u6570 touch \u4e00\u4e2a\u6587\u4ef6\u4ecd\u7136\u4f1a\u62a5\u9519\uff0c\u8fd9\u662f\u56e0\u4e3a touch \u8981\u6c42\u4e0d\u4ec5\u4ec5\u662f\u521b\u5efa\u6587\u4ef6\uff0c\u8fd8\u8981\u6c42\u53ef\u4ee5 \u4fee\u6539\u6587\u4ef6\u7684\u8bbf\u95ee\u65f6\u95f4 \uff08\u96be\u602a\u53eb touch \uff0c\u6478\u4e00\u4e0b\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u8fd8\u8981\u5b9e\u73b0 utimens \u94a9\u5b50\uff0c\u8fd9\u4e2a\u94a9\u5b50\u7528\u4e8e\u4fee\u6539\u6587\u4ef6\u7684\u8bbf\u95ee\u65f6\u95f4\uff08\u5176\u5b9e\u53ea\u9700\u8981\u8fd4\u56de0\u5c31\u597d\uff09\u3002\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5b8c\u5584\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u5b8c\u5584\u3002 /** * @brief \u4fee\u6539\u65f6\u95f4\uff0c\u4e3a\u4e86\u4e0d\u8ba9touch\u62a5\u9519 * * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84 * @param tv \u5b9e\u8df5 * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int newfs_utimens ( const char * path , const struct timespec tv [ 2 ]) { ( void ) path ; return 0 ; } 3.5 \u8bfb\u53d6\u76ee\u5f55\u9879 \u00b6 \u5f53 \u5728FUSE\u6587\u4ef6\u7cfb\u7edf \u4e0b\u8c03\u7528 ls \u65f6\uff0c\u5c31\u4f1a\u89e6\u53d1 readdir \u94a9\u5b50\uff0c readdir \u5728 ls \u7684\u8fc7\u7a0b\u4e2d\u6bcf\u6b21 \u4ec5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u76ee\u5f55\u9879 \uff0c\u5176\u4e2d offset \u53c2\u6570\u8bb0\u5f55\u7740\u5f53\u524d\u5e94\u8be5\u8fd4\u56de\u7684\u76ee\u5f55\u9879\uff1a /** * @brief * * @param path * @param buf * @param filler \u53c2\u6570\u8bb2\u89e3: * * typedef int (*fuse_fill_dir_t) (void *buf, const char *name, * const struct stat *stbuf, off_t off) * buf: name\u4f1a\u88ab\u590d\u5236\u5230buf\u4e2d * name: dentry\u540d\u5b57 * stbuf: \u6587\u4ef6\u72b6\u6001\uff0c\u53ef\u5ffd\u7565 * off: \u4e0b\u4e00\u6b21offset\u4ece\u54ea\u91cc\u5f00\u59cb\uff0c\u8fd9\u91cc\u53ef\u4ee5\u7406\u89e3\u4e3a\u7b2c\u51e0\u4e2adentry * * @param offset * @param fi * @return int */ int sfs_readdir ( const char * path , void * buf , fuse_fill_dir_t filler , off_t offset , struct fuse_file_info * fi ) { boolean is_find , is_root ; int cur_dir = offset ; struct sfs_dentry * dentry = sfs_lookup ( path , & is_find , & is_root ); struct sfs_dentry * sub_dentry ; struct sfs_inode * inode ; if ( is_find ) { inode = dentry -> inode ; sub_dentry = sfs_get_dentry ( inode , cur_dir ); if ( sub_dentry ) { filler ( buf , sub_dentry -> fname , NULL , ++ offset ); } return SFS_ERROR_NONE ; } return - SFS_ERROR_NOTFOUND ; } \u5176\u4e2d\u6700\u91cd\u8981\u7684 filler \u51fd\u6570\uff0c filler \u51fd\u6570\u539f\u578b\u5982\u4e0b\uff1a typedef int (*fuse_fill_dir_t) (void *buf, const char *name, const struct stat *stbuf, off_t off) \u5bf9\u5404\u4e2a\u53c2\u6570\u505a\u5982\u4e0b\u89e3\u91ca\uff1a buf \uff1aname\u4f1a\u88ab\u590d\u5236\u5230buf\u4e2d\uff1b xxxxxxxxxx /*** @brief \u521b\u5efa\u76ee\u5f55* * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84* @param mode \u521b\u5efa\u6a21\u5f0f\uff08\u53ea\u8bfb\uff1f\u53ea\u5199\uff1f\uff09\uff0c\u53ef\u5ffd\u7565* @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25*/int sfs_mkdir(const char* path, mode_t mode) { (void)mode; boolean is_find, is_root; char* fname; struct sfs_dentry* last_dentry = sfs_lookup(path, &is_find, &is_root);//\u5bfb\u627e\u4e0a\u7ea7\u76ee\u5f55\u9879 struct sfs_dentry* dentry; struct sfs_inode* inode;\u200b if (is_find) {//\u76ee\u5f55\u5b58\u5728 return -SFS_ERROR_EXISTS; }\u200b if (SFS_IS_REG(last_dentry->inode)) { return -SFS_ERROR_UNSUPPORTED; }\u200b fname = sfs_get_fname(path); dentry = new_dentry(fname, SFS_DIR); dentry->parent = last_dentry; inode = sfs_alloc_inode(dentry); sfs_alloc_dentry(last_dentry->inode, dentry); return SFS_ERROR_NONE;}c stbuf \uff1a\u6587\u4ef6\u72b6\u6001\uff0c\u53ef\u5ffd\u7565\uff1b off \uff1a \u4e0b\u4e00\u6b21offset\u4ece\u54ea\u91cc\u5f00\u59cb\uff0c\u8fd9\u91cc\u53ef\u4ee5\u7406\u89e3\u4e3a\u7b2c\u51e0\u4e2adentry\uff1b \u56e0\u6b64\uff0c\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u8c03\u7528 filler(buf, fname, NULL, ++offset) \u8868\u793a\u5c06 fname \u653e\u5165 buf \u4e2d\uff0c\u5e76\u4f7f\u76ee\u5f55\u9879\u504f\u79fb\u52a0\u4e00\uff0c\u4ee3\u8868\u4e0b\u4e00\u6b21\u8bbf\u95ee\u4e0b\u4e00\u4e2a\u76ee\u5f55\u9879\u3002 *\u8865\u5145\u601d\u8003\uff1a\u7b26\u53f7\u94fe\u63a5\u7684\u5b9e\u73b0 \u00b6 \u80cc\u666f \u00b6 \u7b26\u53f7\u94fe\u63a5\uff08Symbolic Link\uff09\uff0c\u53c8\u79f0\u8f6f\u94fe\u63a5\uff08Soft Link\uff09\uff0c\u5b83\u5305\u542b\u4e86\u5230\u539f\u6587\u4ef6\u7684\u8def\u5f84\u4fe1\u606f\uff0c\u62e5\u6709\u81ea\u5df1\u7684\u7d22\u5f15\u8282\u70b9\uff08inode\uff09\u53ca\u6587\u4ef6\u5c5e\u6027\u53ca\u6743\u9650\u3002 \u786c\u94fe\u63a5\uff08Hard Link\uff09\uff0c\u662f\u5bf9\u539f\u6587\u4ef6\u8d77\u4e86\u4e00\u4e2a\u522b\u540d\u3002\u6587\u4ef6\u6709\u76f8\u540c\u7684 inode \u53ca data block\u3002 \u8be6\u7ec6\u533a\u522b\u8bf7\u81ea\u884c\u67e5\u9605\u8d44\u6599 \u7b26\u53f7\u94fe\u63a5\u7684\u5b9e\u73b0\u65b9\u5f0f \u00b6 \u7531\u7b26\u53f7\u94fe\u63a5\u7684\u539f\u7406\u53ef\u5f97\uff0c\u5efa\u7acb\u7b26\u53f7\u94fe\u63a5\u7684\u5173\u952e\u662f\u5b58\u50a8\u94fe\u63a5\u76ee\u6807\u6587\u4ef6\u7684\u8def\u5f84\u4fe1\u606f\u3002 \u7531\u6b64\u5f15\u51fa\u7b26\u53f7\u94fe\u63a5\u7684\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff1a \u5c06\u8def\u5f84\u4fe1\u606f\u5b58\u50a8\u5728inode\u8282\u70b9\u4e2d \u5c06\u8def\u5f84\u4fe1\u606f\u5b58\u50a8\u5728data block\u4e2d \u6837\u4f8bSimpleFS\u4e2d\u7684\u5b9e\u73b0\uff0c\u5c06\u8def\u5f84\u4fe1\u606f\u5b58\u50a8\u4e8einode\u8282\u70b9\u4e2d\uff0c\u5bf9\u4e8e\u5b58\u50a8\u5728data block\u4e2d\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u53ef\u4ee5\u81ea\u884c\u81ea\u8003\u5e76\u5b9e\u73b0\u3002 \u7b26\u53f7\u94fe\u63a5\u7684\u5b9e\u73b0\u7ec6\u8282 \u00b6 \u7531\u4e8e\u6837\u4f8b\u662f\u5c06\u7b26\u53f7\u94fe\u63a5\u7684\u8def\u5f84\u4fe1\u606f\u5b58\u50a8\u4e8einode\u8282\u70b9\u4e2d\uff0c\u6545\u9700\u8981\u9996\u5148\u4fee\u6539 struct inode \u548c struct inode_d # \u6dfb\u52a0target_path\u7528\u4e8e\u5b58\u50a8\u8def\u5f84\u4fe1\u606f char target_path [ SFS_MAX_FILE_NAME ]; \u5e76\u7531\u6b64\u9700\u8981\u589e\u52a0 sfs_utils.c \u4e2d\uff0c sfs_sync_inode() \u53ca sfs_read_inode() \uff0c\u5bf9\u5185\u5b58inode\u53ca\u78c1\u76d8inode\u95f4\u62f7\u8d1d\u64cd\u4f5c\u65f6\u7684\u8865\u5145\u62f7\u8d1d\u3002 \u540c\u65f6\uff0c\u5728\u6587\u4ef6\u7c7b\u578b enum sfs_file_type \u4e2d\u589e\u52a0 SFS_SYM_LINK FUSE\u6587\u4ef6\u7cfb\u7edf\u4e3a\u652f\u6301\u7b26\u53f7\u94fe\u63a5\uff0c\u9700\u8981\u5b9e\u73b0** symlink **\u94a9\u5b50 \u9996\u5148\uff0c\u7531\u4e8e\u7b26\u53f7\u94fe\u63a5\u672c\u8d28\u662f\u4e00\u4e2a\u7279\u6b8a\u7c7b\u578b\u7684\u6587\u4ef6\uff0c\u9700\u8981\u8c03\u7528 mknod() \u521b\u5efa\u65b0\u7684\u8282\u70b9\uff0c\u5c06\u6b64dentry / inode\u8282\u70b9\u6807\u8bb0\u4f4d\u7b26\u53f7\u94fe\u63a5\u578b\u8282\u70b9\uff0c\u5e76\u5c06\u94fe\u63a5\u7684\u8def\u5f84\u4fe1\u606f\u62f7\u8d1d\u81f3inode\u8282\u70b9\u4e2d\u3002 /** * @brief * * @param path - Where the link points * @param link - The link itself * @return int */ int sfs_symlink ( const char * path , const char * link ){ int ret = SFS_ERROR_NONE ; boolean is_find , is_root ; ret = sfs_mknod ( link , S_IFREG , NULL ); struct sfs_dentry * dentry = sfs_lookup ( link , & is_find , & is_root ); if ( is_find == FALSE ) { return - SFS_ERROR_NOTFOUND ; } dentry -> ftype = SFS_SYM_LINK ; struct sfs_inode * inode = dentry -> inode ; memcpy ( inode -> target_path , path , SFS_MAX_FILE_NAME ); return ret ; } FUSE\u6587\u4ef6\u7cfb\u7edf\u4e3a\u652f\u6301\u94fe\u63a5\uff0c\u9700\u8981\u5b9e\u73b0** readlink **\u94a9\u5b50 readlink \u5373\u5c06path\u5bf9\u5e94\u7684\u7b26\u53f7\u94fe\u63a5\u578b\u6587\u4ef6\u6240\u6307\u5411\u7684\u94fe\u63a5\u8def\u5f84\u4fe1\u606f\u62f7\u8d1d\u81f3buf\u4e2d\uff0c\u4ee5\u5b9e\u73b0\u5bf9\u5bf9\u5e94\u94fe\u63a5\u6587\u4ef6\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c\u3002 /** * @brief * * @param path * @param buf * @param size * @return int */ int sfs_readlink ( const char * path , char * buf , size_t size ){ /* SFS \u6682\u672a\u5b9e\u73b0\u786c\u94fe\u63a5\uff0c\u53ea\u652f\u6301\u8f6f\u94fe\u63a5 */ boolean is_find , is_root ; ssize_t llen ; struct sfs_dentry * dentry = sfs_lookup ( path , & is_find , & is_root ); if ( is_find == FALSE ) { return - SFS_ERROR_NOTFOUND ; } if ( dentry -> ftype != SFS_SYM_LINK ){ return - SFS_ERROR_INVAL ; } struct sfs_inode * inode = dentry -> inode ; llen = strlen ( inode -> target_path ); if ( size < 0 ){ return - SFS_ERROR_INVAL ; } else { if ( llen > size ){ strncpy ( buf , inode -> target_path , size ); buf [ size ] = '\\0' ; } else { strncpy ( buf , inode -> target_path , llen ); buf [ llen ] = '\\0' ; } } return SFS_ERROR_NONE ; } \u4e3a\u4e86\u80fd\u6210\u529f\u8bfb\u53d6\u7b26\u53f7\u94fe\u63a5\u578b\u6587\u4ef6\u7684\u72b6\u6001\u548c\u6743\u9650\uff0c\u8fd8\u9700\u8981\u4fee\u6539 sfs_getattr() # \u6dfb\u52a0\u5982\u4e0b\u5206\u652f\u5224\u65ad else if ( SFS_IS_SYM_LINK ( dentry -> inode )) { sfs_stat -> st_mode = S_IFLNK | SFS_DEFAULT_PERM ; sfs_stat -> st_size = dentry -> inode -> size ; } 3.6 \u5378\u8f7d \u00b6 \u5f53\u5378\u8f7dFUSE\u6587\u4ef6\u7cfb\u7edf\u65f6\uff0c\u4f1a \u6267\u884c\u7684\u94a9\u5b50 \u662f .destroy \uff0c\u6211\u4eec\u53ef\u4ee5\u5728 .destroy \u94a9\u5b50\u4e2d\u5b8c\u6210 \u8d85\u7ea7\u5757\u56de\u5199\u8bbe\u5907 \u3001 \u9a71\u52a8\u7684\u5173\u95ed \u3001 \u66f4\u591a\u5fc5\u8981\u7ed3\u6784\u7684\u56de\u5199 \u7b49\u64cd\u4f5c\uff0c\u4ee5\u4fdd\u8bc1\u4e0b\u4e00\u6b21\u6302\u8f7d\u80fd\u591f \u6062\u590dddriver\u8bbe\u5907\u4e2d\u7684\u6570\u636e \uff1a /** * @brief \u5378\u8f7d\uff08umount\uff09\u6587\u4ef6\u7cfb\u7edf * * @param p \u53ef\u5ffd\u7565 * @return void */ void newfs_destroy ( void * p ) { /* TODO: \u5728\u8fd9\u91cc\u8fdb\u884c\u5378\u8f7d */ ddriver_close ( super . fd ); return ; } \u4e0a\u9762\u7684\u793a\u4f8b\u662f\u5173\u95ed\u9a71\u52a8\u8bbe\u5907\u3002 \u4e0b\u9762\u6211\u4eec\u6765\u770b\u770bsfs\u6587\u4ef6\u7cfb\u7edf\u4e2d\u5bf9\u4e8e\u5378\u8f7d\u7684\u5177\u4f53\u5b9e\u73b0\u6b65\u9aa4\uff1a \u200b \u2460\u4ece\u6839\u8282\u70b9\u9012\u5f52\u5f80\u4e0b\u5237\u5199\u6839\u8282\u70b9\u3002 sfs_sync_inode ( sfs_super . root_dentry -> inode ); /* \u4ece\u6839\u8282\u70b9\u5411\u4e0b\u5237\u5199\u8282\u70b9 */ \u200b \u2461\u5c06\u5185\u5b58\u8d85\u7ea7\u5757\u8f6c\u6362\u4e3a\u78c1\u76d8\u8d85\u7ea7\u5757\u5e76\u5199\u5165\u78c1\u76d8\u3002 sfs_super_d . magic_num = SFS_MAGIC_NUM ; sfs_super_d . map_inode_blks = sfs_super . map_inode_blks ; sfs_super_d . map_inode_offset = sfs_super . map_inode_offset ; sfs_super_d . data_offset = sfs_super . data_offset ; sfs_super_d . sz_usage = sfs_super . sz_usage ; if ( sfs_driver_write ( SFS_SUPER_OFS , ( uint8_t * ) & sfs_super_d , sizeof ( struct sfs_super_d )) != SFS_ERROR_NONE ) { return - SFS_ERROR_IO ; } \u200b \u2462\u5c06inode\u4f4d\u56fe\u5199\u5165\u78c1\u76d8\u3002 if ( sfs_driver_write ( sfs_super_d . map_inode_offset , ( uint8_t * )( sfs_super . map_inode ), SFS_BLKS_SZ ( sfs_super_d . map_inode_blks )) != SFS_ERROR_NONE ) { return - SFS_ERROR_IO ; } free ( sfs_super . map_inode ); \u200b \u2463\u5173\u95ed\u9a71\u52a8\u3002 ddriver_close ( SFS_DRIVER ()); \u5176\u4e2d\u6700\u91cd\u8981\u7684\u51fd\u6570\u662f sfs_sync_inode \uff0c\u5176\u4f5c\u7528\u662f\u5c06\u5185\u5b58inode\u53ca\u5176\u4e0b\u65b9\u7ed3\u6784\u5168\u90e8\u5237\u56de\u78c1\u76d8\uff0c\u64cd\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a \u200b \u2460\u9996\u5148\u5c06inode\u5199\u5165\u78c1\u76d8\u3002 if ( sfs_driver_write ( SFS_INO_OFS ( ino ), ( uint8_t * ) & inode_d , sizeof ( struct sfs_inode_d )) != SFS_ERROR_NONE ) { SFS_DBG ( \"[%s] io error \\n \" , __func__ ); return - SFS_ERROR_IO ; } \u200b \u2461\u5224\u65adinode\u6587\u4ef6\u7c7b\u578b\u3002 \u200b \u2462\u5982\u679c\u662f\u76ee\u5f55\u7c7b\u578b\u5219\u9700\u8981\u9996\u5148\u5c06\u76ee\u5f55\u9879\u5199\u5165\u78c1\u76d8\uff0c\u518d\u9012\u5f52\u5237\u5199\u6bcf\u4e00\u4e2a\u76ee\u5f55\u9879\u6240\u5bf9\u5e94\u7684inode\u8282\u70b9\u3002 /* Cycle 1: \u5199 INODE */ /* Cycle 2: \u5199 \u6570\u636e */ if ( SFS_IS_DIR ( inode )) { dentry_cursor = inode -> dentrys ; offset = SFS_DATA_OFS ( ino ); while ( dentry_cursor != NULL ) { memcpy ( dentry_d . fname , dentry_cursor -> fname , SFS_MAX_FILE_NAME ); dentry_d . ftype = dentry_cursor -> ftype ; dentry_d . ino = dentry_cursor -> ino ; if ( sfs_driver_write ( offset , ( uint8_t * ) & dentry_d , sizeof ( struct sfs_dentry_d )) != SFS_ERROR_NONE ) { SFS_DBG ( \"[%s] io error \\n \" , __func__ ); return - SFS_ERROR_IO ; } if ( dentry_cursor -> inode != NULL ) { /*\u9012\u5f52\u5237\u5199\u8282\u70b9*/ sfs_sync_inode ( dentry_cursor -> inode ); } dentry_cursor = dentry_cursor -> brother ; offset += sizeof ( struct sfs_dentry_d ); } } \u200b \u2463\u5982\u679c\u662f\u6587\u4ef6\u7c7b\u578b\uff0c\u5219\u5c06inode\u6240\u6307\u5411\u7684\u6570\u636e\u76f4\u63a5\u5199\u5165\u78c1\u76d8\u3002 else if ( SFS_IS_REG ( inode )) { if ( sfs_driver_write ( SFS_DATA_OFS ( ino ), inode -> data , SFS_BLKS_SZ ( SFS_DATA_PER_FILE )) != SFS_ERROR_NONE ) { SFS_DBG ( \"[%s] io error \\n \" , __func__ ); return - SFS_ERROR_IO ; } } 3.7 \u6587\u4ef6\u8bfb \u00b6 \u5f53\u8bfb\u53d6\u6587\u4ef6\u65f6\uff0c\u5c31\u4f1a\u7528\u5230 read \u94a9\u5b50\uff0c\u8fd9\u4e2a\u94a9\u5b50\u5728\u590d\u5236\u6587\u4ef6\u65f6\u4e5f\u4f1a\u7528\u5230\uff0c\u4ed6\u901a\u8fc7\u4e0b\u9762\u7684\u6b65\u9aa4\u6765\u5b8c\u6210\u4e00\u6b21\u5bf9\u6587\u4ef6\u7684\u8bfb\u53d6\uff1a \u2460\u9996\u5148\u627e\u5230\u6587\u4ef6\u7684\u76ee\u5f55\u9879\uff1a struct sfs_dentry * dentry = sfs_lookup ( path , & is_find , & is_root ); \u2461\u627e\u5230\u76ee\u5f55\u9879\u4e4b\u540e\u5224\u65ad\u6587\u4ef6\u7c7b\u578b\uff0c\u4fdd\u8bc1\u662f\u6587\u4ef6\u7c7b\u578b\u5e76\u4e14\u6587\u4ef6\u5927\u5c0f\u8981\u5927\u4e8e\u6240\u8981\u8bfb\u53d6\u7684\u504f\u79fb\u91cf\uff1a if ( SFS_IS_DIR ( inode )) { return - SFS_ERROR_ISDIR ; } if ( inode -> size < offset ) { return - SFS_ERROR_SEEK ; } \u2462\u4e4b\u540e\u5c06\u6570\u636e\u8bfb\u5165\u5185\u5b58\u5757\u5373\u53ef\uff1a memcpy ( buf , inode -> data + offset , size ); 3.8 \u6587\u4ef6\u5199 \u00b6 \u5199\u6587\u4ef6\u662f\uff0c\u7528\u5230 write \u94a9\u5b50\uff0c\u5b83\u5411\u6587\u4ef6\u6240\u5728\u7684\u78c1\u76d8\u4f4d\u7f6e\u4e2d\u5199\u5165\u6570\u636e\uff1a \u2460\u548c\u8bfb\u6587\u4ef6\u4e00\u6837\uff0c\u9996\u5148\u627e\u5230\u8def\u5f84\u6240\u5bf9\u5e94\u7684\u76ee\u5f55\u9879\uff1a struct sfs_dentry * dentry = sfs_lookup ( path , & is_find , & is_root ); \u2461\u4e4b\u540e\u4fdd\u8bc1\u6587\u4ef6\u7c7b\u578b\u4e0d\u662f\u76ee\u5f55\u4ee5\u53ca\u4fdd\u8bc1\u6587\u4ef6\u5927\u5c0f\u5927\u4e8e\u504f\u79fb\u91cf\uff1a if ( SFS_IS_DIR ( inode )) { return - SFS_ERROR_ISDIR ; } if ( inode -> size < offset ) { return - SFS_ERROR_SEEK ; } \u2462\u5c06\u5185\u5b58\u4e2d\u6570\u636e\u590d\u5236\u5230\u5bf9\u5e94\u4f4d\u7f6e\u5373\u53ef\uff0c\u5e76\u6539\u5199iNode\u8282\u70b9\u7684\u5927\u5c0f\uff1a memcpy ( inode -> data + offset , buf , size ); inode -> size = offset + size > inode -> size ? offset + size : inode -> size ; 3.2 \u5378\u8f7d \u00b6 \u5f53\u5378\u8f7dFUSE\u6587\u4ef6\u7cfb\u7edf\u65f6\uff0c\u4f1a \u6267\u884c\u7684\u94a9\u5b50 \u662f .destroy \uff0c\u6211\u4eec\u53ef\u4ee5\u5728 .destroy \u94a9\u5b50\u4e2d\u5b8c\u6210 \u8d85\u7ea7\u5757\u56de\u5199\u8bbe\u5907 \u3001 \u9a71\u52a8\u7684\u5173\u95ed \u3001 \u66f4\u591a\u5fc5\u8981\u7ed3\u6784\u7684\u56de\u5199 \u7b49\u64cd\u4f5c\uff0c\u4ee5\u4fdd\u8bc1\u4e0b\u4e00\u6b21\u6302\u8f7d\u80fd\u591f \u6062\u590dddriver\u8bbe\u5907\u4e2d\u7684\u6570\u636e \uff1a /** * @brief \u5378\u8f7d\uff08umount\uff09\u6587\u4ef6\u7cfb\u7edf * * @param p \u53ef\u5ffd\u7565 * @return void */ void newfs_destroy ( void * p ) { /* TODO: \u5728\u8fd9\u91cc\u8fdb\u884c\u5378\u8f7d */ ddriver_close ( super . fd ); return ; } \u4e0a\u9762\u7684\u793a\u4f8b\u662f\u5173\u95ed\u9a71\u52a8\u8bbe\u5907\u3002 3.3 \u83b7\u53d6\u6587\u4ef6\u5c5e\u6027 \u00b6 FUSE\u6587\u4ef6\u7cfb\u7edf\u4e3a\u4e86\u83b7\u5f97\u6bcf\u4e2a\u6587\u4ef6\u7684\u72b6\u6001 \uff0c\u8981\u4e0d\u65ad\u8c03\u7528 getattr \u94a9\u5b50\uff0c\u8fd9\u4e2a\u94a9\u5b50\u51fd\u6570\u7c7b\u4f3c\u4e8e xv6 \u91cc\u7684 fstat \u3002\u5b9e\u73b0 ls \u3001 mkdir \u3001 touch \u7b49\u64cd\u4f5c\u7684\u524d\u63d0\u5c31\u662f\u5b8c\u6210 getattr \u94a9\u5b50\u7684\u7f16\u5199\uff0c\u8fd9\u91cc\u7ed9\u4e2a\u4f8b\u5b50\uff1a /** * @brief \u83b7\u53d6\u6587\u4ef6\u5c5e\u6027 * * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84 * @param sfs_stat \u8fd4\u56de\u72b6\u6001 * @return int */ int sfs_getattr ( const char * path , struct stat * sfs_stat ) { boolean is_find , is_root ; struct sfs_dentry * dentry = sfs_lookup ( path , & is_find , & is_root ); ... if ( SFS_IS_DIR ( dentry -> inode )) { sfs_stat -> st_mode = S_IFDIR | SFS_DEFAULT_PERM ; sfs_stat -> st_size = dentry -> inode -> dir_cnt * sizeof ( struct sfs_dentry_d ); } else if ( SFS_IS_REG ( dentry -> inode )) { sfs_stat -> st_mode = S_IFREG | SFS_DEFAULT_PERM ; /* SFS_DEFAULT_PERM 0777 */ sfs_stat -> st_size = dentry -> inode -> size ; } sfs_stat -> st_nlink = 1 ; sfs_stat -> st_uid = getuid (); sfs_stat -> st_gid = getgid (); sfs_stat -> st_atime = time ( NULL ); sfs_stat -> st_mtime = time ( NULL ); sfs_stat -> st_blksize = SFS_IO_SZ (); if ( is_root ) { sfs_stat -> st_size = sfs_super . sz_usage ; sfs_stat -> st_blocks = SFS_DISK_SZ () / SFS_IO_SZ (); sfs_stat -> st_nlink = 2 ; /* !\u7279\u6b8a\uff0c\u6839\u76ee\u5f55link\u6570\u4e3a2 */ } return SFS_ERROR_NONE ; } getattr \u7684\u5b9e\u73b0\u9996\u5148\u662f \u89e3\u6790\u8def\u5f84 \uff0c\u4ece\u800c\u83b7\u53d6\u76f8\u5e94\u6587\u4ef6\u7684 inode\u6216dentry \uff0c\u63a5\u7740\u586b\u5199 struct stat* \u7ed3\u6784\u4f53\u5373\u53ef\u3002 3.4 \u5efa\u7acb\u6587\u4ef6 \u00b6 \u5f53\u4e3aFUSE\u6587\u4ef6\u7cfb\u7edf\u521b\u5efa\u6587\u4ef6\u65f6\uff0c\u4f1a \u6267\u884c\u7684\u94a9\u5b50 \u662f .mknod \uff0c\u5728\u6211\u4eec\u7ed9\u7684\u6846\u67b6\u4e2d\uff0c\u7ed9\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u601d\u8def\uff1a /** * @brief \u521b\u5efa\u6587\u4ef6 * * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84 * @param mode \u521b\u5efa\u6587\u4ef6\u7684\u6a21\u5f0f\uff0c\u53ef\u5ffd\u7565 * @param dev \u8bbe\u5907\u7c7b\u578b\uff0c\u53ef\u5ffd\u7565 * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int newfs_mknod ( const char * path , mode_t mode , dev_t dev ) { /* TODO: \u89e3\u6790\u8def\u5f84\uff0c\u5e76\u521b\u5efa\u76f8\u5e94\u7684\u6587\u4ef6 */ return 0 ; } \u4f46\u4ec5\u4ec5\u5b9e\u73b0\u8fd9\u4e2a\u51fd\u6570 touch \u4e00\u4e2a\u6587\u4ef6\u4ecd\u7136\u4f1a\u62a5\u9519\uff0c\u8fd9\u662f\u56e0\u4e3a touch \u8981\u6c42\u4e0d\u4ec5\u4ec5\u662f\u521b\u5efa\u6587\u4ef6\uff0c\u8fd8\u8981\u6c42\u53ef\u4ee5 \u4fee\u6539\u6587\u4ef6\u7684\u8bbf\u95ee\u65f6\u95f4 \uff08\u96be\u602a\u53eb touch \uff0c\u6478\u4e00\u4e0b\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u8fd8\u8981\u5b9e\u73b0 utimens \u94a9\u5b50\uff0c\u8fd9\u4e2a\u94a9\u5b50\u7528\u4e8e\u4fee\u6539\u6587\u4ef6\u7684\u8bbf\u95ee\u65f6\u95f4\uff08\u5176\u5b9e\u53ea\u9700\u8981\u8fd4\u56de0\u5c31\u597d\uff09\u3002\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5b8c\u5584\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u5b8c\u5584\u3002 /** * @brief \u4fee\u6539\u65f6\u95f4\uff0c\u4e3a\u4e86\u4e0d\u8ba9touch\u62a5\u9519 * * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84 * @param tv \u5b9e\u8df5 * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int newfs_utimens ( const char * path , const struct timespec tv [ 2 ]) { ( void ) path ; return 0 ; } 3.5 \u5efa\u7acb\u76ee\u5f55 \u00b6 \u5f53\u4e3aFUSE\u6587\u4ef6\u7cfb\u7edf\u521b\u5efa\u76ee\u5f55\u65f6\uff0c\u4f1a \u6267\u884c\u7684\u94a9\u5b50 \u662f .mkdir \uff1a /** * @brief \u521b\u5efa\u76ee\u5f55 * * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84 * @param mode \u521b\u5efa\u6a21\u5f0f\uff08\u53ea\u8bfb\uff1f\u53ea\u5199\uff1f\uff09\uff0c\u53ef\u5ffd\u7565 * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int newfs_mkdir ( const char * path , mode_t mode ) { /* TODO: \u89e3\u6790\u8def\u5f84\uff0c\u521b\u5efa\u76ee\u5f55 */ return 0 ; } 3.6 \u8bfb\u53d6\u76ee\u5f55\u9879 \u00b6 \u5f53 \u5728FUSE\u6587\u4ef6\u7cfb\u7edf \u4e0b\u8c03\u7528 ls \u65f6\uff0c\u5c31\u4f1a\u89e6\u53d1 readdir \u94a9\u5b50\uff0c readdir \u5728 ls \u7684\u8fc7\u7a0b\u4e2d\u6bcf\u6b21 \u4ec5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u76ee\u5f55\u9879 \uff0c\u5176\u4e2d offset \u53c2\u6570\u8bb0\u5f55\u7740\u5f53\u524d\u5e94\u8be5\u8fd4\u56de\u7684\u76ee\u5f55\u9879\uff1a int sfs_readdir ( const char * path , void * buf , fuse_fill_dir_t filler , off_t offset , struct fuse_file_info * fi ) { boolean is_find , is_root ; int cur_dir = offset ; ... if ( is_find ) { ... dentry = sfs_get_dentry ( inode , cur_dir ); if ( dentry ) { filler ( buf , fname , NULL , ++ offset ); } return SFS_ERROR_NONE ; } return - SFS_ERROR_NOTFOUND ; } \u5176\u4e2d\u6700\u91cd\u8981\u7684 filler \u51fd\u6570\uff0c filler \u51fd\u6570\u539f\u578b\u5982\u4e0b\uff1a typedef int ( * fuse_fill_dir_t ) ( void * buf , const char * name , const struct stat * stbuf , off_t off ) \u5bf9\u5404\u4e2a\u53c2\u6570\u505a\u5982\u4e0b\u89e3\u91ca\uff1a buf \uff1aname\u4f1a\u88ab\u590d\u5236\u5230buf\u4e2d\uff1b name \uff1adentry\u540d\u5b57\uff1b stbuf \uff1a\u6587\u4ef6\u72b6\u6001\uff0c\u53ef\u5ffd\u7565\uff1b off \uff1a \u4e0b\u4e00\u6b21offset\u4ece\u54ea\u91cc\u5f00\u59cb\uff0c\u8fd9\u91cc\u53ef\u4ee5\u7406\u89e3\u4e3a\u7b2c\u51e0\u4e2adentry\uff1b \u56e0\u6b64\uff0c\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u8c03\u7528 filler(buf, fname, NULL, ++offset) \u8868\u793a\u5c06 fname \u653e\u5165 buf \u4e2d\uff0c\u5e76\u4f7f\u76ee\u5f55\u9879\u504f\u79fb\u52a0\u4e00\uff0c\u4ee3\u8868\u4e0b\u4e00\u6b21\u8bbf\u95ee\u4e0b\u4e00\u4e2a\u76ee\u5f55\u9879\u3002 4. \u5b9e\u73b0\u5efa\u8bae \u00b6 4.1 \u53c2\u8003\u4ee3\u7801 \u00b6 \u672c\u6b21\u5b9e\u9a8c\u53ef\u4ee5\u53c2\u8003\u4e24\u4e2a\u5b8c\u5168\u642d\u5efa\u597d\u7684FUSE\u6587\u4ef6\u7cfb\u7edf\uff1a simplefs \uff08 fs/simplefs \u6587\u4ef6\u5939\u4e0b\uff09\u548c myfs \uff08 fs/samples \u6587\u4ef6\u5939\u4e0b\uff09\uff0c\u5176\u4e2d simplefs \u662f\u4e00\u4e2a\u7c7bEXT2\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u4f46 \u6ca1\u6709\u7ed9\u4e88\u6570\u636e\u4f4d\u56fe \u7684\u5b9e\u73b0\uff1b myfs \u662f github \u4e0a\u7684\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u4e5f\u662f\u4e00\u4e2aFUSE\u6587\u4ef6\u7cfb\u7edf\u5b9e\u4f8b\u3002 4.2 \u5b9e\u73b0\u6b65\u9aa4\u5efa\u8bae \u00b6 \u5c01\u88c5\u5bf9 ddriver \u7684\u8bbf\u95ee\u4ee3\u7801\uff0c\u65b9\u4fbf\u8bbe\u5907\u8bfb\u5199\uff1b\uff08\u6ce8\u610f\u9a71\u52a8\u8bfb\u5199IO\u4e3a512B\uff0c\u4f46\u662fEXT2\u6587\u4ef6\u7cfb\u7edf\u4e00\u4e2a\u5757\u5927\u5c0f\u4e3a1024B\uff0c\u4e5f\u5c31\u662f\u4e24\u4e2aIO\u5355\u4f4d\uff09 \u8bbe\u8ba1\u4ecb\u8d28\u6570\u636e\u7ed3\u6784\uff08\u4f4d\u4e8e types.h \uff09\uff1b \u8bbe\u8ba1\u5185\u5b58\u6570\u636e\u7ed3\u6784\uff08\u53ef\u8bbe\u8ba1\u3001\u53ef\u4e0d\u8bbe\u8ba1\uff09\uff1b \u5b8c\u6210 .init \u94a9\u5b50\uff1a\u8bfb \u8d85\u7ea7\u5757 \u3001\u521d\u59cb\u5316\u6587\u4ef6\u7cfb\u7edf\uff1b \u5b8c\u6210 .destroy \u94a9\u5b50\uff1a \u56de\u5199\u5fc5\u8981\u7ed3\u6784 \uff0c\u4fdd\u8bc1\u4e0b\u4e00\u6b21\u6302\u8f7d\u6b63\u5e38\uff1b \u9a8c\u8bc1\u6302\u8f7d\u5378\u8f7d\u6d41\u7a0b\u7684\u6b63\u786e\u6027\uff08 \u4e3b\u8981\u770b\u8bfb\u5199\u662f\u5426\u6b63\u786e \uff09\uff1b \u5b8c\u6210\u5de5\u5177\u51fd\u6570\uff08\u53ef\u81ea\u884c\u8bbe\u8ba1\uff09\uff1a \u5b8c\u6210 \u5206\u914dinode \u51fd\u6570\uff1a\u521b\u5efa\u4e00\u4e2aInode\u3001\u521d\u59cb\u5316\u5176\u4e0a\u7684\u5b57\u6bb5\u3001\u4fee\u6539\u4f4d\u56fe\u7ed3\u6784\uff0c\u53ef\u80fd\u8fd8\u9700\u8981\u4fee\u6539\u8d85\u7ea7\u5757\uff1b \u5b8c\u6210 \u5206\u914ddentry \u51fd\u6570\uff1a\u521b\u5efa\u4e00\u4e2adentry\u3001\u521d\u59cb\u5316\u5176\u4e0a\u7684\u5b57\u6bb5\uff1b \u5b8c\u6210\u5c06 dentry\u52a0\u5165\u5230inode \u4e2d\u7684\u51fd\u6570\uff1a\u5c06\u751f\u6210\u7684dentry\u5199\u5165\u5230inode\u4e2d\uff1b \u5b8c\u6210 \u8def\u5f84\u89e3\u6790\u51fd\u6570 \uff0c\u8981\u4e48\u8fd4\u56dedentry\uff0c\u8981\u4e48\u8fd4\u56deinode\uff0c\u53ef\u81ea\u884c\u8bbe\u8ba1\uff1b \u6839\u636e\u5de5\u5177\u51fd\u6570\uff0c\u5b8c\u6210 .get_attr \u94a9\u5b50\uff1b \u6839\u636e\u5de5\u5177\u51fd\u6570\uff0c\u5b8c\u6210 .mknod \u94a9\u5b50\uff1b \u6839\u636e\u5de5\u5177\u51fd\u6570\uff0c\u5b8c\u6210 .mkdir \u94a9\u5b50\uff1b \u6839\u636e\u5de5\u5177\u51fd\u6570\uff0c\u5b8c\u6210 .readdir \u94a9\u5b50\uff1b \u624b\u5de5\u6d4b\u8bd5 touch \u3001 ls \u3001 mkdir \u3001 fusermount -u \u7b49\u547d\u4ee4\u7684\u6b63\u786e\u6027\uff1b \u901a\u8fc7 ./tests/fs_test.sh \u811a\u672c 5. \u5e38\u89c1\u95ee\u9898 \u00b6 5.1 \u5982\u4f55\u8c03\u8bd5\uff1f \u00b6 \u5e38\u89c1\u95ee\u98981: \u5982\u4f55\u8c03\u8bd5\uff1f \u6309\u4e0b F5 \u540e\uff0c\u6587\u4ef6\u7cfb\u7edf\u8fd0\u884c\u4e3a\u524d\u53f0\u6a21\u5f0f\uff0c\u90a3\u4e48\u5982\u4f55\u8f93\u5165\u547d\u4ee4\u5462\uff1f\u4e8b\u5b9e\u4e0a\uff0c\u53ef\u4ee5 ctrl + shift +\uff40 \u547c\u51fa\u53e6\u4e00\u4e2a\u7ec8\u7aef\uff0c\u7136\u540e\u5728\u53e6\u4e00\u4e2a\u7ec8\u7aef\u64cd\u4f5c\u3002 \u53e6\u5916\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u53ef\u4ee5\u6309\u8fd9\u4e2a \u62c6\u5206\u952e \uff0c\u5c31\u53ef\u4ee5\u540c\u65f6\u663e\u793a\u4e24\u4e2a\u7ec8\u7aef\u4e86\u3002 5.2 \u6302\u8f7d\u5931\u8d25\uff1f \u00b6 \u5e38\u89c1\u95ee\u98982: \u6302\u8f7d\u5931\u8d25\uff1ffuse: bad mount point \u5982\u4e0b\u56fe\u6240\u793a\uff1a \u8fd9\u79cd\u60c5\u51b5\u5c31\u662f\u4e0d\u6b63\u5e38\u7684\u5378\u8f7d\u6587\u4ef6\u7cfb\u7edf\uff0c\u6211\u4eec\u663e\u5f0f\u5730\u8c03\u7528 \u5378\u8f7d\u6587\u4ef6\u7cfb\u7edf \u5373\u53ef\uff1a teststu_8@OSLabExecNode0:~/pyq/user-land-filesystem/fs/newfs$ fusermount -u ./tests/mnt teststu_8@OSLabExecNode0:~/pyq/user-land-filesystem/fs/newfs$ 5.3 \u6302\u8f7d\u70b9\u4e0d\u7a7a\uff1f \u00b6 \u5e38\u89c1\u95ee\u98983: \u6302\u8f7d\u70b9\u4e0d\u7a7a\uff1fmountpoint is not empty \u5982\u4e0b\u56fe\u6240\u793a\uff1a \u8fd9\u79cd\u60c5\u51b5\u5c31\u662f\u5728\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u4e0d\u5c0f\u5fc3\u7ed9 mnt \u6587\u4ef6\u5939\u4e0b\u521b\u5efa\u4e86\u4e00\u4e2a\u6587\u4ef6\uff0c\u5bfc\u81f4\u9519\u8bef\u53d1\u751f\uff0c\u628a \u6587\u4ef6\u5220\u9664 \u5c31\u884c\u3002","title":"\u5b9e\u9a8c\u6b65\u9aa4"},{"location":"lab5/part3/#_1","text":"","title":"\u5b9e\u9a8c\u6b65\u9aa4"},{"location":"lab5/part3/#1","text":"","title":"1. \u73af\u5883\u642d\u5efa\u4e0e\u4e0a\u624b"},{"location":"lab5/part3/#11","text":"\u672c\u6b21\u5b9e\u9a8c\u5145\u5206\u8003\u8651\u5230 \u4e0a\u624b\u6210\u672c \uff0c\u56e0\u6b64\u6211\u4eec\u7f16\u5199\u4e86\u7b80\u5355\u7684\u73af\u5883\u914d\u7f6e\u811a\u672c\uff0c\u5e2e\u52a9\u5927\u5bb6\u4e00\u952e\u914d\u7f6e\u5f00\u53d1\u73af\u5883\u3002\u5b9e\u9a8c\u5305\u4ee3\u7801\u83b7\u53d6\u9014\u5f84\uff1a # git clone https://gitee.com/ftutorials/user-land-filesystem.git \u5b9e\u9a8c\u5305\u7684\u7ed3\u6784\u5982\u4e0b\uff1a user-land-filesystem/ \u251c\u2500\u2500 driver \u2502 \u251c\u2500\u2500 ddriver.sh \u2502 \u251c\u2500\u2500 kernel_ddriver \u2502 \u2514\u2500\u2500 user_ddriver \u251c\u2500\u2500 fs \u2502 \u251c\u2500\u2500 samples \u2502 \u251c\u2500\u2500 simplefs \u2502 \u2514\u2500\u2500 template \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 setenv.sh \u2514\u2500\u2500 tests \u251c\u2500\u2500 README.md \u2514\u2500\u2500 test_ddriver driver \u5b58\u653e\u9a71\u52a8\u4ee3\u7801\u3002\u5176\u4e2d kernel_ddriver \u4e3a\u5185\u6838\u9a71\u52a8\uff0c user_ddriver \u4e3a\u7528\u6237\u9a71\u52a8\uff0c ddriver.sh \u4e3a\u63a7\u5236 ddriver \u9a71\u52a8\u7684\u811a\u672c\uff0c\u53ef\u4ee5\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\u5c1d\u9c9c\uff1a [root@localhost user-land-filesystem]# ./driver/ddriver.sh fs \u5b58\u653e \u5b9e\u73b0\u7684FUSE\u6587\u4ef6\u7cfb\u7edf \u3002\u5176\u4e2d samples \u4e3a myfs \u6587\u4ef6\u7cfb\u7edf\uff0c simplefs \u4e3a\u7c7b EXT2 \u6587\u4ef6\u7cfb\u7edf\uff08\u7f3a\u5c11\u6570\u636e\u4f4d\u56fe\uff09\uff0c template \u7528\u4e8e\u751f\u6210\u6587\u4ef6\u7cfb\u7edf\u7684\u4ee3\u7801\u7ed3\u6784\uff0c\u53ef\u5ffd\u7565\u3002 LICENSE \u5f00\u6e90\u8bb8\u53ef\uff0c\u672c\u5b9e\u9a8c\u9075\u5faa GPL v3 \u5f00\u6e90\u8bb8\u53ef\u3002 tests \u8be5\u6587\u4ef6\u5939\u5b58\u653eDDRIVER\u7528\u6237\u9a71\u52a8\u4ee3\u7801\u3002 setenv.sh \u7528\u4e8e\u914d\u7f6eFUSE\u6587\u4ef6\u7cfb\u7edf\u5f00\u53d1\u73af\u5883\u3002","title":"1.1 \u5b9e\u9a8c\u5305\u7ed3\u6784\u4ecb\u7ecd"},{"location":"lab5/part3/#12","text":"\u8fd0\u884c ./setenv.sh \u540e\uff0c\u5373\u53ef\u6309\u7167\u6307\u5bfc\u4e00\u6b65\u4e00\u6b65\u6765\u5efa\u7acb\u73af\u5883\uff1a teststu_8@OSLabExecNode0:~/user-land-filesystem$ ./setenv.sh \u8bf7\u8f93\u5165\u5de5\u4f5c\u76ee\u5f55\u540d\u79f0 ([\u5de5\u4f5c]\u76ee\u5f55\u5c06\u88ab\u81f3\u4e8e./fs\u76ee\u5f55\u4e0b): newfs ... \u751f\u6210\u5de5\u4f5c\u8def\u5f84: /home/guests/teststu_8/user-land-filesystem/fs/newfs \u8bf7\u8f93\u5165\u9879\u76ee\u540d\u79f0: newfs ... \u5176\u4e2d\uff0c\u5de5\u4f5c\u76ee\u5f55\u540d\u79f0\u5373\u5f00\u53d1\u8be5\u6587\u4ef6\u7cfb\u7edf\u7684 \u6587\u4ef6\u5939\u540d\u79f0 \u3002\u53ef\u4ee5\u770b\u5230\uff0c\u5b83\u5728 fs \u76ee\u5f55\u4e0b\u65b0\u5efa\u4e86\u4e00\u4e2a newfs \u76ee\u5f55\u4f5c\u4e3a\u5de5\u4f5c\u76ee\u5f55\u3002 \u63a5\u7740\uff0c\u9879\u76ee\u540d\u79f0\u5373\u771f\u6b63\u7684\u6587\u4ef6\u7cfb\u7edf\u540d\u79f0\uff0c\u53ef\u4ee5\u662f\u6587\u4ef6\u7cfb\u7edf\u7684\u7b80\u5199\uff0c\u4f8b\u5982\uff1anfs\uff08\u4ee3\u8868newfs\uff09\uff0c\u8fd9\u91cc\u8981\u6ce8\u610f\u9879\u76ee\u540d\u4e0d\u80fd\u6709 \u7279\u6b8a\u7b26\u53f7\u3001\u7a7a\u683c \u7b49\u3002 \u9879\u76ee\u5efa\u7acb\u5b8c\u6210\u4e4b\u540e\u7684\u7ed3\u6784 newfs \u5982\u4e0b\u6240\u793a\uff1a ./fs/newfs/ \u251c\u2500\u2500 .vscode \u251c\u2500\u2500 CMake \u2502 \u2514\u2500\u2500 FindFUSE.cmake \u251c\u2500\u2500 CMakeLists.txt \u251c\u2500\u2500 include \u2502 \u251c\u2500\u2500 ddriver_ctl_user.h \u2502 \u251c\u2500\u2500 ddriver.h \u2502 \u251c\u2500\u2500 newfs.h \u2502 \u2514\u2500\u2500 types.h \u251c\u2500\u2500 README.md \u251c\u2500\u2500 SPEC.txt \u251c\u2500\u2500 src \u2502 \u2514\u2500\u2500 newfs.c \u2514\u2500\u2500 tests \u2514\u2500\u2500 fs_test.sh \u8fd9\u4e2a\u7ed3\u6784\u53ef\u4ee5\u81ea\u884c\u4fee\u6539\u6dfb\u52a0\uff0c\u4e0d\u8fc7\u8981\u8bb0\u5f97 \u91cd\u65b0\u914d\u7f6eCMake \u3002\u672c\u6b21\u5b9e\u9a8c\u8981\u6c42\u5f88\u7b80\u5355\uff0c \u8dd1\u8fc7 tests \u4e0b\u7684 fs_test.sh \u5c31\u7b97\u5b8c\u6210 \u3002","title":"1.2 \u914d\u7f6e\u5f00\u53d1\u73af\u5883"},{"location":"lab5/part3/#13-ddriver","text":"\u4e3a\u4e86\u65b9\u4fbf\u5bf9 ddriver \u8bbe\u5907\u8fdb\u884c\u63a7\u5236\uff0c\u6211\u4eec\u5c06ddriver.sh\u811a\u672c\u94fe\u63a5\u5230\u4e86 Linux\u547d\u4ee4\u7cfb\u7edf \u4e2d\uff0c\u63a5\u4e0b\u6765\uff0c\u5927\u5bb6\u5148\u8fd0\u884csource ~/.bashrc\uff0c\u7136\u540e\u540c\u5b66\u4eec\u5c31\u53ef\u4ee5\u5728\u4efb\u4f55\u76ee\u5f55\u4e0b\u8bbf\u95ee\u5230ddriver.sh\u811a\u672c\u3002\u8be5\u811a\u672c\u7684\u4e3b\u8981\u7528\u9014\u5982\u4e0b\uff1a teststu_8@OSLabExecNode0:~/$ source ~/.bashrc teststu_8@OSLabExecNode0:~/$ ddriver ==================================================================== ]]]]]]]] ]]]]]]]] ] ]] ] ]] ] ]] ]] ]] ]] ]-------] ] ]] ] ] ] ] ] ]] ]] ]] ]] ]_______/ ] ]] ] ]] ] ]] ]] ]] ] ] \\ ]] ]]]]]]]] ]]]]]]]] ]] ]] ]] ]]]]]]]] ]] ==================================================================== \u7528\u6cd5: ddriver [options] options: -i [k|u] \u5b89\u88c5ddriver: [k] - kernel / [u] - user -t \u6d4b\u8bd5ddriver[\u8bf7\u5ffd\u7565] -d \u5bfc\u51faddriver\u81f3\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55[PWD] -r \u64e6\u9664ddriver -l \u663e\u793addriver\u7684Log -v \u663e\u793addriver\u7684\u7c7b\u578b[\u5185\u6838\u6a21\u5757 / \u7528\u6237\u9759\u6001\u94fe\u63a5\u5e93] -h \u6253\u5370\u672c\u5e2e\u52a9\u83dc\u5355 ==================================================================== \u5e38\u7528\u7684\u529f\u80fd\u662f -v \u3001 -d \u4e0e -r \uff0c\u5b83\u4eec\u7684\u7528\u9014\u5206\u522b\u662f \u67e5\u770bddriver\u8bbe\u5907\u7c7b\u578b\u53ca\u8bbe\u5907\u4f4d\u7f6e \u3001 \u5c06ddriver\u8bbe\u5907\u955c\u50cf\u5bfc\u51fa\u5230\u5f53\u524d\u76ee\u5f55\u4e0b \u3001 \u5c06ddriver\u8bbe\u5907\u64e6\u9664\u5e72\u51c0 \u3002\u7528\u6cd5\u5982\u4e0b\uff1a ==================================================================== # \u67e5\u770b\u8bbe\u5907\u4f4d\u7f6e\u548c\u7c7b\u578b teststu_8@OSLabExecNode0:~$ ddriver -v \u9759\u6001\u94fe\u63a5\u5e93\u8bbe\u5907: /home/guests/teststu_8/ddriver teststu_8@OSLabExecNode0:~$ ==================================================================== # \u5c06ddriver\u8bbe\u5907\u5bfc\u51fa\u5230\u5f53\u524d\u76ee\u5f55\u4e0b teststu_8@OSLabExecNode0:~/$ ddriver -d [sudo] password for teststu_8: \u76ee\u6807\u8bbe\u5907 /home/guests/teststu_8/ddriver 8192+0 records in 8192+0 records out 4194304 bytes (4.2 MB, 4.0 MiB) copied, 0.094218 s, 44.5 MB/s \u6587\u4ef6\u5df2\u5bfc\u51fa\u81f3/home/guests/teststu_8/ddriver_dump\uff0c\u8bf7\u5b89\u88c5HexEditor\u63d2\u4ef6\u67e5\u770b\u5176\u5185\u5bb9 teststu_8@OSLabExecNode0:~/$ ls ddriver_dump teststu_8@OSLabExecNode0:~/$ ==================================================================== # \u5c06ddriver\u8bbe\u5907\u64e6\u9664\u5e72\u51c0 teststu_8@OSLabExecNode0:~/$ ddriver -r \u76ee\u6807\u8bbe\u5907 /home/guests/teststu_8/ddriver 8192+0 records in 8192+0 records out 4194304 bytes (4.2 MB, 4.0 MiB) copied, 0.0506111 s, 82.9 MB/s teststu_8@OSLabExecNode0:~/$ cat ./ddriver_dump teststu_8@OSLabExecNode0:~/$","title":"1.3 DDRIVER\u811a\u672c\u7684\u8fd0\u7528"},{"location":"lab5/part3/#14","text":"\u9879\u76ee\u7f16\u8bd1\u7684\u8fc7\u7a0b\u5728\u65b0\u5efa\u9879\u76ee\u7684SPEC.txt\u6587\u4ef6\u4e2d\u6709\u6240\u4ea4\u4ee3\uff0c\u8fd9\u91cc\u63d0\u51fa\u6765\u8bb2\u4e00\u8bb2\uff1a Step 1 . SSH\u6253\u5f00 ./fs/newfs \u3002\u6253\u5f00VS Code\u8f6f\u4ef6\uff0c\u70b9\u51fb\u5de6\u4e0a\u89d2 \"\u6587\u4ef6\" \u2192 \"\u6253\u5f00\u6587\u4ef6\u5939\"\uff0c\u9009\u62e9\u5b9e\u9a8c\u5305\u76ee\u5f55\u4e0b\u7684fs/newfs\u6587\u4ef6\u5939\u3002 Step 2 . \u6253\u5f00CMakeLists.txt\u6587\u4ef6 Step 3 . ctrl + shift + p\u547c\u51fa\u547d\u4ee4\u83dc\u5355 Step 4 . \u8f93\u5165CMake: Configure Step 5 . \u67e5\u770bGenerator (\u5df2\u7528!!!!!\u6807\u8bb0) \u82e5 CMAKE_GENERATOR \u4e3a Unix Makefiles \uff0c\u8bf7\u624b\u52a8\u4fee\u6539 .vscode/tasks.json \u7684 command \u4e3a make \uff0c\u82e5\u4e3a Ninja \uff0c\u8bf7\u624b\u52a8\u4fee\u6539 .vscode/tasks.json \u7684 command \u4e3a ninja \uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a Step 6 . \u5230 newfs/src/newfs.c \u76ee\u5f55\uff0c\u6253\u65ad\u70b9 Step 7 . \u6309\u4e0bF5\u8fdb\u884c\u8c03\u8bd5 \u7f16\u8bd1\u8fd0\u884c\u539f\u7406\uff1a \u7f16\u8bd1\u3002 \u7f16\u8bd1\u73af\u8282\u5229\u7528CMakeLists\u5de5\u7a0b\u81ea\u52a8\u5e2e\u52a9\u6211\u4eec\u7f16\u8bd1\uff0c\u8fd9\u91cc\u8981\u5b89\u88c5CMake Tools\u7b49\u62d3\u5c55\uff0c\u76f8\u4fe1\u5927\u5bb6\u524d\u9762\u4e5f\u88c5\u8fc7\u4e86\u3002\u5176\u4e2d\uff0c\u6309\u4e0bF5\u540e\uff0cVSCode\u4f1a\u9996\u5148\u8fd0\u884c .vscode \u76ee\u5f55\u4e0b tasks.json \u4e2d\u7684\u547d\u4ee4\uff1a \u8be5\u547d\u4ee4\u6267\u884c\u7684\u64cd\u4f5c\u5c31\u662f\u5728CMakeLists\u751f\u6210\u7684 build \u76ee\u5f55\u4e0b\u8fd0\u884c make \uff0c\u7531\u6b64\u5b8c\u6210\u81ea\u52a8\u7f16\u8bd1\u3002 \u8fd0\u884c\u3002 \u8fd0\u884c\u8fc7\u7a0b\u662f\u5728 .vscode \u76ee\u5f55\u4e0b launch.json \u4e2d\u5b9a\u4e49\uff1a \u628a\u8fd0\u884c\u547d\u4ee4\u5c55\u5f00\u5b9e\u9645\u4e0a\u662f\uff1a teststu_8@OSLabExecNode0:~/user-land-filesystem/fs/newfs$ ./build/newfs --device = /home/guests/teststu_8/ddriver -f -d -s ./tests/mnt/ \u6b63\u5982\u6211\u4eec\u524d\u9762 \u5b9e\u9a8c\u539f\u7406 - FUSE\u67b6\u6784 \u4e2d\u8bf4\u5230\u7684\u90a3\u6837\uff0c FUSE\u6587\u4ef6\u7cfb\u7edf \u7684\u6302\u8f7d\u4e0d\u9700\u8981\u4f7f\u7528 mount \u547d\u4ee4\uff0c\u800c\u662f\u76f4\u63a5\u7528\u7f16\u8bd1\u51fa\u6765\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u4e0a\u8ff0\u547d\u4ee4\u7684\u610f\u4e49\u4e3a\uff1a \u5c06\u8bbe\u5907/home/guests/teststu_8/ddriver \u4ee5 newfs\u6587\u4ef6\u7cfb\u7edf \u5f62\u5f0f\uff0c \u6302\u8f7d \u5230 ./tests/mnt\u76ee\u5f55 \u4e0b\u3002 \u8fdb\u800c\u884d\u751f\u51fa FUSE\u6587\u4ef6\u7cfb\u7edf \u7684 \u5378\u8f7d \uff0c\u540c\u6837\uff0c\u4e0e\u4f20\u7edf\u5185\u6838\u6587\u4ef6\u7cfb\u7edf\u5378\u8f7d\u4e0d\u540c\uff0c\u5b83\u7684\u5378\u8f7d\u547d\u4ee4\u4e3a\uff1a teststu_8@OSLabExecNode0:~/user-land-filesystem/fs/newfs$ fusermount -u ./tests/mnt teststu_8@OSLabExecNode0:~/user-land-filesystem/fs/newfs$ \u8fd9\u91cc\u4f7f\u7528 fusermount -u \u547d\u4ee4\u8fdb\u884cFUSE\u6587\u4ef6\u7cfb\u7edf\u7684\u5378\u8f7d\u3002","title":"1.4 \u9879\u76ee\u7f16\u8bd1"},{"location":"lab5/part3/#2-ddriver","text":"\u4efb\u52a1\u4e00\u8981\u6c42\u719f\u6089DDRIVER\u9a71\u52a8\uff0c\u6211\u4eec\u8981\u6c42\u5927\u5bb6\u6839\u636e\u6ce8\u91ca\u770b\u61c2 user-land-filesystem/tests/test_ddriver/src/test.c \u7684\u4ee3\u7801\uff0c\u5e76 \u6839\u636e\u63d0\u793a \u4fee\u6539\u5176\u4e2d\u7684 \u4e00\u5904\u9519\u8bef \uff1a \u7f16\u8bd1\u8fd0\u884c\u6d4b\u8bd5\u7a0b\u5e8f\u7684\u6b65\u9aa4\uff1a teststu_8@OSLabExecNode0:~/user-land-filesystem/tests/test_ddriver$ cmake CMakeLists.txt ... teststu_8@OSLabExecNode0:~/user-land-filesystem/tests/test_ddriver$ make ... teststu_8@OSLabExecNode0:~/user-land-filesystem/tests/test_ddriver$ ./ddriver_test","title":"2. \u4efb\u52a1\u4e00\uff1a\u719f\u6089DDRIVER\u9a71\u52a8"},{"location":"lab5/part3/#3-fuseext2","text":"\u719f\u6089\u4e86\u9a71\u52a8\u540e\uff0c\u6211\u4eec\u4e5f\u5c31\u57fa\u672c\u638c\u63e1\u4e86\u8bbf\u95ee DDRIVER \u8bbe\u5907\u7684\u65b9\u6cd5\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u53ef\u4ee5\u57fa\u4e8eFUSE\u6765\u6b63\u5f0f\u7f16\u5199 \u9752\u6625\u7248EXT2\u6587\u4ef6\u7cfb\u7edf \u4e86\u3002\u6211\u4eec\u5df2\u7ecf\u5728 \u73af\u5883\u914d\u7f6e \u9636\u6bb5\u5c31\u4e3a\u5927\u5bb6\u642d\u5efa\u597d\u4e86FUSE\u6587\u4ef6\u7cfb\u7edf\u9879\u76ee\u6846\u67b6\u3002 \u8981\u63a5\u5165\u4e00\u4e2a\u6846\u67b6\uff0c\u90a3\u4e48\u5c11\u4e0d\u4e86\u94a9\u5b50\u51fd\u6570\uff08\u4e5f\u53ef\u79f0\u4e3a \u51fd\u6570\u6307\u9488 \uff09\u3002\u94a9\u5b50\u51fd\u6570 \u662f\u4e00\u7cfb\u5217\u51fd\u6570\u7684\u62bd\u8c61 \uff0c\u4ece\u800c\u8ba9C\u8bed\u8a00\u5177\u6709\u591a\u6001\u7684\u6027\u8d28\u3002\u5bf9\u4e8eFUSE\u6846\u67b6\uff0c\u5176\u7ed9\u6211\u4eec\u7684\u63a5\u53e3 \u5982\u4e0b \u3002 struct fuse_operations { int ( * getattr ) ( const char * , struct stat * ); int ( * readlink ) ( const char * , char * , size_t ); int ( * getdir ) ( const char * , fuse_dirh_t , fuse_dirfil_t ); int ( * mknod ) ( const char * , mode_t , dev_t ); int ( * mkdir ) ( const char * , mode_t ); int ( * unlink ) ( const char * ); int ( * rmdir ) ( const char * ); int ( * symlink ) ( const char * , const char * ); int ( * rename ) ( const char * , const char * ); int ( * link ) ( const char * , const char * ); int ( * chmod ) ( const char * , mode_t ); int ( * chown ) ( const char * , uid_t , gid_t ); int ( * truncate ) ( const char * , off_t ); int ( * utime ) ( const char * , struct utimbuf * ); int ( * open ) ( const char * , struct fuse_file_info * ); int ( * read ) ( const char * , char * , size_t , off_t , struct fuse_file_info * ); int ( * write ) ( const char * , const char * , size_t , off_t , struct fuse_file_info * ); int ( * statfs ) ( const char * , struct statvfs * ); int ( * flush ) ( const char * , struct fuse_file_info * ); int ( * release ) ( const char * , struct fuse_file_info * ); int ( * fsync ) ( const char * , int , struct fuse_file_info * ); int ( * setxattr ) ( const char * , const char * , const char * , size_t , int ); int ( * getxattr ) ( const char * , const char * , char * , size_t ); int ( * listxattr ) ( const char * , char * , size_t ); int ( * removexattr ) ( const char * , const char * ); int ( * opendir ) ( const char * , struct fuse_file_info * ); int ( * readdir ) ( const char * , void * , fuse_fill_dir_t , off_t , struct fuse_file_info * ); int ( * releasedir ) ( const char * , struct fuse_file_info * ); int ( * fsyncdir ) ( const char * , int , struct fuse_file_info * ); void * ( * init ) ( struct fuse_conn_info * conn ); void ( * destroy ) ( void * ); int ( * access ) ( const char * , int ); int ( * create ) ( const char * , mode_t , struct fuse_file_info * ); int ( * ftruncate ) ( const char * , off_t , struct fuse_file_info * ); int ( * fgetattr ) ( const char * , struct stat * , struct fuse_file_info * ); int ( * lock ) ( const char * , struct fuse_file_info * , int cmd , struct flock * ); int ( * utimens ) ( const char * , const struct timespec tv [ 2 ]); int ( * bmap ) ( const char * , size_t blocksize , uint64_t * idx ); int ( * ioctl ) ( const char * , int cmd , void * arg , struct fuse_file_info * , unsigned int flags , void * data ); int ( * poll ) ( const char * , struct fuse_file_info * , struct fuse_pollhandle * ph , unsigned * reventsp ); int ( * write_buf ) ( const char * , struct fuse_bufvec * buf , off_t off , struct fuse_file_info * ); int ( * read_buf ) ( const char * , struct fuse_bufvec ** bufp , size_t size , off_t off , struct fuse_file_info * ); int ( * flock ) ( const char * , struct fuse_file_info * , int op ); int ( * fallocate ) ( const char * , int , off_t , off_t , struct fuse_file_info * ); }; \u4ee5\u4e0b\u9762\u4e00\u884c\u4ee3\u7801\u4e3a\u4f8b\uff1a int ( * mkdir ) ( const char * , mode_t ); \u8fd9\u4e2a\u94a9\u5b50\u51fd\u6570 \u62bd\u8c61\u4e86\u6240\u6709 mkdir \u7684\u64cd\u4f5c\uff1a\u6240\u6709 mkdir \u90fd\u9700\u8981\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\u4f5c\u4e3a \u8def\u5f84 \u3001\u53e6\u4e00\u4e2a\u53c2\u6570\u4f5c\u4e3a \u521b\u5efa\u6a21\u5f0f \uff08\u53ea\u8bfb/\u53ea\u5199/\u53ef\u8bfb\u53ef\u5199\uff09\u3002\u4e0d\u540c\u7684\u6587\u4ef6\u7cfb\u7edf\u53ef\u4ee5\u57fa\u4e8e\u6b64\u5b9e\u73b0\u4e0d\u540c\u7684 mkdir \u4ee3\u7801\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff1a // \u6587\u4ef6\u7cfb\u7edf\u4e00\u5b9e\u73b0mkdir int mkdir ( const char * path , mode_t mode ) { printf ( \"\u6211\u4e0d\u7ed9\u4f60\u521b\u5efa %s \\n \" , path ); return 0 ; } // \u6587\u4ef6\u7cfb\u7edf\u4e8c\u5b9e\u73b0mkdir int mkdir ( const char * path , mode_t mode ) { dentry = lookup ( path ); // \u67e5\u627e\u8def\u5f84\uff0c\u627e\u5230\u7236\u7ea7dentry inode = new_inode (); // \u521b\u5efa\u8be5\u76ee\u5f55\u6587\u4ef6\u7684inode new_dentry = new_dentry (); // \u521b\u5efa\u5c5e\u4e8e\u8be5inode\u7684dentry bond ( new_dentry , inode ); // \u8ba9\u8be5dentry\u6307\u5411inode add ( dentry , new_dentry ); // \u5c06\u65b0\u521b\u5efa\u7684dentry\u52a0\u5165\u5230\u7236\u7ea7dentry\u5bf9\u5e94\u7684\u76ee\u5f55\u6587\u4ef6\u4e2d return 0 ; } FUSE\u6846\u67b6 \u901a\u8fc7\u5411 fuse_main \u51fd\u6570\u4f20\u5165\u4e00\u4e2a\u88ab\u590d\u5236\u7684 fuse_operations \u7ed3\u6784\u4f53\u5373\u53ef\u5b8c\u6210\u64cd\u4f5c\u7684\u6ce8\u518c\uff0c\u4ece\u800c\u4f7f\u5f97\u6587\u4ef6\u7cfb\u7edf\u80fd\u591f\u6309\u7167\u6211\u4eec\u65e2\u5b9a\u7684\u65b9\u5f0f\u6765\u5904\u7406\u547d\u4ee4\u3002\u4e0b\u56fe\u4e3a \u5c06\u64cd\u4f5c\u63a5\u5165FUSE\u7684\u5165\u53e3 \uff1a \u672c\u6b21\u5b9e\u9a8c\u7531\u4e8e\u5b9e\u73b0\u7684\u529f\u80fd\u8f83\u4e3a\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u8981\u6c42\u540c\u5b66\u4eec\u5b9e\u73b0\u4ee5\u4e0b\u94a9\u5b50\uff08\u5176\u4e2d\u6807\u8bb0\u4e3a NULL \u7684\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\u4e0d\u8981\u6c42\u5b9e\u73b0\uff09\uff1a // Line 21 static struct fuse_operations operations = { . init = newfs_init , /* mount\u6587\u4ef6\u7cfb\u7edf */ . destroy = newfs_destroy , /* umount\u6587\u4ef6\u7cfb\u7edf */ . mkdir = newfs_mkdir , /* \u5efa\u76ee\u5f55\uff0cmkdir */ . getattr = newfs_getattr , /* \u83b7\u53d6\u6587\u4ef6\u5c5e\u6027\uff0c\u7c7b\u4f3cstat\uff0c\u5fc5\u987b\u5b8c\u6210 */ . readdir = newfs_readdir , /* \u586b\u5145dentrys */ . mknod = newfs_mknod , /* \u521b\u5efa\u6587\u4ef6\uff0ctouch\u76f8\u5173 */ . write = NULL , /* \u5199\u5165\u6587\u4ef6 */ . read = NULL , /* \u8bfb\u6587\u4ef6 */ . utimens = newfs_utimens , /* \u4fee\u6539\u65f6\u95f4\uff0c\u5ffd\u7565\uff0c\u907f\u514dtouch\u62a5\u9519 */ . truncate = NULL , /* \u6539\u53d8\u6587\u4ef6\u5927\u5c0f */ . unlink = NULL , /* \u5220\u9664\u6587\u4ef6 */ . rmdir = NULL , /* \u5220\u9664\u76ee\u5f55\uff0c rm -r */ . rename = NULL , /* \u91cd\u547d\u540d\uff0cmv */ . open = NULL , . opendir = NULL , . access = NULL }; \u5148\u6765\u770b\u4e00\u4e0bsfs\u6587\u4ef6\u7cfb\u7edf\u7ed9\u51fa\u7684\u6570\u636e\u7ed3\u6784\u5b9a\u4e49\uff1a struct custom_options { const char * device ; //\u9a71\u52a8\u7684\u8def\u5f84 boolean show_help ; }; struct sfs_inode /*\u5185\u5b58\u4e2dinode\u7684\u6570\u636e\u7ed3\u6784*/ { int ino ; /* \u5728inode\u4f4d\u56fe\u4e2d\u7684\u4e0b\u6807 */ int size ; /* \u6587\u4ef6\u5df2\u5360\u7528\u7a7a\u95f4 */ int dir_cnt ; struct sfs_dentry * dentry ; /* \u6307\u5411\u8be5inode\u7684dentry */ struct sfs_dentry * dentrys ; /* \u6240\u6709\u76ee\u5f55\u9879 */ uint8_t * data ; }; struct sfs_dentry /*\u5185\u5b58\u4e2d\u76ee\u5f55\u9879\u7684\u6570\u636e\u7ed3\u6784*/ { char fname [ SFS_MAX_FILE_NAME ]; struct sfs_dentry * parent ; /* \u7236\u4eb2Inode\u7684dentry */ struct sfs_dentry * brother ; /* \u5144\u5f1f */ int ino ; struct sfs_inode * inode ; /* \u6307\u5411inode */ SFS_FILE_TYPE ftype ; }; struct sfs_super /*\u5185\u5b58\u4e2d\u8d85\u7ea7\u5757\u7684\u6570\u636e\u7ed3\u6784*/ { int driver_fd ; int sz_io ; /*inode\u7684\u5927\u5c0f*/ int sz_disk ; /*\u78c1\u76d8\u5927\u5c0f*/ int sz_usage ; int max_ino ; /*inode\u7684\u6570\u76ee*/ uint8_t * map_inode ; /*inode\u4f4d\u56fe*/ int map_inode_blks ; /*inode\u4f4d\u56fe\u6240\u5360\u7684\u6570\u636e\u5757*/ int map_inode_offset ; /*inode\u4f4d\u56fe\u7684\u8d77\u59cb\u5730\u5740*/ int data_offset ; /*\u6570\u636e\u5757\u7684\u8d77\u59cb\u5730\u5740*/ boolean is_mounted ; struct sfs_dentry * root_dentry ; /*\u6839\u76ee\u5f55*/ }; /****************************************************************************** * \u78c1\u76d8\u4e2d\u7684\u6570\u636e\u7ed3\u6784 *******************************************************************************/ struct sfs_super_d { uint32_t magic_num ; int sz_usage ; int max_ino ; int map_inode_blks ; int map_inode_offset ; int data_offset ; }; struct sfs_inode_d { int ino ; /* \u5728inode\u4f4d\u56fe\u4e2d\u7684\u4e0b\u6807 */ int size ; /* \u6587\u4ef6\u5df2\u5360\u7528\u7a7a\u95f4 */ int dir_cnt ; SFS_FILE_TYPE ftype ; }; struct sfs_dentry_d { char fname [ SFS_MAX_FILE_NAME ]; SFS_FILE_TYPE ftype ; int ino ; /* \u6307\u5411\u7684ino\u53f7 */ }; \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u518d\u5206\u522b\u4ecb\u7ecd\u5404\u4e2a\u64cd\u4f5c\u5b9e\u73b0\u8981\u7ecf\u8fc7\u7684\u94a9\u5b50\u51fd\u6570\uff0c\u4ee5\u4fbf\u8ba9\u540c\u5b66\u4eec\u6709\u4e2a\u66f4\u76f4\u89c2\u7684\u7406\u89e3\u3002","title":"3. \u4efb\u52a1\u4e8c\uff1a\u57fa\u4e8eFUSE\u5b9e\u73b0\u9752\u6625\u7248EXT2\u6587\u4ef6\u7cfb\u7edf"},{"location":"lab5/part3/#31","text":"\u5f53\u6302\u8f7dFUSE\u6587\u4ef6\u7cfb\u7edf\u65f6\uff0c\u4f1a \u6267\u884c\u7684\u94a9\u5b50 \u662f .init \uff0c\u6211\u4eec\u53ef\u4ee5\u5728 .init \u94a9\u5b50\u4e2d\u5b8c\u6210 \u8d85\u7ea7\u5757\u7684\u8bfb\u53d6 \u3001 \u4f4d\u56fe\u7684\u5efa\u7acb \u3001 \u9a71\u52a8\u7684\u521d\u59cb\u5316 \u7b49\u64cd\u4f5c\uff1a /** * @brief \u6302\u8f7d\uff08mount\uff09\u6587\u4ef6\u7cfb\u7edf * * @param conn_info \u53ef\u5ffd\u7565\uff0c\u4e00\u4e9b\u5efa\u7acb\u8fde\u63a5\u76f8\u5173\u7684\u4fe1\u606f * @return void* */ void * newfs_init ( struct fuse_conn_info * conn_info ) { /* TODO: \u5728\u8fd9\u91cc\u8fdb\u884c\u6302\u8f7d */ /* \u4e0b\u9762\u662f\u4e00\u4e2a\u63a7\u5236\u8bbe\u5907\u7684\u793a\u4f8b */ super . fd = ddriver_open ( newfs_options . device ); return NULL ; } \u4e0a\u9762\u7684\u793a\u4f8b\u662f\u521d\u59cb\u5316\u9a71\u52a8\u8bbe\u5907\uff0c\u5176\u4e2d newfs_options \u4e3a\u81ea\u5b9a\u4e49\u53c2\u6570\uff0c\u8fd9\u91cc\u6211\u4eec\u4e0d\u5bf9 \u81ea\u5b9a\u4e49\u53c2\u6570 \u505a\u66f4\u591a\u7684\u4ecb\u7ecd\uff0c\u5927\u5bb6\u4f1a\u7528\u5373\u53ef\u3002 \u6211\u4eec\u901a\u8fc7\u4ee5\u4e0b\u64cd\u4f5c\u6765\u5b9e\u73b0\u6302\u8f7d\u529f\u80fd\uff1a Step 1 . \u9996\u5148\u5b9a\u4e49\u5185\u5b58\u4e2d\u7684\u6570\u636e\u7ed3\u6784\u3002 /*\u5b9a\u4e49\u78c1\u76d8\u5404\u90e8\u5206\u7ed3\u6784*/ int ret = SFS_ERROR_NONE ; int driver_fd ; struct sfs_super_d sfs_super_d ; struct sfs_dentry * root_dentry ; struct sfs_inode * root_inode ; int inode_num ; int map_inode_blks ; int super_blks ; boolean is_init = FALSE ; sfs_super . is_mounted = FALSE ; Step 2 . \u6253\u5f00\u9a71\u52a8\u3002 driver_fd = ddriver_open ( options . device ); /*\u6253\u5f00\u9a71\u52a8*/ if ( driver_fd < 0 ) { return driver_fd ; } Step 3 . \u5411\u5185\u5b58\u8d85\u7ea7\u5757\u4e2d\u6807\u8bb0\u9a71\u52a8\u5e76\u5199\u5165\u78c1\u76d8\u5927\u5c0f\u548c\u5355\u6b21IO\u5927\u5c0f\u3002 sfs_super . driver_fd = driver_fd ; ddriver_ioctl ( SFS_DRIVER (), IOC_REQ_DEVICE_SIZE , & sfs_super . sz_disk ); ddriver_ioctl ( SFS_DRIVER (), IOC_REQ_DEVICE_IO_SZ , & sfs_super . sz_io ); Step 4 . \u521b\u5efa\u6839\u76ee\u5f55\u9879\u5e76\u8bfb\u53d6\u78c1\u76d8\u8d85\u7ea7\u5757\u5230\u5185\u5b58\u3002 if ( driver_fd < 0 ) { return driver_fd ; } Step 5 . \u6839\u636e\u8d85\u7ea7\u5757\u5e7b\u6570\u5224\u65ad\u662f\u5426\u4e3a\u7b2c\u4e00\u6b21\u542f\u52a8\u78c1\u76d8\uff0c\u5982\u679c\u662f\u7b2c\u4e00\u6b21\u542f\u52a8\u78c1\u76d8\uff0c\u5219\u9700\u8981\u5efa\u7acb\u78c1\u76d8\u8d85\u7ea7\u5757\u7684\u5e03\u5c40\u3002 if ( sfs_super_d . magic_num != SFS_MAGIC_NUM ) { /* \u5e7b\u6570\u65e0 */ /* \u4f30\u7b97\u5404\u90e8\u5206\u5927\u5c0f */ super_blks = SFS_ROUND_UP ( sizeof ( struct sfs_super_d ), SFS_IO_SZ ()) / SFS_IO_SZ (); inode_num = SFS_DISK_SZ () / (( SFS_DATA_PER_FILE + SFS_INODE_PER_FILE ) * SFS_IO_SZ ()); map_inode_blks = SFS_ROUND_UP ( SFS_ROUND_UP ( inode_num , UINT32_BITS ), SFS_IO_SZ ()) / SFS_IO_SZ (); /* \u5e03\u5c40layout */ sfs_super . max_ino = ( inode_num - super_blks - map_inode_blks ); sfs_super_d . map_inode_offset = SFS_SUPER_OFS + SFS_BLKS_SZ ( super_blks ); sfs_super_d . data_offset = sfs_super_d . map_inode_offset + SFS_BLKS_SZ ( map_inode_blks ); sfs_super_d . map_inode_blks = map_inode_blks ; sfs_super_d . sz_usage = 0 ; SFS_DBG ( \"inode map blocks: %d \\n \" , map_inode_blks ); is_init = TRUE ; } Step 6 . \u521d\u59cb\u5316\u5185\u5b58\u4e2d\u7684\u8d85\u7ea7\u5757\uff0c\u548c\u6839\u76ee\u5f55\u9879\u3002 sfs_super . sz_usage = sfs_super_d . sz_usage ; /* \u5efa\u7acb in-memory \u7ed3\u6784 */ sfs_super . map_inode = ( uint8_t * ) malloc ( SFS_BLKS_SZ ( sfs_super_d . map_inode_blks )); sfs_super . map_inode_blks = sfs_super_d . map_inode_blks ; sfs_super . map_inode_offset = sfs_super_d . map_inode_offset ; sfs_super . data_offset = sfs_super_d . data_offset ; if ( sfs_driver_read ( sfs_super_d . map_inode_offset , ( uint8_t * )( sfs_super . map_inode ), SFS_BLKS_SZ ( sfs_super_d . map_inode_blks )) != SFS_ERROR_NONE ) { return - SFS_ERROR_IO ; } if ( is_init ) { /* \u5206\u914d\u6839\u8282\u70b9 */ root_inode = sfs_alloc_inode ( root_dentry ); sfs_sync_inode ( root_inode ); } root_inode = sfs_read_inode ( root_dentry , SFS_ROOT_INO ); root_dentry -> inode = root_inode ; sfs_super . root_dentry = root_dentry ; sfs_super . is_mounted = TRUE ; sfs_dump_map (); \u5176\u4e2d newz_dentry \u51fd\u6570\u7684\u4f5c\u7528\u662f\u521b\u5efa\u76ee\u5f55\u9879\uff0c\u539f\u578b\u5982\u4e0b\uff1a static inline struct sfs_dentry * new_dentry ( char * fname , SFS_FILE_TYPE ftype ) { struct sfs_dentry * dentry = ( struct sfs_dentry * ) malloc ( sizeof ( struct sfs_dentry )); memset ( dentry , 0 , sizeof ( struct sfs_dentry )); SFS_ASSIGN_FNAME ( dentry , fname ); dentry -> ftype = ftype ; dentry -> ino = -1 ; dentry -> inode = NULL ; dentry -> parent = NULL ; dentry -> brother = NULL ; } \u5176\u4e2d sfs_alloc_inode \u4f5c\u7528\u662f\u4e3a\u76ee\u5f55\u9879\u521b\u5efainode\u8282\u70b9\uff0c\u5177\u4f53\u6b65\u9aa4\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u6b65\uff1a \u200b \u2460\u5728inode\u4f4d\u56fe\u4e0a\u5bfb\u627e\u672a\u4f7f\u7528\u7684inode\u8282\u70b9\u3002 for ( byte_cursor = 0 ; byte_cursor < SFS_BLKS_SZ ( sfs_super . map_inode_blks ); byte_cursor ++ ) /*\u5728inode\u4f4d\u56fe\u4e0a\u5bfb\u627e\u672a\u4f7f\u7528\u7684inode*/ { for ( bit_cursor = 0 ; bit_cursor < UINT8_BITS ; bit_cursor ++ ) { if (( sfs_super . map_inode [ byte_cursor ] & ( 0x1 << bit_cursor )) == 0 ) { /* \u5f53\u524dino_cursor\u4f4d\u7f6e\u7a7a\u95f2 */ sfs_super . map_inode [ byte_cursor ] |= ( 0x1 << bit_cursor ); is_find_free_entry = TRUE ; break ; } ino_cursor ++ ; } if ( is_find_free_entry ) { break ; } } \u200b \u2461\u4e3a\u76ee\u5f55\u9879\u5206\u914dinode\u8282\u70b9\u5e76\u5efa\u7acb\u4ed6\u4eec\u4e4b\u95f4\u7684\u8fde\u63a5\u3002 if ( ! is_find_free_entry || ino_cursor == sfs_super . max_ino ) return - SFS_ERROR_NOSPACE ; inode = ( struct sfs_inode * ) malloc ( sizeof ( struct sfs_inode )); inode -> ino = ino_cursor ; inode -> size = 0 ; /* dentry\u6307\u5411inode */ dentry -> inode = inode ; dentry -> ino = inode -> ino ; /* inode\u6307\u56dedentry */ inode -> dentry = dentry ; inode -> dir_cnt = 0 ; inode -> dentrys = NULL ; if ( SFS_IS_REG ( inode )) { inode -> data = ( uint8_t * ) malloc ( SFS_BLKS_SZ ( SFS_DATA_PER_FILE )); } \u800csfs_read_inode\u51fd\u6570\u4f5c\u7528\u662f\u4ece\u78c1\u76d8\u4e2d\u8bfb\u53d6inode\u8282\u70b9\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a \u200b \u2460\u901a\u8fc7\u78c1\u76d8\u9a71\u52a8\u6765\u5c06\u78c1\u76d8\u4e2dino\u53f7\u7684inode\u8bfb\u5165\u5185\u5b58\u3002 if ( sfs_driver_read ( SFS_INO_OFS ( ino ), ( uint8_t * ) & inode_d , sizeof ( struct sfs_inode_d )) != SFS_ERROR_NONE ) { SFS_DBG ( \"[%s] io error \\n \" , __func__ ); return NULL ; } inode -> dir_cnt = 0 ; inode -> ino = inode_d . ino ; inode -> size = inode_d . size ; inode -> dentry = dentry ; \u200b \u2461 \u5224\u65adinode\u7684\u6587\u4ef6\u7c7b\u578b\uff0c\u5982\u679c\u662f\u76ee\u5f55\u7c7b\u578b\u5219\u9700\u8981\u8bfb\u53d6\u6bcf\u4e00\u4e2a\u76ee\u5f55\u9879\u5e76\u5efa\u7acb\u8fde\u63a5\u3002 /*\u5224\u65adiNode\u8282\u70b9\u7684\u6587\u4ef6\u7c7b\u578b*/ if ( SFS_IS_DIR ( inode )) { /*\u5982\u679c\u662f\u76ee\u5f55\u7684\u8bdd\u9700\u8981\u5c06\u76ee\u5f55\u9879\u5efa\u7acb\u8fde\u63a5*/ dir_cnt = inode_d . dir_cnt ; for ( i = 0 ; i < dir_cnt ; i ++ ) { if ( sfs_driver_read ( SFS_DATA_OFS ( ino ) + i * sizeof ( struct sfs_dentry_d ), ( uint8_t * ) & dentry_d , sizeof ( struct sfs_dentry_d )) != SFS_ERROR_NONE ) { SFS_DBG ( \"[%s] io error \\n \" , __func__ ); return NULL ; } sub_dentry = new_dentry ( dentry_d . fname , dentry_d . ftype ); sub_dentry -> parent = inode -> dentry ; sub_dentry -> ino = dentry_d . ino ; sfs_alloc_dentry ( inode , sub_dentry ); } } \u200b \u2462\u5982\u679c\u662f\u6587\u4ef6\u7c7b\u578b\u76f4\u63a5\u8bfb\u53d6\u6570\u636e\u5373\u53ef\u3002 else if ( SFS_IS_REG ( inode )) { /*\u6587\u4ef6\u7c7b\u578b\u76f4\u63a5\u8bfb\u53d6\u6570\u636e\u5373\u53ef*/ inode -> data = ( uint8_t * ) malloc ( SFS_BLKS_SZ ( SFS_DATA_PER_FILE )); if ( sfs_driver_read ( SFS_DATA_OFS ( ino ), ( uint8_t * ) inode -> data , SFS_BLKS_SZ ( SFS_DATA_PER_FILE )) != SFS_ERROR_NONE ) { SFS_DBG ( \"[%s] io error \\n \" , __func__ ); return NULL ; } }","title":"3.1 \u6302\u8f7d"},{"location":"lab5/part3/#32","text":"FUSE\u6587\u4ef6\u7cfb\u7edf\u4e3a\u4e86\u83b7\u5f97\u6bcf\u4e2a\u6587\u4ef6\u7684\u72b6\u6001 \uff0c\u8981\u4e0d\u65ad\u8c03\u7528 getattr \u94a9\u5b50\uff0c\u8fd9\u4e2a\u94a9\u5b50\u51fd\u6570\u7c7b\u4f3c\u4e8e xv6 \u91cc\u7684 fstat \u3002\u5b9e\u73b0 ls \u3001 mkdir \u3001 touch \u7b49\u64cd\u4f5c\u7684\u524d\u63d0\u5c31\u662f\u5b8c\u6210 getattr \u94a9\u5b50\u7684\u7f16\u5199\uff0c\u8fd9\u91cc\u7ed9\u4e2a\u4f8b\u5b50\uff1a \u200b \u2460\u9996\u5148\u627e\u5230\u8def\u5f84\u6240\u5bf9\u5e94\u7684\u76ee\u5f55\u9879\u3002 struct sfs_dentry * dentry = sfs_lookup ( path , & is_find , & is_root ); if ( is_find == FALSE ) { return - SFS_ERROR_NOTFOUND ; } \u200b \u2461\u5224\u65ad\u76ee\u5f55\u9879\u7684\u6587\u4ef6\u7c7b\u578b\u5e76\u5bf9\u72b6\u6001\u8fdb\u884c\u7f16\u5199\u3002 if ( SFS_IS_DIR ( dentry -> inode )) { //\u5982\u679c\u662f\u76ee\u5f55\u7c7b\u578b sfs_stat -> st_mode = S_IFDIR | SFS_DEFAULT_PERM ; sfs_stat -> st_size = dentry -> inode -> dir_cnt * sizeof ( struct sfs_dentry_d ); } else if ( SFS_IS_REG ( dentry -> inode )) { //\u5982\u679c\u662f\u6587\u4ef6\u7c7b\u578b sfs_stat -> st_mode = S_IFREG | SFS_DEFAULT_PERM ; sfs_stat -> st_size = dentry -> inode -> size ; } sfs_stat -> st_nlink = 1 ; sfs_stat -> st_uid = getuid (); sfs_stat -> st_gid = getgid (); sfs_stat -> st_atime = time ( NULL ); sfs_stat -> st_mtime = time ( NULL ); sfs_stat -> st_blksize = SFS_IO_SZ (); if ( is_root ) { sfs_stat -> st_size = sfs_super . sz_usage ; sfs_stat -> st_blocks = SFS_DISK_SZ () / SFS_IO_SZ (); sfs_stat -> st_nlink = 2 ; /* !\u7279\u6b8a\uff0c\u6839\u76ee\u5f55link\u6570\u4e3a2 */ } return SFS_ERROR_NONE ; } getattr \u7684\u5b9e\u73b0\u9996\u5148\u662f \u89e3\u6790\u8def\u5f84 \uff0c\u4ece\u800c\u83b7\u53d6\u76f8\u5e94\u6587\u4ef6\u7684 inode\u6216dentry \uff0c\u63a5\u7740\u586b\u5199 struct stat* \u7ed3\u6784\u4f53\u5373\u53ef\u3002 \u5176\u4e2d sfs_lookup \u51fd\u6570\u5f88\u91cd\u8981\uff0c\u8bb8\u591a\u9700\u8981\u5b9e\u73b0\u7684\u94a9\u5b50\u90fd\u9700\u8981\u7528\u5230\u5b83\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u627e\u5230\u8def\u5f84\u6240\u5bf9\u5e94\u7684\u76ee\u5f55\u9879\uff0c\u6216\u8005\u8fd4\u56de\u4e0a\u4e00\u7ea7\u76ee\u5f55\u9879\uff0c\u539f\u578b\u5982\u4e0b\uff1a \u200b \u2460\u9996\u5148\u8ba1\u7b97\u8def\u5f84\u7684\u7ea7\u6570\uff0c\u5982\u679c\u4e3a0\u8bf4\u660e\u662f\u6839\u76ee\u5f55\u3002 int total_lvl = sfs_calc_lvl ( path ); /*\u8ba1\u7b97\u8def\u5f84\u7ea7\u6570*/ ... if ( total_lvl == 0 ) { /* \u6839\u76ee\u5f55 */ * is_find = TRUE ; * is_root = TRUE ; dentry_ret = sfs_super . root_dentry ; } \u200b \u2461\u4e0d\u4e3a0\u5219\u9700\u8981\u4ece\u6839\u76ee\u5f55\u5f00\u59cb\uff0c\u4f9d\u6b21\u5339\u914d\u8def\u5f84\u4e2d\u7684\u76ee\u5f55\u9879\uff0c\u76f4\u5230\u627e\u5230\u6587\u4ef6\u6240\u5bf9\u5e94\u7684\u76ee\u5f55\u9879\u3002 \u200b \u2462\u5982\u679c\u6ca1\u627e\u5230\u5219\u8fd4\u56de\u6700\u540e\u4e00\u6b21\u5339\u914d\u7684\u76ee\u5f55\u9879\u3002 fname = strtok ( path_cpy , \"/\" ); /*\u5206\u6790\u8def\u5f84\u51fd\u6570\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u5b83\u7684\u7528\u6cd5*/ while ( fname ) { lvl ++ ; if ( dentry_cursor -> inode == NULL ) { /* Cache\u673a\u5236 */ sfs_read_inode ( dentry_cursor , dentry_cursor -> ino ); } inode = dentry_cursor -> inode ; if ( SFS_IS_REG ( inode ) && lvl < total_lvl ) { SFS_DBG ( \"[%s] not a dir \\n \" , __func__ ); dentry_ret = inode -> dentry ; break ; } if ( SFS_IS_DIR ( inode )) { /*\u76ee\u5f55\u7c7b\u578b\u7684\u6587\u4ef6\u9700\u8981\u5c06\u76ee\u5f55\u9879\u548c\u8def\u5f84\u540d\u8fdb\u884c\u6bd4\u8f83*/ dentry_cursor = inode -> dentrys ; is_hit = FALSE ; while ( dentry_cursor ) { if ( memcmp ( dentry_cursor -> fname , fname , strlen ( fname )) == 0 ) { is_hit = TRUE ; break ; } dentry_cursor = dentry_cursor -> brother ; } if ( ! is_hit ) { * is_find = FALSE ; SFS_DBG ( \"[%s] not found %s \\n \" , __func__ , fname ); dentry_ret = inode -> dentry ; break ; } if ( is_hit && lvl == total_lvl ) { * is_find = TRUE ; dentry_ret = dentry_cursor ; break ; } } fname = strtok ( NULL , \"/\" ); } if ( dentry_ret -> inode == NULL ) { dentry_ret -> inode = sfs_read_inode ( dentry_ret , dentry_ret -> ino ); } return dentry_ret ;","title":"3.2 \u83b7\u53d6\u6587\u4ef6\u5c5e\u6027"},{"location":"lab5/part3/#33","text":"\u5f53\u4e3aFUSE\u6587\u4ef6\u7cfb\u7edf\u521b\u5efa\u76ee\u5f55\u65f6\uff0c\u4f1a \u6267\u884c\u7684\u94a9\u5b50 \u662f .mkdir \uff1a \u200b \u2460\u5bfb\u627e\u4e0a\u7ea7\u76ee\u5f55\u9879\u3002 \u200b \u2461\u521b\u5efa\u76ee\u5f55\u5e76\u5efa\u7acb\u8fde\u63a5\u3002 /** * @brief \u521b\u5efa\u76ee\u5f55 * * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84 * @param mode \u521b\u5efa\u6a21\u5f0f\uff08\u53ea\u8bfb\uff1f\u53ea\u5199\uff1f\uff09\uff0c\u53ef\u5ffd\u7565 * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int sfs_mkdir ( const char * path , mode_t mode ) { ( void ) mode ; boolean is_find , is_root ; char * fname ; struct sfs_dentry * last_dentry = sfs_lookup ( path , & is_find , & is_root ); //\u5bfb\u627e\u4e0a\u7ea7\u76ee\u5f55\u9879 struct sfs_dentry * dentry ; struct sfs_inode * inode ; if ( is_find ) { //\u76ee\u5f55\u5b58\u5728 return - SFS_ERROR_EXISTS ; } if ( SFS_IS_REG ( last_dentry -> inode )) { return - SFS_ERROR_UNSUPPORTED ; } fname = sfs_get_fname ( path ); dentry = new_dentry ( fname , SFS_DIR ); dentry -> parent = last_dentry ; inode = sfs_alloc_inode ( dentry ); sfs_alloc_dentry ( last_dentry -> inode , dentry ); return SFS_ERROR_NONE ; }","title":"3.3 \u5efa\u7acb\u76ee\u5f55"},{"location":"lab5/part3/#34","text":"\u5f53\u4e3aFUSE\u6587\u4ef6\u7cfb\u7edf\u521b\u5efa\u6587\u4ef6\u65f6\uff0c\u4f1a \u6267\u884c\u7684\u94a9\u5b50 \u662f .mknod \uff0c\u5728\u6211\u4eec\u7ed9\u7684\u6846\u67b6\u4e2d\uff0c\u7ed9\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u601d\u8def\uff1a /** * @brief \u521b\u5efa\u6587\u4ef6 * * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84 * @param mode \u521b\u5efa\u6587\u4ef6\u7684\u6a21\u5f0f\uff0c\u53ef\u5ffd\u7565 * @param dev \u8bbe\u5907\u7c7b\u578b\uff0c\u53ef\u5ffd\u7565 * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int newfs_mknod ( const char * path , mode_t mode , dev_t dev ) { /* TODO: \u89e3\u6790\u8def\u5f84\uff0c\u5e76\u521b\u5efa\u76f8\u5e94\u7684\u6587\u4ef6 */ return 0 ; } \u800c\u5728sfs\u6587\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u94a9\u5b50\u7684\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\uff1a \u200b \u2460\u627e\u5230\u521b\u5efa\u6587\u4ef6\u8def\u5f84\u4e2d\u6240\u5bf9\u5e94\u7684\u76ee\u5f55\u9879\u3002 \u200b \u2461\u5982\u679c\u6587\u4ef6\u5b58\u5728\u5219\u8fd4\u56de\u9519\u8bef\u3002 \u200b \u2462\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u5728\u521b\u5efa\u76ee\u5f55\u9879\u548c\u5bf9\u5e94\u7684inode\uff0c\u5e76\u548c\u7236\u76ee\u5f55\u9879\u5efa\u7acb\u8fde\u63a5\u3002 /** * @brief \u521b\u5efa\u6587\u4ef6 * * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84 * @param mode \u521b\u5efa\u6587\u4ef6\u7684\u6a21\u5f0f\uff0c\u53ef\u5ffd\u7565 * @param dev \u8bbe\u5907\u7c7b\u578b\uff0c\u53ef\u5ffd\u7565 * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int sfs_mknod ( const char * path , mode_t mode , dev_t dev ) { boolean is_find , is_root ; struct sfs_dentry * last_dentry = sfs_lookup ( path , & is_find , & is_root ); //\u627e\u5230\u521b\u5efa\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55 struct sfs_dentry * dentry ; struct sfs_inode * inode ; char * fname ; if ( is_find == TRUE ) { //\u6587\u4ef6\u5b58\u5728 return - SFS_ERROR_EXISTS ; } fname = sfs_get_fname ( path ); //\u83b7\u53d6\u6587\u4ef6\u540d\u5b57 if ( S_ISREG ( mode )) { dentry = new_dentry ( fname , SFS_REG_FILE ); } else if ( S_ISDIR ( mode )) { dentry = new_dentry ( fname , SFS_DIR ); } dentry -> parent = last_dentry ; inode = sfs_alloc_inode ( dentry ); sfs_alloc_dentry ( last_dentry -> inode , dentry ); return SFS_ERROR_NONE ; } \u4f46\u4ec5\u4ec5\u5b9e\u73b0\u8fd9\u4e2a\u51fd\u6570 touch \u4e00\u4e2a\u6587\u4ef6\u4ecd\u7136\u4f1a\u62a5\u9519\uff0c\u8fd9\u662f\u56e0\u4e3a touch \u8981\u6c42\u4e0d\u4ec5\u4ec5\u662f\u521b\u5efa\u6587\u4ef6\uff0c\u8fd8\u8981\u6c42\u53ef\u4ee5 \u4fee\u6539\u6587\u4ef6\u7684\u8bbf\u95ee\u65f6\u95f4 \uff08\u96be\u602a\u53eb touch \uff0c\u6478\u4e00\u4e0b\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u8fd8\u8981\u5b9e\u73b0 utimens \u94a9\u5b50\uff0c\u8fd9\u4e2a\u94a9\u5b50\u7528\u4e8e\u4fee\u6539\u6587\u4ef6\u7684\u8bbf\u95ee\u65f6\u95f4\uff08\u5176\u5b9e\u53ea\u9700\u8981\u8fd4\u56de0\u5c31\u597d\uff09\u3002\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5b8c\u5584\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u5b8c\u5584\u3002 /** * @brief \u4fee\u6539\u65f6\u95f4\uff0c\u4e3a\u4e86\u4e0d\u8ba9touch\u62a5\u9519 * * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84 * @param tv \u5b9e\u8df5 * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int newfs_utimens ( const char * path , const struct timespec tv [ 2 ]) { ( void ) path ; return 0 ; }","title":"3.4 \u5efa\u7acb\u6587\u4ef6"},{"location":"lab5/part3/#35","text":"\u5f53 \u5728FUSE\u6587\u4ef6\u7cfb\u7edf \u4e0b\u8c03\u7528 ls \u65f6\uff0c\u5c31\u4f1a\u89e6\u53d1 readdir \u94a9\u5b50\uff0c readdir \u5728 ls \u7684\u8fc7\u7a0b\u4e2d\u6bcf\u6b21 \u4ec5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u76ee\u5f55\u9879 \uff0c\u5176\u4e2d offset \u53c2\u6570\u8bb0\u5f55\u7740\u5f53\u524d\u5e94\u8be5\u8fd4\u56de\u7684\u76ee\u5f55\u9879\uff1a /** * @brief * * @param path * @param buf * @param filler \u53c2\u6570\u8bb2\u89e3: * * typedef int (*fuse_fill_dir_t) (void *buf, const char *name, * const struct stat *stbuf, off_t off) * buf: name\u4f1a\u88ab\u590d\u5236\u5230buf\u4e2d * name: dentry\u540d\u5b57 * stbuf: \u6587\u4ef6\u72b6\u6001\uff0c\u53ef\u5ffd\u7565 * off: \u4e0b\u4e00\u6b21offset\u4ece\u54ea\u91cc\u5f00\u59cb\uff0c\u8fd9\u91cc\u53ef\u4ee5\u7406\u89e3\u4e3a\u7b2c\u51e0\u4e2adentry * * @param offset * @param fi * @return int */ int sfs_readdir ( const char * path , void * buf , fuse_fill_dir_t filler , off_t offset , struct fuse_file_info * fi ) { boolean is_find , is_root ; int cur_dir = offset ; struct sfs_dentry * dentry = sfs_lookup ( path , & is_find , & is_root ); struct sfs_dentry * sub_dentry ; struct sfs_inode * inode ; if ( is_find ) { inode = dentry -> inode ; sub_dentry = sfs_get_dentry ( inode , cur_dir ); if ( sub_dentry ) { filler ( buf , sub_dentry -> fname , NULL , ++ offset ); } return SFS_ERROR_NONE ; } return - SFS_ERROR_NOTFOUND ; } \u5176\u4e2d\u6700\u91cd\u8981\u7684 filler \u51fd\u6570\uff0c filler \u51fd\u6570\u539f\u578b\u5982\u4e0b\uff1a typedef int (*fuse_fill_dir_t) (void *buf, const char *name, const struct stat *stbuf, off_t off) \u5bf9\u5404\u4e2a\u53c2\u6570\u505a\u5982\u4e0b\u89e3\u91ca\uff1a buf \uff1aname\u4f1a\u88ab\u590d\u5236\u5230buf\u4e2d\uff1b xxxxxxxxxx /*** @brief \u521b\u5efa\u76ee\u5f55* * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84* @param mode \u521b\u5efa\u6a21\u5f0f\uff08\u53ea\u8bfb\uff1f\u53ea\u5199\uff1f\uff09\uff0c\u53ef\u5ffd\u7565* @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25*/int sfs_mkdir(const char* path, mode_t mode) { (void)mode; boolean is_find, is_root; char* fname; struct sfs_dentry* last_dentry = sfs_lookup(path, &is_find, &is_root);//\u5bfb\u627e\u4e0a\u7ea7\u76ee\u5f55\u9879 struct sfs_dentry* dentry; struct sfs_inode* inode;\u200b if (is_find) {//\u76ee\u5f55\u5b58\u5728 return -SFS_ERROR_EXISTS; }\u200b if (SFS_IS_REG(last_dentry->inode)) { return -SFS_ERROR_UNSUPPORTED; }\u200b fname = sfs_get_fname(path); dentry = new_dentry(fname, SFS_DIR); dentry->parent = last_dentry; inode = sfs_alloc_inode(dentry); sfs_alloc_dentry(last_dentry->inode, dentry); return SFS_ERROR_NONE;}c stbuf \uff1a\u6587\u4ef6\u72b6\u6001\uff0c\u53ef\u5ffd\u7565\uff1b off \uff1a \u4e0b\u4e00\u6b21offset\u4ece\u54ea\u91cc\u5f00\u59cb\uff0c\u8fd9\u91cc\u53ef\u4ee5\u7406\u89e3\u4e3a\u7b2c\u51e0\u4e2adentry\uff1b \u56e0\u6b64\uff0c\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u8c03\u7528 filler(buf, fname, NULL, ++offset) \u8868\u793a\u5c06 fname \u653e\u5165 buf \u4e2d\uff0c\u5e76\u4f7f\u76ee\u5f55\u9879\u504f\u79fb\u52a0\u4e00\uff0c\u4ee3\u8868\u4e0b\u4e00\u6b21\u8bbf\u95ee\u4e0b\u4e00\u4e2a\u76ee\u5f55\u9879\u3002","title":"3.5 \u8bfb\u53d6\u76ee\u5f55\u9879"},{"location":"lab5/part3/#_2","text":"","title":"*\u8865\u5145\u601d\u8003\uff1a\u7b26\u53f7\u94fe\u63a5\u7684\u5b9e\u73b0"},{"location":"lab5/part3/#_3","text":"\u7b26\u53f7\u94fe\u63a5\uff08Symbolic Link\uff09\uff0c\u53c8\u79f0\u8f6f\u94fe\u63a5\uff08Soft Link\uff09\uff0c\u5b83\u5305\u542b\u4e86\u5230\u539f\u6587\u4ef6\u7684\u8def\u5f84\u4fe1\u606f\uff0c\u62e5\u6709\u81ea\u5df1\u7684\u7d22\u5f15\u8282\u70b9\uff08inode\uff09\u53ca\u6587\u4ef6\u5c5e\u6027\u53ca\u6743\u9650\u3002 \u786c\u94fe\u63a5\uff08Hard Link\uff09\uff0c\u662f\u5bf9\u539f\u6587\u4ef6\u8d77\u4e86\u4e00\u4e2a\u522b\u540d\u3002\u6587\u4ef6\u6709\u76f8\u540c\u7684 inode \u53ca data block\u3002 \u8be6\u7ec6\u533a\u522b\u8bf7\u81ea\u884c\u67e5\u9605\u8d44\u6599","title":"\u80cc\u666f"},{"location":"lab5/part3/#_4","text":"\u7531\u7b26\u53f7\u94fe\u63a5\u7684\u539f\u7406\u53ef\u5f97\uff0c\u5efa\u7acb\u7b26\u53f7\u94fe\u63a5\u7684\u5173\u952e\u662f\u5b58\u50a8\u94fe\u63a5\u76ee\u6807\u6587\u4ef6\u7684\u8def\u5f84\u4fe1\u606f\u3002 \u7531\u6b64\u5f15\u51fa\u7b26\u53f7\u94fe\u63a5\u7684\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff1a \u5c06\u8def\u5f84\u4fe1\u606f\u5b58\u50a8\u5728inode\u8282\u70b9\u4e2d \u5c06\u8def\u5f84\u4fe1\u606f\u5b58\u50a8\u5728data block\u4e2d \u6837\u4f8bSimpleFS\u4e2d\u7684\u5b9e\u73b0\uff0c\u5c06\u8def\u5f84\u4fe1\u606f\u5b58\u50a8\u4e8einode\u8282\u70b9\u4e2d\uff0c\u5bf9\u4e8e\u5b58\u50a8\u5728data block\u4e2d\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u53ef\u4ee5\u81ea\u884c\u81ea\u8003\u5e76\u5b9e\u73b0\u3002","title":"\u7b26\u53f7\u94fe\u63a5\u7684\u5b9e\u73b0\u65b9\u5f0f"},{"location":"lab5/part3/#_5","text":"\u7531\u4e8e\u6837\u4f8b\u662f\u5c06\u7b26\u53f7\u94fe\u63a5\u7684\u8def\u5f84\u4fe1\u606f\u5b58\u50a8\u4e8einode\u8282\u70b9\u4e2d\uff0c\u6545\u9700\u8981\u9996\u5148\u4fee\u6539 struct inode \u548c struct inode_d # \u6dfb\u52a0target_path\u7528\u4e8e\u5b58\u50a8\u8def\u5f84\u4fe1\u606f char target_path [ SFS_MAX_FILE_NAME ]; \u5e76\u7531\u6b64\u9700\u8981\u589e\u52a0 sfs_utils.c \u4e2d\uff0c sfs_sync_inode() \u53ca sfs_read_inode() \uff0c\u5bf9\u5185\u5b58inode\u53ca\u78c1\u76d8inode\u95f4\u62f7\u8d1d\u64cd\u4f5c\u65f6\u7684\u8865\u5145\u62f7\u8d1d\u3002 \u540c\u65f6\uff0c\u5728\u6587\u4ef6\u7c7b\u578b enum sfs_file_type \u4e2d\u589e\u52a0 SFS_SYM_LINK FUSE\u6587\u4ef6\u7cfb\u7edf\u4e3a\u652f\u6301\u7b26\u53f7\u94fe\u63a5\uff0c\u9700\u8981\u5b9e\u73b0** symlink **\u94a9\u5b50 \u9996\u5148\uff0c\u7531\u4e8e\u7b26\u53f7\u94fe\u63a5\u672c\u8d28\u662f\u4e00\u4e2a\u7279\u6b8a\u7c7b\u578b\u7684\u6587\u4ef6\uff0c\u9700\u8981\u8c03\u7528 mknod() \u521b\u5efa\u65b0\u7684\u8282\u70b9\uff0c\u5c06\u6b64dentry / inode\u8282\u70b9\u6807\u8bb0\u4f4d\u7b26\u53f7\u94fe\u63a5\u578b\u8282\u70b9\uff0c\u5e76\u5c06\u94fe\u63a5\u7684\u8def\u5f84\u4fe1\u606f\u62f7\u8d1d\u81f3inode\u8282\u70b9\u4e2d\u3002 /** * @brief * * @param path - Where the link points * @param link - The link itself * @return int */ int sfs_symlink ( const char * path , const char * link ){ int ret = SFS_ERROR_NONE ; boolean is_find , is_root ; ret = sfs_mknod ( link , S_IFREG , NULL ); struct sfs_dentry * dentry = sfs_lookup ( link , & is_find , & is_root ); if ( is_find == FALSE ) { return - SFS_ERROR_NOTFOUND ; } dentry -> ftype = SFS_SYM_LINK ; struct sfs_inode * inode = dentry -> inode ; memcpy ( inode -> target_path , path , SFS_MAX_FILE_NAME ); return ret ; } FUSE\u6587\u4ef6\u7cfb\u7edf\u4e3a\u652f\u6301\u94fe\u63a5\uff0c\u9700\u8981\u5b9e\u73b0** readlink **\u94a9\u5b50 readlink \u5373\u5c06path\u5bf9\u5e94\u7684\u7b26\u53f7\u94fe\u63a5\u578b\u6587\u4ef6\u6240\u6307\u5411\u7684\u94fe\u63a5\u8def\u5f84\u4fe1\u606f\u62f7\u8d1d\u81f3buf\u4e2d\uff0c\u4ee5\u5b9e\u73b0\u5bf9\u5bf9\u5e94\u94fe\u63a5\u6587\u4ef6\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c\u3002 /** * @brief * * @param path * @param buf * @param size * @return int */ int sfs_readlink ( const char * path , char * buf , size_t size ){ /* SFS \u6682\u672a\u5b9e\u73b0\u786c\u94fe\u63a5\uff0c\u53ea\u652f\u6301\u8f6f\u94fe\u63a5 */ boolean is_find , is_root ; ssize_t llen ; struct sfs_dentry * dentry = sfs_lookup ( path , & is_find , & is_root ); if ( is_find == FALSE ) { return - SFS_ERROR_NOTFOUND ; } if ( dentry -> ftype != SFS_SYM_LINK ){ return - SFS_ERROR_INVAL ; } struct sfs_inode * inode = dentry -> inode ; llen = strlen ( inode -> target_path ); if ( size < 0 ){ return - SFS_ERROR_INVAL ; } else { if ( llen > size ){ strncpy ( buf , inode -> target_path , size ); buf [ size ] = '\\0' ; } else { strncpy ( buf , inode -> target_path , llen ); buf [ llen ] = '\\0' ; } } return SFS_ERROR_NONE ; } \u4e3a\u4e86\u80fd\u6210\u529f\u8bfb\u53d6\u7b26\u53f7\u94fe\u63a5\u578b\u6587\u4ef6\u7684\u72b6\u6001\u548c\u6743\u9650\uff0c\u8fd8\u9700\u8981\u4fee\u6539 sfs_getattr() # \u6dfb\u52a0\u5982\u4e0b\u5206\u652f\u5224\u65ad else if ( SFS_IS_SYM_LINK ( dentry -> inode )) { sfs_stat -> st_mode = S_IFLNK | SFS_DEFAULT_PERM ; sfs_stat -> st_size = dentry -> inode -> size ; }","title":"\u7b26\u53f7\u94fe\u63a5\u7684\u5b9e\u73b0\u7ec6\u8282"},{"location":"lab5/part3/#36","text":"\u5f53\u5378\u8f7dFUSE\u6587\u4ef6\u7cfb\u7edf\u65f6\uff0c\u4f1a \u6267\u884c\u7684\u94a9\u5b50 \u662f .destroy \uff0c\u6211\u4eec\u53ef\u4ee5\u5728 .destroy \u94a9\u5b50\u4e2d\u5b8c\u6210 \u8d85\u7ea7\u5757\u56de\u5199\u8bbe\u5907 \u3001 \u9a71\u52a8\u7684\u5173\u95ed \u3001 \u66f4\u591a\u5fc5\u8981\u7ed3\u6784\u7684\u56de\u5199 \u7b49\u64cd\u4f5c\uff0c\u4ee5\u4fdd\u8bc1\u4e0b\u4e00\u6b21\u6302\u8f7d\u80fd\u591f \u6062\u590dddriver\u8bbe\u5907\u4e2d\u7684\u6570\u636e \uff1a /** * @brief \u5378\u8f7d\uff08umount\uff09\u6587\u4ef6\u7cfb\u7edf * * @param p \u53ef\u5ffd\u7565 * @return void */ void newfs_destroy ( void * p ) { /* TODO: \u5728\u8fd9\u91cc\u8fdb\u884c\u5378\u8f7d */ ddriver_close ( super . fd ); return ; } \u4e0a\u9762\u7684\u793a\u4f8b\u662f\u5173\u95ed\u9a71\u52a8\u8bbe\u5907\u3002 \u4e0b\u9762\u6211\u4eec\u6765\u770b\u770bsfs\u6587\u4ef6\u7cfb\u7edf\u4e2d\u5bf9\u4e8e\u5378\u8f7d\u7684\u5177\u4f53\u5b9e\u73b0\u6b65\u9aa4\uff1a \u200b \u2460\u4ece\u6839\u8282\u70b9\u9012\u5f52\u5f80\u4e0b\u5237\u5199\u6839\u8282\u70b9\u3002 sfs_sync_inode ( sfs_super . root_dentry -> inode ); /* \u4ece\u6839\u8282\u70b9\u5411\u4e0b\u5237\u5199\u8282\u70b9 */ \u200b \u2461\u5c06\u5185\u5b58\u8d85\u7ea7\u5757\u8f6c\u6362\u4e3a\u78c1\u76d8\u8d85\u7ea7\u5757\u5e76\u5199\u5165\u78c1\u76d8\u3002 sfs_super_d . magic_num = SFS_MAGIC_NUM ; sfs_super_d . map_inode_blks = sfs_super . map_inode_blks ; sfs_super_d . map_inode_offset = sfs_super . map_inode_offset ; sfs_super_d . data_offset = sfs_super . data_offset ; sfs_super_d . sz_usage = sfs_super . sz_usage ; if ( sfs_driver_write ( SFS_SUPER_OFS , ( uint8_t * ) & sfs_super_d , sizeof ( struct sfs_super_d )) != SFS_ERROR_NONE ) { return - SFS_ERROR_IO ; } \u200b \u2462\u5c06inode\u4f4d\u56fe\u5199\u5165\u78c1\u76d8\u3002 if ( sfs_driver_write ( sfs_super_d . map_inode_offset , ( uint8_t * )( sfs_super . map_inode ), SFS_BLKS_SZ ( sfs_super_d . map_inode_blks )) != SFS_ERROR_NONE ) { return - SFS_ERROR_IO ; } free ( sfs_super . map_inode ); \u200b \u2463\u5173\u95ed\u9a71\u52a8\u3002 ddriver_close ( SFS_DRIVER ()); \u5176\u4e2d\u6700\u91cd\u8981\u7684\u51fd\u6570\u662f sfs_sync_inode \uff0c\u5176\u4f5c\u7528\u662f\u5c06\u5185\u5b58inode\u53ca\u5176\u4e0b\u65b9\u7ed3\u6784\u5168\u90e8\u5237\u56de\u78c1\u76d8\uff0c\u64cd\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a \u200b \u2460\u9996\u5148\u5c06inode\u5199\u5165\u78c1\u76d8\u3002 if ( sfs_driver_write ( SFS_INO_OFS ( ino ), ( uint8_t * ) & inode_d , sizeof ( struct sfs_inode_d )) != SFS_ERROR_NONE ) { SFS_DBG ( \"[%s] io error \\n \" , __func__ ); return - SFS_ERROR_IO ; } \u200b \u2461\u5224\u65adinode\u6587\u4ef6\u7c7b\u578b\u3002 \u200b \u2462\u5982\u679c\u662f\u76ee\u5f55\u7c7b\u578b\u5219\u9700\u8981\u9996\u5148\u5c06\u76ee\u5f55\u9879\u5199\u5165\u78c1\u76d8\uff0c\u518d\u9012\u5f52\u5237\u5199\u6bcf\u4e00\u4e2a\u76ee\u5f55\u9879\u6240\u5bf9\u5e94\u7684inode\u8282\u70b9\u3002 /* Cycle 1: \u5199 INODE */ /* Cycle 2: \u5199 \u6570\u636e */ if ( SFS_IS_DIR ( inode )) { dentry_cursor = inode -> dentrys ; offset = SFS_DATA_OFS ( ino ); while ( dentry_cursor != NULL ) { memcpy ( dentry_d . fname , dentry_cursor -> fname , SFS_MAX_FILE_NAME ); dentry_d . ftype = dentry_cursor -> ftype ; dentry_d . ino = dentry_cursor -> ino ; if ( sfs_driver_write ( offset , ( uint8_t * ) & dentry_d , sizeof ( struct sfs_dentry_d )) != SFS_ERROR_NONE ) { SFS_DBG ( \"[%s] io error \\n \" , __func__ ); return - SFS_ERROR_IO ; } if ( dentry_cursor -> inode != NULL ) { /*\u9012\u5f52\u5237\u5199\u8282\u70b9*/ sfs_sync_inode ( dentry_cursor -> inode ); } dentry_cursor = dentry_cursor -> brother ; offset += sizeof ( struct sfs_dentry_d ); } } \u200b \u2463\u5982\u679c\u662f\u6587\u4ef6\u7c7b\u578b\uff0c\u5219\u5c06inode\u6240\u6307\u5411\u7684\u6570\u636e\u76f4\u63a5\u5199\u5165\u78c1\u76d8\u3002 else if ( SFS_IS_REG ( inode )) { if ( sfs_driver_write ( SFS_DATA_OFS ( ino ), inode -> data , SFS_BLKS_SZ ( SFS_DATA_PER_FILE )) != SFS_ERROR_NONE ) { SFS_DBG ( \"[%s] io error \\n \" , __func__ ); return - SFS_ERROR_IO ; } }","title":"3.6 \u5378\u8f7d"},{"location":"lab5/part3/#37","text":"\u5f53\u8bfb\u53d6\u6587\u4ef6\u65f6\uff0c\u5c31\u4f1a\u7528\u5230 read \u94a9\u5b50\uff0c\u8fd9\u4e2a\u94a9\u5b50\u5728\u590d\u5236\u6587\u4ef6\u65f6\u4e5f\u4f1a\u7528\u5230\uff0c\u4ed6\u901a\u8fc7\u4e0b\u9762\u7684\u6b65\u9aa4\u6765\u5b8c\u6210\u4e00\u6b21\u5bf9\u6587\u4ef6\u7684\u8bfb\u53d6\uff1a \u2460\u9996\u5148\u627e\u5230\u6587\u4ef6\u7684\u76ee\u5f55\u9879\uff1a struct sfs_dentry * dentry = sfs_lookup ( path , & is_find , & is_root ); \u2461\u627e\u5230\u76ee\u5f55\u9879\u4e4b\u540e\u5224\u65ad\u6587\u4ef6\u7c7b\u578b\uff0c\u4fdd\u8bc1\u662f\u6587\u4ef6\u7c7b\u578b\u5e76\u4e14\u6587\u4ef6\u5927\u5c0f\u8981\u5927\u4e8e\u6240\u8981\u8bfb\u53d6\u7684\u504f\u79fb\u91cf\uff1a if ( SFS_IS_DIR ( inode )) { return - SFS_ERROR_ISDIR ; } if ( inode -> size < offset ) { return - SFS_ERROR_SEEK ; } \u2462\u4e4b\u540e\u5c06\u6570\u636e\u8bfb\u5165\u5185\u5b58\u5757\u5373\u53ef\uff1a memcpy ( buf , inode -> data + offset , size );","title":"3.7 \u6587\u4ef6\u8bfb"},{"location":"lab5/part3/#38","text":"\u5199\u6587\u4ef6\u662f\uff0c\u7528\u5230 write \u94a9\u5b50\uff0c\u5b83\u5411\u6587\u4ef6\u6240\u5728\u7684\u78c1\u76d8\u4f4d\u7f6e\u4e2d\u5199\u5165\u6570\u636e\uff1a \u2460\u548c\u8bfb\u6587\u4ef6\u4e00\u6837\uff0c\u9996\u5148\u627e\u5230\u8def\u5f84\u6240\u5bf9\u5e94\u7684\u76ee\u5f55\u9879\uff1a struct sfs_dentry * dentry = sfs_lookup ( path , & is_find , & is_root ); \u2461\u4e4b\u540e\u4fdd\u8bc1\u6587\u4ef6\u7c7b\u578b\u4e0d\u662f\u76ee\u5f55\u4ee5\u53ca\u4fdd\u8bc1\u6587\u4ef6\u5927\u5c0f\u5927\u4e8e\u504f\u79fb\u91cf\uff1a if ( SFS_IS_DIR ( inode )) { return - SFS_ERROR_ISDIR ; } if ( inode -> size < offset ) { return - SFS_ERROR_SEEK ; } \u2462\u5c06\u5185\u5b58\u4e2d\u6570\u636e\u590d\u5236\u5230\u5bf9\u5e94\u4f4d\u7f6e\u5373\u53ef\uff0c\u5e76\u6539\u5199iNode\u8282\u70b9\u7684\u5927\u5c0f\uff1a memcpy ( inode -> data + offset , buf , size ); inode -> size = offset + size > inode -> size ? offset + size : inode -> size ;","title":"3.8 \u6587\u4ef6\u5199"},{"location":"lab5/part3/#32_1","text":"\u5f53\u5378\u8f7dFUSE\u6587\u4ef6\u7cfb\u7edf\u65f6\uff0c\u4f1a \u6267\u884c\u7684\u94a9\u5b50 \u662f .destroy \uff0c\u6211\u4eec\u53ef\u4ee5\u5728 .destroy \u94a9\u5b50\u4e2d\u5b8c\u6210 \u8d85\u7ea7\u5757\u56de\u5199\u8bbe\u5907 \u3001 \u9a71\u52a8\u7684\u5173\u95ed \u3001 \u66f4\u591a\u5fc5\u8981\u7ed3\u6784\u7684\u56de\u5199 \u7b49\u64cd\u4f5c\uff0c\u4ee5\u4fdd\u8bc1\u4e0b\u4e00\u6b21\u6302\u8f7d\u80fd\u591f \u6062\u590dddriver\u8bbe\u5907\u4e2d\u7684\u6570\u636e \uff1a /** * @brief \u5378\u8f7d\uff08umount\uff09\u6587\u4ef6\u7cfb\u7edf * * @param p \u53ef\u5ffd\u7565 * @return void */ void newfs_destroy ( void * p ) { /* TODO: \u5728\u8fd9\u91cc\u8fdb\u884c\u5378\u8f7d */ ddriver_close ( super . fd ); return ; } \u4e0a\u9762\u7684\u793a\u4f8b\u662f\u5173\u95ed\u9a71\u52a8\u8bbe\u5907\u3002","title":"3.2 \u5378\u8f7d"},{"location":"lab5/part3/#33_1","text":"FUSE\u6587\u4ef6\u7cfb\u7edf\u4e3a\u4e86\u83b7\u5f97\u6bcf\u4e2a\u6587\u4ef6\u7684\u72b6\u6001 \uff0c\u8981\u4e0d\u65ad\u8c03\u7528 getattr \u94a9\u5b50\uff0c\u8fd9\u4e2a\u94a9\u5b50\u51fd\u6570\u7c7b\u4f3c\u4e8e xv6 \u91cc\u7684 fstat \u3002\u5b9e\u73b0 ls \u3001 mkdir \u3001 touch \u7b49\u64cd\u4f5c\u7684\u524d\u63d0\u5c31\u662f\u5b8c\u6210 getattr \u94a9\u5b50\u7684\u7f16\u5199\uff0c\u8fd9\u91cc\u7ed9\u4e2a\u4f8b\u5b50\uff1a /** * @brief \u83b7\u53d6\u6587\u4ef6\u5c5e\u6027 * * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84 * @param sfs_stat \u8fd4\u56de\u72b6\u6001 * @return int */ int sfs_getattr ( const char * path , struct stat * sfs_stat ) { boolean is_find , is_root ; struct sfs_dentry * dentry = sfs_lookup ( path , & is_find , & is_root ); ... if ( SFS_IS_DIR ( dentry -> inode )) { sfs_stat -> st_mode = S_IFDIR | SFS_DEFAULT_PERM ; sfs_stat -> st_size = dentry -> inode -> dir_cnt * sizeof ( struct sfs_dentry_d ); } else if ( SFS_IS_REG ( dentry -> inode )) { sfs_stat -> st_mode = S_IFREG | SFS_DEFAULT_PERM ; /* SFS_DEFAULT_PERM 0777 */ sfs_stat -> st_size = dentry -> inode -> size ; } sfs_stat -> st_nlink = 1 ; sfs_stat -> st_uid = getuid (); sfs_stat -> st_gid = getgid (); sfs_stat -> st_atime = time ( NULL ); sfs_stat -> st_mtime = time ( NULL ); sfs_stat -> st_blksize = SFS_IO_SZ (); if ( is_root ) { sfs_stat -> st_size = sfs_super . sz_usage ; sfs_stat -> st_blocks = SFS_DISK_SZ () / SFS_IO_SZ (); sfs_stat -> st_nlink = 2 ; /* !\u7279\u6b8a\uff0c\u6839\u76ee\u5f55link\u6570\u4e3a2 */ } return SFS_ERROR_NONE ; } getattr \u7684\u5b9e\u73b0\u9996\u5148\u662f \u89e3\u6790\u8def\u5f84 \uff0c\u4ece\u800c\u83b7\u53d6\u76f8\u5e94\u6587\u4ef6\u7684 inode\u6216dentry \uff0c\u63a5\u7740\u586b\u5199 struct stat* \u7ed3\u6784\u4f53\u5373\u53ef\u3002","title":"3.3 \u83b7\u53d6\u6587\u4ef6\u5c5e\u6027"},{"location":"lab5/part3/#34_1","text":"\u5f53\u4e3aFUSE\u6587\u4ef6\u7cfb\u7edf\u521b\u5efa\u6587\u4ef6\u65f6\uff0c\u4f1a \u6267\u884c\u7684\u94a9\u5b50 \u662f .mknod \uff0c\u5728\u6211\u4eec\u7ed9\u7684\u6846\u67b6\u4e2d\uff0c\u7ed9\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u601d\u8def\uff1a /** * @brief \u521b\u5efa\u6587\u4ef6 * * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84 * @param mode \u521b\u5efa\u6587\u4ef6\u7684\u6a21\u5f0f\uff0c\u53ef\u5ffd\u7565 * @param dev \u8bbe\u5907\u7c7b\u578b\uff0c\u53ef\u5ffd\u7565 * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int newfs_mknod ( const char * path , mode_t mode , dev_t dev ) { /* TODO: \u89e3\u6790\u8def\u5f84\uff0c\u5e76\u521b\u5efa\u76f8\u5e94\u7684\u6587\u4ef6 */ return 0 ; } \u4f46\u4ec5\u4ec5\u5b9e\u73b0\u8fd9\u4e2a\u51fd\u6570 touch \u4e00\u4e2a\u6587\u4ef6\u4ecd\u7136\u4f1a\u62a5\u9519\uff0c\u8fd9\u662f\u56e0\u4e3a touch \u8981\u6c42\u4e0d\u4ec5\u4ec5\u662f\u521b\u5efa\u6587\u4ef6\uff0c\u8fd8\u8981\u6c42\u53ef\u4ee5 \u4fee\u6539\u6587\u4ef6\u7684\u8bbf\u95ee\u65f6\u95f4 \uff08\u96be\u602a\u53eb touch \uff0c\u6478\u4e00\u4e0b\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u8fd8\u8981\u5b9e\u73b0 utimens \u94a9\u5b50\uff0c\u8fd9\u4e2a\u94a9\u5b50\u7528\u4e8e\u4fee\u6539\u6587\u4ef6\u7684\u8bbf\u95ee\u65f6\u95f4\uff08\u5176\u5b9e\u53ea\u9700\u8981\u8fd4\u56de0\u5c31\u597d\uff09\u3002\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5b8c\u5584\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u5b8c\u5584\u3002 /** * @brief \u4fee\u6539\u65f6\u95f4\uff0c\u4e3a\u4e86\u4e0d\u8ba9touch\u62a5\u9519 * * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84 * @param tv \u5b9e\u8df5 * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int newfs_utimens ( const char * path , const struct timespec tv [ 2 ]) { ( void ) path ; return 0 ; }","title":"3.4 \u5efa\u7acb\u6587\u4ef6"},{"location":"lab5/part3/#35_1","text":"\u5f53\u4e3aFUSE\u6587\u4ef6\u7cfb\u7edf\u521b\u5efa\u76ee\u5f55\u65f6\uff0c\u4f1a \u6267\u884c\u7684\u94a9\u5b50 \u662f .mkdir \uff1a /** * @brief \u521b\u5efa\u76ee\u5f55 * * @param path \u76f8\u5bf9\u4e8e\u6302\u8f7d\u70b9\u7684\u8def\u5f84 * @param mode \u521b\u5efa\u6a21\u5f0f\uff08\u53ea\u8bfb\uff1f\u53ea\u5199\uff1f\uff09\uff0c\u53ef\u5ffd\u7565 * @return int 0\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25 */ int newfs_mkdir ( const char * path , mode_t mode ) { /* TODO: \u89e3\u6790\u8def\u5f84\uff0c\u521b\u5efa\u76ee\u5f55 */ return 0 ; }","title":"3.5 \u5efa\u7acb\u76ee\u5f55"},{"location":"lab5/part3/#36_1","text":"\u5f53 \u5728FUSE\u6587\u4ef6\u7cfb\u7edf \u4e0b\u8c03\u7528 ls \u65f6\uff0c\u5c31\u4f1a\u89e6\u53d1 readdir \u94a9\u5b50\uff0c readdir \u5728 ls \u7684\u8fc7\u7a0b\u4e2d\u6bcf\u6b21 \u4ec5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u76ee\u5f55\u9879 \uff0c\u5176\u4e2d offset \u53c2\u6570\u8bb0\u5f55\u7740\u5f53\u524d\u5e94\u8be5\u8fd4\u56de\u7684\u76ee\u5f55\u9879\uff1a int sfs_readdir ( const char * path , void * buf , fuse_fill_dir_t filler , off_t offset , struct fuse_file_info * fi ) { boolean is_find , is_root ; int cur_dir = offset ; ... if ( is_find ) { ... dentry = sfs_get_dentry ( inode , cur_dir ); if ( dentry ) { filler ( buf , fname , NULL , ++ offset ); } return SFS_ERROR_NONE ; } return - SFS_ERROR_NOTFOUND ; } \u5176\u4e2d\u6700\u91cd\u8981\u7684 filler \u51fd\u6570\uff0c filler \u51fd\u6570\u539f\u578b\u5982\u4e0b\uff1a typedef int ( * fuse_fill_dir_t ) ( void * buf , const char * name , const struct stat * stbuf , off_t off ) \u5bf9\u5404\u4e2a\u53c2\u6570\u505a\u5982\u4e0b\u89e3\u91ca\uff1a buf \uff1aname\u4f1a\u88ab\u590d\u5236\u5230buf\u4e2d\uff1b name \uff1adentry\u540d\u5b57\uff1b stbuf \uff1a\u6587\u4ef6\u72b6\u6001\uff0c\u53ef\u5ffd\u7565\uff1b off \uff1a \u4e0b\u4e00\u6b21offset\u4ece\u54ea\u91cc\u5f00\u59cb\uff0c\u8fd9\u91cc\u53ef\u4ee5\u7406\u89e3\u4e3a\u7b2c\u51e0\u4e2adentry\uff1b \u56e0\u6b64\uff0c\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u8c03\u7528 filler(buf, fname, NULL, ++offset) \u8868\u793a\u5c06 fname \u653e\u5165 buf \u4e2d\uff0c\u5e76\u4f7f\u76ee\u5f55\u9879\u504f\u79fb\u52a0\u4e00\uff0c\u4ee3\u8868\u4e0b\u4e00\u6b21\u8bbf\u95ee\u4e0b\u4e00\u4e2a\u76ee\u5f55\u9879\u3002","title":"3.6 \u8bfb\u53d6\u76ee\u5f55\u9879"},{"location":"lab5/part3/#4","text":"","title":"4. \u5b9e\u73b0\u5efa\u8bae"},{"location":"lab5/part3/#41","text":"\u672c\u6b21\u5b9e\u9a8c\u53ef\u4ee5\u53c2\u8003\u4e24\u4e2a\u5b8c\u5168\u642d\u5efa\u597d\u7684FUSE\u6587\u4ef6\u7cfb\u7edf\uff1a simplefs \uff08 fs/simplefs \u6587\u4ef6\u5939\u4e0b\uff09\u548c myfs \uff08 fs/samples \u6587\u4ef6\u5939\u4e0b\uff09\uff0c\u5176\u4e2d simplefs \u662f\u4e00\u4e2a\u7c7bEXT2\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u4f46 \u6ca1\u6709\u7ed9\u4e88\u6570\u636e\u4f4d\u56fe \u7684\u5b9e\u73b0\uff1b myfs \u662f github \u4e0a\u7684\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u4e5f\u662f\u4e00\u4e2aFUSE\u6587\u4ef6\u7cfb\u7edf\u5b9e\u4f8b\u3002","title":"4.1 \u53c2\u8003\u4ee3\u7801"},{"location":"lab5/part3/#42","text":"\u5c01\u88c5\u5bf9 ddriver \u7684\u8bbf\u95ee\u4ee3\u7801\uff0c\u65b9\u4fbf\u8bbe\u5907\u8bfb\u5199\uff1b\uff08\u6ce8\u610f\u9a71\u52a8\u8bfb\u5199IO\u4e3a512B\uff0c\u4f46\u662fEXT2\u6587\u4ef6\u7cfb\u7edf\u4e00\u4e2a\u5757\u5927\u5c0f\u4e3a1024B\uff0c\u4e5f\u5c31\u662f\u4e24\u4e2aIO\u5355\u4f4d\uff09 \u8bbe\u8ba1\u4ecb\u8d28\u6570\u636e\u7ed3\u6784\uff08\u4f4d\u4e8e types.h \uff09\uff1b \u8bbe\u8ba1\u5185\u5b58\u6570\u636e\u7ed3\u6784\uff08\u53ef\u8bbe\u8ba1\u3001\u53ef\u4e0d\u8bbe\u8ba1\uff09\uff1b \u5b8c\u6210 .init \u94a9\u5b50\uff1a\u8bfb \u8d85\u7ea7\u5757 \u3001\u521d\u59cb\u5316\u6587\u4ef6\u7cfb\u7edf\uff1b \u5b8c\u6210 .destroy \u94a9\u5b50\uff1a \u56de\u5199\u5fc5\u8981\u7ed3\u6784 \uff0c\u4fdd\u8bc1\u4e0b\u4e00\u6b21\u6302\u8f7d\u6b63\u5e38\uff1b \u9a8c\u8bc1\u6302\u8f7d\u5378\u8f7d\u6d41\u7a0b\u7684\u6b63\u786e\u6027\uff08 \u4e3b\u8981\u770b\u8bfb\u5199\u662f\u5426\u6b63\u786e \uff09\uff1b \u5b8c\u6210\u5de5\u5177\u51fd\u6570\uff08\u53ef\u81ea\u884c\u8bbe\u8ba1\uff09\uff1a \u5b8c\u6210 \u5206\u914dinode \u51fd\u6570\uff1a\u521b\u5efa\u4e00\u4e2aInode\u3001\u521d\u59cb\u5316\u5176\u4e0a\u7684\u5b57\u6bb5\u3001\u4fee\u6539\u4f4d\u56fe\u7ed3\u6784\uff0c\u53ef\u80fd\u8fd8\u9700\u8981\u4fee\u6539\u8d85\u7ea7\u5757\uff1b \u5b8c\u6210 \u5206\u914ddentry \u51fd\u6570\uff1a\u521b\u5efa\u4e00\u4e2adentry\u3001\u521d\u59cb\u5316\u5176\u4e0a\u7684\u5b57\u6bb5\uff1b \u5b8c\u6210\u5c06 dentry\u52a0\u5165\u5230inode \u4e2d\u7684\u51fd\u6570\uff1a\u5c06\u751f\u6210\u7684dentry\u5199\u5165\u5230inode\u4e2d\uff1b \u5b8c\u6210 \u8def\u5f84\u89e3\u6790\u51fd\u6570 \uff0c\u8981\u4e48\u8fd4\u56dedentry\uff0c\u8981\u4e48\u8fd4\u56deinode\uff0c\u53ef\u81ea\u884c\u8bbe\u8ba1\uff1b \u6839\u636e\u5de5\u5177\u51fd\u6570\uff0c\u5b8c\u6210 .get_attr \u94a9\u5b50\uff1b \u6839\u636e\u5de5\u5177\u51fd\u6570\uff0c\u5b8c\u6210 .mknod \u94a9\u5b50\uff1b \u6839\u636e\u5de5\u5177\u51fd\u6570\uff0c\u5b8c\u6210 .mkdir \u94a9\u5b50\uff1b \u6839\u636e\u5de5\u5177\u51fd\u6570\uff0c\u5b8c\u6210 .readdir \u94a9\u5b50\uff1b \u624b\u5de5\u6d4b\u8bd5 touch \u3001 ls \u3001 mkdir \u3001 fusermount -u \u7b49\u547d\u4ee4\u7684\u6b63\u786e\u6027\uff1b \u901a\u8fc7 ./tests/fs_test.sh \u811a\u672c","title":"4.2 \u5b9e\u73b0\u6b65\u9aa4\u5efa\u8bae"},{"location":"lab5/part3/#5","text":"","title":"5. \u5e38\u89c1\u95ee\u9898"},{"location":"lab5/part3/#51","text":"\u5e38\u89c1\u95ee\u98981: \u5982\u4f55\u8c03\u8bd5\uff1f \u6309\u4e0b F5 \u540e\uff0c\u6587\u4ef6\u7cfb\u7edf\u8fd0\u884c\u4e3a\u524d\u53f0\u6a21\u5f0f\uff0c\u90a3\u4e48\u5982\u4f55\u8f93\u5165\u547d\u4ee4\u5462\uff1f\u4e8b\u5b9e\u4e0a\uff0c\u53ef\u4ee5 ctrl + shift +\uff40 \u547c\u51fa\u53e6\u4e00\u4e2a\u7ec8\u7aef\uff0c\u7136\u540e\u5728\u53e6\u4e00\u4e2a\u7ec8\u7aef\u64cd\u4f5c\u3002 \u53e6\u5916\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u53ef\u4ee5\u6309\u8fd9\u4e2a \u62c6\u5206\u952e \uff0c\u5c31\u53ef\u4ee5\u540c\u65f6\u663e\u793a\u4e24\u4e2a\u7ec8\u7aef\u4e86\u3002","title":"5.1 \u5982\u4f55\u8c03\u8bd5\uff1f"},{"location":"lab5/part3/#52","text":"\u5e38\u89c1\u95ee\u98982: \u6302\u8f7d\u5931\u8d25\uff1ffuse: bad mount point \u5982\u4e0b\u56fe\u6240\u793a\uff1a \u8fd9\u79cd\u60c5\u51b5\u5c31\u662f\u4e0d\u6b63\u5e38\u7684\u5378\u8f7d\u6587\u4ef6\u7cfb\u7edf\uff0c\u6211\u4eec\u663e\u5f0f\u5730\u8c03\u7528 \u5378\u8f7d\u6587\u4ef6\u7cfb\u7edf \u5373\u53ef\uff1a teststu_8@OSLabExecNode0:~/pyq/user-land-filesystem/fs/newfs$ fusermount -u ./tests/mnt teststu_8@OSLabExecNode0:~/pyq/user-land-filesystem/fs/newfs$","title":"5.2 \u6302\u8f7d\u5931\u8d25\uff1f"},{"location":"lab5/part3/#53","text":"\u5e38\u89c1\u95ee\u98983: \u6302\u8f7d\u70b9\u4e0d\u7a7a\uff1fmountpoint is not empty \u5982\u4e0b\u56fe\u6240\u793a\uff1a \u8fd9\u79cd\u60c5\u51b5\u5c31\u662f\u5728\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u4e0d\u5c0f\u5fc3\u7ed9 mnt \u6587\u4ef6\u5939\u4e0b\u521b\u5efa\u4e86\u4e00\u4e2a\u6587\u4ef6\uff0c\u5bfc\u81f4\u9519\u8bef\u53d1\u751f\uff0c\u628a \u6587\u4ef6\u5220\u9664 \u5c31\u884c\u3002","title":"5.3 \u6302\u8f7d\u70b9\u4e0d\u7a7a\uff1f"},{"location":"lab5/part4/","text":"\u4ee3\u7801\u63d0\u4ea4 \u00b6 \u8bf7\u5c06\u672c\u6b21\u5b9e\u9a8c\u7684 \u6240\u6709\u4ee3\u7801 \u548c \u5b9e\u9a8c\u62a5\u544a \u6253\u5305\u63d0\u4ea4\u5230\u4f5c\u4e1a\u5e73\u53f0\uff01 \u5b9e\u9a8c\u9a8c\u6536\u6307\u5357 \u00b6 \u4ee5\u4e0b\u4e24\u70b9\u4e8c\u9009\u4e00\u5373\u53ef \u5b8c\u6210test.sh\u7684\u57fa\u7840\u529f\u80fd\u6d4b\u8bd5 \u6709\u4e9b\u540c\u5b66\u9047\u5230 \u811a\u672c \u65e0\u6cd5\u901a\u8fc7\u60c5\u51b5\uff0c\u53ef\u80fd\u662f FUSE\u672c\u8eab\u7684BUG \uff0c\u8fd9\u91cc\u540c\u5b66\u53ea\u8981\u80fd\u591f\u8fdb\u884c \u6b63\u786e\u7684\u5e8f\u5217\u6f14\u793a \u5373\u53ef\uff0c\u6b63\u786e\u7684\u5e8f\u5217\u5982\u4e0b\uff08\u57fa\u7840\u520630\u5206\uff09\uff1a F5\u6302\u8f7d\u6587\u4ef6\u7cfb\u7edf\uff081\u5206\uff09 mkdir\u6d4b\u8bd5\uff084\u5206\uff09 mkdir ./tests/mnt/dir0 mkdir ./tests/mnt/dir0/dir0 mkdir ./tests/mnt/dir0/dir0/dir0 mkdir ./tests/mnt/dir1 touch\u6d4b\u8bd5\uff085\u5206\uff09 touch ./tests/mnt/file0 touch ./tests/mnt/dir0/file0 touch ./tests/mnt/dir0/dir0/file0 touch ./tests/mnt/dir0/dir0/dir0/file0 touch ./tests/mnt/dir1/file0 ls\u6d4b\u8bd5\uff084\u5206\uff09 mkdir ./tests/mnt/dir0 touch ./tests/mnt/file0 mkdir ./tests/mnt/dir0/dir1 mkdir ./tests/mnt/dir0/dir1/dir2 touch ./tests/mnt/dir0/dir1/dir2/file4 touch ./tests/mnt/dir0/dir1/dir2/file5 touch ./tests/mnt/dir0/dir1/dir2/file6 touch ./tests/mnt/dir0/dir1/file3 touch ./tests/mnt/dir0/file1 -------------- ls ./tests/mnt ls ./tests/mnt/dir0 ls ./tests/mnt/dir0/dir1 ls ./tests/mnt/dir0/dir1/dir2 remount\u6d4b\u8bd5\uff0816\u5206\uff09 fusermount -u ./tests/mnt ddriver -r # F5\u518d\u6b21\u6302\u8f7d\u6587\u4ef6\u7cfb\u7edf mkdir ./tests/mnt/hello ls ./tests/mnt python3 ./tests/checkbm/checkbm.py -l ./include/fs.layout -r ./tests/checkbm/golden.json fusermount -u ./tests/mnt \u4ee5\u4e0a\u547d\u4ee4\u5747\u6d4b\u8bd5\u6210\u529f\uff08 ls\u8f93\u51fa\u6b63\u5e38 \uff09\uff0c\u5219\u6d4b\u8bd5\u901a\u8fc7\u3002","title":"\u63d0\u4ea4\u6587\u6863"},{"location":"lab5/part4/#_1","text":"\u8bf7\u5c06\u672c\u6b21\u5b9e\u9a8c\u7684 \u6240\u6709\u4ee3\u7801 \u548c \u5b9e\u9a8c\u62a5\u544a \u6253\u5305\u63d0\u4ea4\u5230\u4f5c\u4e1a\u5e73\u53f0\uff01","title":"\u4ee3\u7801\u63d0\u4ea4"},{"location":"lab5/part4/#_2","text":"\u4ee5\u4e0b\u4e24\u70b9\u4e8c\u9009\u4e00\u5373\u53ef \u5b8c\u6210test.sh\u7684\u57fa\u7840\u529f\u80fd\u6d4b\u8bd5 \u6709\u4e9b\u540c\u5b66\u9047\u5230 \u811a\u672c \u65e0\u6cd5\u901a\u8fc7\u60c5\u51b5\uff0c\u53ef\u80fd\u662f FUSE\u672c\u8eab\u7684BUG \uff0c\u8fd9\u91cc\u540c\u5b66\u53ea\u8981\u80fd\u591f\u8fdb\u884c \u6b63\u786e\u7684\u5e8f\u5217\u6f14\u793a \u5373\u53ef\uff0c\u6b63\u786e\u7684\u5e8f\u5217\u5982\u4e0b\uff08\u57fa\u7840\u520630\u5206\uff09\uff1a F5\u6302\u8f7d\u6587\u4ef6\u7cfb\u7edf\uff081\u5206\uff09 mkdir\u6d4b\u8bd5\uff084\u5206\uff09 mkdir ./tests/mnt/dir0 mkdir ./tests/mnt/dir0/dir0 mkdir ./tests/mnt/dir0/dir0/dir0 mkdir ./tests/mnt/dir1 touch\u6d4b\u8bd5\uff085\u5206\uff09 touch ./tests/mnt/file0 touch ./tests/mnt/dir0/file0 touch ./tests/mnt/dir0/dir0/file0 touch ./tests/mnt/dir0/dir0/dir0/file0 touch ./tests/mnt/dir1/file0 ls\u6d4b\u8bd5\uff084\u5206\uff09 mkdir ./tests/mnt/dir0 touch ./tests/mnt/file0 mkdir ./tests/mnt/dir0/dir1 mkdir ./tests/mnt/dir0/dir1/dir2 touch ./tests/mnt/dir0/dir1/dir2/file4 touch ./tests/mnt/dir0/dir1/dir2/file5 touch ./tests/mnt/dir0/dir1/dir2/file6 touch ./tests/mnt/dir0/dir1/file3 touch ./tests/mnt/dir0/file1 -------------- ls ./tests/mnt ls ./tests/mnt/dir0 ls ./tests/mnt/dir0/dir1 ls ./tests/mnt/dir0/dir1/dir2 remount\u6d4b\u8bd5\uff0816\u5206\uff09 fusermount -u ./tests/mnt ddriver -r # F5\u518d\u6b21\u6302\u8f7d\u6587\u4ef6\u7cfb\u7edf mkdir ./tests/mnt/hello ls ./tests/mnt python3 ./tests/checkbm/checkbm.py -l ./include/fs.layout -r ./tests/checkbm/golden.json fusermount -u ./tests/mnt \u4ee5\u4e0a\u547d\u4ee4\u5747\u6d4b\u8bd5\u6210\u529f\uff08 ls\u8f93\u51fa\u6b63\u5e38 \uff09\uff0c\u5219\u6d4b\u8bd5\u901a\u8fc7\u3002","title":"\u5b9e\u9a8c\u9a8c\u6536\u6307\u5357"},{"location":"lab5/part5/","text":"\u5b9e\u9a8c\u63d0\u793a \u00b6 1. \u5982\u4f55\u8c03\u8bd5\uff1f \u00b6 \u6309\u4e0bF5\u540e\uff0c\u6587\u4ef6\u7cfb\u7edf\u8fd0\u884c\u4e3a\u524d\u53f0\u6a21\u5f0f\uff0c\u90a3\u4e48\u5982\u4f55\u8f93\u5165\u547d\u4ee4\u5462\uff1f\u4e8b\u5b9e\u4e0a\uff0c\u53ef\u4ee5ctrl + shift +\uff40\u547c\u51fa\u53e6\u4e00\u4e2a\u7ec8\u7aef\uff0c\u7136\u540e\u5728\u53e6\u4e00\u4e2a\u7ec8\u7aef\u64cd\u4f5c\u3002 \u53e6\u5916\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u53ef\u4ee5\u6309\u8fd9\u4e2a \u62c6\u5206\u952e \uff0c\u5c31\u53ef\u4ee5\u540c\u65f6\u663e\u793a\u4e24\u4e2a\u7ec8\u7aef\u4e86\u3002 2. \u6302\u8f7d\u5931\u8d25\uff1f \u00b6 \u63d0\u793a\"fuse: bad mount point\" \u5982\u4e0b\u56fe\u6240\u793a\uff1a \u8fd9\u79cd\u60c5\u51b5\u5c31\u662f\u4e0d\u6b63\u5e38\u7684\u5378\u8f7d\u6587\u4ef6\u7cfb\u7edf\uff0c\u6211\u4eec\u663e\u5f0f\u5730\u8c03\u7528 \u5378\u8f7d\u6587\u4ef6\u7cfb\u7edf \u5373\u53ef\uff1a teststu_8@OSLabExecNode0:~/pyq/user-land-filesystem/fs/newfs$ fusermount -u ./tests/mnt teststu_8@OSLabExecNode0:~/pyq/user-land-filesystem/fs/newfs$ 3. \u6302\u8f7d\u70b9\u4e0d\u7a7a\uff1f \u00b6 \u63d0\u793a\"mountpoint is not empty\" \u5982\u4e0b\u56fe\u6240\u793a\uff1a \u8fd9\u79cd\u60c5\u51b5\u5c31\u662f\u5728\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u4e0d\u5c0f\u5fc3\u7ed9 mnt \u6587\u4ef6\u5939\u4e0b\u521b\u5efa\u4e86\u4e00\u4e2a\u6587\u4ef6\uff0c\u5bfc\u81f4\u9519\u8bef\u53d1\u751f\uff0c\u628a \u6587\u4ef6\u5220\u9664 \u5c31\u884c\u3002 4. \u5982\u4f55\u89e3\u8bfbEXT2\u6587\u4ef6\u7cfb\u7edf\u5e03\u5c40\uff1f \u00b6 \u53ef\u4ee5\u67e5\u770b dump \u6587\u4ef6\u7cfb\u7edf\u955c\u50cf\uff0c\u5bf9\u955c\u50cf\u8fdb\u884c\u89e3\u8bfb\uff1a \u5229\u7528 ddriver -d \u751f\u6210ddriver\u955c\u50cf\u547d\u4ee4\u67e5\u770b\u955c\u50cf\u3002 \u4ee5simplefs\u955c\u50cf\u4e3a\u4f8b\uff1a ~/user-land-filesystem/fs/simplefs$ ddriver -d [sudo] password for test_19: \u76ee\u6807\u8bbe\u5907 /home/students/test_19/ddriver 8192+0 records in 8192+0 records out 4194304 bytes (4.2 MB, 4.0 MiB) copied, 0.0632482 s, 66.3 MB/s \u6587\u4ef6\u5df2\u5bfc\u51fa\u81f3/home/students/test_19/user-land-filesystem/fs/simplefs/ddriver_dump\uff0c\u8bf7\u5b89\u88c5HexEditor\u63d2\u4ef6\u67e5\u770b\u5176\u5185\u5bb9 \u5728VSCode\u4e0a\u5b89\u88c5HexEditor\u63d2\u4ef6\uff0c\u5373\u53ef\u67e5\u770b ddriver_dump \u955c\u50cf\u7684\u5185\u5bb9\u3002 5. \u5b9e\u9a8c\u8bc4\u6d4b\u4e2d\u7684\u4f4d\u56fe\u68c0\u67e5\u539f\u7406 \u00b6 \u4e3a\u907f\u514d\u5927\u5bb6\u7167\u642cSimple File System\u4ee3\u7801\uff0c\u5b9e\u9a8c\u8bc4\u6d4b\u811a\u672c ./tests/checkbm/check_bm.py \u4f1a\u6839\u636e\u5927\u5bb6\u586b\u5199\u7684fs.layout\u6587\u4ef6\uff0c\u786e\u5b9addriver\u78c1\u76d8\u5e03\u5c40\uff0c\u68c0\u67e5super\u3001inode_map\u3001data_map\u5404\u9879\u5185\u5bb9\uff0c\u5982\u679c\u68c0\u67e5\u5931\u8d25\uff0ccheck_bm.py\u4f1a\u8fd4\u56de\u76f8\u5e94\u7684\u9519\u8bef\uff0c\u5927\u5bb6\u4f9d\u9519\u81ea\u884c\u67e5\u6539\u5373\u53ef\u3002 \u5177\u4f53\u68c0\u67e5\u539f\u7406\u53ef\u4ee5\u67e5\u770b\uff1a https://gitee.com/ftutorials/user-land-filesystem/blob/main/fs/template/tests/checkbm/README.md","title":"\u5b9e\u9a8c\u63d0\u793a"},{"location":"lab5/part5/#_1","text":"","title":"\u5b9e\u9a8c\u63d0\u793a"},{"location":"lab5/part5/#1","text":"\u6309\u4e0bF5\u540e\uff0c\u6587\u4ef6\u7cfb\u7edf\u8fd0\u884c\u4e3a\u524d\u53f0\u6a21\u5f0f\uff0c\u90a3\u4e48\u5982\u4f55\u8f93\u5165\u547d\u4ee4\u5462\uff1f\u4e8b\u5b9e\u4e0a\uff0c\u53ef\u4ee5ctrl + shift +\uff40\u547c\u51fa\u53e6\u4e00\u4e2a\u7ec8\u7aef\uff0c\u7136\u540e\u5728\u53e6\u4e00\u4e2a\u7ec8\u7aef\u64cd\u4f5c\u3002 \u53e6\u5916\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u53ef\u4ee5\u6309\u8fd9\u4e2a \u62c6\u5206\u952e \uff0c\u5c31\u53ef\u4ee5\u540c\u65f6\u663e\u793a\u4e24\u4e2a\u7ec8\u7aef\u4e86\u3002","title":"1. \u5982\u4f55\u8c03\u8bd5\uff1f"},{"location":"lab5/part5/#2","text":"\u63d0\u793a\"fuse: bad mount point\" \u5982\u4e0b\u56fe\u6240\u793a\uff1a \u8fd9\u79cd\u60c5\u51b5\u5c31\u662f\u4e0d\u6b63\u5e38\u7684\u5378\u8f7d\u6587\u4ef6\u7cfb\u7edf\uff0c\u6211\u4eec\u663e\u5f0f\u5730\u8c03\u7528 \u5378\u8f7d\u6587\u4ef6\u7cfb\u7edf \u5373\u53ef\uff1a teststu_8@OSLabExecNode0:~/pyq/user-land-filesystem/fs/newfs$ fusermount -u ./tests/mnt teststu_8@OSLabExecNode0:~/pyq/user-land-filesystem/fs/newfs$","title":"2. \u6302\u8f7d\u5931\u8d25\uff1f"},{"location":"lab5/part5/#3","text":"\u63d0\u793a\"mountpoint is not empty\" \u5982\u4e0b\u56fe\u6240\u793a\uff1a \u8fd9\u79cd\u60c5\u51b5\u5c31\u662f\u5728\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u4e0d\u5c0f\u5fc3\u7ed9 mnt \u6587\u4ef6\u5939\u4e0b\u521b\u5efa\u4e86\u4e00\u4e2a\u6587\u4ef6\uff0c\u5bfc\u81f4\u9519\u8bef\u53d1\u751f\uff0c\u628a \u6587\u4ef6\u5220\u9664 \u5c31\u884c\u3002","title":"3. \u6302\u8f7d\u70b9\u4e0d\u7a7a\uff1f"},{"location":"lab5/part5/#4-ext2","text":"\u53ef\u4ee5\u67e5\u770b dump \u6587\u4ef6\u7cfb\u7edf\u955c\u50cf\uff0c\u5bf9\u955c\u50cf\u8fdb\u884c\u89e3\u8bfb\uff1a \u5229\u7528 ddriver -d \u751f\u6210ddriver\u955c\u50cf\u547d\u4ee4\u67e5\u770b\u955c\u50cf\u3002 \u4ee5simplefs\u955c\u50cf\u4e3a\u4f8b\uff1a ~/user-land-filesystem/fs/simplefs$ ddriver -d [sudo] password for test_19: \u76ee\u6807\u8bbe\u5907 /home/students/test_19/ddriver 8192+0 records in 8192+0 records out 4194304 bytes (4.2 MB, 4.0 MiB) copied, 0.0632482 s, 66.3 MB/s \u6587\u4ef6\u5df2\u5bfc\u51fa\u81f3/home/students/test_19/user-land-filesystem/fs/simplefs/ddriver_dump\uff0c\u8bf7\u5b89\u88c5HexEditor\u63d2\u4ef6\u67e5\u770b\u5176\u5185\u5bb9 \u5728VSCode\u4e0a\u5b89\u88c5HexEditor\u63d2\u4ef6\uff0c\u5373\u53ef\u67e5\u770b ddriver_dump \u955c\u50cf\u7684\u5185\u5bb9\u3002","title":"4. \u5982\u4f55\u89e3\u8bfbEXT2\u6587\u4ef6\u7cfb\u7edf\u5e03\u5c40\uff1f"},{"location":"lab5/part5/#5","text":"\u4e3a\u907f\u514d\u5927\u5bb6\u7167\u642cSimple File System\u4ee3\u7801\uff0c\u5b9e\u9a8c\u8bc4\u6d4b\u811a\u672c ./tests/checkbm/check_bm.py \u4f1a\u6839\u636e\u5927\u5bb6\u586b\u5199\u7684fs.layout\u6587\u4ef6\uff0c\u786e\u5b9addriver\u78c1\u76d8\u5e03\u5c40\uff0c\u68c0\u67e5super\u3001inode_map\u3001data_map\u5404\u9879\u5185\u5bb9\uff0c\u5982\u679c\u68c0\u67e5\u5931\u8d25\uff0ccheck_bm.py\u4f1a\u8fd4\u56de\u76f8\u5e94\u7684\u9519\u8bef\uff0c\u5927\u5bb6\u4f9d\u9519\u81ea\u884c\u67e5\u6539\u5373\u53ef\u3002 \u5177\u4f53\u68c0\u67e5\u539f\u7406\u53ef\u4ee5\u67e5\u770b\uff1a https://gitee.com/ftutorials/user-land-filesystem/blob/main/fs/template/tests/checkbm/README.md","title":"5. \u5b9e\u9a8c\u8bc4\u6d4b\u4e2d\u7684\u4f4d\u56fe\u68c0\u67e5\u539f\u7406"},{"location":"oscomp/oscomp/","text":"2023\u5e74\u201c\u5168\u56fd\u5927\u5b66\u751f\u8ba1\u7b97\u673a\u7cfb\u7edf\u80fd\u529b\u5927\u8d5b\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u8d5b\u201d\u706b\u70ed\u62a5\u540d\u4e2d\uff01 \u00b6 1. \u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u8d5b\u7b80\u4ecb \u00b6 \ud83d\udce2 \u4ec0\u4e48\u662f\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u8d5b? \u5168\u79f0 \uff1a \u5168\u56fd\u5927\u5b66\u751f\u8ba1\u7b97\u673a\u7cfb\u7edf\u80fd\u529b\u5927\u8d5b\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u5927\u8d5b \u7531\u6559\u80b2\u90e8\u9ad8\u7b49\u5b66\u6821\u8ba1\u7b97\u673a\u7c7b\u4e13\u4e1a\u6559\u5b66\u6307\u5bfc\u59d4\u5458\u4f1a\u548c\u7cfb\u7edf\u80fd\u529b\u57f9\u517b\u7814\u7a76\u4e13\u5bb6\u7ec4\u5171\u540c\u53d1\u8d77\uff0c\u76ee\u524d\u5df2\u7ecf\u4e3e\u529e2\u5c4a\u3002 \u7b2c\u4e00\u5c4a\u4e8e2021\u5e74\u4e3e\u529e\uff0c \u8fd1200\u652f\u961f\u4f0d \u53c2\u8d5b\u3002\u7b2c\u4e8c\u5c4a\u7684\u53c2\u8d5b\u961f\u4f0d\u589e\u52a0\u5230\u4e86 300\u4f59\u652f \u3002 \u6bd4\u8d5b\u5206\u4e3a\u4e24\u4e2a\u8d5b\u9053\uff1a \u5185\u6838\u8d5b\u9053 \u548c \u529f\u80fd\u8d5b\u9053 \u5927\u8d5b\u5b98\u7f51\uff1a https://os.educg.net \u5185\u6838\u8d5b\u9053 \uff1a \u5236\u4f5c\u4e00\u4e2a \u5b8c\u6574\u7684\u5185\u6838 \uff0c\u901a\u8fc7\u8d5b\u65b9\u63d0\u4f9b\u7684\u7528\u6237\u6d4b\u8bd5\uff0c\u6709\u4f59\u529b\u7684\u961f\u4f0d\u8fd8\u53ef\u4ee5\u53bb\u652f\u6301python\uff0crust\uff0credis...... \u529f\u80fd \u4e0e \u6027\u80fd \u7684\u6bd4\u62fc \u529f\u80fd\u8d5b\u9053 \uff1a \u5b9e\u73b0\u7cfb\u7edf\u4e2d\u7684 \u67d0\u9879 \u524d\u6cbf\u529f\u80fd \u591a\u79cd\u8bfe\u9898 \u4efb\u9009\uff0c\u6d89\u53ca\u8c03\u5ea6\u3001\u901a\u4fe1\u3001\u5b58\u50a8\u3001\u5b89\u5168\u3001\u5e94\u7528\u7b49\u4e0d\u540c\u9886\u57df \u5173\u4e8e\u6bd4\u8d5b\u7ec4\u961f \uff1a \u4e0d\u9650\u5236\u5b66\u6821\u7684\u53c2\u8d5b\u961f\u4f0d\u6570\uff0c\u4e00\u652f\u961f\u4f0d\u6700\u591a\u4e09\u4eba \u7b2c\u4e8c\u5c4a\uff082022\u5e74\uff09\u6bd4\u8d5b\u91cd\u8981\u65f6\u95f4\u70b9 \uff1a \u6bd4\u8d5b\u5956\u9879\u8bbe\u7f6e \uff1a \u8d5b\u9053 \u4e00\u7b49\u5956 \u4e8c\u7b49\u5956 \u4e09\u7b49\u5956 \u5185\u6838\u8d5b\u9053 6\u652f\u961f\u4f0d 9\u652f\u961f\u4f0d 11\u652f\u961f\u4f0d \u529f\u80fd\u8d5b\u9053 6\u652f\u961f\u4f0d 9\u652f\u961f\u4f0d 15\u652f\u961f\u4f0d \u6ce8\uff1a\u5165\u56f4\u51b3\u8d5b\u5373\u83b7\u5f97\u4f18\u80dc\u5956\uff0c \u51e0\u4e4e\u6240\u6709\u961f\u4f0d\u90fd\u80fd\u62ff\u5230 ~ \u200b\u200b 2. \u53c2\u8d5b\u8981\u6c42 \u00b6 \ud83d\udce2 \u54ea\u4e9b\u540c\u5b66\u9002\u5408\u53c2\u8d5b? \u5199\u4e2a\u64cd\u4f5c\u7cfb\u7edf \u800c\u5df2\uff0c\u6709\u624b\u5c31\u884c \uff1b \u5bf9\u64cd\u4f5c\u7cfb\u7edf\u7684 \u5b8c\u6574\u4f53\u7cfb \u5145\u6ee1\u5174\u8da3\uff1b \u5bf9\u5185\u6838 \u4f18\u5316 \u5145\u6ee1\u60f3\u6cd5 \u5185\u6838\u8d5b\u9053\u6b22\u8fce\u4f60\uff01 \u5e0c\u671b\u5c1d\u8bd5 \u79d1\u7814 or \u63d0\u524d\u63a5\u89e6 \u5de5\u4e1a\u754c \u5e0c\u671b\u5bf9 \u524d\u6cbf\u3001\u672a\u77e5 \u7684\u6280\u672f\u8fdb\u884c\u63a2\u7d22 \u529f\u80fd\u8d5b\u9053\u6b22\u8fce\u4f60\uff01 3. \u53c2\u8d5b\u6536\u83b7 \u00b6 3.1 \u6821\u5185\u6536\u83b7 \u00b6 \ud83d\udce2 \u5728\u5b66\u6821\u5185\uff0c\u4f60\u80fd\u6536\u83b7\u4ec0\u4e48? \u63a5\u89e6\u5e76\u4eb2\u81ea\u5c1d\u8bd5 \u524d\u6cbf \u7684\u6280\u672f \u7ed3\u8bc6 \u5f88\u591a\u884c\u4e1a\u5927\u4f6c\u3001\u540c\u9f84\u5927\u4f6c \u83b7\u5f97\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u6574\u4e2a\u4f53\u7cfb\u6216\u67d0\u4e2a\u9886\u57df\u7684\u6df1\u523b \u7406\u89e3 \u5feb\u901f\u63d0\u5347\u52a8\u624b\u80fd\u529b\u548c\u521b\u65b0\u80fd\u529b\uff0c\u4e30\u5bcc\u81ea\u5df1\u7684\u8f6f\u786c\u4ef6 \u6280\u672f\u6808 \u96be\u5f97\u7684\u673a\u4f1a\uff1a\u628a\u5927\u80c6\u7684 \u60f3\u6cd5\u53d8\u4e3a\u73b0\u5b9e \u83b7\u5f97 \u7efc\u6d4b\u52a0\u5206 \u673a\u4f1a\uff0c\u5956\u5b66\u91d1++ \u5bf9\u672a\u6765\u7684 \u5347\u5b66 \u6709\u975e\u5e38\u5927\u7684\u5e2e\u52a9 ( \u4e00\u7b14\u975e\u5e38\u53ef\u89c2\u7684\u5956\u91d1\uff1a\u53c2\u52a0\u6bd4\u8d5b\uff0c\u987a\u4fbf\u6323\u4e2aW\uff0c\u5988\u5988\u518d\u4e5f\u4e0d\u7528\u62c5\u5fc3\u6211\u751f\u6d3b\u8fc7\u5f97\u4e0d\u597d\u4e86 3.2 \u6821\u5916\u6536\u83b7 \u00b6 \ud83d\udce2 \u5728\u5b66\u6821\u5916\uff0c\u4f60\u53c8\u80fd\u6536\u83b7\u4ec0\u4e48? \u5b9e\u4e60Offer\u7387++\uff1a\u6691\u671f\u534e\u4e3a\u5b9e\u4e60Offer\u7387\u76f4\u5347 \u5341\u51e0\u4e2a \u767e\u5206\u70b9\uff08\u534e\u4e3a\u6025\u7f3a\u7cfb\u7edf\u6027\u4eba\u624d\uff09 \u9876\u7ea7Offer\u7387++\uff1a\u67d0\u51e0\u4e2a\u961f\u957f\u4e00\u4e0d\u5c0f\u5fc3\u5c31\u6536\u5272\u4e86\u534e\u4e3a\u7684 \u7814\u7a76\u751f\u624d\u80fd\u62ff\u5230\u7684\u9876\u7ea7Offer 4. \u6bd4\u8d5b\u51c6\u5907 \u00b6 \ud83d\udce2 \u8fd9\u4e2a\u6bd4\u8d5b\u96be\u5417? \u96be \uff0c\u96be\u5f97\u5f88 \u60f3\u8981\u53d6\u5f97\u597d\u6210\u7ee9\uff0c\u9762\u5bf9\u7684\u4e00\u5207\u90fd\u662f \u65b0 \u7684 \u65b0\u7684\u77e5\u8bc6\uff0c\u65b0\u7684\u8bed\u8a00\uff0c\u65b0\u7684\u6d4b\u8bc4\uff0c\u65b0\u7684\u5de5\u5177\uff0c\u65b0\u7684\u8981\u6c42 ... \u7cfb\u7edf\u7684 \u8c03\u8bd5 \u5e38\u5e38\u6d89\u53ca\u786c\u4ef6\u67b6\u6784\uff0c\u96be\u5ea6\u5927\u5927\u63d0\u5347 \u8d5b\u7a0b\u5f88\u957f \uff0c\u6700\u91cd\u8981\u7684\u662f \u5174\u8da3\u548c\u575a\u6301 \uff0c\u5f88\u591a\u961f\u4f0d\u5230\u540e\u9762\u4f1a\u653e\u5f03\uff0c\u809d\u5230\u80dc\u5229 \u4e8b\u5b9e\u4e0a\uff0c\u5927\u90e8\u5206\u961f\u4f0d\u4ece \u5e74\u521d \u5c31\u5f00\u59cb\u5907\u8d5b\uff0c \u4e00\u4e9b\u961f\u4f0d\u751a\u81f3\u524d\u4e00\u5e74\u5c31\u6709\u6240\u51c6\u5907\uff0c\u8fd8\u6709\u53c2\u52a0\u4e86\u4e24\u5c4a\u7684\u961f\u5458 \u6700\u5173\u952e\u7684\u662f\uff0c \u7cfb\u7edf\u7684\u8bbe\u8ba1\u6ca1\u6709\u4e0a\u9650 \uff0c\u60f3\u8981\u505a\u597d\u5c31\u5fc5\u987b\u6709\u6240\u4ed8\u51fa 5. \u5f80\u5c4a\u6218\u7ee9 \u00b6 \ud83d\udce2 \u6211\u4eec\u7684\u6218\u7ee9 \u7b2c\u4e00\u5c4a\uff1a \u201c UltraOS \u201d\u961f\u83b7\u5f97 \u5185\u6838\u5b9e\u73b0\u8d5b\u9053\u4e00\u7b49\u5956\uff08\u8d5b\u9053\u6392\u540d\u7b2c\u4e00\uff09 ; \u201c HoitFS \u201d\u961f\u83b7\u5f97 \u529f\u80fd\u8bbe\u8ba1\u8d5b\u9053\u4e00\u7b49\u5956\uff08\u8d5b\u9053\u6392\u540d\u7b2c\u4e00\uff09 ; \u201c \u538b\u7f29\u9e2d \u201d\u961f\u83b7\u5f97 \u529f\u80fd\u8bbe\u8ba1\u8d5b\u9053\u4e8c\u7b49\u5956 ; \u201c \u554a\u666e\u9c81\u6d3e\u54d2\u54d2\u54d2;DROP DATABASE teams;\u201d\u961f\u83b7\u5f97 \u5185\u6838\u5b9e\u73b0\u8d5b\u9053\u4e09\u7b49\u5956 \u3002 \u7b2c\u4e8c\u5c4a\uff1a \u201c FTL OS \u201d\u961f\u83b7\u5f97 \u5185\u6838\u5b9e\u73b0\u8d5b\u9053\u4e00\u7b49\u5956 ; \u201c OopS \u201d\u961f\u83b7\u5f97 \u5185\u6838\u5b9e\u73b0\u8d5b\u9053\u4e00\u7b49\u5956 ; \u201c LMY \u201d\u961f\u83b7\u5f97 \u529f\u80fd\u8bbe\u8ba1\u8d5b\u9053\u4e00\u7b49\u5956 ; \u201c \u5065\u5eb7\u5411\u4e0a\u597d\u9752\u5e74 \u201d\u961f\u83b7\u5f97 \u5185\u6838\u5b9e\u73b0\u8d5b\u9053\u4e8c\u7b49\u5956 ; \u201c \u7f16\u8bd1\u901a\u8fc7\u6c42\u6c42\u4e86 \u201d\u961f\u83b7\u5f97 \u529f\u80fd\u8bbe\u8ba1\u8d5b\u9053\u4e8c\u7b49\u5956 ; \u201c F-Tutorials \u201d\u961f\u83b7\u5f97 \u529f\u80fd\u8bbe\u8ba1\u8d5b\u9053\u4e8c\u7b49\u5956 \uff1b \u201c \u968f\u4fbf\u53d6\u540d\u4e0d\u961f \u201d\u83b7\u5f97 \u5185\u6838\u5b9e\u73b0\u8d5b\u9053\u4f18\u80dc\u5956 ; \u201c \u8ffd\u5149\u8005\u961f\u201d\u83b7\u5f97 \u529f\u80fd\u8bbe\u8ba1\u8d5b\u9053\u521d\u8d5b\u4f18\u80dc\u5956 \u3002 \u5927\u8d5b\u83b7\u5956\u56e2\u961f\u5c06\u83b7\u5f97\u4e30\u539a\u5956\u91d1\uff0c\u5176\u4e2d\u4e00\u7b49\u5956\u56e2\u961f\u83b7\u5f9730000\u5143\u5956\u91d1\uff0c\u4e8c\u7b49\u5956\u56e2\u961f\u83b710000\u5143\u5956\u91d1\uff0c\u4e09\u7b49\u5956\u56e2\u961f\u83b7\u5f973000\u5143\u5956\u91d1\u3002 \u7b2c\u4e8c\u5c4a\u83b7\u5956\u65b0\u95fb\u8be6\u89c1\u54c8\u5de5\u5927\uff08\u6df1\u5733\uff09\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u5b66\u9662-\u91cd\u8981\u65b0\u95fb\uff1a \u83b7\u5956\u6570\u91cf\u5168\u56fd\u5c45\u9996\uff01\u54c8\u5de5\u5927\uff08\u6df1\u5733\uff09\u5b66\u5b50\u5728\u5168\u56fd\u5927\u5b66\u751f\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u603b\u8d5b\u4e2d\u8868\u73b0\u4f18\u5f02 \u3002 \u5185\u6838\u5b9e\u73b0\u8d5b\u9053\u51b3\u8d5b\u4f5c\u54c1\u5f00\u6e90\uff1a \u70b9\u8fd9\u91cc \u529f\u80fd\u8bbe\u8ba1\u8d5b\u9053\u51b3\u8d5b\u4f5c\u54c1\u5f00\u6e90\uff1a \u70b9\u8fd9\u91cc \u7b2c\u4e00\u5c4a\u83b7\u5956\u65b0\u95fb\u8be6\u89c1 \u83b7\u5956\u603b\u6570\u5168\u56fd\u7b2c\u4e00\uff01\u54c8\u5de5\u5927\uff08\u6df1\u5733\uff09\u5b66\u5b50\u5728\u5168\u56fd\u5927\u5b66\u751f\u8ba1\u7b97\u673a\u7cfb\u7edf\u80fd\u529b\u5927\u8d5b\u4e2d\u6536\u83b7\u56db\u9879\u5927\u5956 5.1 \u83b7\u5956\u961f\u4f0d\u4ecb\u7ecd\uff1aUltraOS \u00b6 \ud83d\udce2 \u7b2c\u4e00\u5c4a\u5185\u6838\u8d5b\u9053\u4e00\u7b49\u5956\uff1aUltraOS \u56e2\u961f\u6210\u5458\uff1a\u674e\u7a0b\u6d69\uff0c18\u7ea7\u672c\u79d1\uff1b\u5bab\u6d69\u8fb0\uff0c18\u7ea7\u672c\u79d1\uff1b\u4efb\u7fd4\u5b87\uff0c18\u7ea7\u672c\u79d1 \u201c\u9879\u76ee\u5386\u65f6216\u5929\uff0c\u5728\u6b64\u671f\u95f4\u7f16\u5199\u4ee3\u7801149\u5929\uff0cUltraOS\u56e2\u961f\u6700\u7ec8\u4ea7\u51fa\u4e86\u7ea6\u4e00\u4e07\u884cRust\u8bed\u8a00\u4ee3\u7801\uff08\u4e0d\u5305\u62ec\u8fed\u4ee3\u4ee3\u7801\uff09\u3002UltraOS\u6210\u957f\u662f\u8fc5\u901f\u7684\uff0c\u4ece\u652f\u630113\u6761\u975e\u6807\u51c6\u7cfb\u7edf\u8c03\u7528\u523059\u6761\u7cfb\u7edf\u8c03\u7528\uff0c\u4ece\u53ea\u652f\u6301\u4e00\u4e2a\u7b80\u6613\u7684\u6587\u4ef6\u7cfb\u7edf\u5230FAT32-VFS\u548c\u53ef\u62d3\u5c55\u8bbe\u5907\u63a5\u53e3\u7b49\u5177\u6709\u53ef\u62d3\u5c55\u7684\u62bd\u8c61\uff0c\u4ece\u5355\u6838\u5230\u591a\u6838\uff0c\u4ece\u7f13\u6162\u8fc8\u5411\u9ad8\u6027\u80fd\u3002\u6bcf\u4e00\u4ef6\u4e8b\u90fd\u662f\u6311\u6218\uff0c\u4f46\u6bcf\u4e00\u4ef6\u4e8b\u90fd\u662f\u6210\u957f\u3002\u201d \u4f5c\u54c1\u5f00\u6e90\uff1a \u70b9\u8fd9\u91cc 5.2 \u83b7\u5956\u961f\u4f0d\u4ecb\u7ecd: HoitFS \u00b6 \ud83d\udce2 \u7b2c\u4e00\u5c4a\u529f\u80fd\u8d5b\u9053\u4e00\u7b49\u5956\uff1aHoitFS \u56e2\u961f\u6210\u5458\uff1a\u6f58\u5ef6\u9e92\uff0c18\u7ea7\u672c\u79d1\uff1b\u80e1\u667a\u80dc\uff0c18\u7ea7\u672c\u79d1\uff1b\u5f20\u6960\uff0c18\u7ea7\u672c\u79d1 \u201c\u6211\u4eec\u7684\u9879\u76ee\u4ee5JFFS2\u6587\u4ef6\u7cfb\u7edf\u4e3a\u539f\u578b\uff0c\u5bf9\u5176SylixOS\u4e0a\u8fdb\u884c\u4e8c\u6b21\u5f00\u53d1\uff0c\u5e76\u9488\u5bf9JFFS2\u5b58\u5728\u7684\u4e00\u4e9b\u95ee\u9898\u8fdb\u884c\u9488\u5bf9\u6027\u4f18\u5316(\u4f18\u5316\u7b56\u7565\u6bd4\u8f83\u7b80\u5355)\uff0c\u5f62\u6210\u4e86HoitFS\uff0c\u6700\u540e\u901a\u8fc7\u4e0eSPIFFS\u6587\u4ef6\u7cfb\u7edf\u505a\u5bf9\u6bd4\uff0c\u53d1\u73b0\u6211\u4eecHoitFS\u7684\u6027\u80fd\u76f8\u5bf9SPIFFS\u6765\u8bf4\u6709\u660e\u663e\u7684\u4f18\u52bf\u3002\u672c\u9879\u76ee\u5386\u65f6\u8fd1\u4e00\u5e74\uff0c\u671f\u95f4\u4e00\u5ea6\u611f\u5230\u529b\u4e0d\u4ece\u5fc3\uff0c\u4f46\u5728\u8001\u5e08\u7684\u6307\u5bfc\u4e0b\uff0c\u56e2\u961f\u6210\u5458\u7684\u4e92\u76f8\u9f13\u52b1\u4e0b\uff0c\u6700\u540e\u90fd\u54ac\u7259\u575a\u6301\u5230\u4e86\u51b3\u8d5b\u3002\u201d \u4f5c\u54c1\u5f00\u6e90\uff1a \u70b9\u8fd9\u91cc 5.3 \u83b7\u5956\u961f\u4f0d\u4ecb\u7ecd: FTL OS \u00b6 \ud83d\udce2 \u7b2c\u4e8c\u5c4a\u5185\u6838\u8d5b\u9053\u4e00\u7b49\u5956\uff1aFTL OS \u56e2\u961f\u6210\u5458\uff1a\u53f6\u81ea\u7acb\uff0c19\u7ea7\u672c\u79d1\uff1b\u6a0a\u535a\uff0c20\u7ea7\u672c\u79d1\uff1b\u674e\u7fbf\u5ef7\uff0c19\u7ea7\u672c\u79d1 \u201c\u975e\u5e38\u8363\u5e78\u80fd\u591f\u83b7\u5f97\u5927\u8d5b\u4e00\u7b49\u5956\uff0c\u8fd9\u6b21\u6bd4\u8d5b\u4e2d\u6211\u4eec\u4e00\u8def\u62ab\u8346\u65a9\u68d8\uff0c\u901a\u8fc7\u4e86\u5168\u90e8\u7684\u529f\u80fd\u6d4b\u8bd5\uff0c\u5e76\u5728\u51b3\u8d5b\u7b2c\u4e8c\u9636\u6bb5\u5168\u7a0b\u4fdd\u6301\u6027\u80fd\u5206\u7b2c\u4e00\u3002 \u6211\u4eec\u5145\u6ee1\u68a6\u60f3\uff0cFTL\u610f\u4e3aFaster Than Light\uff0c\u5b83\u8574\u542b\u4e86\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u6027\u80fd\u7684\u6e34\u671b\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\uff0c\u6211\u4eec\u7528\u4e86\u4e0e\u4f17\u4e0d\u540c\u7684\u5f00\u53d1\u65b9\u5f0f\uff1a\u6211\u4eec\u4ece\u96f6\u5f00\u59cb\uff0c\u5148\u7f16\u5199\u6587\u6863\uff0c\u4ece\u8d77\u6b65\u5c31\u8fdb\u884c\u5927\u91cf\u4f18\u5316\u3002\u6211\u4eec\u4e50\u89c2\u5730\u8ba4\u4e3a\u53ea\u8981\u5e94\u7528\u4e86\u4e00\u5207\u53ef\u80fd\u7684\u4f18\u5316\uff0cFTLOS\u5c31\u80fd\u8fbe\u5230\u6781\u81f4\u7684\u3001\u540e\u65e0\u6765\u8005\u7684\u6027\u80fd\u3002\u4ece\u7ed3\u679c\u6765\u770b\uff0c\u6b64\u65b9\u6848\u5927\u4f53\u6210\u529f\uff0c\u6211\u4eec\u5168\u7a0b\u6027\u80fd\u5206\u7b2c\u4e00\uff0c\u4f46\u56e0\u4e3a\u8c03\u7814\u4e0d\u8db3\u7684\u539f\u56e0\uff0c\u6587\u4ef6\u7cfb\u7edf\u7684\u9519\u8bef\u8bbe\u8ba1\u5f71\u54cd\u4e86\u91cd\u6784\uff0cFTLOS\u65e0\u6cd5\u5728\u5168\u90e8\u7684\u6d4b\u8bd5\u70b9\u4e0a\u83b7\u5f97\u7b2c\u4e00\uff0c\u4e5f\u8ba9\u6211\u4eec\u6ca1\u6709\u592a\u591a\u65f6\u95f4\u53bb\u79fb\u690d\u771f\u5b9e\u5e94\u7528\u7a0b\u5e8f\u3002 \u8fd9\u662f\u6211\u4eec\u7b2c\u4e00\u6b21\u53c2\u52a0\u7cfb\u7edf\u80fd\u529b\u5927\u8d5b\uff0c\u5b83\u8ba9\u6211\u4eec\u63a5\u89e6\u5230\u4e86\u5927\u91cf\u65e0\u6cd5\u4ece\u8bfe\u672c\u4e0a\u5b66\u5230\u7684\u77e5\u8bc6\uff0c\u4f7f\u6211\u4eec\u4e86\u89e3\u4e86\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u7684\u8fd0\u884c\u65b9\u5f0f\uff0c\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e86\u66f4\u6df1\u5c42\u6b21\u7684\u7406\u89e3\uff0c\u8fd8\u663e\u8457\u63d0\u5347\u4e86\u5de5\u7a0b\u5b9e\u8df5\u80fd\u529b\u3002\u611f\u8c22\u5168\u90e8\u961f\u5458\u3001\u4f19\u4f34\u961f\u4f0d\u7684\u52aa\u529b\uff0c\u611f\u8c22\u590f\u6587\u3001\u4ec7\u6d01\u5a77\u8001\u5e08\u7684\u503e\u529b\u5e2e\u52a9\uff0c\u4e5f\u611f\u8c22\u6240\u6709\u5728\u6bd4\u8d5b\u4e2d\u5b9e\u65f6\u5f00\u6e90\u4ee3\u7801\u3001\u5c55\u793a\u6587\u6863\u7684\u53c2\u8d5b\u961f\u4f0d\u3002\u613f\u6bd4\u8d5b\u5728\u672a\u6765\u66f4\u52a0\u5b8c\u5584\uff0c\u8d8a\u6765\u8d8a\u597d\u3002\u201d \u4f5c\u54c1\u5f00\u6e90\uff1a \u70b9\u8fd9\u91cc 5.4 \u83b7\u5956\u961f\u4f0d\u4ecb\u7ecd: OopS \u00b6 \ud83d\udce2 \u7b2c\u4e8c\u5c4a\u5185\u6838\u8d5b\u9053\u4e00\u7b49\u5956\uff1aOopS \u56e2\u961f\u6210\u5458\uff1a\u5f20\u827a\u67ab\uff0c19\u7ea7\u672c\u79d1\uff1b\u674e\u8bfa\u821f\uff0c19\u7ea7\u672c\u79d1\uff1b\u5218\u5609\u741b\uff0c19\u7ea7\u672c\u79d1 \u201cOopS\u662f\u4e00\u4e2a\u7528Rust\u7f16\u5199\u7684RISC-V64\u591a\u6838\u64cd\u4f5c\u7cfb\u7edf\uff0c\u9879\u76ee\u603b\u5386\u65f6\u7ea67\u4e2a\u6708\u3002\u6211\u4eec\u56e2\u961f\u4ece\u4eca\u5e74\u7684\u5bd2\u5047\u671f\u95f4\u5c31\u5f00\u59cb\u5b66\u4e60rust\u53ca\u64cd\u4f5c\u7cfb\u7edf\u76f8\u5173\u77e5\u8bc6\uff0c\u4e3a\u8be5\u6bd4\u8d5b\u505a\u51c6\u5907\u3002 \u5728\u5f00\u53d1\u524d\uff0c\u6211\u4eec\u8003\u8651\u5230\u4ece0\u5f00\u59cb\u8bbe\u8ba1\u4e00\u4e2a\u5185\u6838\u4f1a\u5e26\u6765\u5927\u91cf\u7684bug\u548c\u65f6\u95f4\u5f00\u9500\uff0c\u6240\u4ee5\u6211\u4eec\u51b3\u5b9a\u53c2\u8003rCore-Tutorial\u5feb\u901f\u5f00\u53d1\u51fa\u4e00\u4e2a\u57fa\u672c\u7684\u5185\u6838\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u6bd4\u8f83\u987a\u5229\u5730\u901a\u8fc7\u4e86\u521d\u8d5b\u7684\u6d4b\u8bd5\uff0c\u8fd9\u7ed9\u4e86\u6211\u4eec\u4fe1\u5fc3\uff0c\u4e8e\u662f\u6211\u4eec\u5bf9\u539f\u672c\u7684\u57fa\u7840\u67b6\u6784\u505a\u4e86\u5927\u91cf\u4fee\u6539\u3002\u901a\u8fc7\u4e0d\u65ad\u5730\u8e29\u5751\u548c\u91cd\u6784\uff0c\u5e76\u7ed3\u5408\u5176\u4ed6\u5185\u6838\u7684\u8bbe\u8ba1\u548c\u6211\u4eec\u7684\u601d\u8003\uff0c\u6700\u7ec8\u6253\u9020\u51fa\u4e86\u73b0\u5728\u7684OopS\u5185\u6838\u3002 \u901a\u8fc7\u8fd9\u6b21\u6bd4\u8d5b\uff0c\u52a0\u6df1\u4e86\u6211\u4eec\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u7684\u7406\u89e3\uff0c\u63d0\u5347\u4e86\u6211\u4eec\u7684\u5de5\u7a0b\u80fd\u529b\u3002\u6b64\u5916\uff0c\u672c\u6b21\u6bd4\u8d5b\u8ba9\u6211\u4eec\u66f4\u52a0\u7406\u89e3\u4e86\u5f00\u6e90\u7684\u7cbe\u795e\uff0c\u6211\u4eec\u7684\u5fc3\u6001\u4e5f\u4ece\u76f8\u4e92\u7ade\u4e89\u8f6c\u53d8\u4e3a\u4e86\u76f8\u4e92\u5b66\u4e60\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u4e0e\u7b2c\u4e00\u5c4a\u53c2\u8d5b\u4f5c\u54c1\u76f8\u6bd4\uff0c\u672c\u5c4a\u53c2\u8d5b\u4f5c\u54c1\u5728\u529f\u80fd\u548c\u6027\u80fd\u65b9\u9762\u90fd\u6709\u4e86\u4e0d\u5c0f\u7684\u63d0\u5347\u3002\u8fd9\u8981\u611f\u8c22\u7ec4\u59d4\u4f1a\u548c\u4e3b\u529e\u65b9\u4e3a\u9009\u624b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5e73\u53f0\uff0c\u8ba9\u6211\u4eec\u6709\u673a\u4f1a\u5438\u53d6\u5f80\u5c4a\u53c2\u8d5b\u4f5c\u54c1\u7684\u7ecf\u9a8c\uff0c\u8e29\u5728\u5de8\u4eba\u7684\u80a9\u8180\u4e0a\u5e76\u66f4\u8fdb\u4e00\u6b65\u3002\u4ee5\u540e\u7684\u53c2\u8d5b\u4f5c\u54c1\u65e0\u7591\u4e5f\u4f1a\u6bd4\u6211\u4eec\u8fd9\u5c4a\u7684\u4f5c\u54c1\u8981\u66f4\u52a0\u4f18\u79c0\u3002 \u5728\u8fd9\u91cc\uff0c\u8fd8\u8981\u611f\u8c22\u540c\u6821\u7684\u53c2\u8d5b\u961f\u4f0d\u548c\u6307\u5bfc\u8001\u5e08\u7684\u5e2e\u52a9\u548c\u6307\u5bfc\uff0c\u7279\u522b\u662f\u7b2c\u4e00\u5c4a\u53c2\u8d5b\u9009\u624b\u9ece\u5e9a\u7949\u5b66\u957f\u7ed9\u6211\u4eec\u4f20\u6388\u4e86\u5927\u91cf\u7684\u7ecf\u9a8c\u548c\u7075\u611f\u3002\u201d \u4f5c\u54c1\u5f00\u6e90\uff1a \u70b9\u8fd9\u91cc 5.5 \u83b7\u5956\u961f\u4f0d\u4ecb\u7ecd: LMY \u00b6 \ud83d\udce2 \u7b2c\u4e8c\u5c4a\u529f\u80fd\u8d5b\u9053\u4e00\u7b49\u5956\uff1aLMY \u56e2\u961f\u6210\u5458\uff1a\u4e8e\u4f2f\u6df3\uff0c20\u7ea7\u672c\u79d1\uff1b\u6ee1\u6d0b\uff0c20\u7ea7\u672c\u79d1\uff1b\u674e\u6021\u51ef\uff0c19\u7ea7\u672c\u79d1 \u201c\u5f88\u8363\u5e78\u80fd\u591f\u5728\u672c\u6b21\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u8d5b\u529f\u80fd\u8d5b\u9053\u4e2d\u83b7\u5f97\u4e00\u7b49\u5956\uff0c\u5728\u5927\u8d5b\u7ed3\u675f\u4e4b\u9645\uff0c\u56de\u60f3\u53c2\u8d5b\u4ee5\u6765\u7684\u70b9\u70b9\u6ef4\u6ef4\uff0c\u6211\u4eec\u611f\u6982\u9887\u591a\u3002 \u6700\u521d\u51b3\u5b9a\u53c2\u8d5b\uff0c\u662f\u5076\u7136\u5728\u5b66\u6821\u7684Linux\u4ea4\u6d41\u7fa4\u770b\u5230\u8001\u5e08\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u529f\u80fd\u8d5b\u7684\u5ba3\u4f20\u3002\u90a3\u65f6\u6211\u548c\u6ee1\u6d0b\u6ca1\u6709\u5b8c\u6574\u5b66\u4e60\u8fc7\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4f46\u51ed\u7740\u5bf9OS\u7684\u5174\u8da3\uff0c\u6211\u4eec\u51b3\u5b9a\u8bd5\u7740\u53c2\u8d5b\u3002 \u9009\u5b9a\u8d5b\u9898\u65f6\uff0c\u7ecf\u9a8c\u4e0d\u8db3\u7684\u6211\u4eec\u672c\u60f3\u9009\u53d6\u4e00\u4e2a\u8f83\u4e3a\u7b80\u5355\u7684\u9898\u76ee\uff1b\u4f46\u4e24\u4f4d\u6307\u5bfc\u8001\u5e08\u9f13\u52b1\u6211\u4eec\u9009\u62e9\u66f4\u4e3a\u590d\u6742\u7684\u9898\u76eeproj120\u2014\u2014\u667a\u80fd\u5316\u7684\u64cd\u4f5c\u7cfb\u7edf\u5f02\u5e38\u68c0\u6d4b\uff0c\u540c\u65f6\u674e\u6021\u51ef\u5b66\u957f\u7684\u52a0\u5165\u4e5f\u4e3a\u6211\u4eec\u5e26\u6765\u66f4\u591a\u4fe1\u5fc3\uff0c\u6211\u4eec\u6700\u7ec8\u63a5\u53d7\u4e86\u6311\u6218\u3002 \u521d\u671f\uff0c\u6211\u4eec\u51ed\u501f\u8001\u5e08\u6089\u5fc3\u7684\u6307\u5bfc\uff0c\u4e0e\u534e\u4e3a\u4e13\u5bb6\u7684\u6c9f\u901a\uff0c\u52aa\u529b\u5bfb\u627e\u8d5b\u9898\u7684\u5207\u5165\u70b9\uff0c\u4e4b\u540e\u4fbf\u662f\u6309\u90e8\u5c31\u73ed\u5730\u5b9e\u73b0\u3002\u7531\u4e8e\u9879\u76ee\u7ecf\u9a8c\u4e0d\u8db3\uff0c\u540e\u671f\u65f6\u95f4\u5b89\u6392\u5f97\u5f88\u7d27\u5f20\uff0c\u4f46\u4e5f\u8dcc\u8dcc\u649e\u649e\u8fdb\u5165\u4e86\u51b3\u8d5b\u3002\u51b3\u8d5b\u9636\u6bb5\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86\u8001\u5e08\u5efa\u8bae\u7684\u521b\u65b0\u70b9\uff0c\u5e76\u628a20\u591a\u9875\u7684\u6587\u6863\u5b8c\u5584\u81f3\u8fd180\u9875\u3002\u4e3a\u4e86\u51c6\u5907\u7b54\u8fa9\uff0cPPT\u4e5f\u5728\u8001\u5e08\u7684\u6307\u5bfc\u4e0b\u66f4\u65b0\u4e86\u4e00\u7248\u53c8\u4e00\u7248\u3002 \u6700\u7ec8\u7684\u7ed3\u679c\u51fa\u4e4e\u6211\u4eec\u7684\u610f\u6599\uff0c\u4f46\u56de\u987e\u4e00\u8def\u4ee5\u6765\u4ed8\u51fa\u7684\u5fc3\u8840\u548c\u8001\u5e08\u7684\u8033\u63d0\u9762\u6388\uff0c\u5374\u53c8\u663e\u5f97\u7406\u6240\u5e94\u5f53\u3002\u5728\u5927\u8d5b\u4e2d\uff0c\u6211\u4eec\u7684\u4e13\u4e1a\u7d20\u517b\u5f97\u5230\u4e86\u953b\u70bc\uff0c\u6587\u6863\u7f16\u5199\u548c\u4ea4\u6d41\u5408\u4f5c\u7684\u80fd\u529b\u4e5f\u5f97\u5230\u4e86\u63d0\u9ad8\u3002\u867d\u7136\u8f9b\u82e6\uff0c\u4f46\u4e5f\u4e3a\u4eca\u540e\u7684\u4e13\u4e1a\u9053\u8def\u503e\u6ce8\u4e86\u66f4\u6df1\u539a\u7684\u529b\u91cf\u3002\u201d \u4f5c\u54c1\u5f00\u6e90\uff1a \u70b9\u8fd9\u91cc 6. \u62a5\u540d\u65b9\u5f0f \u00b6 \ud83d\udce2 \u5982\u4f55\u62a5\u540d\uff1f \u6211\u6821OS\u6bd4\u8d5b\u5c06\u9884\u8ba1\u5728\u5143\u65e6\u8282\u524d\u540e\uff08\u5177\u4f53\u65f6\u95f4\u5f85\u786e\u5b9a\uff09\u5f00\u653e\u62a5\u540d\u3002\u73b0\u5728\u53c2\u52a0\u64cd\u4f5c\u7cfb\u7edf\u5927\u8d5b\uff0c\u5c06\u83b7\u5f97\u9000\u4f11\u9009\u624b\u7684\u5b9d\u8d35\u53c2\u8d5b\u7ecf\u9a8c\uff0c\u673a\u4f1a\u96be\u5f97\uff01\u611f\u5174\u8da3\u7684\u540c\u5b66\u6b22\u8fce\u5165\u7fa4\uff1a \u64cd\u4f5c\u7cfb\u7edf\u662f\u8ba1\u7b97\u673a\u9886\u57df\u7684\u4e00\u5927\u6838\u5fc3\uff0c \u6df1\u5165\u7406\u89e3\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4e0d\u7ba1\u4ee5\u540e\u53c2\u4e0e\u5230\u54ea\u4e2a\u65b9\u5411\u7684\u5de5\u4f5c\u4e2d\uff0c\u90fd\u4f1a\u4ece\u4e2d\u83b7\u76ca\u3002 \u6b22\u8fce\u53c2\u52a0\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u8d5b\uff0c\u4f53\u9a8c\u7cfb\u7edf\u8bbe\u8ba1\u7684\u72ec\u7279\u9b45\u529b\u3002","title":"2023\u5e74\u201c\u5168\u56fd\u5927\u5b66\u751f\u8ba1\u7b97\u673a\u7cfb\u7edf\u80fd\u529b\u5927\u8d5b\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u8d5b\u201d\u706b\u70ed\u62a5\u540d\u4e2d\uff01"},{"location":"oscomp/oscomp/#2023","text":"","title":"2023\u5e74\u201c\u5168\u56fd\u5927\u5b66\u751f\u8ba1\u7b97\u673a\u7cfb\u7edf\u80fd\u529b\u5927\u8d5b\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u8d5b\u201d\u706b\u70ed\u62a5\u540d\u4e2d\uff01"},{"location":"oscomp/oscomp/#1","text":"\ud83d\udce2 \u4ec0\u4e48\u662f\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u8d5b? \u5168\u79f0 \uff1a \u5168\u56fd\u5927\u5b66\u751f\u8ba1\u7b97\u673a\u7cfb\u7edf\u80fd\u529b\u5927\u8d5b\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u5927\u8d5b \u7531\u6559\u80b2\u90e8\u9ad8\u7b49\u5b66\u6821\u8ba1\u7b97\u673a\u7c7b\u4e13\u4e1a\u6559\u5b66\u6307\u5bfc\u59d4\u5458\u4f1a\u548c\u7cfb\u7edf\u80fd\u529b\u57f9\u517b\u7814\u7a76\u4e13\u5bb6\u7ec4\u5171\u540c\u53d1\u8d77\uff0c\u76ee\u524d\u5df2\u7ecf\u4e3e\u529e2\u5c4a\u3002 \u7b2c\u4e00\u5c4a\u4e8e2021\u5e74\u4e3e\u529e\uff0c \u8fd1200\u652f\u961f\u4f0d \u53c2\u8d5b\u3002\u7b2c\u4e8c\u5c4a\u7684\u53c2\u8d5b\u961f\u4f0d\u589e\u52a0\u5230\u4e86 300\u4f59\u652f \u3002 \u6bd4\u8d5b\u5206\u4e3a\u4e24\u4e2a\u8d5b\u9053\uff1a \u5185\u6838\u8d5b\u9053 \u548c \u529f\u80fd\u8d5b\u9053 \u5927\u8d5b\u5b98\u7f51\uff1a https://os.educg.net \u5185\u6838\u8d5b\u9053 \uff1a \u5236\u4f5c\u4e00\u4e2a \u5b8c\u6574\u7684\u5185\u6838 \uff0c\u901a\u8fc7\u8d5b\u65b9\u63d0\u4f9b\u7684\u7528\u6237\u6d4b\u8bd5\uff0c\u6709\u4f59\u529b\u7684\u961f\u4f0d\u8fd8\u53ef\u4ee5\u53bb\u652f\u6301python\uff0crust\uff0credis...... \u529f\u80fd \u4e0e \u6027\u80fd \u7684\u6bd4\u62fc \u529f\u80fd\u8d5b\u9053 \uff1a \u5b9e\u73b0\u7cfb\u7edf\u4e2d\u7684 \u67d0\u9879 \u524d\u6cbf\u529f\u80fd \u591a\u79cd\u8bfe\u9898 \u4efb\u9009\uff0c\u6d89\u53ca\u8c03\u5ea6\u3001\u901a\u4fe1\u3001\u5b58\u50a8\u3001\u5b89\u5168\u3001\u5e94\u7528\u7b49\u4e0d\u540c\u9886\u57df \u5173\u4e8e\u6bd4\u8d5b\u7ec4\u961f \uff1a \u4e0d\u9650\u5236\u5b66\u6821\u7684\u53c2\u8d5b\u961f\u4f0d\u6570\uff0c\u4e00\u652f\u961f\u4f0d\u6700\u591a\u4e09\u4eba \u7b2c\u4e8c\u5c4a\uff082022\u5e74\uff09\u6bd4\u8d5b\u91cd\u8981\u65f6\u95f4\u70b9 \uff1a \u6bd4\u8d5b\u5956\u9879\u8bbe\u7f6e \uff1a \u8d5b\u9053 \u4e00\u7b49\u5956 \u4e8c\u7b49\u5956 \u4e09\u7b49\u5956 \u5185\u6838\u8d5b\u9053 6\u652f\u961f\u4f0d 9\u652f\u961f\u4f0d 11\u652f\u961f\u4f0d \u529f\u80fd\u8d5b\u9053 6\u652f\u961f\u4f0d 9\u652f\u961f\u4f0d 15\u652f\u961f\u4f0d \u6ce8\uff1a\u5165\u56f4\u51b3\u8d5b\u5373\u83b7\u5f97\u4f18\u80dc\u5956\uff0c \u51e0\u4e4e\u6240\u6709\u961f\u4f0d\u90fd\u80fd\u62ff\u5230 ~ \u200b\u200b","title":"1. \u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u8d5b\u7b80\u4ecb"},{"location":"oscomp/oscomp/#2","text":"\ud83d\udce2 \u54ea\u4e9b\u540c\u5b66\u9002\u5408\u53c2\u8d5b? \u5199\u4e2a\u64cd\u4f5c\u7cfb\u7edf \u800c\u5df2\uff0c\u6709\u624b\u5c31\u884c \uff1b \u5bf9\u64cd\u4f5c\u7cfb\u7edf\u7684 \u5b8c\u6574\u4f53\u7cfb \u5145\u6ee1\u5174\u8da3\uff1b \u5bf9\u5185\u6838 \u4f18\u5316 \u5145\u6ee1\u60f3\u6cd5 \u5185\u6838\u8d5b\u9053\u6b22\u8fce\u4f60\uff01 \u5e0c\u671b\u5c1d\u8bd5 \u79d1\u7814 or \u63d0\u524d\u63a5\u89e6 \u5de5\u4e1a\u754c \u5e0c\u671b\u5bf9 \u524d\u6cbf\u3001\u672a\u77e5 \u7684\u6280\u672f\u8fdb\u884c\u63a2\u7d22 \u529f\u80fd\u8d5b\u9053\u6b22\u8fce\u4f60\uff01","title":"2. \u53c2\u8d5b\u8981\u6c42"},{"location":"oscomp/oscomp/#3","text":"","title":"3. \u53c2\u8d5b\u6536\u83b7"},{"location":"oscomp/oscomp/#31","text":"\ud83d\udce2 \u5728\u5b66\u6821\u5185\uff0c\u4f60\u80fd\u6536\u83b7\u4ec0\u4e48? \u63a5\u89e6\u5e76\u4eb2\u81ea\u5c1d\u8bd5 \u524d\u6cbf \u7684\u6280\u672f \u7ed3\u8bc6 \u5f88\u591a\u884c\u4e1a\u5927\u4f6c\u3001\u540c\u9f84\u5927\u4f6c \u83b7\u5f97\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u6574\u4e2a\u4f53\u7cfb\u6216\u67d0\u4e2a\u9886\u57df\u7684\u6df1\u523b \u7406\u89e3 \u5feb\u901f\u63d0\u5347\u52a8\u624b\u80fd\u529b\u548c\u521b\u65b0\u80fd\u529b\uff0c\u4e30\u5bcc\u81ea\u5df1\u7684\u8f6f\u786c\u4ef6 \u6280\u672f\u6808 \u96be\u5f97\u7684\u673a\u4f1a\uff1a\u628a\u5927\u80c6\u7684 \u60f3\u6cd5\u53d8\u4e3a\u73b0\u5b9e \u83b7\u5f97 \u7efc\u6d4b\u52a0\u5206 \u673a\u4f1a\uff0c\u5956\u5b66\u91d1++ \u5bf9\u672a\u6765\u7684 \u5347\u5b66 \u6709\u975e\u5e38\u5927\u7684\u5e2e\u52a9 ( \u4e00\u7b14\u975e\u5e38\u53ef\u89c2\u7684\u5956\u91d1\uff1a\u53c2\u52a0\u6bd4\u8d5b\uff0c\u987a\u4fbf\u6323\u4e2aW\uff0c\u5988\u5988\u518d\u4e5f\u4e0d\u7528\u62c5\u5fc3\u6211\u751f\u6d3b\u8fc7\u5f97\u4e0d\u597d\u4e86","title":"3.1 \u6821\u5185\u6536\u83b7"},{"location":"oscomp/oscomp/#32","text":"\ud83d\udce2 \u5728\u5b66\u6821\u5916\uff0c\u4f60\u53c8\u80fd\u6536\u83b7\u4ec0\u4e48? \u5b9e\u4e60Offer\u7387++\uff1a\u6691\u671f\u534e\u4e3a\u5b9e\u4e60Offer\u7387\u76f4\u5347 \u5341\u51e0\u4e2a \u767e\u5206\u70b9\uff08\u534e\u4e3a\u6025\u7f3a\u7cfb\u7edf\u6027\u4eba\u624d\uff09 \u9876\u7ea7Offer\u7387++\uff1a\u67d0\u51e0\u4e2a\u961f\u957f\u4e00\u4e0d\u5c0f\u5fc3\u5c31\u6536\u5272\u4e86\u534e\u4e3a\u7684 \u7814\u7a76\u751f\u624d\u80fd\u62ff\u5230\u7684\u9876\u7ea7Offer","title":"3.2 \u6821\u5916\u6536\u83b7"},{"location":"oscomp/oscomp/#4","text":"\ud83d\udce2 \u8fd9\u4e2a\u6bd4\u8d5b\u96be\u5417? \u96be \uff0c\u96be\u5f97\u5f88 \u60f3\u8981\u53d6\u5f97\u597d\u6210\u7ee9\uff0c\u9762\u5bf9\u7684\u4e00\u5207\u90fd\u662f \u65b0 \u7684 \u65b0\u7684\u77e5\u8bc6\uff0c\u65b0\u7684\u8bed\u8a00\uff0c\u65b0\u7684\u6d4b\u8bc4\uff0c\u65b0\u7684\u5de5\u5177\uff0c\u65b0\u7684\u8981\u6c42 ... \u7cfb\u7edf\u7684 \u8c03\u8bd5 \u5e38\u5e38\u6d89\u53ca\u786c\u4ef6\u67b6\u6784\uff0c\u96be\u5ea6\u5927\u5927\u63d0\u5347 \u8d5b\u7a0b\u5f88\u957f \uff0c\u6700\u91cd\u8981\u7684\u662f \u5174\u8da3\u548c\u575a\u6301 \uff0c\u5f88\u591a\u961f\u4f0d\u5230\u540e\u9762\u4f1a\u653e\u5f03\uff0c\u809d\u5230\u80dc\u5229 \u4e8b\u5b9e\u4e0a\uff0c\u5927\u90e8\u5206\u961f\u4f0d\u4ece \u5e74\u521d \u5c31\u5f00\u59cb\u5907\u8d5b\uff0c \u4e00\u4e9b\u961f\u4f0d\u751a\u81f3\u524d\u4e00\u5e74\u5c31\u6709\u6240\u51c6\u5907\uff0c\u8fd8\u6709\u53c2\u52a0\u4e86\u4e24\u5c4a\u7684\u961f\u5458 \u6700\u5173\u952e\u7684\u662f\uff0c \u7cfb\u7edf\u7684\u8bbe\u8ba1\u6ca1\u6709\u4e0a\u9650 \uff0c\u60f3\u8981\u505a\u597d\u5c31\u5fc5\u987b\u6709\u6240\u4ed8\u51fa","title":"4. \u6bd4\u8d5b\u51c6\u5907"},{"location":"oscomp/oscomp/#5","text":"\ud83d\udce2 \u6211\u4eec\u7684\u6218\u7ee9 \u7b2c\u4e00\u5c4a\uff1a \u201c UltraOS \u201d\u961f\u83b7\u5f97 \u5185\u6838\u5b9e\u73b0\u8d5b\u9053\u4e00\u7b49\u5956\uff08\u8d5b\u9053\u6392\u540d\u7b2c\u4e00\uff09 ; \u201c HoitFS \u201d\u961f\u83b7\u5f97 \u529f\u80fd\u8bbe\u8ba1\u8d5b\u9053\u4e00\u7b49\u5956\uff08\u8d5b\u9053\u6392\u540d\u7b2c\u4e00\uff09 ; \u201c \u538b\u7f29\u9e2d \u201d\u961f\u83b7\u5f97 \u529f\u80fd\u8bbe\u8ba1\u8d5b\u9053\u4e8c\u7b49\u5956 ; \u201c \u554a\u666e\u9c81\u6d3e\u54d2\u54d2\u54d2;DROP DATABASE teams;\u201d\u961f\u83b7\u5f97 \u5185\u6838\u5b9e\u73b0\u8d5b\u9053\u4e09\u7b49\u5956 \u3002 \u7b2c\u4e8c\u5c4a\uff1a \u201c FTL OS \u201d\u961f\u83b7\u5f97 \u5185\u6838\u5b9e\u73b0\u8d5b\u9053\u4e00\u7b49\u5956 ; \u201c OopS \u201d\u961f\u83b7\u5f97 \u5185\u6838\u5b9e\u73b0\u8d5b\u9053\u4e00\u7b49\u5956 ; \u201c LMY \u201d\u961f\u83b7\u5f97 \u529f\u80fd\u8bbe\u8ba1\u8d5b\u9053\u4e00\u7b49\u5956 ; \u201c \u5065\u5eb7\u5411\u4e0a\u597d\u9752\u5e74 \u201d\u961f\u83b7\u5f97 \u5185\u6838\u5b9e\u73b0\u8d5b\u9053\u4e8c\u7b49\u5956 ; \u201c \u7f16\u8bd1\u901a\u8fc7\u6c42\u6c42\u4e86 \u201d\u961f\u83b7\u5f97 \u529f\u80fd\u8bbe\u8ba1\u8d5b\u9053\u4e8c\u7b49\u5956 ; \u201c F-Tutorials \u201d\u961f\u83b7\u5f97 \u529f\u80fd\u8bbe\u8ba1\u8d5b\u9053\u4e8c\u7b49\u5956 \uff1b \u201c \u968f\u4fbf\u53d6\u540d\u4e0d\u961f \u201d\u83b7\u5f97 \u5185\u6838\u5b9e\u73b0\u8d5b\u9053\u4f18\u80dc\u5956 ; \u201c \u8ffd\u5149\u8005\u961f\u201d\u83b7\u5f97 \u529f\u80fd\u8bbe\u8ba1\u8d5b\u9053\u521d\u8d5b\u4f18\u80dc\u5956 \u3002 \u5927\u8d5b\u83b7\u5956\u56e2\u961f\u5c06\u83b7\u5f97\u4e30\u539a\u5956\u91d1\uff0c\u5176\u4e2d\u4e00\u7b49\u5956\u56e2\u961f\u83b7\u5f9730000\u5143\u5956\u91d1\uff0c\u4e8c\u7b49\u5956\u56e2\u961f\u83b710000\u5143\u5956\u91d1\uff0c\u4e09\u7b49\u5956\u56e2\u961f\u83b7\u5f973000\u5143\u5956\u91d1\u3002 \u7b2c\u4e8c\u5c4a\u83b7\u5956\u65b0\u95fb\u8be6\u89c1\u54c8\u5de5\u5927\uff08\u6df1\u5733\uff09\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u5b66\u9662-\u91cd\u8981\u65b0\u95fb\uff1a \u83b7\u5956\u6570\u91cf\u5168\u56fd\u5c45\u9996\uff01\u54c8\u5de5\u5927\uff08\u6df1\u5733\uff09\u5b66\u5b50\u5728\u5168\u56fd\u5927\u5b66\u751f\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u603b\u8d5b\u4e2d\u8868\u73b0\u4f18\u5f02 \u3002 \u5185\u6838\u5b9e\u73b0\u8d5b\u9053\u51b3\u8d5b\u4f5c\u54c1\u5f00\u6e90\uff1a \u70b9\u8fd9\u91cc \u529f\u80fd\u8bbe\u8ba1\u8d5b\u9053\u51b3\u8d5b\u4f5c\u54c1\u5f00\u6e90\uff1a \u70b9\u8fd9\u91cc \u7b2c\u4e00\u5c4a\u83b7\u5956\u65b0\u95fb\u8be6\u89c1 \u83b7\u5956\u603b\u6570\u5168\u56fd\u7b2c\u4e00\uff01\u54c8\u5de5\u5927\uff08\u6df1\u5733\uff09\u5b66\u5b50\u5728\u5168\u56fd\u5927\u5b66\u751f\u8ba1\u7b97\u673a\u7cfb\u7edf\u80fd\u529b\u5927\u8d5b\u4e2d\u6536\u83b7\u56db\u9879\u5927\u5956","title":"5. \u5f80\u5c4a\u6218\u7ee9"},{"location":"oscomp/oscomp/#51-ultraos","text":"\ud83d\udce2 \u7b2c\u4e00\u5c4a\u5185\u6838\u8d5b\u9053\u4e00\u7b49\u5956\uff1aUltraOS \u56e2\u961f\u6210\u5458\uff1a\u674e\u7a0b\u6d69\uff0c18\u7ea7\u672c\u79d1\uff1b\u5bab\u6d69\u8fb0\uff0c18\u7ea7\u672c\u79d1\uff1b\u4efb\u7fd4\u5b87\uff0c18\u7ea7\u672c\u79d1 \u201c\u9879\u76ee\u5386\u65f6216\u5929\uff0c\u5728\u6b64\u671f\u95f4\u7f16\u5199\u4ee3\u7801149\u5929\uff0cUltraOS\u56e2\u961f\u6700\u7ec8\u4ea7\u51fa\u4e86\u7ea6\u4e00\u4e07\u884cRust\u8bed\u8a00\u4ee3\u7801\uff08\u4e0d\u5305\u62ec\u8fed\u4ee3\u4ee3\u7801\uff09\u3002UltraOS\u6210\u957f\u662f\u8fc5\u901f\u7684\uff0c\u4ece\u652f\u630113\u6761\u975e\u6807\u51c6\u7cfb\u7edf\u8c03\u7528\u523059\u6761\u7cfb\u7edf\u8c03\u7528\uff0c\u4ece\u53ea\u652f\u6301\u4e00\u4e2a\u7b80\u6613\u7684\u6587\u4ef6\u7cfb\u7edf\u5230FAT32-VFS\u548c\u53ef\u62d3\u5c55\u8bbe\u5907\u63a5\u53e3\u7b49\u5177\u6709\u53ef\u62d3\u5c55\u7684\u62bd\u8c61\uff0c\u4ece\u5355\u6838\u5230\u591a\u6838\uff0c\u4ece\u7f13\u6162\u8fc8\u5411\u9ad8\u6027\u80fd\u3002\u6bcf\u4e00\u4ef6\u4e8b\u90fd\u662f\u6311\u6218\uff0c\u4f46\u6bcf\u4e00\u4ef6\u4e8b\u90fd\u662f\u6210\u957f\u3002\u201d \u4f5c\u54c1\u5f00\u6e90\uff1a \u70b9\u8fd9\u91cc","title":"5.1 \u83b7\u5956\u961f\u4f0d\u4ecb\u7ecd\uff1aUltraOS"},{"location":"oscomp/oscomp/#52-hoitfs","text":"\ud83d\udce2 \u7b2c\u4e00\u5c4a\u529f\u80fd\u8d5b\u9053\u4e00\u7b49\u5956\uff1aHoitFS \u56e2\u961f\u6210\u5458\uff1a\u6f58\u5ef6\u9e92\uff0c18\u7ea7\u672c\u79d1\uff1b\u80e1\u667a\u80dc\uff0c18\u7ea7\u672c\u79d1\uff1b\u5f20\u6960\uff0c18\u7ea7\u672c\u79d1 \u201c\u6211\u4eec\u7684\u9879\u76ee\u4ee5JFFS2\u6587\u4ef6\u7cfb\u7edf\u4e3a\u539f\u578b\uff0c\u5bf9\u5176SylixOS\u4e0a\u8fdb\u884c\u4e8c\u6b21\u5f00\u53d1\uff0c\u5e76\u9488\u5bf9JFFS2\u5b58\u5728\u7684\u4e00\u4e9b\u95ee\u9898\u8fdb\u884c\u9488\u5bf9\u6027\u4f18\u5316(\u4f18\u5316\u7b56\u7565\u6bd4\u8f83\u7b80\u5355)\uff0c\u5f62\u6210\u4e86HoitFS\uff0c\u6700\u540e\u901a\u8fc7\u4e0eSPIFFS\u6587\u4ef6\u7cfb\u7edf\u505a\u5bf9\u6bd4\uff0c\u53d1\u73b0\u6211\u4eecHoitFS\u7684\u6027\u80fd\u76f8\u5bf9SPIFFS\u6765\u8bf4\u6709\u660e\u663e\u7684\u4f18\u52bf\u3002\u672c\u9879\u76ee\u5386\u65f6\u8fd1\u4e00\u5e74\uff0c\u671f\u95f4\u4e00\u5ea6\u611f\u5230\u529b\u4e0d\u4ece\u5fc3\uff0c\u4f46\u5728\u8001\u5e08\u7684\u6307\u5bfc\u4e0b\uff0c\u56e2\u961f\u6210\u5458\u7684\u4e92\u76f8\u9f13\u52b1\u4e0b\uff0c\u6700\u540e\u90fd\u54ac\u7259\u575a\u6301\u5230\u4e86\u51b3\u8d5b\u3002\u201d \u4f5c\u54c1\u5f00\u6e90\uff1a \u70b9\u8fd9\u91cc","title":"5.2 \u83b7\u5956\u961f\u4f0d\u4ecb\u7ecd: HoitFS"},{"location":"oscomp/oscomp/#53-ftl-os","text":"\ud83d\udce2 \u7b2c\u4e8c\u5c4a\u5185\u6838\u8d5b\u9053\u4e00\u7b49\u5956\uff1aFTL OS \u56e2\u961f\u6210\u5458\uff1a\u53f6\u81ea\u7acb\uff0c19\u7ea7\u672c\u79d1\uff1b\u6a0a\u535a\uff0c20\u7ea7\u672c\u79d1\uff1b\u674e\u7fbf\u5ef7\uff0c19\u7ea7\u672c\u79d1 \u201c\u975e\u5e38\u8363\u5e78\u80fd\u591f\u83b7\u5f97\u5927\u8d5b\u4e00\u7b49\u5956\uff0c\u8fd9\u6b21\u6bd4\u8d5b\u4e2d\u6211\u4eec\u4e00\u8def\u62ab\u8346\u65a9\u68d8\uff0c\u901a\u8fc7\u4e86\u5168\u90e8\u7684\u529f\u80fd\u6d4b\u8bd5\uff0c\u5e76\u5728\u51b3\u8d5b\u7b2c\u4e8c\u9636\u6bb5\u5168\u7a0b\u4fdd\u6301\u6027\u80fd\u5206\u7b2c\u4e00\u3002 \u6211\u4eec\u5145\u6ee1\u68a6\u60f3\uff0cFTL\u610f\u4e3aFaster Than Light\uff0c\u5b83\u8574\u542b\u4e86\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u6027\u80fd\u7684\u6e34\u671b\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\uff0c\u6211\u4eec\u7528\u4e86\u4e0e\u4f17\u4e0d\u540c\u7684\u5f00\u53d1\u65b9\u5f0f\uff1a\u6211\u4eec\u4ece\u96f6\u5f00\u59cb\uff0c\u5148\u7f16\u5199\u6587\u6863\uff0c\u4ece\u8d77\u6b65\u5c31\u8fdb\u884c\u5927\u91cf\u4f18\u5316\u3002\u6211\u4eec\u4e50\u89c2\u5730\u8ba4\u4e3a\u53ea\u8981\u5e94\u7528\u4e86\u4e00\u5207\u53ef\u80fd\u7684\u4f18\u5316\uff0cFTLOS\u5c31\u80fd\u8fbe\u5230\u6781\u81f4\u7684\u3001\u540e\u65e0\u6765\u8005\u7684\u6027\u80fd\u3002\u4ece\u7ed3\u679c\u6765\u770b\uff0c\u6b64\u65b9\u6848\u5927\u4f53\u6210\u529f\uff0c\u6211\u4eec\u5168\u7a0b\u6027\u80fd\u5206\u7b2c\u4e00\uff0c\u4f46\u56e0\u4e3a\u8c03\u7814\u4e0d\u8db3\u7684\u539f\u56e0\uff0c\u6587\u4ef6\u7cfb\u7edf\u7684\u9519\u8bef\u8bbe\u8ba1\u5f71\u54cd\u4e86\u91cd\u6784\uff0cFTLOS\u65e0\u6cd5\u5728\u5168\u90e8\u7684\u6d4b\u8bd5\u70b9\u4e0a\u83b7\u5f97\u7b2c\u4e00\uff0c\u4e5f\u8ba9\u6211\u4eec\u6ca1\u6709\u592a\u591a\u65f6\u95f4\u53bb\u79fb\u690d\u771f\u5b9e\u5e94\u7528\u7a0b\u5e8f\u3002 \u8fd9\u662f\u6211\u4eec\u7b2c\u4e00\u6b21\u53c2\u52a0\u7cfb\u7edf\u80fd\u529b\u5927\u8d5b\uff0c\u5b83\u8ba9\u6211\u4eec\u63a5\u89e6\u5230\u4e86\u5927\u91cf\u65e0\u6cd5\u4ece\u8bfe\u672c\u4e0a\u5b66\u5230\u7684\u77e5\u8bc6\uff0c\u4f7f\u6211\u4eec\u4e86\u89e3\u4e86\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u7684\u8fd0\u884c\u65b9\u5f0f\uff0c\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e86\u66f4\u6df1\u5c42\u6b21\u7684\u7406\u89e3\uff0c\u8fd8\u663e\u8457\u63d0\u5347\u4e86\u5de5\u7a0b\u5b9e\u8df5\u80fd\u529b\u3002\u611f\u8c22\u5168\u90e8\u961f\u5458\u3001\u4f19\u4f34\u961f\u4f0d\u7684\u52aa\u529b\uff0c\u611f\u8c22\u590f\u6587\u3001\u4ec7\u6d01\u5a77\u8001\u5e08\u7684\u503e\u529b\u5e2e\u52a9\uff0c\u4e5f\u611f\u8c22\u6240\u6709\u5728\u6bd4\u8d5b\u4e2d\u5b9e\u65f6\u5f00\u6e90\u4ee3\u7801\u3001\u5c55\u793a\u6587\u6863\u7684\u53c2\u8d5b\u961f\u4f0d\u3002\u613f\u6bd4\u8d5b\u5728\u672a\u6765\u66f4\u52a0\u5b8c\u5584\uff0c\u8d8a\u6765\u8d8a\u597d\u3002\u201d \u4f5c\u54c1\u5f00\u6e90\uff1a \u70b9\u8fd9\u91cc","title":"5.3 \u83b7\u5956\u961f\u4f0d\u4ecb\u7ecd: FTL OS"},{"location":"oscomp/oscomp/#54-oops","text":"\ud83d\udce2 \u7b2c\u4e8c\u5c4a\u5185\u6838\u8d5b\u9053\u4e00\u7b49\u5956\uff1aOopS \u56e2\u961f\u6210\u5458\uff1a\u5f20\u827a\u67ab\uff0c19\u7ea7\u672c\u79d1\uff1b\u674e\u8bfa\u821f\uff0c19\u7ea7\u672c\u79d1\uff1b\u5218\u5609\u741b\uff0c19\u7ea7\u672c\u79d1 \u201cOopS\u662f\u4e00\u4e2a\u7528Rust\u7f16\u5199\u7684RISC-V64\u591a\u6838\u64cd\u4f5c\u7cfb\u7edf\uff0c\u9879\u76ee\u603b\u5386\u65f6\u7ea67\u4e2a\u6708\u3002\u6211\u4eec\u56e2\u961f\u4ece\u4eca\u5e74\u7684\u5bd2\u5047\u671f\u95f4\u5c31\u5f00\u59cb\u5b66\u4e60rust\u53ca\u64cd\u4f5c\u7cfb\u7edf\u76f8\u5173\u77e5\u8bc6\uff0c\u4e3a\u8be5\u6bd4\u8d5b\u505a\u51c6\u5907\u3002 \u5728\u5f00\u53d1\u524d\uff0c\u6211\u4eec\u8003\u8651\u5230\u4ece0\u5f00\u59cb\u8bbe\u8ba1\u4e00\u4e2a\u5185\u6838\u4f1a\u5e26\u6765\u5927\u91cf\u7684bug\u548c\u65f6\u95f4\u5f00\u9500\uff0c\u6240\u4ee5\u6211\u4eec\u51b3\u5b9a\u53c2\u8003rCore-Tutorial\u5feb\u901f\u5f00\u53d1\u51fa\u4e00\u4e2a\u57fa\u672c\u7684\u5185\u6838\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u6bd4\u8f83\u987a\u5229\u5730\u901a\u8fc7\u4e86\u521d\u8d5b\u7684\u6d4b\u8bd5\uff0c\u8fd9\u7ed9\u4e86\u6211\u4eec\u4fe1\u5fc3\uff0c\u4e8e\u662f\u6211\u4eec\u5bf9\u539f\u672c\u7684\u57fa\u7840\u67b6\u6784\u505a\u4e86\u5927\u91cf\u4fee\u6539\u3002\u901a\u8fc7\u4e0d\u65ad\u5730\u8e29\u5751\u548c\u91cd\u6784\uff0c\u5e76\u7ed3\u5408\u5176\u4ed6\u5185\u6838\u7684\u8bbe\u8ba1\u548c\u6211\u4eec\u7684\u601d\u8003\uff0c\u6700\u7ec8\u6253\u9020\u51fa\u4e86\u73b0\u5728\u7684OopS\u5185\u6838\u3002 \u901a\u8fc7\u8fd9\u6b21\u6bd4\u8d5b\uff0c\u52a0\u6df1\u4e86\u6211\u4eec\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u7684\u7406\u89e3\uff0c\u63d0\u5347\u4e86\u6211\u4eec\u7684\u5de5\u7a0b\u80fd\u529b\u3002\u6b64\u5916\uff0c\u672c\u6b21\u6bd4\u8d5b\u8ba9\u6211\u4eec\u66f4\u52a0\u7406\u89e3\u4e86\u5f00\u6e90\u7684\u7cbe\u795e\uff0c\u6211\u4eec\u7684\u5fc3\u6001\u4e5f\u4ece\u76f8\u4e92\u7ade\u4e89\u8f6c\u53d8\u4e3a\u4e86\u76f8\u4e92\u5b66\u4e60\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u4e0e\u7b2c\u4e00\u5c4a\u53c2\u8d5b\u4f5c\u54c1\u76f8\u6bd4\uff0c\u672c\u5c4a\u53c2\u8d5b\u4f5c\u54c1\u5728\u529f\u80fd\u548c\u6027\u80fd\u65b9\u9762\u90fd\u6709\u4e86\u4e0d\u5c0f\u7684\u63d0\u5347\u3002\u8fd9\u8981\u611f\u8c22\u7ec4\u59d4\u4f1a\u548c\u4e3b\u529e\u65b9\u4e3a\u9009\u624b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5e73\u53f0\uff0c\u8ba9\u6211\u4eec\u6709\u673a\u4f1a\u5438\u53d6\u5f80\u5c4a\u53c2\u8d5b\u4f5c\u54c1\u7684\u7ecf\u9a8c\uff0c\u8e29\u5728\u5de8\u4eba\u7684\u80a9\u8180\u4e0a\u5e76\u66f4\u8fdb\u4e00\u6b65\u3002\u4ee5\u540e\u7684\u53c2\u8d5b\u4f5c\u54c1\u65e0\u7591\u4e5f\u4f1a\u6bd4\u6211\u4eec\u8fd9\u5c4a\u7684\u4f5c\u54c1\u8981\u66f4\u52a0\u4f18\u79c0\u3002 \u5728\u8fd9\u91cc\uff0c\u8fd8\u8981\u611f\u8c22\u540c\u6821\u7684\u53c2\u8d5b\u961f\u4f0d\u548c\u6307\u5bfc\u8001\u5e08\u7684\u5e2e\u52a9\u548c\u6307\u5bfc\uff0c\u7279\u522b\u662f\u7b2c\u4e00\u5c4a\u53c2\u8d5b\u9009\u624b\u9ece\u5e9a\u7949\u5b66\u957f\u7ed9\u6211\u4eec\u4f20\u6388\u4e86\u5927\u91cf\u7684\u7ecf\u9a8c\u548c\u7075\u611f\u3002\u201d \u4f5c\u54c1\u5f00\u6e90\uff1a \u70b9\u8fd9\u91cc","title":"5.4 \u83b7\u5956\u961f\u4f0d\u4ecb\u7ecd: OopS"},{"location":"oscomp/oscomp/#55-lmy","text":"\ud83d\udce2 \u7b2c\u4e8c\u5c4a\u529f\u80fd\u8d5b\u9053\u4e00\u7b49\u5956\uff1aLMY \u56e2\u961f\u6210\u5458\uff1a\u4e8e\u4f2f\u6df3\uff0c20\u7ea7\u672c\u79d1\uff1b\u6ee1\u6d0b\uff0c20\u7ea7\u672c\u79d1\uff1b\u674e\u6021\u51ef\uff0c19\u7ea7\u672c\u79d1 \u201c\u5f88\u8363\u5e78\u80fd\u591f\u5728\u672c\u6b21\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u8d5b\u529f\u80fd\u8d5b\u9053\u4e2d\u83b7\u5f97\u4e00\u7b49\u5956\uff0c\u5728\u5927\u8d5b\u7ed3\u675f\u4e4b\u9645\uff0c\u56de\u60f3\u53c2\u8d5b\u4ee5\u6765\u7684\u70b9\u70b9\u6ef4\u6ef4\uff0c\u6211\u4eec\u611f\u6982\u9887\u591a\u3002 \u6700\u521d\u51b3\u5b9a\u53c2\u8d5b\uff0c\u662f\u5076\u7136\u5728\u5b66\u6821\u7684Linux\u4ea4\u6d41\u7fa4\u770b\u5230\u8001\u5e08\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u529f\u80fd\u8d5b\u7684\u5ba3\u4f20\u3002\u90a3\u65f6\u6211\u548c\u6ee1\u6d0b\u6ca1\u6709\u5b8c\u6574\u5b66\u4e60\u8fc7\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4f46\u51ed\u7740\u5bf9OS\u7684\u5174\u8da3\uff0c\u6211\u4eec\u51b3\u5b9a\u8bd5\u7740\u53c2\u8d5b\u3002 \u9009\u5b9a\u8d5b\u9898\u65f6\uff0c\u7ecf\u9a8c\u4e0d\u8db3\u7684\u6211\u4eec\u672c\u60f3\u9009\u53d6\u4e00\u4e2a\u8f83\u4e3a\u7b80\u5355\u7684\u9898\u76ee\uff1b\u4f46\u4e24\u4f4d\u6307\u5bfc\u8001\u5e08\u9f13\u52b1\u6211\u4eec\u9009\u62e9\u66f4\u4e3a\u590d\u6742\u7684\u9898\u76eeproj120\u2014\u2014\u667a\u80fd\u5316\u7684\u64cd\u4f5c\u7cfb\u7edf\u5f02\u5e38\u68c0\u6d4b\uff0c\u540c\u65f6\u674e\u6021\u51ef\u5b66\u957f\u7684\u52a0\u5165\u4e5f\u4e3a\u6211\u4eec\u5e26\u6765\u66f4\u591a\u4fe1\u5fc3\uff0c\u6211\u4eec\u6700\u7ec8\u63a5\u53d7\u4e86\u6311\u6218\u3002 \u521d\u671f\uff0c\u6211\u4eec\u51ed\u501f\u8001\u5e08\u6089\u5fc3\u7684\u6307\u5bfc\uff0c\u4e0e\u534e\u4e3a\u4e13\u5bb6\u7684\u6c9f\u901a\uff0c\u52aa\u529b\u5bfb\u627e\u8d5b\u9898\u7684\u5207\u5165\u70b9\uff0c\u4e4b\u540e\u4fbf\u662f\u6309\u90e8\u5c31\u73ed\u5730\u5b9e\u73b0\u3002\u7531\u4e8e\u9879\u76ee\u7ecf\u9a8c\u4e0d\u8db3\uff0c\u540e\u671f\u65f6\u95f4\u5b89\u6392\u5f97\u5f88\u7d27\u5f20\uff0c\u4f46\u4e5f\u8dcc\u8dcc\u649e\u649e\u8fdb\u5165\u4e86\u51b3\u8d5b\u3002\u51b3\u8d5b\u9636\u6bb5\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86\u8001\u5e08\u5efa\u8bae\u7684\u521b\u65b0\u70b9\uff0c\u5e76\u628a20\u591a\u9875\u7684\u6587\u6863\u5b8c\u5584\u81f3\u8fd180\u9875\u3002\u4e3a\u4e86\u51c6\u5907\u7b54\u8fa9\uff0cPPT\u4e5f\u5728\u8001\u5e08\u7684\u6307\u5bfc\u4e0b\u66f4\u65b0\u4e86\u4e00\u7248\u53c8\u4e00\u7248\u3002 \u6700\u7ec8\u7684\u7ed3\u679c\u51fa\u4e4e\u6211\u4eec\u7684\u610f\u6599\uff0c\u4f46\u56de\u987e\u4e00\u8def\u4ee5\u6765\u4ed8\u51fa\u7684\u5fc3\u8840\u548c\u8001\u5e08\u7684\u8033\u63d0\u9762\u6388\uff0c\u5374\u53c8\u663e\u5f97\u7406\u6240\u5e94\u5f53\u3002\u5728\u5927\u8d5b\u4e2d\uff0c\u6211\u4eec\u7684\u4e13\u4e1a\u7d20\u517b\u5f97\u5230\u4e86\u953b\u70bc\uff0c\u6587\u6863\u7f16\u5199\u548c\u4ea4\u6d41\u5408\u4f5c\u7684\u80fd\u529b\u4e5f\u5f97\u5230\u4e86\u63d0\u9ad8\u3002\u867d\u7136\u8f9b\u82e6\uff0c\u4f46\u4e5f\u4e3a\u4eca\u540e\u7684\u4e13\u4e1a\u9053\u8def\u503e\u6ce8\u4e86\u66f4\u6df1\u539a\u7684\u529b\u91cf\u3002\u201d \u4f5c\u54c1\u5f00\u6e90\uff1a \u70b9\u8fd9\u91cc","title":"5.5 \u83b7\u5956\u961f\u4f0d\u4ecb\u7ecd: LMY"},{"location":"oscomp/oscomp/#6","text":"\ud83d\udce2 \u5982\u4f55\u62a5\u540d\uff1f \u6211\u6821OS\u6bd4\u8d5b\u5c06\u9884\u8ba1\u5728\u5143\u65e6\u8282\u524d\u540e\uff08\u5177\u4f53\u65f6\u95f4\u5f85\u786e\u5b9a\uff09\u5f00\u653e\u62a5\u540d\u3002\u73b0\u5728\u53c2\u52a0\u64cd\u4f5c\u7cfb\u7edf\u5927\u8d5b\uff0c\u5c06\u83b7\u5f97\u9000\u4f11\u9009\u624b\u7684\u5b9d\u8d35\u53c2\u8d5b\u7ecf\u9a8c\uff0c\u673a\u4f1a\u96be\u5f97\uff01\u611f\u5174\u8da3\u7684\u540c\u5b66\u6b22\u8fce\u5165\u7fa4\uff1a \u64cd\u4f5c\u7cfb\u7edf\u662f\u8ba1\u7b97\u673a\u9886\u57df\u7684\u4e00\u5927\u6838\u5fc3\uff0c \u6df1\u5165\u7406\u89e3\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4e0d\u7ba1\u4ee5\u540e\u53c2\u4e0e\u5230\u54ea\u4e2a\u65b9\u5411\u7684\u5de5\u4f5c\u4e2d\uff0c\u90fd\u4f1a\u4ece\u4e2d\u83b7\u76ca\u3002 \u6b22\u8fce\u53c2\u52a0\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u8d5b\uff0c\u4f53\u9a8c\u7cfb\u7edf\u8bbe\u8ba1\u7684\u72ec\u7279\u9b45\u529b\u3002","title":"6. \u62a5\u540d\u65b9\u5f0f"}]}